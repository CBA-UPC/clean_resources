this.workbox=this.workbox||{},this.workbox.precaching=function(t,e,s,n,i,c,r,o){"use strict";try{self["workbox:precaching:6.5.2"]&&_()}catch(t){}ss u extends c.Strategy{ync nt(t,e){let n;const i=e.params||{};if(!this.et)throw new s.WorkboxError("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const s=i.integrity,c=t.integrity,r=!c||c===s;n=await e.fetch(new Request(t,{integrity:c||s})),s&&r&&(this.it(),await e.cachePut(t,n.clone()))}return n}.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:,u.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:;class f{et strategy(){return this.at}dlerBoundToURL(t){const e=this.getCacheKeyForURL(t);if(!e)throw new s.WorkboxError("non-precached-url",{url:t});return }let w;const d=class y extends o.Route{turn t.PrecacheController=f,t.PrecacheFallbackPlugin=t.PrecacheRoute=y,t.PrecacheStrategy=u,t.addPlugins=t.addRoute=p,t.cleanupOutdatedCaches=t.createHandlerBoundToURL=function(t){return d().createHandlerBoundToURL(t)},t.getCacheKeyForURL=function(t){return d().getCacheKeyForURL(t)},t.matchPrecache=t.precache=R,t.precacheAndRoute=t}({},workbox.core._private,workbox.core._private,workbox.core._private,workbox.core,workbox.strategies,workbox.routing,workbox.routing);
//# sourceMappingURL=workbox-precaching.prod.js.map
