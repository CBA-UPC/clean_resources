self.babelHelpers={asyncToGenerator:,this.workbox=this.workbox||{},this.workbox.core=function(){"use strict";try{self.workbox.v["workbox:core:3.4.1"]=1}catch(e){}var e={debug:0,log:1,warn:2,error:3,silent:4};const r=onst n={prefix:"workbox",suffix:self.registration.scope,googleAnalytics:"googleAnalytics",precache:"precache",runtime:"runtime"},o=i={updateDetails:getGoogleAnalyticsName:e=>e||o(n.googleAnalytics),getPrecacheName:e=>e||o(n.precache),getRuntimeName:,l=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let c=(();const u=s=a=f=e.error,d=h=p={groupEnd:h,unprefixed:{groupEnd:h}},b={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db"};var y,g;Object.keys(b).forEach(;var v=new .prototype.OPEN_TIMEOUT=2e3;var m="cacheDidUpdate",E="cacheWillUpdate",L="cachedResponseWillBeUsed",x="fetchDidFail",H="requestWillFetch",k=let q=(D=babelHelpers.asyncToGenerator(,;var D;const N=new Set;const O=R=((),A=(P=babelHelpers.asyncToGenerator(,function(e,r,t){return P.apply(this,arguments)});var P;const W=(S=babelHelpers.asyncToGenerator(,;var S;const _={put:R,match:A},j={fetch:(()};var B=Object.freeze({DBWrapper:w,WorkboxError:t,assert:null,cacheNames:i,cacheWrapper:_,fetchWrapper:j,getFriendlyURL:O,logger:p,registerQuotaErrorCallback:);return Object.assign(v,{LOG_LEVELS:e,_private:B})}();

//# sourceMappingURL=workbox-core.prod.js.map
