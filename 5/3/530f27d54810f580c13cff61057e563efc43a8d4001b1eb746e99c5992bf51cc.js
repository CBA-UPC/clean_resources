(function(){try{const globalOptions=getParameterValues(window,"viewability_options");const options={url:globalOptions["url"]||"https://storage.googleapis.com/dianomi-viewability/1x1.png",threshold:globalOptions["threshold"]||0.5,tagParams:globalOptions["tagParams"]||["adgroup_ids","device_type","publisher_id","smartad_id","impression_id","geo_country","referer",],viewabilityTime:globalOptions["viewabilityTime"]||1000,multipleViews:globalOptions["multipleViews"],selectors:[{name:"dianomi_video",type:"video",selector:"class"},{name:"dianomi_ad_",type:"adgroup",selector:"id"},],maxHeight:650,attributes:{adGroupVariantSelector:"data-adgroup-variant-id",impressionUrlsTrigger:"data-dianomi-trigger-trackers",impressionUrls:"data-dianomi-impression-trackers",viewability:"data-dianomi-viewability",clickTrackers:"data-dianomi-click-trackers",},};let campaignParams=getCampaignParams();let visibleAds=[];function getDianomiElement(){const dianomiElements=[];const addElement=(element,type)=>{const aTags=element.getElementsByTagName("a");const adId=getAdId(aTags,element);const impressionUrls=getImpressionUrls(aTags);const impressionUrlsTrigger=getAttributeValue(aTags,options.attributes.impressionUrlsTrigger);const viewabilityTrigger=getAttributeValue(aTags,options.attributes.viewability);setClickTrackers(aTags);const elementExists=visibleAds.filter(;if(elementExists.length<1){const elementDetails={element,type,adId,adViewed:false,entry:null,inView:false,impressionUrls,impressionUrlsTrigger,impressionUrlsAreSet:false,viewabilityTrigger,};dianomiElements.push(elementDetails);}};for(let i=0;i<options.selectors.length;i++){const selector=options.selectors[i];let elements=[];switch(selector.selector){case "class":elements=document.getElementsByClassName(selector.name);for(let j=0;j<elements.length;j++){addElement(elements[j],selector.type);}
break;case "id":elements=document.querySelectorAll(`[id^="${selector.name}"`);for(let j=0;j<elements.length;j++){addElement(elements[j],selector.type);}
break;}}
return dianomiElements;}
function createObservers(fn,threshold){setTimeout(()=>{visibleAds=getDianomiElement();let observerOptions={threshold,};let observer=new IntersectionObserver(fn,observerOptions);visibleAds.forEach((ad)=>{observer.observe(ad.element);ad.viewabilityTrigger>0&&sendCampaignStats(true,ad);});},500);}
function createMRAIDObservers(fn){visibleAds=getDianomiElement();if(mraid.getState()==="loading"){mraid.addEventListener("ready",;}else{handleMRAIDIsReady(visibleAds,fn);}}
function handleMRAIDIsReady(ads,fn){mraid.addEventListener("viewableChange",fn);fn(mraid.isViewable());setTimeout(()=>{ads.forEach((ad)=>{ad.viewabilityTrigger>0&&sendCampaignStats(true,ad);});},500);}
function handleMRAID(isViewable){visibleAds.forEach((ad)=>{if(isViewable&&!ad.inView){ad.entry={time:performance.now()};ad.inView=true;checkMRAIDVisibleAds(ad);}else if(!isViewable&&ad.inView){ad.inView=false;ad.entry=null;const timeDiff=Math.floor(performance.now()-ad.entry.time);if(timeDiff>=options.viewabilityTime){ad.viewabilityTrigger>0&&sendCampaignStats(false,ad);}}});}
function checkMRAIDVisibleAds(ad){setTimeout(()=>{if(ad.inView){ad.viewabilityTrigger>0&&sendCampaignStats(false,ad);}},options.viewabilityTime);}
function checkVisibleAds(ad){setTimeout(()=>{if(ad.inView){ad.viewabilityTrigger>0&&sendCampaignStats(false,ad);ad.impressionUrlsTrigger>0&&setImpressionUrls(ad);}},options.viewabilityTime);}
function handleIntersect(entries){entries.forEach((entry)=>{const aTags=entry.target.getElementsByTagName("a");const adId=getAdId(aTags,entry.target);let ad;for(let i=0;i<visibleAds.length;i++){if(visibleAds[i].adId&&visibleAds[i].adId===adId&&visibleAds[i].element===entry.target){ad=visibleAds[i];break;}}
!ad.entry&&ad.impressionUrlsTrigger===0&&setImpressionUrls(ad);if(entry.isIntersecting&&entry.intersectionRatio>=options.threshold&&!ad.entry){ad.entry=entry;ad.inView=true;checkVisibleAds(ad);}else if(ad.entry){ad.inView=false;const timeDiff=Math.floor(entry.time-ad.entry.time);if(timeDiff>=options.viewabilityTime){ad.viewabilityTrigger>0&&sendCampaignStats(false,ad);ad.impressionUrlsTrigger>0&&setImpressionUrls(ad);}}});}
const replaceVariables={"ad.doubleclick.net":[{string:"[timestamp]",replacement:},{string:"[cachebuster]",replacement:()=>(Math.random()*1000000000).toFixed(0),},],};const urlsToCheck=Object.keys(replaceVariables);function setImpressionUrls(ad){if(ad.impressionUrls.length===0||ad.impressionUrlsAreSet){return;}
const impressionUrls=ad.impressionUrls.map((url)=>{try{const{host}=new URL(url);let updatedUrl=url;if(urlsToCheck.includes(host)){updatedUrl=replaceVariables[host].reduce((prev,curr)=>prev.replace(curr.string,curr.replacement()),updatedUrl);}
return updatedUrl;}catch(e){return url;}});impressionUrls.forEach((url)=>sendXMLHttpRequest(url));ad.impressionUrlsAreSet=true;}
function getAdId(aTags,entry){let adgroupVariantId;for(let i=0;i<aTags.length;i++){const adgroupAttr=aTags[i].getAttribute(options.attributes.adGroupVariantSelector);if(adgroupAttr){adgroupVariantId=adgroupAttr;break;}}
return adgroupVariantId?adgroupVariantId:entry.getAttribute("data-dianomi-video-id");}
function getImpressionUrls(aTags){let urls=[];for(let i=0;i<aTags.length;i++){const urlsString=aTags[i].getAttribute(options.attributes.impressionUrls);if(urlsString){urlsString.split(",").forEach(;}}
return urls;}
function getAttributeValue(elems,attributeKey){for(let i=0;i<elems.length;i++){const attr=elems[i].getAttribute(attributeKey);if(attr){return parseInt(attr);}}
return 0;}
function setClickTrackers(aTags){for(let i=0;i<aTags.length;i++){const trackersAttr=aTags[i].getAttribute(options.attributes.clickTrackers);if(trackersAttr){const trackers=trackersAttr.split(",").map((tracker)=>decodeURIComponent(tracker));aTags[i].addEventListener("click",;}}}
function sendCampaignStats(pageLoad,ad){if(pageLoad||options.multipleViews||!ad.adViewed){let url=options.url+createQuery(pageLoad,ad);sendXMLHttpRequest(url);if(!pageLoad){ad.adViewed=true;}}}
function sendHTTP(url){const xhttp=new XMLHttpRequest();xhttp.open("GET",url);xhttp.send();}
function sendXMLHttpRequest(potentialURL){try{if(potentialURL.startsWith("/cgi-bin/")){sendHTTP(potentialURL);return;}
const{hostname,href,pathname}=new URL(potentialURL);if(hostname.includes("dianomi.com")){sendHTTP(href);}else{const elementType=pathname.endsWith(".js")||pathname.includes("trackimpj")?"script":"iframe";const element=document.createElement(elementType);if(elementType==="iframe"){element.style.zIndex=100;element.style.display="none";element.srcdoc=`<img src="${href}" />`;}else{element.src=href;}
document.body.append(element);}}catch(error){console.log("Unable to send request using: ",potentialURL,error);}}
function createQuery(pageLoad,ad){let query=`?initial_load=${pageLoad}`;if(ad.type==="adgroup"){query+=`&ad_group_variant_id=${ad.adId}`;}else if(ad.type==="video"){query+=`&video_id=${ad.adId}`;}
Object.keys(campaignParams).forEach(;return query;}
function getParameterValues(object,keyname){let newObject={};Object.keys(object).forEach((key)=>{if(key.substring(0,keyname.length)===keyname){newObject=object[key];}});return newObject;}
function selectedParams(object,params){let newObject={};Object.keys(object).forEach((tag)=>{if(params.includes(tag)){newObject[tag]=object[tag];}});return newObject;}
function getCampaignParams(){let dianomiTag=selectedParams(getParameterValues(window,"dianomi_tag_params_"),options.tagParams)||{};if(!dianomiTag.smartad_id){try{dianomiTag["smartad_id"]=document.getElementsByTagName("div")[0].attributes["data-smartad-id"].textContent;}catch(error){throw new Error("No campaign details available");}}
return dianomiTag;}
if(typeof window.mraid!=="undefined"){createMRAIDObservers(handleMRAID);}else{createObservers(handleIntersect,options.threshold);}}catch(error){console.error(error);}})();