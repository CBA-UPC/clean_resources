import{delegate as t,fetchJson as T,fetchHtml as o,isFunction as _,addParams as i,objDataset as m,debug,resolve}from"../base/croco.js";import{LOGGERS as l,MODULE_ALREADY_INITIALIZED as u,getLocalData as j}from"../base/config.js";import{loader as h}from"../base/loader.js";import{sendEvent as P,sendEventFromContextData as p,DEFAULT_LIST_NAME as A,EVENTS as D}from"../base/event-tracker.js";const g=l.DEFAULT;let C=false;let S=null;async function v(){return await j("configuration.minicart.isNewAddToCartEnabled")||false}async function I(i,l,title,actions,u){if(!i){debug("warn",g,"[AddToCart]","no product added to cart");return}const{openPopin:t}=await import("../base/popin-refit.js");t({classname:"popin--atc",instanceId:"popin-addtocart",forceReload:true,options:{closeOnLeave:true,noBackButton:true},openCallback:async()=>{if(l){import("./recommendation.js").then(({recommendationInit:t})=>{l.querySelectorAll(".js-wishlist-add-item").forEach(t=>t.classList.add("is-hidden"));t(".js-atc-reco")})}const{lazyloader:t}=await import("../modules/lazyload.js");t.update()},loadContents:async()=>{const{tplAddToCart:t}=await import("../templates/addtocart.tpl.js");const data={productData:i,actions:actions,wording:u,title:title,recommendations:l};const o={name:"check",size:"large",className:"no-fill no-flex--resize text-white rounded bg-conversion l-hmargin--small"};return{contents:t(data),title:data.title,icon:o}}})}function O(url){let t=null;if(url){t=o(url,{method:"GET",format:"ajax"},true)}else{t=Promise.resolve(null)}return t}async function k(response,C,T,context){let t=response.recommendationsUrl;const h=await v();const k=await j()||{};p(response,{item_list_name:context||A.PRODUCT,keysToDelete:["index"]});if(!h){t=i(k?.urls?.addToCartRecommendation,{pid:response.linkEvent.product_sku})}return O(t).then(o=>{import("./minicart.js").then(({minicart:t})=>{t.getCartDatas()});const{wordings:t,urls:i}=k;const{productAdded:l,showBasket:u,continueShopping:p,productSize:m}=t?.atc||{};if(C){let t=response.productLine;if(!h){const g=response.linkEvent;t={name:g.product_name,size:{label:g.product_size,isUniqueSize:g.product_size_unique},color:{label:g.product_color},image:{desktopUrl:g.product_image_url},promoColor:g.promo_color,pricing:{standardPrice:{format:g.product_old_price},salesPrice:{format:g.product_price}},monogram:g.monogram}}let actions=response.actions;if(!actions){actions={goToCart:{url:i?.cart,label:u},continueShopping:{label:p}}}I(t,o,response.message||l,actions,{...response.wording,productSize:m});P(D.SPEED_INDICATOR,{event_data:{area:context||A.PRODUCT,action:"add_to_cart",value:Date.now()-S}})}if(_(T)){T()}})}export async function addToCart(t,{url,showAtcPanel:i=false,giftType:o=null,isProductFid:l=false,callback:u,token:p,context},m){S=Date.now();let data={pid:t,minicart:true,token:p,format:"ajax"};if(!url){url=await j("urls.addToCartDeprecated")}if(o&&l){data.giftType=o;data.isProductFid=l}if(typeof productConfiguratorInstance!=="undefined"){const C=productConfiguratorInstance._getAddToCartParameters(t);if(C&&C.lc_monogramText){data=Object.assign(data,C)}}const g=m&&m.closest(".js-popin-wrapper");h.process(o=>{T(url,{method:"POST",format:"ajax"},data).then(async response=>{if(response.error&&response.success===false){const{initNotification:t}=await import("../base/notifications.js");const[title,description]=resolve(["notification.title","notification.text"],response);t({content:{title:title||response.message,description:description,icon:"check",iconClass:"icon-validation rounded",timeout:5e3}})}else{await k(response,i,u,context)}o()}).catch(()=>{o()})},g&&g.querySelector(".js-popin-loader"))}export async function newAddToCart(t,{url,token:o,context,pliId:m},g,i){S=Date.now();let data={pid:t,token:o,pliId:m};if(typeof productConfiguratorInstance!=="undefined"){const u=productConfiguratorInstance._getAddToCartParameters(t);if(u&&u.lc_monogramText){data.monogramText=u.lc_monogramText;data.customPicture=u.scence7picture;for(const p of["lc_monogramPlacement","lc_monogramThreadColor","lc_monogramFont"]){let keys=Object.keys(u);for(let t=0,o=keys.length;t<o;t++){const key=keys[t];if(key.indexOf("dw")===0&&key.includes(p)){data[p]=u[key]}}}}}if(!url){url=await j("urls.addToCartDeprecated")}const l=i&&i.closest(".js-popin-wrapper");h.process(p=>{T(url,{method:"POST",format:"json"},data).then(async response=>{const[title,description,i,actions]=resolve(["notification.title","notification.text","displaySizeChoice","actions"],response);if(response.error&&response.notification){const{initNotification:t}=await import("../base/notifications.js");t({content:{title:title,description:description,icon:"check",iconClass:"icon-validation rounded",timeout:5e3}})}else{let t=true;let o;if(i){p();const{initSizeConfirmPanel:l}=await import("./addtocart-size-confirm-panel.js");const{show,message,goToCart:u}=await l(i);if(actions&&u){actions.goToCart.label=u.label}o=message;t=show}await k({...response,wording:{...response.wording,confirmSizeMessage:o},actions:actions},!m&&t,()=>{p();_(g)&&g(response)},context)}p()})},l&&l.querySelector(".js-popin-loader"))}export async function onAtcBtnClick(e){e.preventDefault&&e.preventDefault();const i=e.delegateTarget;if(i){const l=i.dataset.atcPid;const url=i.dataset.atcUrl;const u=m(i,"onProductAdded");let t=u||null;let o=true;if(i.href){location.href=i.href;o=false}if(l){const p=i.dataset.atcToken;const context=i.dataset.atcTrackingContext;if(await v()){newAddToCart(l,{url:url,token:p,context:context},t,i)}else{addToCart(l,{url:url,token:p,context:context,showAtcPanel:o,callback:t},i)}}else{debug("error",g,"[AddToCart]","No pid for addToCart")}}else{debug("error",g,"[AddToCart]","No target for addToCart")}}function N(){t(document.documentElement,".js-add-to-cart","click",onAtcBtnClick)}export function addtocartInit(){if(C){debug("error",g,u);return}N();C=true}