import{INVALID_PARAMETER as o,LOGGERS as t,getDeviceType as i}from"./config.js";import{debug,deepCopy as _,isElement as p,objDataset as l,resolve}from"./croco.js";const I=t.TRACKING;const g="tracking";export const EVENTS={PAGE_VIEW:"page_view",VIEW_ITEM:"view_item",VIEW_ITEM_LIST:"view_item_list",SELECT_ITEM:"select_item",VIEW_PROMOTION:"view_promotion",SELECT_PROMOTION:"select_promotion",LOYALTY:"loyalty",KLARNA:"klarna",ACCOUNT_REDIRECTION:"account_redirection",PURCHASE:"purchase",LOGIN:"login",SIGN_UP:"sign_up",NEWSLETTER:"newsletter",VIRTUAL_FITTING:"virtual_fitting",COUPON_SIGNIN_SIGNUP_CTA:"coupon_code_sign_in_sign_up_cta_click",PUSH_SIGNIN_SIGNUP_CTA:"push_sign_in_sign_up_cta_click",PUSH_SIGNIN_SIGNUP_HYPERLINK:"push_sign_in_sign_up_hyperlink_click",SPEED_INDICATOR:"speed_indicator"};export const DEFAULT_LIST_NAME={PRODUCT:"product",VIRTUAL_FITTING:"virtual fitting"};const T=1e3;export const sendEvent=async(event,data,target,o)=>{if(event){if(!window.dataLayer){window.dataLayer=[]}return await new Promise(done=>{const t=_(data)||{};const i=setTimeout(done,T);t.eventCallback=(resolve("ecommerce.items",t)||[]).forEach(item=>{switch(event){case"add_shipping_info":case"add_payment_info":case"begin_checkout":case"purchase":delete item["item_list_id"];delete item["item_list_name"];break;default:break}o&&Object.entries(o).forEach(([key,value])=>{if(key==="keysToDelete"&&value.length){[...value].forEach(}else{item[key]=value}})});if(resolve("event_data",t)){window.dataLayer.push({event_data:null})}else if(resolve("ecommerce",t)){window.dataLayer.push({ecommerce:null})}window.dataLayer.push({event:event,...t});debug("log",I,"[sendTracking] track",event,t,target)})}};export const sendEventFromContextData=async(data,t)=>{const[event,i]=resolve(["context.event","context.data"],data);event&&await sendEvent(event,i,null,t)};const m=new IntersectionObserver((entries,t)=>{for(let i of entries){const[target,ratio]=resolve(["target","intersectionRatio"],i);const{event,data,once,updateItems:o}=l(target,g);if(ratio>.1){sendEvent(event,data,target,o);if(once){t.unobserve(i.target)}}}},{threshold:.1});export function sendEventOnEnterViewport(t,event,data,once,i){if(p(t)){m.observe(t);l(t,g,{event:event,data:data,once:once,updateItems:i})}else{debug("log",I,"[sendTracking] track on enter viewport",o,t)}}export async function sendOpenPanelEvent(t){const{sendEvent:i}=await import("../base/event-tracker.js");const[name,o]=resolve(["pageViewData.page_data.name","pageViewData.page_data.area"],window);i(t,{event_data:{area:`${name} ${o||""}`,action:"open"}})}export function getAdditionalData(){return{googleSessionId:window.gtagData&&window.gtagData.session_id,didomiConsent:window.didomiState&&window.didomiState.didomiPurposesConsent,deviceType:i()}}