const i="lsco-lazyload",d="loaded",c="left-top",a="left-middle",l="left-bottom",f="right-top",E="right-middle",T="right-bottom",m="center-top",u="center-bottom",p="center-middle",h={lazyAttr:i,lazyLoaded:d,leftTop:c,leftMiddle:a,leftBottom:l,rightTop:f,rightMiddle:E,rightBottom:T,centerTop:m,centerBottom:u,centerMiddle:p},b=Object.freeze(Object.defineProperty({__proto__:null,centerBottom:u,centerMiddle:p,centerTop:m,default:h,lazyAttr:i,lazyLoaded:d,leftBottom:l,leftMiddle:a,leftTop:c,rightBottom:T,rightMiddle:E,rightTop:f},Symbol.toStringTag,{value:"Module"})),{lazyAttr:y,lazyLoaded:A}=b,r={OBSERVER_OPTIONS:{root:null,rootMargin:"5%",threshold:0},AFFECTED_ELEMENTS:["IMG","VIDEO","SOURCE","PICTURE"],AFFECTED_ATTRIBUTES:["src","srcset","poster"]};function n(e){if(e&&e.dataset){const t=e;r.AFFECTED_ATTRIBUTES.forEach(o=>{t.dataset[o]&&t[o]!==t.dataset[o]&&(t[o]=t.dataset[o],t.setAttribute(y,A))})}}function g(e){e&&(r.AFFECTED_ELEMENTS.includes(e.nodeName)&&n(e),Array.from(e.children).forEach()}function O(e,t){e.forEach(}function s(e,t){if(!(window&&window.IntersectionObserver))g(e);else{let o=r.OBSERVER_OPTIONS;t.arg==="offscreenProximity"&&Number.isFinite(t.value)&&(o={...o,rootMargin:`${t.value}%`}),new IntersectionObserver(O,o).observe(e)}}const M={mounted(e,t){s(e,t)},updated;export{M as L,h as s};
