// For license information, see `https://assets.adobedtm.com/f8e1ad0aec1d/d06ab2f346fe/6f66c7f6ae9a/RCba5514e037384efbba82cbb0f4962191-source.js`.
_satellite.__registerScript('https://assets.adobedtm.com/f8e1ad0aec1d/d06ab2f346fe/6f66c7f6ae9a/RCba5514e037384efbba82cbb0f4962191-source.min.js', "<script>\n/*!\n * @preserve\n * jquery.scrolldepth.js | v0.4.1\n * Copyright (c) 2014 Rob Flaherty (@robflaherty)\n * Licensed under the MIT and GPL licenses.\n */\n;(function ( $, window, document, undefined ) {\n   \n  \"use strict\";\n \n  var defaults = {\n    elements: [],\n    minHeight: 0,\n    percentage: true,\n    testing: false\n  },\n \n  $window = $(window),\n  cache = [];\n \n  /*\n   * Plugin\n   */\n \n  $.scrollDepth = function(options) {\n     \n    var startTime = +new Date();\n \n    options = $.extend({}, defaults, options);\n \n    // Return early if document height is too small\n    if ( $(document).height() < options.minHeight ) {\n      return;\n    }\n \n    // Establish baseline (0% scroll)\n    sendEvent('Percentage', 'Baseline');\n \n    /*\n     * Functions\n     */\n \n    function sendEvent(action, label, timing) {\n      if (!options.testing) {\n \n        if (typeof(dataLayer) !== \"undefined\") {\n         //dataLayer.push({'event':'ScrollDistance', 'eventCategory':'Scroll Depth', 'eventAction': action, 'eventLabel': label, 'eventValue': 1, 'eventNonInteraction': true});\n          _satellite.setVar(\"pageDepth\",label); \n          _satellite.track('ScrollDistance');\n          \n \n          if (arguments.length > 2) {\n            //dataLayer.push({'event':'ScrollTiming', 'eventCategory':'Scroll Depth', 'eventAction': action, 'eventLabel': label, 'eventTiming': timing});\n          }\n        } else {\n \n          if (typeof(ga) !== \"undefined\") {\n           // ga('send', 'event', 'Scroll Depth', action, label, 1, {'nonInteraction': 1});\n \n            if (arguments.length > 2) {\n            //  ga('send', 'timing', 'Scroll Depth', action, timing, label);\n            }\n          }\n \n          if (typeof(_gaq) !== \"undefined\") {\n           // _gaq.push(['_trackEvent', 'Scroll Depth', action, label, 1, true]);\n \n            if (arguments.length > 2) {\n            //  _gaq.push(['_trackTiming', 'Scroll Depth', action, timing, label, 100]);\n            }\n          }\n        }\n \n      } else {\n       // $('#console').html(action + ': ' + label);\n      }\n    }\n \n    function calculateMarks(docHeight) {\n      return {\n        '25%' : parseInt(docHeight * 0.25, 10),\n        '50%' : parseInt(docHeight * 0.50, 10),\n        '75%' : parseInt(docHeight * 0.75, 10),\n        // 1px cushion to trigger 100% event in iOS\n        '100%': docHeight - 1\n      };\n    }\n \n    function checkMarks(marks, scrollDistance, timing) {\n      // Check each active mark\n      $.each(marks, function(key, val) {\n        if ( $.inArray(key, cache) === -1 && scrollDistance >= val ) {\n          sendEvent('Percentage', key, timing);\n          cache.push(key);\n        }\n      });\n    }\n \n    function checkElements(elements, scrollDistance, timing) {\n      $.each(elements, function(index, elem) {\n        if ( $.inArray(elem, cache) === -1 && $(elem).length ) {\n          if ( scrollDistance >= $(elem).offset().top ) {\n            sendEvent('Elements', elem, timing);\n            cache.push(elem);\n          }\n        }\n      });\n    }\n \n    /*\n     * Throttle function borrowed from:\n     * Underscore.js 1.5.2\n     * http://underscorejs.org\n     * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n     * Underscore may be freely distributed under the MIT license.\n     */\n \n    function throttle(func, wait) {\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n      var later = function() {\n        previous = new Date();\n        timeout = null;\n        result = func.apply(context, args);\n      };\n      return function() {\n        var now = new Date();\n        if (!previous) previous = now;\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          clearTimeout(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n        } else if (!timeout) {\n          timeout = setTimeout(later, remaining);\n        }\n        return result;\n      };\n    }\n \n    /*\n     * Scroll Event\n     */\n \n    $window.on('scroll.scrollDepth', throttle(function() {\n      /*\n       * We calculate document and window height on each scroll event to\n       * account for dynamic DOM changes.\n       */\n \n      var docHeight = $(document).height(),\n        winHeight = window.innerHeight ? window.innerHeight : $window.height(),\n        scrollDistance = $window.scrollTop() + winHeight,\n \n        // Recalculate percentage marks\n        marks = calculateMarks(docHeight),\n \n        // Timing\n        timing = +new Date() - startTime;\n \n      // If all marks already hit, unbind scroll event\n      if (cache.length >= 4 + options.elements.length) {\n        $window.off('scroll.scrollDepth');\n        return;\n      }\n \n      // Check specified DOM elements\n      if (options.elements) {\n        checkElements(options.elements, scrollDistance, timing);\n      }\n \n      // Check standard marks\n      if (options.percentage) {       \n        checkMarks(marks, scrollDistance, timing);\n      }\n    }, 500));\n \n  };\n \n})( jQuery, window, document );\njQuery.scrollDepth();\n</script>                                   ");