import{isCEPolyfill as h}from"./dom.js";import{isTemplatePartActive as u}from"./template.js";export class TemplateInstance{constructor(t,o,options){this.__parts=[];this.template=t;this.processor=o;this.options=options}update(values){let t=0;for(const part of this.__parts){if(part!==undefined){part.setValue(values[t])}t++}for(const part of this.__parts){if(part!==undefined){part.commit()}}}_clone(){const t=h?this.template.element.content.cloneNode(true):document.importNode(this.template.element.content,true);const stack=[];const o=this.template.parts;const i=document.createTreeWalker(t,133,null,false);let p=0;let l=0;let part;let node=i.nextNode();while(p<o.length){part=o[p];if(!u(part)){this.__parts.push(undefined);p++;continue}while(l<part.index){l++;if(node.nodeName==="TEMPLATE"){stack.push(node);i.currentNode=node.content}if((node=i.nextNode())===null){i.currentNode=stack.pop();node=i.nextNode()}}if(part.type==="node"){const part=this.processor.handleTextExpression(this.options);part.insertAfterNode(node.previousSibling);this.__parts.push(part)}else{this.__parts.push(...this.processor.handleAttributeExpressions(node,part.name,part.strings,this.options))}p++}if(h){document.adoptNode(t);customElements.upgrade(t)}return t}}