!();var C2C_EVENT={CAM2CAM_ERRORED:"CAM2CAM_ERRORED",CAM2CAM_SRC_SET:"CAM2CAM_SRC_SET",CAM2CAM_TOGGLED_MUTE:"CAM2CAM_TOGGLED_MUTE",C2C_BROADCASTER_STARTED:"C2C_BROADCASTER_STARTED",C2C_BROADCASTER_STOPPED:"C2C_BROADCASTER_STOPPED",WEBRTC_API_STOPPED:"C2C_WEBRTC_API_STOPPED",RECEIVED_VIDEO_SRC:"C2C_RECEIVED_VIDEO_SRC",C2C_TEST_PARTIAL_ONLY:"C2C_TEST_PARTIAL_ONLY",FINAL_RESET:"C2C_FINAL_RESET",GOT_STATS:"C2C_GOT_STATS"},C2C_VIEW_EVENT={CAM2CAM_INFO_CLICKED:"CAM2CAM_INFO_CLICKED",MUTE_CAM2CAM_TOGGLED:"MUTE_CAM2CAM_TOGGLED",SWITCH_CAMS_CLICKED:"C2C_SWITCH_CAMS_CLICKED",START_CLICKED:"C2C_START_CLICKED",STOP_CLICKED:"C2C_STOP_CLICKED",C2C_TAB_SWITCHED:"C2C_TAB_SWITCHED"},C2CController={initialized:!1,init:chooseType:browserSupportsDesiredC2CType:assignCommonEvListeners:hideC2CArea:function(){WebrtcView.hideC2CPopup()},onStartCam2CamBtnClicked:stop:onWebrtcBroadcasterStart:onWebrtcBroadcasterStop:isC2CStarted:enableStartBtns:enableStopBtns:stopSpecificMode:disableStartBtns:function(e){switch(Debug.print("C2C.disableStartBtns("+e+")"),e){case"all":WebrtcView.disableAllStartButtons();break;case"test":WebrtcView.disableTestModeStartButtons();break;case"real":WebrtcView.disableRealModeStartButtons()}},disableStopBtns:onC2CModeSwitched:errorHandler:,WebrtcController={name:"webrtc",isBrowserSupported:null,start:verifyBrowserSupport:initTestMode:function(){Debug.print("WebrtcController","initTestMode()"),WebrtcController.assignEvListeners(),WebrtcController.launchInTestMode(WebrtcController.userId)},initRealMode:launchInTestMode:onTestPartialOnly:assignEvListeners:setSrcOnAppropriateVidEl:isCamSwitchingSupported:launchInRealMode:onTesterPermissionError:errorHandler:stopWebrtc:finalReset:onInfoIconClicked:onAudioToggled:setVideoSource:removeVideoSource:flipVideoSource:onStreamSrcSet:onPublisherStopped:function(){WebrtcController.removeVideoSource()},clearReconnectTimer:onSwitchCamClicked:logBQ:generateLogDetails:,WebrtcModel={getBroadcastId:logData:,WebrtcView={init:saveElsToObject:getVideoTag:function(){return DOM.getElementById("c2cVideo")},getPanelIconVideoTag:assignEventListeners:setUpCam2CamArea:setUpDesktopFeatures:setUpMobileFeatures:assignDraggingEventListeners:hideRealModeUI:setTypeClass:clearTypeClass:onPanelTriggerClicked:hideWebrtcEls:showWebrtcEls:function(){},showBroadcastingState:showBroadcastingStateAddtlEls:function(){this.c2cMuteBtn.classList.remove("hide"),this.c2cInfo.classList.remove("hide")},hideBroadcastingStateAddtlEls:function(){this.c2cMuteBtn.classList.add("hide"),this.c2cInfo.classList.add("hide")},showBtnArea:function(){this.btnArea.classList.remove("hide")},hideBtnArea:function(){this.btnArea.classList.add("hide")},showC2CPopup:hideC2CPopup:onModeSwitch:onAudioSwitch:isChatPanelOpen:showVideoTag:function(){this.c2cVideoMain.classList.remove("hide")},hideVideoTag:function(){this.c2cVideoMain.classList.add("hide"),this.overlayMsg.classList.remove("hide")},showLoadingSym:hideLoadingSym:setSourceOnVideo:checkVidElsForSrc:getTheOppisiteVidEl:showSwitchCamIcon:function(){this.switchCamsBtn&&this.switchCamsBtn.classList.remove("hide")},hideSwitchCamIcon:resetViewState:setAspectRatioClass:updateMuteIcon:onInfoClicked:onMuteClicked:function(){Debug.print("WebrtcView.onMuteClicked()"),DOM.dispatchEvent(document,C2C_VIEW_EVENT.MUTE_CAM2CAM_TOGGLED)},onSwitchIconClicked:showFeedback:hideFeedback:showBrowserInstructions:disableModeSwitch:function(){Debug.print("WebrtcView.disableModeSwitch()"),this.modeSwitch.setAttribute("disabled","disabled"),DOM.getParentBySelector(this.modeSwitch,"class","option-toggle").classList.add("disabled")},enableModeSwitch:disableAudioOnlyToggle:enableAudioOnlyToggle:enableTestModeStartButtons:function(){this.testStartBtns.forEach((function(e){e.classList.remove("disabled")}))},enableRealModeStartButtons:function(){this.realStartBtns.forEach((function(e){e.classList.remove("disabled")}))},enableTestModeStopButtons:function(){this.testStopBtns.forEach((function(e){e.classList.remove("disabled")}))},enableRealModeStopButtons:function(){this.realStopBtns.forEach((function(e){e.classList.remove("disabled")}))},disableAllStartButtons:function(){Debug.print("WebrtcView.disableAllStartButtons()"),this.disableTestModeStartButtons(),this.disableRealModeStartButtons()},disableTestModeStartButtons:function(){this.testStartBtns.forEach((function(e){e.classList.add("disabled")}))},disableRealModeStartButtons:function(){this.realStartBtns.forEach((function(e){e.classList.add("disabled")}))},disableAllStopButtons:disableTestModeStopButtons:function(){this.testStopBtns.forEach((function(e){e.classList.add("disabled")}))},disableRealModeStopButtons:handleMouseDown:handleMouseMove:handleMouseUp:clamp:,CBWebrtcModel={currentWsAttempt:0,maxWSAttempts:2,wsAttemptTimeout:3e3,userDevices:null,pcConfig:{iceServers:[{urls:"",username:"f4f_streamer",credential:"7OC1RTZyig"},{urls:"",username:"f4f_streamer",credential:"7OC1RTZyig"}]},constraints:{video:{},audio:{echoCancellation:!0}},audioEnabled:!1,lossPercents:[],videoBitrate:"350000",measurementDuration:5,initialized:!1,init:updateConstraints:start:function(e,t){if(Debug.print("CBWebrtcModel","start("+JSON.stringify(e)+")"),CBWebrtcModel.isStarted=!0,!e||0===Object.keys(e).length)return CBWebrtcModel.errorHandler(new Error("no_in_stream_data"));var r=e.connection.signallingUri.slice(0,e.connection.signallingUri.indexOf("webrtc")-1),n=(r=(r="turn:"+r.slice(r.indexOf(":")+3)).slice(0,r.lastIndexOf(":")))+":3478?transport=tcp",i=r+":3478";CBWebrtcModel.turnServerUrls=[n,i],CBWebrtcModel.pcConfig.iceServers[0].urls=n,CBWebrtcModel.pcConfig.iceServers[1].urls=i;var o=e.connection.signallingUri;if(-1===o.indexOf("in+"))return CBWebrtcModel.errorHandler(new Error("wrong_in_stream_format"));e.accessToken&&(o+="?id="+e.accessToken);var a=e.id;this.connectionData={},this.connectionData.inStream=e,this.connectionData.wsUrl=o,this.connectionData.streamId=a,CBWebrtcModel.askForUserMedia(t)},startTest:wsConnect:wsMessageHandler:onVideoBitrate:startVideoBitrateRecoveryTimer:videoBitrateRecoveryHandler:askForUserMedia:askForUserMediaTestMode:onGotUserPermissions:getAspectRatio:onGotOffer:onAnswerSDP:toggleMute:setMuteState:stopStreamTracks:replaceVideoTrack:function(e){Debug.print("CBWebrtcModel","replaceVideoTrack()"),CBWebrtcModel.localStream=e;var t=CBWebrtcModel.localStream?CBWebrtcModel.localStream.getTracks():null;if(t){for(var r,n=0;n<t.length;n++)if("video"===t[n].kind){r=t[n];break}var i=CBWebrtcModel.peerConnection&&CBWebrtcModel.peerConnection.getSenders();i&&i.forEach((function(e){"video"===e.track.kind&&e.replaceTrack(r)}))}},replaceAudioTrack:stop:closeWebsocket:getTrackSourceDevice:errorHandler:resetWsAttempts:;