try{self["workbox:window:6.2.0"]&&_()}catch(t){}function t(t,s){return new Promise((i=>{const e=new MessageChannel;e.port1.onmessage=t.postMessage(s,[e.port2])}))}try{self["workbox:core:6.2.0"]&&_()}catch(t){}unction i(t,s){const{href:i}=location;return new URL(t,i).href===new URL(s,i).href}class e{const h={type:"SKIP_WAITING"};class n extends class{ddEventListener(t,s){this.Lt(t).add(s)}ispatchEvent(t){t.target=this;const s=this.Lt(t.type);for(const i of s)i(t)}{constructor(t,h={}){super(),this.It={},this.Bt=0,this.Tt=new s,this.Ut=new s,this.Mt=new s,this.At=0,this.Gt=new Set,this.Kt=()=>{const t=this.Nt,s=t.installing;this.Bt>0||!i(s.scriptURL,this.Ot.toString())||performance.now()>this.At+6e4?(this.zt=s,t.removeEventListener("updatefound",this.Kt)):(this.Dt=s,this.Gt.add(s),this.Tt.resolve(s)),++this.Bt,s.addEventListener("statechange",this.Ft)},this.Ft=t=>{const s=this.Nt,i=t.target,{state:h}=i,n=i===this.zt,a={sw:i,isExternal:n,originalEvent:t};!n&&this.Ht&&(a.isUpdate=!0),this.dispatchEvent(new e(h,a)),"installed"===h?this.Jt=self.setTimeout((()=>{"installed"===h&&s.waiting===i&&this.dispatchEvent(new e("waiting",a))}),200):"activating"===h&&(clearTimeout(this.Jt),n||this.Ut.resolve(i))},this.Qt=t=>{const s=this.Dt,i=s!==navigator.serviceWorker.controller;this.dispatchEvent(new e("controlling",{isExternal:i,originalEvent:t,sw:s,isUpdate:this.Ht})),i||this.Mt.resolve(s)},this.Vt=async t=>{const{data:s,ports:i,source:h}=t;await this.getSW(),this.Gt.has(h)&&this.dispatchEvent(new e("message",{data:s,originalEvent:t,ports:i,sw:h}))},this.Ot=t,this.It=h,navigator.serviceWorker.addEventListener("message",this.Vt)}async register({immediate:t=!1}={}){t||"complete"===document.readyState||await new Promise((),this.Ht=Boolean(navigator.serviceWorker.controller),this.Xt=this.Yt(),this.Nt=await this.Zt(),this.Xt&&(this.Dt=this.Xt,this.Ut.resolve(this.Xt),this.Mt.resolve(this.Xt),this.Xt.addEventListener("statechange",this.Ft,{once:!0}));const s=this.Nt.waiting;return s&&i(s.scriptURL,this.Ot.toString())&&(this.Dt=s,Promise.resolve().then((()=>{this.dispatchEvent(new e("waiting",{sw:s,wasWaitingBeforeRegister:!0}))})).then(()),this.Dt&&(this.Tt.resolve(this.Dt),this.Gt.add(this.Dt)),this.Nt.addEventListener("updatefound",this.Kt),navigator.serviceWorker.addEventListener("controllerchange",this.Qt),this.Nt}async update(){this.Nt&&await this.Nt.update()}get active(){return this.Ut.promise}etSWsync messageSW(s){return t(await this.getSW(),s)}messageSkipWaitingtsync Zt(){try{const t=await navigator.serviceWorker.register(this.Ot,this.It);return this.At=performance.now(),t}catch(t){throw t}}}export{n as Workbox,t as messageSW};
//# sourceMappingURL=workbox-window.prod.mjs.map
