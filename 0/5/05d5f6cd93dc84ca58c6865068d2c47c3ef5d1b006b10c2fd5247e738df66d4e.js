const e=new Set(["Module","__esModule","default","_export_sfc"]);let t={"./BeaconQueue":()=>r("./rsa-plugins-remote-BeaconQueue.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./Bugsnag":()=>r("./rsa-plugins-remote-Bugsnag.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./CustomConsentManager":()=>r("./rsa-plugins-remote-CustomConsentManager.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./DeviceModeDestinations":()=>r("./rsa-plugins-remote-DeviceModeDestinations.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./DeviceModeTransformation":()=>r("./rsa-plugins-remote-DeviceModeTransformation.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./ErrorReporting":()=>r("./rsa-plugins-remote-ErrorReporting.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./ExternalAnonymousId":()=>r("./rsa-plugins-remote-ExternalAnonymousId.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./GoogleLinker":()=>r("./rsa-plugins-remote-GoogleLinker.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./KetchConsentManager":()=>r("./rsa-plugins-remote-KetchConsentManager.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./NativeDestinationQueue":()=>r("./rsa-plugins-remote-NativeDestinationQueue.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./OneTrustConsentManager":()=>r("./rsa-plugins-remote-OneTrustConsentManager.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./StorageEncryption":()=>r("./rsa-plugins-remote-StorageEncryption.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./StorageEncryptionLegacy":()=>r("./rsa-plugins-remote-StorageEncryptionLegacy.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./StorageMigrator":()=>r("./rsa-plugins-remote-StorageMigrator.min.js").then((t=>Object.keys(t).every((t=>e.has(t)))?()=>t.default:()=>t)),"./XhrQueue":()=>r("./rsa-plugins-remote-XhrQueue.min.js").then((t=>Object.keys(t).every(()?)};async function r(e){return import(e)}const a=e=>{if(!t[e])throw new Error("Can not find remote module "+e);return t[e]()},n=e=>{globalThis.__federation_shared__=globalThis.__federation_shared__||{},Object.entries(e).forEach((([e,t])=>{const r=Object.keys(t)[0],a=Object.values(t)[0],n=a.scope||"default";globalThis.__federation_shared__[n]=globalThis.__federation_shared__[n]||{};const o=globalThis.__federation_shared__[n];(o[e]=o[e]||{})[r]=a}))};export{a as get,n as init};
//# sourceMappingURL=rsa-plugins.js.map
