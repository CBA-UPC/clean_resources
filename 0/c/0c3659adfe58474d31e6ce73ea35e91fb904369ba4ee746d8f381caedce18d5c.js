/* eslint-env worker, serviceworker */ /* eslint-disable */'use strict';// *** sw-prefetch configuration
// the variable here is an array of files that are generated at runtime to point to our CDN assets
var precacheConfig=[["https://static-assets-prod.epicgames.com/sac/static/webpack/./app.sac-website.9dbc5924.js",null],["https://static-assets-prod.epicgames.com/sac/static/webpack/./styles.sac-website.eed59004.css",null],["https://static-assets-prod.epicgames.com/sac/static/webpack/./polyfill.sac-website.0f9bc0f6.js",null]];// the navigateFallback is a path used when offline and a fetch of type navigation can't reach anywhere.
// Defaults to '', which will never evaluate, but e.g. setting it to '/epic' will set a new URL to the path,
// check if it has been whitelisted, and then respond with a cached version of that entrypoint
var navigateFallback='';var cachePrefix='sw-precache-v4-epic-service-worker';var cacheName=cachePrefix+'-undefined.js-'+(self.registration?self.registration.scope:'');// *** Start of sw-prefetch code. ***
//NOTE: generated using sw-precache-webpack-plugin without mangling. Added cache removal in 'activate' callback
//
var ignoreUrlParametersMatching=[/^utm_/];var addDirectoryIndex=function(originalUrl,index){var url=new URL(originalUrl);if(url.pathname.slice(-1)==='/'){url.pathname+=index;}return url.toString();};var cleanResponse=function(originalResponse){if(!originalResponse.redirected){return Promise.resolve(originalResponse);}var bodyPromise='body'in originalResponse?Promise.resolve(originalResponse.body):originalResponse.blob();return bodyPromise.then(;};var createCacheKey=function(originalUrl,paramName,paramValue,dontCacheBustUrlsMatching){var url=new URL(originalUrl);if(!dontCacheBustUrlsMatching||!url.pathname.match(dontCacheBustUrlsMatching)){url.search+=(url.search?'&':'')+encodeURIComponent(paramName)+'='+encodeURIComponent(paramValue);}return url.toString();};var isPathWhitelisted=function(whitelist,absoluteUrlString){if(whitelist.length===0){return true;}var path=new URL(absoluteUrlString).pathname;return whitelist.some(function(whitelistedPathRegex){return path.match(whitelistedPathRegex);});};var stripIgnoredUrlParameters=function(originalUrl,ignoreUrlParametersMatching){var url=new URL(originalUrl);url.search=url.search.slice(1).split('&').map(function(kv){return kv.split('=');}).filter(.map(.join('&');return url.toString();};var hashParamName='_sw-precache';var urlsToCacheKeys=new Map(precacheConfig.map(function(item){var relativeUrl=item[0];var hash=item[1];var absoluteUrl=new URL(relativeUrl,self.location);var cacheKey=createCacheKey(absoluteUrl,hashParamName,hash,false);return[absoluteUrl.toString(),cacheKey];}));elf.addEventListener('install',function(event){console.log('[sw-precache-esw] install',event);event.waitUntil(caches.open(cacheName).then(function(cache){return setOfCachedUrls(cache).then(function(cachedUrls){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(cacheKey){if(!cachedUrls.has(cacheKey)){var request=new Request(cacheKey,{credentials:'same-origin'});return fetch(request).then(function(response){if(!response.ok){throw new Error('Request for '+cacheKey+' returned a '+'response with status '+response.status);}return cleanResponse(response).then(function(responseToCache){return cache.put(cacheKey,responseToCache);});});}}));});}).then();});self.addEventListener('activate',function(event){console.log('[sw-precache-esw] activate',event);var setOfExpectedUrls=new Set(urlsToCacheKeys.values());event.waitUntil(caches.open(cacheName).then(function(cache){return cache.keys().then(function(existingRequests){return Promise.all(existingRequests.map(function(existingRequest){if(!setOfExpectedUrls.has(existingRequest.url)){return cache.delete(existingRequest);}}));});}).then(function(){if(self.registration){var scope=self.registration.scope;caches.keys().then(function(keyList){return Promise.all(keyList.map(function(key){console.log('[sw-precache-esw] Validating cache key',key);var endIndex=key.length-scope.length;if(key!==cacheName&&key.indexOf(scope)===endIndex){console.log('[sw-precache-esw] Clearing old',scope,'cache:',key);return caches.delete(key);}else{console.log('[sw-precache-esw] Cache is valid',scope,'cache:',key);}}));});}return self.clients.claim();}));});self.addEventListener('fetch',function(event){if(event.request.method==='GET'){var url=stripIgnoredUrlParameters(event.request.url,ignoreUrlParametersMatching);var shouldRespond;shouldRespond=urlsToCacheKeys.has(url);var directoryIndex='index.html';if(!shouldRespond&&directoryIndex){url=addDirectoryIndex(url,directoryIndex);shouldRespond=urlsToCacheKeys.has(url);}if(!shouldRespond&&navigateFallback&&event.request.mode==='navigate'&&isPathWhitelisted([],event.request.url)){try{event.respondWith(fetch(event.request).then(.catch(function(e){url=new URL(navigateFallback,self.location).toString();return caches.open(cacheName).then(function(cache){return cache.match(urlsToCacheKeys.get(url)).then(function(response){if(response){console.log('[sw-precache-esw] navigate fetch responded from cache',url);return response;}console.log('[sw-precache-esw] fetch failed to retrieve the cached item',url);throw Error('The cached response that was expected is missing.');});}).catch(;}));}catch(e){console.log('[sw-precache-esw] attempted to respond to fetch with network, then cache but hit exception',url);}}if(shouldRespond){console.log('[sw-precache-esw] fetch shouldRespond',url);try{event.respondWith(caches.open(cacheName).then(function(cache){return cache.match(urlsToCacheKeys.get(url)).then(function(response){if(response){console.log('[sw-precache-esw] fetch responded from cache',url);return response;}throw Error('The cached response that was expected is missing.');console.log('[sw-precache-esw] fetch failed to retieve the cached item',url);});}).catch(function(e){console.warn('[sw-precache-esw] Couldn\'t serve response for "%s" from cache: %O',url,e.message);return fetch(event.request);}));}catch(e){console.log('[sw-precache-esw] attempted to respond to fetch with cache but hit exception',url);}}}});// *** End of sw-prefetch code. ***
// *** Start of sw-toolbox code. ***
!function(){return {1:[function(e,t,n){"use strict";function r(e,t){t=t||{},(t.debug||m.debug)&&console.log("[sw-toolbox] "+e);}function o(e){var t;return e&&e.cache&&(t=e.cache.name),t=t||m.cache.name,caches.open(t);}function i(e,t){t=t||{};var n=t.successResponses||m.successResponses;return fetch(e.clone()).then(function(r){return"GET"===e.method&&n.test(r.status)&&o(t).then(function(n){n.put(e,r).then(function(){var r=t.cache||m.cache;(r.maxEntries||r.maxAgeSeconds)&&r.name&&c(e,n,r);});}),r.clone();});}function c(e,t,n){var r=s.bind(null,e,t,n);d=d?d.then(r):r();}function s(e,t,n){var o=e.url,i=n.maxAgeSeconds,c=n.maxEntries,s=n.name,a=Date.now();return r("Updating LRU order for "+o+". Max entries is "+c+", max age is "+i),g.getDb(s).then(.then(.then(function(e){r("Successfully updated IDB.");var n=e.map(function(e){return t.delete(e);});return Promise.all(n).then(;}).catch(;}function a(e,t,n){return r("Renaming cache: ["+e+"] to ["+t+"]",n),caches.delete(t).then(function(){return Promise.all([caches.open(e),caches.open(t)]).then(function(t){var n=t[0],r=t[1];return n.keys().then(function(e){return Promise.all(e.map();}).then(;});});}function u(e,t){return o(t).then(function(t){return t.add(e);});}unction h(e){e instanceof Promise||p(e),m.preCacheItems=m.preCacheItems.concat(e);}function p(e){var t=Array.isArray(e);if(t&&e.forEach(function(e){"string"==typeof e||e instanceof Request||(t=!1);}),!t)throw new TypeError("The precache method expects either an array of strings and/or Requests or a Promise that resolves to an array of strings and/or Requests.");return e;}function l(e,t,n){if(!e)return!1;if(t){var r=e.headers.get("date");if(r){if(new Date(r).getTime()+1e3*t<n)return!1;}}return!0;}var d,m=e("./options"),g=e("./idb-cache-expiration");t.exports={debug:r,fetchAndCache:i,openCache:o,renameCache:a,cache:u,uncache:f,precache:h,validatePrecacheInput:p,isResponseFresh:l};},{"./idb-cache-expiration":2,"./options":4}],2:[function(e,t,n){"use strict";function r(e){return new Promise(function(t,n){var r=indexedDB.open(u+e,f);r.onupgradeneeded=function(){r.result.createObjectStore(h,{keyPath:p}).createIndex(l,l,{unique:!1});},r.onsuccess=function(){t(r.result);},r.onerror=function(){n(r.error);};});}function o(e){return e in d||(d[e]=r(e)),d[e];}function i(e,t,n){return new Promise(function(r,o){var i=e.transaction(h,"readwrite");i.objectStore(h).put({url:t,timestamp:n}),i.oncomplete=function(){r(e);},i.onabort=});}function c(e,t,n){return t?new Promise(function(r,o){var i=1e3*t,c=[],s=e.transaction(h,"readwrite"),a=s.objectStore(h);a.index(l).openCursor().onsuccess=function(e){var t=e.target.result;if(t&&n-i>t.value[l]){var r=t.value[p];c.push(r),a.delete(r),t.continue();}},s.oncomplete=function(){r(c);},s.onabort=o;}):Promise.resolve([]);}function s(e,t){return t?new Promise(function(n,r){var o=[],i=e.transaction(h,"readwrite"),c=i.objectStore(h),s=c.index(l),a=s.count();s.count().onsuccess=function(){var e=a.result;e>t&&(s.openCursor().onsuccess=function(n){var r=n.target.result;if(r){var i=r.value[p];o.push(i),c.delete(i),e-o.length>t&&r.continue();}});},i.oncomplete=i.onabort=r;}):Promise.resolve([]);}function a(e,t,n,r){return c(e,n,r).then(function(n){return s(e,t).then(;});}var u="sw-toolbox-",f=1,h="store",p="url",l="timestamp",d={};t.exports={getDb:o,setTimestampForUrl:i,expireEntries:a};},{}],3:[function(e,t,n){"use strict";function r(e){var t=a.match(e.request);t?e.respondWith(t(e.request)):a.default&&"GET"===e.request.method&&0===e.request.url.indexOf("http")&&e.respondWith(a.default(e.request));}function o(e){s.debug("activate event fired");var t=u.cache.name+"$$$inactive$$$";e.waitUntil(s.renameCache(t,u.cache.name));}unction c(e){var t=u.cache.name+"$$$inactive$$$";s.debug("install event fired"),s.debug("creating cache ["+t+"]"),e.waitUntil(s.openCache({cache:{name:t}}).then(function(e){return Promise.all(u.preCacheItems).then(i).then(s.validatePrecacheInput).then(function(t){return s.debug("preCache list: "+(t.join(", ")||"(none)")),e.addAll(t);});}));}e("serviceworker-cache-polyfill");var s=e("./helpers"),a=e("./router"),u=e("./options");t.exports={fetchListener:r,activateListener:o,installListener:c};},{"./helpers":1,"./options":4,"./router":6,"serviceworker-cache-polyfill":16}],4:[function(e,t,n){"use strict";var r;r=self.registration?self.registration.scope:self.scope||new URL("./",self.location).href,t.exports={cache:{name:"$$$toolbox-cache$$$"+r+"$$$",maxAgeSeconds:null,maxEntries:null,queryOptions:null},debug:!1,networkTimeoutSeconds:null,preCacheItems:[],successResponses:/^0|([123]\d\d)|(40[14567])|410$/};},{}],5:[function(e,t,n){"use strict";var r=new URL("./",self.location),o=r.pathname,i=e("path-to-regexp"),c=function(e,t,n,r){t instanceof RegExp?this.fullUrlRegExp=t:(0!==t.indexOf("/")&&(t=o+t),this.keys=[],this.regexp=i(t,this.keys)),this.method=e,this.options=r,this.handler=n;};c.prototype.makeHandler=function(e){var t;if(this.regexp){var n=this.regexp.exec(e);t={},this.keys.forEach(function(e,r){t[e.name]=n[r+1];});}return bind(this);},t.exports=c;},{"path-to-regexp":15}],6:[function(e,t,n){"use strict";ar o=e("./route"),i=e("./helpers"),c=function(e,t){for(var n=e.entries(),r=n.next(),o=[];!r.done;){new RegExp(r.value[0]).test(t)&&o.push(r.value[1]),r=n.next();}return o;},s=function(){this.routes=new Map(),this.routes.set(RegExp,new Map()),this.default=null;};["get","post","put","delete","head","any"].forEach(,s.prototype.add=function(e,t,n,c){c=c||{};var s;t instanceof RegExp?s=RegExp:(s=c.origin||self.location.origin,s=s instanceof RegExp?s.source:r(s)),e=e.toLowerCase();var a=new o(e,t,n,c);this.routes.has(s)||this.routes.set(s,new Map());var u=this.routes.get(s);u.has(e)||u.set(e,new Map());var f=u.get(e),h=a.regexp||a.fullUrlRegExp;f.has(h.source)&&i.debug('"'+t+'" resolves to same regex as existing route.'),f.set(h.source,a);},s.prototype.matchMethod=function(e,t){var n=new URL(t),r=n.origin,o=n.pathname;return this._match(e,c(this.routes,r),o)||this._match(e,[this.routes.get(RegExp)],t);},s.prototype._match=function(e,t,n){if(0===t.length)return null;for(var r=0;r<t.length;r++){var o=t[r],i=o&&o.get(e.toLowerCase());if(i){var s=c(i,n);if(s.length>0)return s[0].makeHandler(n);}}return null;},s.prototype.match=function(e){return this.matchMethod(e.method,e.url)||this.matchMethod("any",e.url);},t.exports=new s();},{"./helpers":1,"./route":5}],7:[function(e,t,n){"use strict";function r(e,t,n){n=n||{};var r=n.cache||o.cache,c=r.queryOptions;return i.debug("Strategy: cache first ["+e.url+"]",n),i.openCache(n).then(function(t){return t.match(e,c).then(function(t){var o=Date.now();return i.isResponseFresh(t,r.maxAgeSeconds,o)?t:i.fetchAndCache(e,n);});});}var o=e("../options"),i=e("../helpers");t.exports=r;},{"../helpers":1,"../options":4}],8:[function(e,t,n){"use strict";function r(e,t,n){n=n||{};var r=n.cache||o.cache,c=r.queryOptions;return i.debug("Strategy: cache only ["+e.url+"]",n),i.openCache(n).then(function(t){return t.match(e,c).then(function(e){var t=Date.now();if(i.isResponseFresh(e,r.maxAgeSeconds,t))return e;});});}var o=e("../options"),i=e("../helpers");t.exports=r;},{"../helpers":1,"../options":4}],9:[function(e,t,n){"use strict";function r(e,t,n){return o.debug("Strategy: fastest ["+e.url+"]",n),new Promise(function(r,c){var s=!1,a=[],u=function(e){a.push(e.toString()),s?c(new Error('Both cache and network failed: "'+a.join('", "')+'"')):s=!0;},f=function(e){e instanceof Response?r(e):u("No result returned");};o.fetchAndCache(e.clone(),n).then(f,u),i(e,t,n).then(f,u);});}var o=e("../helpers"),i=e("./cacheOnly");t.exports=r;},{"../helpers":1,"./cacheOnly":8}],10:[{"./cacheFirst":7,"./cacheOnly":8,"./fastest":9,"./networkFirst":11,"./networkOnly":12}],11:[function(e,t,n){"use strict";function r(e,t,n){n=n||{};var r=n.cache||o.cache,c=r.queryOptions,s=n.successResponses||o.successResponses,a=n.networkTimeoutSeconds||o.networkTimeoutSeconds;return i.debug("Strategy: network first ["+e.url+"]",n),i.openCache(n).then(function(t){var o,u,f=[];if(a){var h=new Promise(function(n){o=setTimeout(function(){t.match(e,c).then(function(e){var t=Date.now(),o=r.maxAgeSeconds;i.isResponseFresh(e,o,t)&&n(e);});},1e3*a);});f.push(h);}var p=i.fetchAndCache(e,n).then(function(e){if(o&&clearTimeout(o),s.test(e.status))return e;throw i.debug("Response was an HTTP error: "+e.statusText,n),u=e,new Error("Bad response");}).catch(function(r){return i.debug("Network or response error, fallback to cache ["+e.url+"]",n),t.match(e,c).then(function(e){if(e)return e;if(u)return u;throw r;});});return f.push(p),Promise.race(f);});}var o=e("../options"),i=e("../helpers");t.exports=r;},{"../helpers":1,"../options":4}],12:[function(e,t,n){"use strict";function r(e,t,n){return o.debug("Strategy: network only ["+e.url+"]",n),fetch(e);}var o=e("../helpers");t.exports=r;},{"../helpers":1}],13:[function(e,t,n){"use strict";var r=e("./options"),o=e("./router"),i=e("./helpers"),c=e("./strategies"),s=e("./listeners");i.debug("Service Worker Toolbox is loading"),self.addEventListener("install",s.installListener),self.addEventListener("activate",s.activateListener),self.addEventListener("fetch",s.fetchListener),t.exports={networkOnly:c.networkOnly,networkFirst:c.networkFirst,cacheOnly:c.cacheOnly,cacheFirst:c.cacheFirst,fastest:c.fastest,router:o,options:r,cache:i.cache,uncache:i.uncache,precache:i.precache};},{"./helpers":1,"./listeners":3,"./options":4,"./router":6,"./strategies":10}],14:[{}],15:[{isarray:14}],16:[function(e,t,n){!function(){var e=Cache.prototype.addAll,t=navigator.userAgent.match(/(Firefox|Chrome)\/(\d+\.)/);if(t)var n=t[1],r=parseInt(t[2]);e&&(!t||"Firefox"===n&&r>=46||"Chrome"===n&&r>=50)||(Cache.prototype.addAll=function(e){ar n=this;return t.prototype=Object.create(Error.prototype),Promise.resolve().then(.then(.then(;},Cache.prototype.add=;}();},{}]},{},[13])(13);});// *** End of sw-toolbox code. ***
// Runtime cache configuration, using the sw-toolbox library.
toolbox.options.debug=false;toolbox.options.successResponses=/^0|([123]\d\d)$/;toolbox.router.get(/^https:\/\/cdn[123]?\.unrealengine\.com\/(?!.*(?:\.webm|\.mp4|\.js|\.css)$).*$/,toolbox.cacheFirst,{});toolbox.router.get(/^https:\/\/.*cdn[123]?\.epicgames\.com\/(?!.*(?:\.webm|\.mp4|\.js|\.css)$).*$/,toolbox.cacheFirst,{});toolbox.router.get(/^https:\/\/static-assets-.*epicgames\.(com|net)\/.*\/static\/(?!.*(?:\.webm|\.mp4|\.js|\.css)$).*$/,toolbox.cacheFirst,{});