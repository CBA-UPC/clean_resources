(function(d,g){var l=Brid.event;d.$bp.GoogleAnalytics=Brid.Class.extend({init:function(a,b){this.player=a;if(a.config.inCms)return Brid.log("GoogleAnalytics.init : In CMS was true! Aborting.");b=this.config=Brid.Util.merge(this.config||{},b);a.config.Partner.urchin_fields=Brid.Util.merge(a.config.Partner.urchin_fields||{},{first_qt:!0,second_qt:!0,third_qt:!0,ga_start:!0,ga_play:!0,ga_pause:!0,ga_end:!0,ad_req:!0,ad_imp:!0,ga_social:!0},!0);Brid.log("player.config.urchin",a.config.Partner.urchin,
a.config.Partner.urchin_fields);/(UA|YT|MO)-\d+-\d+/i.test(a.config.Partner.urchin)&&(function(a,b,f,e,d,g,h){a.GoogleAnalyticsObject=d;a[d]=a[d]||function(){(a[d].q=a[d].q||[]).push(arguments)};a[d].l=1*new Date;g=b.createElement(f);h=b.getElementsByTagName(f)[0];g.async=1;g.src=e;h.parentNode.insertBefore(g,h)}(d,g,"script","https://www.google-analytics.com/analytics.js","ga"),ga("create",a.config.Partner.urchin,"auto","BridTracker"),/[&?]amp=1/.test(d.location.href)&&g.referrer&&ga("BridTracker.set",
"location",g.referrer),this.thirdSent=this.secondSent=this.firstSent=!1,this.label_type_title=a.config.type?"ad_unit_id:":"player_id:",a.add("ended",Brid.Util.$f(this,this.onEnded)),a.add("play",Brid.Util.$f(this,this.onPlay)),a.add("pause",Brid.Util.$f(this,this.onPause)),a.add("start",Brid.Util.$f(this,this.onStart)),a.add("socialshare",Brid.Util.$f(this,this.onSocial)),a.add("partnerAdRequest",Brid.Util.$f(this,this.onPartnerAdRequest)),a.add("partnerAdImpression",Brid.Util.$f(this,this.onPartnerAdImpression)),
a.add("adUnitImpression",Brid.Util.$f(this,this.onAdUnitImpression)),a.add("adUnitRequest",Brid.Util.$f(this,this.onAdUnitRequest)),a.add("ourAdRequest",Brid.Util.$f(this,this.onOurAdRequest)),a.add("ourAdImpression",Brid.Util.$f(this,this.onOurAdImpression)))},onSocialView:function(){var a=d.location.href,b=a.split("#"),c,k=b.length,f=this.player;if(1<k&&-1!==a.indexOf("brid.tv"))var e=b[1];else for(a=0;a<k;a++)if(-1!==b[a].indexOf("brid_")){e=b[a];break}if(e&&-1!==e.indexOf(f.id))-1!==e.indexOf("brid_fb")&&
(c="fb_view"),-1!==e.indexOf("brid_tw")&&(c="tw_view"),-1!==e.indexOf("brid_wa")&&(c="wa_view"),-1!==e.indexOf("brid_rd")&&(c="rd_view"),-1!==e.indexOf("brid_cp")&&(c="cp_view"),-1!==e.indexOf("brid_vb")&&(c="vb_view"),-1!==e.indexOf("brid_ma")&&(c="ma_view");else if(e)switch(e){case "fb":c="fb_view";break;case "tw":c="tw_view";break;case "rd":c="rd_view";break;case "cp":c="cp_view";break;case "wa":c="wa_view";break;case "vb":c="vb_view";break;case "ma":c="ma_view"}f.config.shared&&(c="em_view");
c&&f.config.Partner.urchin_fields.ga_social&&"0"!=f.config.Partner.urchin_fields.ga_social&&(ga("BridTracker.send","event","Brid-Video",c,(f.currentSource.title||"")+"_*"+(f.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video",c,this.label_type_title+f.config.id))},onEnded:function(){var a=this.player;a.getAdInProgress()||(a.config.Partner.urchin_fields.ga_end&&"0"!=a.config.Partner.urchin_fields.ga_end&&(ga("BridTracker.send","event","Brid-Video","End",(a.currentSource.title||
"")+"_*"+(a.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video","End",this.label_type_title+a.config.id)),a.remove("timeupdate",Brid.Util.$f(this,this.onTime)),this.thirdSent=this.secondSent=this.firstSent=!1)},onPlay:function(){var a=this.player;!a.getAdInProgress()&&a.config.Partner.urchin_fields.ga_play&&"0"!=a.config.Partner.urchin_fields.ga_play&&(ga("BridTracker.send","event","Brid-Video","Play",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0)),ga("BridTracker.send",
"event","Brid-Video","Play",this.label_type_title+a.config.id))},onPause:function(){var a=this.player;!a.getAdInProgress()&&a.config.Partner.urchin_fields.ga_pause&&"0"!=a.config.Partner.urchin_fields.ga_pause&&(ga("BridTracker.send","event","Brid-Video","Pause",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0)),ga("BridTracker.send","event","Brid-Video","Pause",this.label_type_title+a.config.id))},onStart:function(){var a=this.player;this.thirdSent=this.secondSent=this.firstSent=!1;a.currentSource.intro_video&&
a.videos[a.currentIndex+1]&&(a.videos[a.currentIndex+1].shouldTrack=!1);a.getAdInProgress()||0<a.currentIndex&&a.videos[a.currentIndex-1].intro_video&&!a.currentSource.shouldTrack?a.currentSource.shouldTrack=!0:(a.config.Partner.urchin_fields.ga_start&&"0"!=a.config.Partner.urchin_fields.ga_start&&(ga("BridTracker.send","event","Brid-Video","Start",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),{nonInteraction:a.config.autoplay?1:0}),ga("BridTracker.send","event","Brid-Video","Start",this.label_type_title+
a.config.id)),this.onSocialView(),a.remove("timeupdate",Brid.Util.$f(this,this.onTime)),a.add("timeupdate",Brid.Util.$f(this,this.onTime)))},onSocial:function(a){switch(a.data){case "facebook":var b="fb_click";break;case "twitter":b="tw_click";break;case "whatsapp":b="wa_click";break;case "reddit":b="rd_click";break;case "embed":b="em_click";break;case "link":b="cp_click";break;case "viber":b="vb_click";break;case "mail":b="ma_click"}this.player.config.Partner.urchin_fields.ga_social&&"0"!=this.player.config.Partner.urchin_fields.ga_social&&
(ga("BridTracker.send","event","Brid-Video",b,(this.player.currentSource.title||"")+"_*"+(this.player.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video",b,this.label_type_title+this.player.config.id))},onTime:function(){var a=this.player;if(!a.getAdInProgress()){var b=a.currentTime()/a.duration();.25<b&&!1===this.firstSent?(this.firstSent=!0,a.config.Partner.urchin_fields.first_qt&&"0"!=a.config.Partner.urchin_fields.first_qt&&(ga("BridTracker.send","event","Brid-Video",
"FirstQuartile",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video","FirstQuartile",this.label_type_title+a.config.id))):.5<b&&!1===this.secondSent?(this.secondSent=!0,a.config.Partner.urchin_fields.second_qt&&"0"!=a.config.Partner.urchin_fields.second_qt&&(ga("BridTracker.send","event","Brid-Video","SecondQuartile",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video",
"SecondQuartile",this.label_type_title+a.config.id))):.75<b&&!1===this.thirdSent&&(this.thirdSent=!0,a.config.Partner.urchin_fields.third_qt&&"0"!=a.config.Partner.urchin_fields.third_qt&&(ga("BridTracker.send","event","Brid-Video","ThirdQuartile",(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),{nonInteraction:1}),ga("BridTracker.send","event","Brid-Video","ThirdQuartile",this.label_type_title+a.config.id)))}},onOurAdRequest:function(){var a="Brid-Backfill-"+(this.player.showOnAd()?"AdUnit":
"Video");this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&ga("BridTracker.send","event",a,"AdRequest",this.label_type_title+this.player.config.id,{nonInteraction:1})},onOurAdImpression:function(){var a="Brid-Backfill-"+(this.player.showOnAd()?"AdUnit":"Video");this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&ga("BridTracker.send","event",a,"AdImpression",this.label_type_title+this.player.config.id,
{nonInteraction:1})},onPartnerAdRequest:function(){this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&ga("BridTracker.send","event","Brid-Video","AdRequest",this.label_type_title+this.player.config.id,{nonInteraction:1})},onPartnerAdImpression:function(){this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&ga("BridTracker.send","event","Brid-Video","AdImpression",this.label_type_title+this.player.config.id,
{nonInteraction:1})},onAdUnitRequest:function(){this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&ga("BridTracker.send","event","Brid-AdUnit","AdRequest",this.label_type_title+this.player.config.id,{nonInteraction:1})},onAdUnitImpression:function(){this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&ga("BridTracker.send","event","Brid-AdUnit","AdImpression",this.label_type_title+this.player.config.id,
{nonInteraction:1})},fireCustom:function(a,b,c,d){a||(a="Brid-Video");c||(c=this.label_type_title+this.player.config.id,ga("BridTracker.send","event",a,b,(this.player.currentSource.title||"")+"_*"+(this.player.currentSource.id||0),d,{nonInteraction:1}));ga("BridTracker.send","event",a,b,c,d,{nonInteraction:1})}});d.$bp.GoogleAnalyticsV4=Brid.Class.extend({init:function(a,b){this.player=a;if(a.config.inCms)return Brid.log("GoogleAnalyticsV4.init : In CMS was true! Aborting.");b=this.config=Brid.Util.merge(this.config||
{},b);a.config.Partner.urchin_fields=Brid.Util.merge(a.config.Partner.urchin_fields||{},{first_qt:!0,second_qt:!0,third_qt:!0,ga_start:!0,ga_play:!0,ga_pause:!0,ga_end:!0,ad_req:!0,ad_imp:!0,ga_social:!0},!0);Brid.log("GoogleAnalyticsV4.init : player.config.urchin",a.config.Partner.urchin,a.config.Partner.urchin_fields);if(!/(G)-[a-zA-Z\d]+/i.test(a.config.Partner.urchin))return Brid.log("GoogleAnalyticsV4.init : GA Measurement ID {"+a.config.Partner.urchin+"}, is not properly formated!");b="https://www.googletagmanager.com/gtag/js?id="+
a.config.Partner.urchin;g.querySelector('script[src="'+b+'"]')?Brid.log("GoogleAnalyticsV4.init","Config with measurement id {"+a.config.Partner.urchin+"} was found on the page!"):(Brid.log("GoogleAnalyticsV4.init : Config with measurement id {"+a.config.Partner.urchin+"} not found. Registering new config!"),Brid.Loader.scriptLoad({isStyle:!1,url:b}),d.dataLayer=d.dataLayer||[],d.gtag=d.gtag||function(){dataLayer.push(arguments)},gtag("js",new Date),b={send_page_view:!1},/[&?]amp=1/.test(d.location.href)&&
g.referrer&&(b.page_location=g.referrer),Brid.log("GoogleAnalyticsV4.init : GA Config : ",b),gtag("config",a.config.Partner.urchin,b));this.thirdSent=this.secondSent=this.firstSent=!1;this.label_type_title=a.config.type?"ad_unit_id:":"player_id:";a.add("ended",Brid.Util.$f(this,this.onEnded));a.add("play",Brid.Util.$f(this,this.onPlay));a.add("pause",Brid.Util.$f(this,this.onPause));a.add("start",Brid.Util.$f(this,this.onStart));a.add("socialshare",Brid.Util.$f(this,this.onSocial));a.add("partnerAdRequest",
Brid.Util.$f(this,this.onPartnerAdRequest));a.add("partnerAdImpression",Brid.Util.$f(this,this.onPartnerAdImpression));a.add("adUnitRequest",Brid.Util.$f(this,this.onAdUnitRequest));a.add("adUnitImpression",Brid.Util.$f(this,this.onAdUnitImpression));a.add("ourAdRequest",Brid.Util.$f(this,this.onOurAdRequest));a.add("ourAdImpression",Brid.Util.$f(this,this.onOurAdImpression))},triggerGTagEvent:function(a,b,c){c.send_to=this.player.config.Partner.urchin;Brid.log("GoogleAnalyticsV4.triggerGTagEvent : Arguments :",
a,b,c);if("function"!==typeof(Brid.Util.isAmp()||!Brid.Util.isTopWindowAccessible()?d:d.top).__tcfapi)return Brid.log("GoogleAnalyticsV4.triggerGTagEvent : __tcfapi not found. Event can be triggered"),this._triggerGTagEventRun(a,b,c);Brid.Util.checkConsent(this.player,function(d){Brid.log("GoogleAnalyticsV4.triggerGTagEvent : Consent response",d);if(!d.api)return Brid.log("GoogleAnalyticsV4.triggerGTagEvent : __tcfapi not found after a timeout. Event can be triggered."),this._triggerGTagEventRun(a,
b,c);if(!d.success)return Brid.log("GoogleAnalyticsV4.triggerGTagEvent : __tcfapi errored. Event triggering is stopped.");if(!d.tcData.gdprApplies)return Brid.log("GoogleAnalyticsV4.triggerGTagEvent : GDPR does not apply. Event can be triggered."),this._triggerGTagEventRun(a,b,c);Brid.Util.execFn(function(){return!0===d.tcData.purpose.consents[8]})?(Brid.log("GoogleAnalyticsV4.triggerGTagEvent : Consent with the purpose {8} has been given. Event can be triggered."),this._triggerGTagEventRun(a,b,c)):
Brid.log("GoogleAnalyticsV4.triggerGTagEvent : Consent with the purpose {8} was not given. Stop the event triggering.")}.bind(this))},_triggerGTagEventRun:function(a,b,c){for(var d=["Brid_Event_Category","Brid_Event_Label"],f=0;f<d.length;f++){var e=d[f];c[e]?100<c[e].length&&Brid.log("GoogleAnalyticsV4.triggerGTagEvent : [ERROR] "+e+" parameter value is over a 100 characters. Check limitations!"):Brid.log("GoogleAnalyticsV4.triggerGTagEvent : [ERROR] "+e+" parameter is missing!")}gtag(a,b,c)},onEnded:function(){var a=
this.player;a.getAdInProgress()||(a.config.Partner.urchin_fields.ga_end&&"0"!=a.config.Partner.urchin_fields.ga_end&&(this.triggerGTagEvent("event","End",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event","End",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id})),a.remove("timeupdate",Brid.Util.$f(this,this.onTime)),this.thirdSent=this.secondSent=this.firstSent=
!1)},onPlay:function(){var a=this.player;!a.getAdInProgress()&&a.config.Partner.urchin_fields.ga_play&&"0"!=a.config.Partner.urchin_fields.ga_play&&(this.triggerGTagEvent("event","Play",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0)}),this.triggerGTagEvent("event","Play",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id}))},onPause:function(){var a=this.player;!a.getAdInProgress()&&a.config.Partner.urchin_fields.ga_pause&&
"0"!=a.config.Partner.urchin_fields.ga_pause&&(this.triggerGTagEvent("event","Pause",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0)}),this.triggerGTagEvent("event","Pause",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id}))},onStart:function(){var a=this.player;this.thirdSent=this.secondSent=this.firstSent=!1;a.currentSource.intro_video&&a.videos[a.currentIndex+1]&&(a.videos[a.currentIndex+1].shouldTrack=
!1);a.getAdInProgress()||0<a.currentIndex&&a.videos[a.currentIndex-1].intro_video&&!a.currentSource.shouldTrack?a.currentSource.shouldTrack=!0:(a.config.Partner.urchin_fields.ga_start&&"0"!=a.config.Partner.urchin_fields.ga_start&&(this.triggerGTagEvent("event","Start",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event","Start",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+
a.config.id})),this.onSocialView(),a.remove("timeupdate",Brid.Util.$f(this,this.onTime)),a.add("timeupdate",Brid.Util.$f(this,this.onTime)))},onSocial:function(a){switch(a.data){case "facebook":var b="fb_click";break;case "twitter":b="tw_click";break;case "whatsapp":b="wa_click";break;case "reddit":b="rd_click";break;case "embed":b="em_click";break;case "link":b="cp_click";break;case "viber":b="vb_click";break;case "mail":b="ma_click"}this.player.config.Partner.urchin_fields.ga_social&&"0"!=this.player.config.Partner.urchin_fields.ga_social&&
(this.triggerGTagEvent("event",b,{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(this.player.currentSource.title||"")+"_*"+(this.player.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event",b,{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+this.player.config.id}))},onPartnerAdRequest:function(){this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&this.triggerGTagEvent("event","AdRequest",{Brid_Event_Category:"Brid_Videos",
Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onPartnerAdImpression:function(){this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&this.triggerGTagEvent("event","AdImpression",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onAdUnitRequest:function(){this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&
this.triggerGTagEvent("event","AdRequest",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onAdUnitImpression:function(){this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&this.triggerGTagEvent("event","AdImpression",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onOurAdRequest:function(){var a="Brid_Backfill_"+
(this.player.showOnAd()?"AdUnit":"Video");this.player.config.Partner.urchin_fields.ad_req&&"0"!=this.player.config.Partner.urchin_fields.ad_req&&this.triggerGTagEvent("event","AdRequest",{Brid_Event_Category:a,Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onOurAdImpression:function(){var a="Brid_Backfill_"+(this.player.showOnAd()?"AdUnit":"Video");this.player.config.Partner.urchin_fields.ad_imp&&"0"!=this.player.config.Partner.urchin_fields.ad_imp&&this.triggerGTagEvent("event",
"AdImpression",{Brid_Event_Category:a,Brid_Event_Label:this.label_type_title+this.player.config.id,non_interaction:!0})},onSocialView:function(){var a=d.location.href,b=a.split("#"),c,g=b.length,f=this.player;if(1<g&&-1!==a.indexOf("brid.tv"))var e=b[1];else for(a=0;a<g;a++)if(-1!==b[a].indexOf("brid_")){e=b[a];break}if(e&&-1!==e.indexOf(f.id))-1!==e.indexOf("brid_fb")&&(c="fb_view"),-1!==e.indexOf("brid_tw")&&(c="tw_view"),-1!==e.indexOf("brid_wa")&&(c="wa_view"),-1!==e.indexOf("brid_rd")&&(c="rd_view"),
-1!==e.indexOf("brid_cp")&&(c="cp_view"),-1!==e.indexOf("brid_vb")&&(c="vb_view"),-1!==e.indexOf("brid_ma")&&(c="ma_view");else if(e)switch(e){case "fb":c="fb_view";break;case "tw":c="tw_view";break;case "rd":c="rd_view";break;case "cp":c="cp_view";break;case "wa":c="wa_view";break;case "vb":c="vb_view";break;case "ma":c="ma_view"}f.config.shared&&(c="em_view");c&&f.config.Partner.urchin_fields.ga_social&&"0"!=f.config.Partner.urchin_fields.ga_social&&(this.triggerGTagEvent("event",c,{Brid_Event_Category:"Brid_Videos",
Brid_Event_Label:(f.currentSource.title||"")+"_*"+(f.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event",c,{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+f.config.id}))},onTime:function(){var a=this.player;if(!a.getAdInProgress()){var b=a.currentTime()/a.duration();.25<b&&!1===this.firstSent?(this.firstSent=!0,a.config.Partner.urchin_fields.first_qt&&"0"!=a.config.Partner.urchin_fields.first_qt&&(this.triggerGTagEvent("event","FirstQuartile",{Brid_Event_Category:"Brid_Videos",
Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event","FirstQuartile",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id}))):.5<b&&!1===this.secondSent?(this.secondSent=!0,a.config.Partner.urchin_fields.second_qt&&"0"!=a.config.Partner.urchin_fields.second_qt&&(this.triggerGTagEvent("event","SecondQuartile",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||
0),non_interaction:!0}),this.triggerGTagEvent("event","SecondQuartile",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id}))):.75<b&&!1===this.thirdSent&&(this.thirdSent=!0,a.config.Partner.urchin_fields.third_qt&&"0"!=a.config.Partner.urchin_fields.third_qt&&(this.triggerGTagEvent("event","ThirdQuartile",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:(a.currentSource.title||"")+"_*"+(a.currentSource.id||0),non_interaction:!0}),this.triggerGTagEvent("event",
"ThirdQuartile",{Brid_Event_Category:"Brid_Videos",Brid_Event_Label:this.label_type_title+a.config.id})))}}});d.$bp.plugin("bridgoogleanalytics",function(a){a=a||this;var b=a.config.Partner.urchin_use_ga4?"GoogleAnalyticsV4":"GoogleAnalytics";Brid.log("GoogleAnalytics.setup : Use class",b);if(a.isReady)a.addChild(new d.$bp[b](a,config));else{var c={};c[b]={};d.$bp.Util.merge(a.config.children,c)}});l.trigger(g,"bridpluginloaded")})(window,document);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ",Ja("mono_jiterp_gettype_ref")),Za("castv2",Ja("mono_jiterp_cast_v2")),Za("hasparent",Ja("mono_jiterp_has_parent_fast")),Za("imp_iface",Ja("mono_jiterp_implements_interface")),Za("imp_iface_s",Ja("mono_jiterp_implements_special_interface")),Za("box",Ja("mono_jiterp_box_ref")),Za("localloc",Ja("mono_jiterp_localloc")),["ckovr_i4","overflow_check_i4",Ja("mono_jiterp_overflow_check_i4")],["ckovr_u4","overflow_check_i4",Ja("mono_jiterp_overflow_check_u4")],Za("newobj_i",Ja("mono_jiterp_try_newobj_inlined")),Za("newstr",Ja("mono_jiterp_try_newstr")),Za("ld_del_ptr",Ja("mono_jiterp_ld_delegate_method_ptr")),Za("ldtsflda",Ja("mono_jiterp_ldtsflda")),Za("conv",Ja("mono_jiterp_conv")),Za("relop_fp",Ja("mono_jiterp_relop_fp")),Za("safepoint",Ja("mono_jiterp_do_safepoint")),Za("hashcode",Ja("mono_jiterp_get_hashcode")),Za("try_hash",Ja("mono_jiterp_try_get_hashcode")),Za("hascsize",Ja("mono_jiterp_object_has_component_size")),Za("hasflag",Ja("mono_jiterp_enum_hasflag")),Za("array_rank",Ja("mono_jiterp_get_array_rank")),["a_elesize","array_rank",Ja("mono_jiterp_get_array_element_size")],Za("stfld_o",Ja("mono_jiterp_set_object_field")),Za("transfer",Ja("mono_jiterp_trace_transfer")),Za("cmpxchg_i32",Ja("mono_jiterp_cas_i32")),Za("cmpxchg_i64",Ja("mono_jiterp_cas_i64")),Za("stelem_ref",Ja("mono_jiterp_stelem_ref")),Za("fma",Ja("fma")),Za("fmaf",Ja("fmaf"))],bi.length>0&&(xi.push(["trace_eip","trace_eip",Ni]),xi.push(["trace_args","trace_eip",Di]));const e=(e,t)=>{for(let n=0;n<e.length;n++){const r=e[n];xi.push([r,t,Ja(r)])}};return e(Ri,"mathop_f_f"),e(Li,"mathop_ff_f"),e(Ai,"mathop_d_d"),e(ji,"mathop_dd_d"),xi}function Ni(e,t){const n=wi[e];if(!n)throw new Error(`Unrecognized instrumented trace id ${e}`);n.eip=t,fi=n}function Di(e,t){if(!fi)throw new Error("No trace active");fi.operand1=e>>>0,fi.operand2=t>>>0}function Bi(e,t,n,r){if("number"==typeof r)St.mono_jiterp_adjust_abort_count(r,1),r=Sa(r);else{let e=ki[r];"number"!=typeof e?e=1:e++,ki[r]=e}vi[e].abortReason=r}function Oi(e,t){if(!l.runtimeReady)return;if(mi&&void 0===e||(mi=os()),!mi.enableStats&&void 0!==e)return;const n=$a.backBranchesEmitted/($a.backBranchesEmitted+$a.backBranchesNotEmitted)*100,r=St.mono_jiterp_get_rejected_trace_count(),o=mi.eliminateNullChecks?$a.nullChecksEliminated.toString():"off",a=mi.zeroPageOptimization?$a.nullChecksFused.toString()+(Qa()?"":" (disabled)"):"off",s=mi.enableBackwardBranches?`emitted: ${$a.backBranchesEmitted}, failed: ${$a.backBranchesNotEmitted} (${n.toFixed(1)}%)`:": off",i=$a.jitCallsCompiled?mi.directJitCalls?`direct jit calls: ${$a.directJitCallsCompiled} (${($a.directJitCallsCompiled/$a.jitCallsCompiled*100).toFixed(1)}%)`:"direct jit calls: off":"";if(ut(`// jitted ${$a.bytesGenerated} bytes; ${$a.tracesCompiled} traces (${($a.tracesCompiled/$a.traceCandidates*100).toFixed(1)}%) (${r} rejected); ${$a.jitCallsCompiled} jit_calls; ${$a.entryWrappersCompiled} interp_entries`),ut(`// cknulls eliminated: ${o}, fused: ${a}; back-branches ${s}; ${i}`),ut(`// time: ${0|Ca.generation}ms generating, ${0|Ca.compilation}ms compiling wasm.`),!t){if(mi.countBailouts){const e=Object.values(vi);e.sort(((e,t)=>(t.bailoutCount||0)-(e.bailoutCount||0)));for(let e=0;e<Ua.length;e++){const t=St.mono_jiterp_get_trace_bailout_count(e);t&&ut(`// traces bailed out ${t} time(s) due to ${Ua[e]}`)}for(let t=0,n=0;t<e.length&&n<_i;t++){const r=e[t];if(r.bailoutCount){n++,ut(`${r.name}: ${r.bailoutCount} bailout(s)`);for(const e in r.bailoutCounts)ut(`  ${Ua[e]} x${r.bailoutCounts[e]}`)}}}if(mi.estimateHeat){const e={},t=Object.values(vi);for(let n=0;n<t.length;n++){const r=t[n];r.abortReason&&"end-of-body"!==r.abortReason&&(e[r.abortReason]?e[r.abortReason]+=r.hitCount:e[r.abortReason]=r.hitCount)}t.sort(((e,t)=>t.hitCount-e.hitCount)),ut("// hottest failed traces:");for(let e=0,n=0;e<t.length&&n<_i;e++)if(t[e].name&&!(t[e].fnPtr||t[e].name.indexOf("Xunit.")>=0)){if(t[e].abortReason){if(t[e].abortReason.startsWith("mono_icall_")||t[e].abortReason.startsWith("ret."))continue;switch(t[e].abortReason){case"trace-too-small":case"trace-too-big":case"call":case"callvirt.fast":case"calli.nat.fast":case"calli.nat":case"call.delegate":case"newobj":case"newobj_vt":case"newobj_slow":case"switch":case"rethrow":case"end-of-body":case"ret":case"intrins_marvin_block":case"intrins_ascii_chars_to_uppercase":continue}}n++,ut(`${t[e].name} @${t[e].ip} (${t[e].hitCount} hits) ${t[e].abortReason}`)}const n=[];for(const t in e)n.push([t,e[t]]);n.sort(((e,t)=>t[1]-e[1])),ut("// heat:");for(let e=0;e<n.length;e++)ut(`// ${n[e][0]}: ${n[e][1]}`)}else{for(let e=0;e<673;e++){const t=Sa(e),n=St.mono_jiterp_adjust_abort_count(e,0);n>0?ki[t]=n:delete ki[t]}const e=Object.keys(ki);e.sort(((e,t)=>ki[t]-ki[e]));for(let t=0;t<e.length;t++)ut(`// ${e[t]}: ${ki[e[t]]} abort(s)`)}for(const e in $a.simdFallback)ut(`// simd ${e}: ${$a.simdFallback[e]} fallback insn(s)`);"function"==typeof globalThis.setTimeout&&void 0!==e&&setTimeout((()=>Oi(e)),15e3)}}let Mi=!1;function Fi(){if(Mi)throw new Error("GC is already locked");Mi=!0}function Pi(){if(!Mi)throw new Error("GC is not locked");Mi=!1}async function zi(e){const t=u.config.resources.lazyAssembly;if(!t)throw new Error("No assemblies have been marked as lazy-loadable. Use the 'BlazorWebAssemblyLazyLoad' item group in your project file to enable lazy loading an assembly.");if(!t[e])throw new Error(`${e} must be marked with 'BlazorWebAssemblyLazyLoad' item group in your project file to allow lazy-loading.`);const n={name:e,hash:t[e],behavior:"assembly"};if(u.loadedAssemblies.some((t=>t.includes(e))))return!1;const r=function(e,t){const n=e.lastIndexOf(".");if(n<0)throw new Error(`No extension to replace in '${e}'`);return e.substring(0,n)+".pdb"}(n.name),o=u.hasDebuggingEnabled(u.config)&&Object.prototype.hasOwnProperty.call(t,r),a=u.retrieve_asset_download(n);let s=null,i=null;if(o){const e=t[r]?u.retrieve_asset_download({name:r,hash:t[r],behavior:"pdb"}):Promise.resolve(null),[n,o]=await Promise.all([a,e]);s=new Uint8Array(n),i=o?new Uint8Array(o):null}else{const e=await a;s=new Uint8Array(e),i=null}return l.javaScriptExports.load_lazy_assembly(s,i),!0}async function Vi(e){const t=u.config.resources.satelliteResources;t&&await Promise.all(e.filter((e=>Object.prototype.hasOwnProperty.call(t,e))).map((e=>{const n=[];for(const r in t[e]){const o={name:r,hash:t[e][r],behavior:"resource",culture:e};n.push(u.retrieve_asset_download(o))}return n})).reduce(((e,t)=>e.concat(t)),new Array).map((async e=>{const t=await e;l.javaScriptExports.load_satellite_assembly(new Uint8Array(t))})))}const Wi=64;let Hi,Gi,qi,Ji=0;const Yi=[],Xi={};function Zi(){return Gi||(Gi=[Za("interp_entry_prologue",Ja("mono_jiterp_interp_entry_prologue")),Za("interp_entry",Ja("mono_jiterp_interp_entry")),Za("unbox",Ja("mono_jiterp_object_unbox")),Za("stackval_from_data",Ja("mono_jiterp_stackval_from_data"))],Gi)}let Ki;function Qi(){if(Yi.length<=0)return;const e=4*Yi.length+1;let t=Hi;if(t?t.clear(e):(Hi=t=new Ta(e),t.defineType("unbox",{pMonoObject:127},127,!0),t.defineType("interp_entry_prologue",{pData:127,this_arg:127},127,!0),t.defineType("interp_entry",{pData:127,res:127},64,!0),t.defineType("stackval_from_data",{type:127,result:127,value:127},64,!0)),t.options.wasmBytesLimit<=$a.bytesGenerated)return void(Yi.length=0);const n=Na();let r=0,o=!0,a=!1;try{t.appendU32(1836278016),t.appendU32(1);for(let e=0;e<Yi.length;e++){const n=Yi[e],r={};n.hasThisReference&&(r.this_arg=127),n.hasReturnValue&&(r.res=127);for(let e=0;e<n.argumentCount;e++)r[`arg${e}`]=127;r.rmethod=127,t.defineType(n.traceName,r,64,!1)}t.generateTypeSection();const e=Zi();t.compressImportNames=!0;for(let n=0;n<e.length;n++)e[n]||w(!1,`trace #${n} missing`),t.defineImportedFunction("i",e[n][0],e[n][1],!0,e[n][2]);for(let n=0;n<e.length;n++)t.markImportAsUsed(e[n][0]);t._generateImportSection(!1),t.beginSection(3),t.appendULeb(Yi.length);for(let e=0;e<Yi.length;e++){const n=Yi[e];t.functionTypes[n.traceName]||w(!1,"func type missing"),t.appendULeb(t.functionTypes[n.traceName][0])}t.beginSection(7),t.appendULeb(Yi.length);for(let e=0;e<Yi.length;e++){const n=Yi[e];t.appendName(n.traceName),t.appendU8(0),t.appendULeb(t.importedFunctionCount+e)}t.beginSection(10),t.appendULeb(Yi.length);for(let e=0;e<Yi.length;e++){const n=Yi[e];t.beginFunction(n.traceName,{sp_args:127,need_unbox:127,scratchBuffer:127}),tc(t,n),t.appendU8(11),t.endFunction(!0)}t.endSection(),r=Na();const n=t.getArrayView();$a.bytesGenerated+=n.length;const a=new WebAssembly.Module(n),s=t.getWasmImports(),i=new WebAssembly.Instance(a,s);for(let e=0;e<Yi.length;e++){const t=Yi[e],n=i.exports[t.traceName];qi.set(t.result,n),o=!1,$a.entryWrappersCompiled++}}catch(e){a=!0,o=!1,dt(`interp_entry code generation failed: ${e}`),Ha()}finally{const e=Na();if(r?(Ca.generation+=r-n,Ca.compilation+=e-r):Ca.generation+=e-n,a){ut(`// ${Yi.length} trampolines generated, blob follows //`);let e="",n=0;try{t.inSection&&t.endSection()}catch(e){}const r=t.getArrayView();for(let t=0;t<r.length;t++){const o=r[t];o<16&&(e+="0"),e+=o.toString(16),e+=" ",e.length%10==0&&(ut(`${n}\t${e}`),e="",n=t+1)}ut(`${n}\t${e}`),ut("// end blob //")}else o&&!a&&dt("failed to generate trampoline for unknown reason");Yi.length=0}}function ec(e,t,n,r,o){const a=St.mono_jiterp_type_get_raw_value_size(n),s=St.mono_jiterp_get_arg_offset(t,0,o);switch(a){case 256:e.local("sp_args"),e.local(r),e.appendU8(54),e.appendMemarg(s,2);break;case-1:case-2:case 1:case 2:case 4:switch(e.local("sp_args"),e.local(r),a){case-1:e.appendU8(45),e.appendMemarg(0,0);break;case 1:e.appendU8(44),e.appendMemarg(0,0);break;case-2:e.appendU8(47),e.appendMemarg(0,0);break;case 2:e.appendU8(46),e.appendMemarg(0,0);break;case 4:e.appendU8(40),e.appendMemarg(0,2)}e.appendU8(54),e.appendMemarg(s,2);break;default:e.ptr_const(n),e.local("sp_args"),e.i32_const(s),e.appendU8(106),e.local(r),e.callImport("stackval_from_data")}}function tc(e,n){const r=t._malloc(Wi);P(r,Wi),Z(r+qa(13),n.paramTypes.length+(n.hasThisReference?1:0)),n.hasThisReference&&(e.block(),e.local("rmethod"),e.i32_const(1),e.appendU8(113),e.appendU8(69),e.appendU8(13),e.appendULeb(0),e.local("this_arg"),e.callImport("unbox"),e.local("this_arg",33),e.endBlock()),e.ptr_const(r),e.local("scratchBuffer",34),e.local("rmethod"),e.i32_const(-2),e.appendU8(113),e.appendU8(54),e.appendMemarg(qa(6),0),e.local("scratchBuffer"),n.hasThisReference?e.local("this_arg"):e.i32_const(0),e.callImport("interp_entry_prologue"),e.local("sp_args",33),n.hasThisReference&&ec(e,n.imethod,0,"this_arg",0);for(let t=0;t<n.paramTypes.length;t++){const r=n.paramTypes[t];ec(e,n.imethod,r,`arg${t}`,t+(n.hasThisReference?1:0))}return e.local("scratchBuffer"),n.hasReturnValue?e.local("res"):e.i32_const(0),e.callImport("interp_entry"),e.appendU8(15),!0}const nc=16,rc=0;let oc,ac,sc,ic=0;const cc=[],lc={},uc=[];class pc{constructor(e,t,n,r,o){this.queue=[],r||w(!1,"Expected nonzero arg_offsets pointer"),this.method=e,this.rmethod=t,this.catchExceptions=o,this.cinfo=n,this.addr=ue(n+0),this.wrapper=ue(n+8),this.signature=ue(n+12),this.noWrapper=0!==ae(n+28),this.hasReturnValue=-1!==le(n+24),this.returnType=St.mono_jiterp_get_signature_return_type(this.signature),this.paramCount=St.mono_jiterp_get_signature_param_count(this.signature),this.hasThisReference=0!==St.mono_jiterp_get_signature_has_this(this.signature);const a=St.mono_jiterp_get_signature_params(this.signature);this.paramTypes=new Array(this.paramCount);for(let e=0;e<this.paramCount;e++)this.paramTypes[e]=ue(a+4*e);const s=this.paramCount+(this.hasThisReference?1:0);this.argOffsets=new Array(this.paramCount);for(let e=0;e<s;e++)this.argOffsets[e]=ue(r+4*e);this.target=this.noWrapper?this.addr:this.wrapper,this.result=0,this.wasmNativeReturnType=this.returnType&&this.hasReturnValue?hc[St.mono_jiterp_type_to_stind(this.returnType)]:64,this.wasmNativeSignature=this.paramTypes.map((e=>hc[St.mono_jiterp_type_to_ldind(e)])),this.enableDirect=os().directJitCalls&&!this.noWrapper&&this.wasmNativeReturnType&&(0===this.wasmNativeSignature.length||this.wasmNativeSignature.every((e=>e))),this.enableDirect&&(this.target=this.addr);let i=this.target.toString(16);const c=ic++;this.name=`${this.enableDirect?"jcp":"jcw"}_${i}_${c.toString(16)}`}}function dc(e){let t=cc[e];return t||(e>=cc.length&&(cc.length=e+1),ac||(ac=Ma()),cc[e]=t=ac.get(e)),t}let _c;function fc(){if(void 0!==sc)return sc;try{_c=function(){const e=new Ta(0);e.defineType("jit_call_cb",{cb_data:127},64,!0),e.defineType("do_jit_call",{unused:127,cb_data:127,thrown:127},64,!0),e.defineImportedFunction("i","jit_call_cb","jit_call_cb",!0),e.defineFunction({type:"do_jit_call",name:"do_jit_call_indirect",export:!0,locals:{}},(()=>{e.block(64,6),e.local("cb_data"),e.callImport("jit_call_cb"),e.appendU8(25),e.local("thrown"),e.i32_const(1),e.appendU8(54),e.appendMemarg(0,0),e.endBlock(),e.appendU8(11)})),e.appendU32(1836278016),e.appendU32(1),e.generateTypeSection(),e.emitImportsAndFunctions(!1);const t=e.getArrayView();return new WebAssembly.Module(t)}(),sc=!0}catch(e){ut("Disabling WASM EH support due to JIT failure",e),sc=!1}return sc}function mc(){if(0===uc.length)return;let e=oc;if(e?e.clear(0):(oc=e=new Ta(0),e.defineType("trampoline",{ret_sp:127,sp:127,ftndesc:127,thrown:127},64,!0)),e.options.wasmBytesLimit<=$a.bytesGenerated)return void(uc.length=0);e.options.enableWasmEh&&(fc()||(rs({enableWasmEh:!1}),e.options.enableWasmEh=!1));const t=Na();let n=0,r=!0,o=!1;const a=[];try{ac||(ac=Ma()),e.appendU32(1836278016),e.appendU32(1);for(let t=0;t<uc.length;t++){const n=uc[t],r={};if(n.enableDirect){n.hasThisReference&&(r.this=127);for(let e=0;e<n.wasmNativeSignature.length;e++)r[`arg${e}`]=n.wasmNativeSignature[e];r.rgctx=127}else{const e=(n.hasThisReference?1:0)+(n.hasReturnValue?1:0)+n.paramCount;for(let t=0;t<e;t++)r[`arg${t}`]=127;r.ftndesc=127}e.defineType(n.name,r,n.enableDirect?n.wasmNativeReturnType:64,!1);const o=dc(n.target);"function"!=typeof o&&w(!1,`expected call target to be function but was ${o}`),a.push([n.name,n.name,o])}e.generateTypeSection(),e.compressImportNames=!0;for(let t=0;t<a.length;t++)e.defineImportedFunction("i",a[t][0],a[t][1],!1,a[t][2]);for(let t=0;t<a.length;t++)e.markImportAsUsed(a[t][0]);e._generateImportSection(!1),e.beginSection(3),e.appendULeb(uc.length),e.functionTypes.trampoline||w(!1,"func type missing");for(let t=0;t<uc.length;t++)e.appendULeb(e.functionTypes.trampoline[0]);e.beginSection(7),e.appendULeb(uc.length);for(let t=0;t<uc.length;t++){const n=uc[t];e.appendName(n.name),e.appendU8(0),e.appendULeb(e.importedFunctionCount+t)}e.beginSection(10),e.appendULeb(uc.length);for(let t=0;t<uc.length;t++){const n=uc[t];if(e.beginFunction("trampoline",{old_sp:127}),!wc(e,n))throw new Error(`Failed to generate ${n.name}`);e.appendU8(11),e.endFunction(!0)}e.endSection(),n=Na();const t=e.getArrayView();$a.bytesGenerated+=t.length;const o=new WebAssembly.Module(t),s=e.getWasmImports(),i=new WebAssembly.Instance(o,s);for(let e=0;e<uc.length;e++){const t=uc[e],n=Fa(i.exports[t.name]);if(!n)throw new Error("add_function_pointer returned a 0 index");t.result=n,St.mono_jiterp_register_jit_call_thunk(t.cinfo,n);for(let e=0;e<t.queue.length;e++)St.mono_jiterp_register_jit_call_thunk(t.queue[e],n);t.enableDirect&&$a.directJitCallsCompiled++,$a.jitCallsCompiled++,t.queue.length=0,r=!1}}catch(e){o=!0,r=!1,dt(`jit_call code generation failed: ${e}`),Ha()}finally{const a=Na();if(n?(Ca.generation+=n-t,Ca.compilation+=a-n):Ca.generation+=a-t,o||r)for(let e=0;e<uc.length;e++)uc[e].result=-1;if(o){ut(`// ${uc.length} jit call wrappers generated, blob follows //`);for(let e=0;e<uc.length;e++)ut(`// #${e} === ${uc[e].name} hasThis=${uc[e].hasThisReference} hasRet=${uc[e].hasReturnValue} wasmArgTypes=${uc[e].wasmNativeSignature}`);let t="",n=0;try{e.inSection&&e.endSection()}catch(e){}const r=e.getArrayView();for(let e=0;e<r.length;e++){const o=r[e];o<16&&(t+="0"),t+=o.toString(16),t+=" ",t.length%10==0&&(ut(`${n}\t${t}`),t="",n=e+1)}ut(`${n}\t${t}`),ut("// end blob //")}else r&&!o&&dt("failed to generate trampoline for unknown reason");uc.length=0}}const hc={65535:127,70:127,71:127,72:127,73:127,74:127,75:127,76:126,77:127,78:125,79:124,80:127,81:127,82:127,83:127,84:127,85:126,86:125,87:124,223:127},bc={70:44,71:45,72:46,73:47,74:40,75:40,76:41,77:40,78:42,79:43,80:40,81:54,82:58,83:59,84:54,85:55,86:56,87:57,223:54};function gc(e,t,n){e.local("sp"),e.appendU8(n),e.appendMemarg(t,0)}function yc(e,t){e.local("sp"),e.i32_const(t),e.appendU8(106)}function wc(e,t){let n=0;e.options.enableWasmEh&&e.block(64,6),t.hasReturnValue&&t.enableDirect&&e.local("ret_sp"),t.hasThisReference&&(gc(e,t.argOffsets[0],40),n++),t.hasReturnValue&&!t.enableDirect&&e.local("ret_sp");for(let r=0;r<t.paramCount;r++){const o=t.argOffsets[n+r];if(ae(ue(t.cinfo+nc)+r)==rc)gc(e,o,40);else if(t.enableDirect){const n=St.mono_jiterp_type_to_ldind(t.paramTypes[r]);if(n||w(!1,`No load opcode for ${t.paramTypes[r]}`),65535===n)yc(e,o);else{const a=bc[n];if(!a)return dt(`No wasm load op for arg #${r} type ${t.paramTypes[r]} cil opcode ${n}`),!1;gc(e,o,a)}}else yc(e,o)}if(e.local("ftndesc"),(t.enableDirect||t.noWrapper)&&(e.appendU8(40),e.appendMemarg(4,0)),e.callImport(t.name),t.hasReturnValue&&t.enableDirect){const n=St.mono_jiterp_type_to_stind(t.returnType),r=bc[n];if(!r)return dt(`No wasm store op for return type ${t.returnType} cil opcode ${n}`),!1;e.appendU8(r),e.appendMemarg(0,0)}return e.options.enableWasmEh&&(e.appendU8(25),e.local("thrown"),e.i32_const(1),e.appendU8(54),e.appendMemarg(0,2),e.endBlock()),e.appendU8(15),!0}var Sc,kc;!function(e){e[e.Sending=0]="Sending",e[e.Closed=1]="Closed",e[e.Error=2]="Error"}(Sc||(Sc={})),function(e){e[e.Idle=0]="Idle",e[e.PartialCommand=1]="PartialCommand",e[e.Error=2]="Error"}(kc||(kc={}));function vc(e,t){return"\ud800"<=e[t]&&e[t]<="\udbff"&&t+1<e.length&&"\udc00"<=e[t+1]&&e[t+1]<="\udfff"}function Ec(e,t,n,r){H(e,t+2*r,n.charCodeAt(0)),H(e,t+2*(r+1),n.charCodeAt(1))}function Uc(e,t,n,r){switch(r){case 0:return n&&"ja"===n.split("-")[0]?-2:e.localeCompare(t,n);case 8:return n&&"ja"!==n.split("-")[0]?-2:e.localeCompare(t,n);case 1:return e=e.toLocaleLowerCase(n),t=t.toLocaleLowerCase(n),e.localeCompare(t,n);case 4:case 12:return e.localeCompare(t,n,{ignorePunctuation:!0});case 5:return e=e.toLocaleLowerCase(n),t=t.toLocaleLowerCase(n),e.localeCompare(t,n,{ignorePunctuation:!0});case 9:return e.localeCompare(t,n,{sensitivity:"accent"});case 10:return e.localeCompare(t,n,{sensitivity:"case"});case 11:return e.localeCompare(t,n,{sensitivity:"base"});case 13:return e.localeCompare(t,n,{sensitivity:"accent",ignorePunctuation:!0});case 14:return e.localeCompare(t,n,{sensitivity:"case",ignorePunctuation:!0});case 15:return e.localeCompare(t,n,{sensitivity:"base",ignorePunctuation:!0});default:throw new Error(`Invalid comparison option. Option=${r}`)}}function Ic(e,t){return Tc(et(e,e+2*t))}function Tc(e){return e.normalize().replace(/[\u200B-\u200D\uFEFF\0]/g,"")}const xc="||";function Ac(e){if(e)try{(e=e.toLocaleLowerCase()).includes("zh")&&(e=e.replace("chs","HANS").replace("cht","HANT"));const t=Intl.getCanonicalLocales(e.replace("_","-"));return t.length>0?t[0]:void 0}catch(t){throw new Error(`Get culture info failed for culture = ${e} with error: ${t}`)}}const jc="MMMM",Rc="yyyy",Lc="d";function Cc(e,t,n,r){let o=n;const a=t.indexOf(n);if(-1==a||-1!=a&&t.length>a+n.length&&" "!=t[a+n.length]&&","!=t[a+n.length]&&"،"!=t[a+n.length]){const a=r.format(e).toLowerCase();o=t.split(/,| /).filter((e=>!a.split(/,| /).includes(e)&&e[0]==n[0]))[0]}return o}async function $c(e,t){try{const n=await Nc(e,t);return u.mono_exit(n),n}catch(e){try{u.mono_exit(1,e)}catch(e){}return e&&"number"==typeof e.status?e.status:1}}async function Nc(e,n){!function(e,n){const r=n.length+1,o=t._malloc(4*r);let a=0;t.setValue(o+4*a,St.mono_wasm_strdup(e),"i32"),a+=1;for(let e=0;e<n.length;++e)t.setValue(o+4*a,St.mono_wasm_strdup(n[e]),"i32"),a+=1;St.mono_wasm_set_main_args(r,o)}(e,n),-1==l.waitForDebugger&&(ut("waiting for debugger..."),await new Promise((e=>{const t=setInterval((()=>{1==l.waitForDebugger&&(clearInterval(t),e())}),100)})));const r=Dc(e);return l.javaScriptExports.call_entry_point(r,n)}function Dc(e){u.assert_runtime_running(),fr();const t=wr(e);if(!t)throw new Error("Could not find assembly: "+e);let n=0;1==l.waitForDebugger&&(n=1);const r=St.mono_wasm_assembly_get_entry_point(t,n);if(!r)throw new Error("Could not find entry point for assembly: "+e);return r}let Bc,Oc;const Mc={},Fc=Symbol.for("wasm type");function Pc(e){return"undefined"!=typeof SharedArrayBuffer?e.buffer instanceof ArrayBuffer||e.buffer instanceof SharedArrayBuffer:e.buffer instanceof ArrayBuffer}function zc(e,t,n){switch(!0){case null===t:case void 0===t:return void n.clear();case"symbol"==typeof t:case"string"==typeof t:return void sl._create_uri_ref(t,n.address);default:return void Hc(e,t,n)}}function Vc(e){ol();const t=Be();try{return Wc(e,t,!1),t.value}finally{t.release()}}function Wc(e,t,n){if(ol(),j(t))throw new Error("Expected (value, WasmRoot, boolean)");switch(!0){case null===e:case void 0===e:return void t.clear();case"number"==typeof e:{let n;return(0|e)===e?(X(Mc._box_buffer,e),n=Mc._class_int32):e>>>0===e?(G(Mc._box_buffer,e),n=Mc._class_uint32):(re(Mc._box_buffer,e),n=Mc._class_double),void kt.mono_wasm_box_primitive_ref(n,Mc._box_buffer,8,t.address)}case"string"==typeof e:return void ot(e,t);case"symbol"==typeof e:return void at(e,t);case"boolean"==typeof e:return z(Mc._box_buffer,e),void kt.mono_wasm_box_primitive_ref(Mc._class_boolean,Mc._box_buffer,4,t.address);case!0===Hr(e):return void function(e,t){if(!e)return t.clear(),null;const n=Dr(e),r=sl._create_tcs(),o={tcs_gc_handle:r};Or(o,r),e.then((e=>{sl._set_tcs_result_ref(r,e)}),(e=>{sl._set_tcs_failure(r,e?e.toString():"")})).finally((()=>{Br(n),Mr(o,r)})),sl._get_tcs_task_ref(r,t.address)}(e,t);case"Date"===e.constructor.name:return void sl._create_date_time_ref(e.getTime(),t.address);default:return void Hc(n,e,t)}}function Hc(e,t,n){if(n.clear(),null!=t)if(void 0===t[Lr]){if(t[Cr]&&(function(e,t,n){e!==T&&e!==I?sl._get_cs_owned_object_by_js_handle_ref(e,t?1:0,n):X(n,0)}(t[Cr],e,n.address),n.value||delete t[Cr]),!n.value){const r=t[Fc],o=void 0===r?0:r,a=Dr(t);sl._create_cs_owned_proxy_ref(a,o,e?1:0,n.address)}}else bl(Fr(t),n.address)}function Gc(e,n){if(!Pc(e)||!e.BYTES_PER_ELEMENT)throw new Error("Object '"+e+"' is not a typed array");{const r=e[Fc],o=function(e){ol();const n=e.length*e.BYTES_PER_ELEMENT,r=t._malloc(n),o=Ee(),a=new Uint8Array(o.buffer,r,n);return a.set(new Uint8Array(e.buffer,e.byteOffset,n)),a}(e);kt.mono_wasm_typed_array_new_ref(o.byteOffset,e.length,e.BYTES_PER_ELEMENT,r,n.address),t._free(o.byteOffset)}}function qc(e){const t=Be();try{return Gc(e,t),t.value}finally{t.release()}}function Jc(e){if("number"!=typeof e)throw new Error(`Expected numeric value for enum argument, got '${e}'`);return 0|e}const Yc=/[^A-Za-z0-9_$]/g,Xc=new Map,Zc=new Map,Kc=new Map;function Qc(e,t,n,r){let o=null,a=null,s=null;if(r){s=Object.keys(r),a=new Array(s.length);for(let e=0,t=s.length;e<t;e++)a[e]=r[s[e]]}const i=function(e,t,n,r){let o="",a="";e?(o="//# sourceURL=https://dotnet.generated.invalid/"+e+"\r\n",a=e):a="unnamed";let s="function "+a+"("+t.join(", ")+") {\r\n"+n+"\r\n};\r\n";s=o+'"use strict";\r\n'+s.replace(/\r(\n?)/g,"\r\n    ")+`    return ${a};\r\n`;let i=null,c=null;return c=r?r.concat([s]):[s],i=Function.apply(Function,c),i}(e,t,n,s);return o=i.apply(null,a),o}function el(e,n,r,o){if(ol(),"string"!=typeof n)throw new Error("args_marshal argument invalid, expected string");const a=`managed_${e}_${n}`;let s=Kc.get(a);if(s)return s;o||(o=a);let i=null;"string"==typeof n&&(i=function(e){const n=function(e){let t=Zc.get(e);return t||(t=function(e){const t=[];let n=0,r=!1,o=!1,a=-1,s=!1;for(let i=0;i<e.length;++i){const c=e[i];if(i===e.length-1){if("!"===c){r=!0;continue}"m"===c&&(o=!0,a=e.length-1)}else if("!"===c)throw new Error("! must be at the end of the signature");const l=Xc.get(c);if(!l)throw new Error("Unknown parameter type "+c);const u=Object.create(l.steps[0]);u.size=l.size,l.needs_root&&(s=!0),u.needs_root=l.needs_root,u.key=c,t.push(u),n+=l.size}return{steps:t,size:n,args_marshal:e,is_result_definitely_unmarshaled:r,is_result_possibly_unmarshaled:o,result_unmarshaled_if_argc:a,needs_root_buffer:s}}(e),Zc.set(e,t)),t}(e);if("string"!=typeof n.args_marshal)throw new Error("Corrupt converter for '"+e+"'");if(n.compiled_function&&n.compiled_variadic_function)return n;const r=e.replace("!","_result_unmarshaled");n.name=r;let o=[],a=["method"];const s={Module:t,setI32:Z,setU32:q,setF32:ne,setF64:re,setU52:ee,setI52:Q,setB32:z,setI32_unchecked:X,setU32_unchecked:G,scratchValueRoot:n.scratchValueRoot,stackAlloc:t.stackAlloc,_zero_region:P};let i=0;const c=8*((4*e.length+7)/8|0),l=n.size+4*e.length+16;o.push("if (!method) throw new Error('no method provided');",`const buffer = stackAlloc(${l});`,`_zero_region(buffer, ${l});`,`const indirectStart = buffer + ${c};`,"");for(let e=0;e<n.steps.length;e++){const r=n.steps[e],c="step"+e,l="value"+e,u="arg"+e,p=`(indirectStart + ${i})`;if(a.push(u),r.convert_root){if(r.indirect&&w(!1,"converter step cannot both be rooted and indirect"),!n.scratchValueRoot){const e=t.stackSave();n.scratchValueRoot=De(e),s.scratchValueRoot=n.scratchValueRoot}s[c]=r.convert_root,o.push(`scratchValueRoot._set_address(${p});`),o.push(`${c}(${u}, scratchValueRoot);`),r.byref?o.push(`let ${l} = ${p};`):o.push(`let ${l} = scratchValueRoot.value;`)}else r.convert?(s[c]=r.convert,o.push(`let ${l} = ${c}(${u}, method, ${e});`)):o.push(`let ${l} = ${u};`);if(r.needs_root&&!r.convert_root&&(o.push("if (!rootBuffer) throw new Error('no root buffer provided');"),o.push(`rootBuffer.set (${e}, ${l});`)),r.indirect){switch(r.indirect){case"bool":o.push(`setB32(${p}, ${l});`);break;case"u32":o.push(`setU32(${p}, ${l});`);break;case"i32":o.push(`setI32(${p}, ${l});`);break;case"float":o.push(`setF32(${p}, ${l});`);break;case"double":o.push(`setF64(${p}, ${l});`);break;case"i52":o.push(`setI52(${p}, ${l});`);break;case"u52":o.push(`setU52(${p}, ${l});`);break;default:throw new Error("Unimplemented indirect type: "+r.indirect)}o.push(`setU32_unchecked(buffer + (${e} * 4), ${p});`),i+=r.size}else o.push(`setU32_unchecked(buffer + (${e} * 4), ${l});`),i+=4;o.push("")}o.push("return buffer;");let u=o.join("\r\n"),p=null,d=null;try{p=Qc("converter_"+r,a,u,s),n.compiled_function=p}catch(e){throw n.compiled_function=null,pt("compiling converter failed for",u,"with error",e),e}a=["method","args"];const _={converter:p};o=["return converter(","  method,"];for(let e=0;e<n.steps.length;e++)o.push("  args["+e+(e==n.steps.length-1?"]":"], "));o.push(");"),u=o.join("\r\n");try{d=Qc("variadic_converter_"+r,a,u,_),n.compiled_variadic_function=d}catch(e){throw n.compiled_variadic_function=null,pt("compiling converter failed for",u,"with error",e),e}return n.scratchRootBuffer=null,n.scratchBuffer=A,n}(n));const c=t._malloc(128),l={method:e,converter:i,scratchRootBuffer:null,scratchBuffer:A,scratchResultRoot:Be(),scratchExceptionRoot:Be(),scratchThisArgRoot:Be()},u={Module:t,mono_wasm_new_root:Be,get_js_owned_object_by_gc_handle_ref:bl,_create_temp_frame:M,_handle_exception_for_call:tl,_teardown_after_call:wl,mono_wasm_try_unbox_primitive_and_get_type_ref:kt.mono_wasm_try_unbox_primitive_and_get_type_ref,_unbox_mono_obj_root_with_known_nonprimitive_type:_l,invoke_method_ref:kt.mono_wasm_invoke_method_ref,method:e,token:l,unbox_buffer:c,unbox_buffer_size:128,getB32:oe,getI32:_e,getU32:ie,getF32:be,getF64:ge,stackSave:t.stackSave},p=i?"converter_"+i.name:"";i&&(u[p]=i);const d=[],_=["_create_temp_frame();","let resultRoot = token.scratchResultRoot, exceptionRoot = token.scratchExceptionRoot, thisArgRoot = token.scratchThisArgRoot , sp = stackSave();","token.scratchResultRoot = null;","token.scratchExceptionRoot = null;","token.scratchThisArgRoot = null;","if (resultRoot === null)","\tresultRoot = mono_wasm_new_root ();","if (exceptionRoot === null)","\texceptionRoot = mono_wasm_new_root ();","if (thisArgRoot === null)","\tthisArgRoot = mono_wasm_new_root ();",""];if(i){_.push(`let buffer = ${p}.compiled_function(`,"    method,");for(let e=0;e<i.steps.length;e++){const t="arg"+e;d.push(t),_.push("    "+t+(e==i.steps.length-1?"":", "))}_.push(");")}else _.push("let buffer = 0;");if(i&&i.is_result_definitely_unmarshaled?_.push("let is_result_marshaled = false;"):i&&i.is_result_possibly_unmarshaled?_.push(`let is_result_marshaled = arguments.length !== ${i.result_unmarshaled_if_argc};`):_.push("let is_result_marshaled = true;"),_.push("","",""),r?(_.push("get_js_owned_object_by_gc_handle_ref(this.this_arg_gc_handle, thisArgRoot.address);"),_.push("invoke_method_ref (method, thisArgRoot.address, buffer, exceptionRoot.address, resultRoot.address);")):_.push("invoke_method_ref (method, 0, buffer, exceptionRoot.address, resultRoot.address);"),_.push(`_handle_exception_for_call (${p}, token, buffer, resultRoot, exceptionRoot, thisArgRoot, sp);`,"","let resultPtr = resultRoot.value, result = undefined;"),!i)throw new Error("No converter");i.is_result_possibly_unmarshaled&&_.push("if (!is_result_marshaled) "),(i.is_result_definitely_unmarshaled||i.is_result_possibly_unmarshaled)&&_.push("    result = resultPtr;"),i.is_result_definitely_unmarshaled||_.push("if (is_result_marshaled) {","    let resultType = mono_wasm_try_unbox_primitive_and_get_type_ref (resultRoot.address, unbox_buffer, unbox_buffer_size);","    switch (resultType) {","    case 1:","        result = getI32(unbox_buffer); break;","    case 32:","    case 25:","        result = getU32(unbox_buffer); break;","    case 24:","        result = getF32(unbox_buffer); break;","    case 2:","        result = getF64(unbox_buffer); break;","    case 8:","        result = getB32(unbox_buffer); break;","    case 28:","        result = String.fromCharCode(getI32(unbox_buffer)); break;","    case 0:","        result = null; break;","    default:","        result = _unbox_mono_obj_root_with_known_nonprimitive_type (resultRoot, resultType, unbox_buffer); break;","    }","}");let f=o.replace(Yc,"_");return r&&(f+="_this"),_.push(`_teardown_after_call (${p}, token, buffer, resultRoot, exceptionRoot, thisArgRoot, sp);`,"return result;"),s=Qc(f,d,_.join("\r\n"),u),Kc.set(a,s),s}function tl(e,t,n,r,o,a,s){const i=function(e,t){if(t.value===S)return null;const n=rt(e);return new Error(n)}(r,o);if(i)throw wl(0,t,0,r,o,a,s),i}function nl(e){const{assembly:t,namespace:n,classname:r,methodname:o}=Ur(e),a=kt.mono_wasm_assembly_load(t);if(!a)throw new Error("Could not find assembly: "+t);const s=kt.mono_wasm_assembly_find_class(a,n,r);if(!s)throw new Error("Could not find class: "+n+":"+r+" in assembly "+t);const i=kt.mono_wasm_assembly_find_method(s,o,-1);if(!i)throw new Error("Could not find method: "+o);return i}function rl(e,t){return sl._get_call_sig_ref(e,t?t.address:Mc._null_root.address)}function ol(){fr()}const al=[[!0,"_get_cs_owned_object_by_js_handle_ref","GetCSOwnedObjectByJSHandleRef","iim"],[!0,"_get_cs_owned_object_js_handle_ref","GetCSOwnedObjectJSHandleRef","mi"],[!0,"_try_get_cs_owned_object_js_handle_ref","TryGetCSOwnedObjectJSHandleRef","mi"],[!0,"_create_cs_owned_proxy_ref","CreateCSOwnedProxyRef","iiim"],[!0,"_get_js_owned_object_by_gc_handle_ref","GetJSOwnedObjectByGCHandleRef","im"],[!0,"_get_js_owned_object_gc_handle_ref","GetJSOwnedObjectGCHandleRef","m"],[!0,"_create_tcs","CreateTaskSource",""],[!0,"_set_tcs_result_ref","SetTaskSourceResultRef","iR"],[!0,"_set_tcs_failure","SetTaskSourceFailure","is"],[!0,"_get_tcs_task_ref","GetTaskSourceTaskRef","im"],[!0,"_setup_js_cont_ref","SetupJSContinuationRef","mo"],[!0,"_object_to_string_ref","ObjectToStringRef","m"],[!0,"_get_date_value_ref","GetDateValueRef","m"],[!0,"_create_date_time_ref","CreateDateTimeRef","dm"],[!0,"_create_uri_ref","CreateUriRef","sm"],[!0,"_is_simple_array_ref","IsSimpleArrayRef","m"],[!0,"_get_call_sig_ref","GetCallSignatureRef","im"]],sl={};function il(e,t){const n=function(e){const t=St.mono_wasm_assembly_find_method(Mc.runtime_legacy_exports_class,e,-1);if(!t)throw"Can't find method "+l.runtime_interop_namespace+"."+Mc.runtime_legacy_exports_classname+"."+e;return t}(e);return el(n,t,!1,"BINDINGS_"+e)}let cl;function ll(e){ol();const t=Be();try{return ot(e,t),t.value}finally{t.release()}}function ul(e){if(0===e.length)return ze;const t=Be();try{at(e,t);const n=We.get(t.value);return j(n)&&w(!1,"internal error: interned_string_table did not contain string after stringToMonoStringIntern"),n}finally{t.release()}}const pl=Symbol.for("wasm delegate_invoke");function dl(e){if(ol(),e===S)return;const t=Be(e);try{return fl(t)}finally{t.release()}}function _l(e,t,n){if(t>=512)throw new Error(`Got marshaling error ${t} when attempting to unbox object at address ${e.value} (root located at ${e.address})`);let r=v;if((4===t||7==t)&&(r=ie(n),r<1024))throw new Error(`Got invalid MonoType ${r} for object at address ${e.value} (root located at ${e.address})`);return function(e,t,n,r){switch(t){case 0:return null;case 26:case 27:throw new Error("int64 not available");case 3:case 29:return rt(e);case 4:throw new Error("no idea on how to unbox value types");case 5:return function(e){return e.value===S?null:function(e){let t=zr(e);if(t)Fr(t);else{t=function(...e){return Fr(t),(0,t[pl])(...e)};const n=Be();bl(e,n.address);try{if(void 0===t[pl]){const r=kt.mono_wasm_get_delegate_invoke_ref(n.address),o=el(r,rl(r,n),!0);if(t[pl]=o.bind({this_arg_gc_handle:e}),!t[pl])throw new Error("System.Delegate Invoke method can not be resolved.")}}finally{n.release()}Or(t,e)}return t}(sl._get_js_owned_object_gc_handle_ref(e.address))}(e);case 6:return function(e){if(e.value===S)return null;if(!Wr)throw new Error("Promises are not supported thus 'System.Threading.Tasks.Task' can not work in this context.");const t=sl._get_js_owned_object_gc_handle_ref(e.address);let n=zr(t);if(!n){const r=()=>Mr(n,t),{promise:o,promise_control:a}=y(r,r);n=o,sl._setup_js_cont_ref(e.address,a),Or(n,t)}return n}(e);case 7:return function(e){if(e.value===S)return null;const t=sl._try_get_cs_owned_object_js_handle_ref(e.address,0);if(t){if(t===I)throw new Error("Cannot access a disposed JSObject at "+e.value);return Nr(t)}const n=sl._get_js_owned_object_gc_handle_ref(e.address);let r=zr(n);return j(r)&&(r=new ManagedObject,Or(r,n)),r}(e);case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:throw new Error("Marshaling of primitive arrays are not supported.");case 20:return new Date(sl._get_date_value_ref(e.address));case 21:case 22:return sl._object_to_string_ref(e.address);case 23:return function(e){return Nr(sl._get_cs_owned_object_js_handle_ref(e.address,0))}(e);case 30:return;default:throw new Error(`no idea on how to unbox object of MarshalType ${t} at offset ${e.value} (root address is ${e.address})`)}}(e,t)}function fl(e){if(0===e.value)return;const t=Mc._unbox_buffer,n=kt.mono_wasm_try_unbox_primitive_and_get_type_ref(e.address,t,Mc._unbox_buffer_size);switch(n){case 1:return _e(t);case 25:case 32:return ie(t);case 24:return be(t);case 2:return ge(t);case 8:return 0!==_e(t);case 28:return String.fromCharCode(_e(t));case 0:return null;default:return _l(e,n,t)}}function ml(e){if(ol(),e===k)return null;const t=Be(e);try{return hl(t)}finally{t.release()}}function hl(e){if(e.value===k)return null;const t=e.address,n=Be(),r=n.address;try{const e=kt.mono_wasm_array_length_ref(t),a=new Array(e);for(let s=0;s<e;++s)kt.mono_wasm_array_get_ref(t,s,r),o=n,sl._is_simple_array_ref(o.address)?a[s]=hl(n):a[s]=fl(n);return a}finally{n.release()}var o}function bl(e,t){e?sl._get_js_owned_object_by_gc_handle_ref(e,t):X(t,0)}function gl(e){return ol(),function(e){if(e===E)return null;ol(),cl||(cl=Be()),cl.value=e;const t=rt(cl);return cl.value=E,t}(e)}const yl=new Map;function wl(e,n,r,o,a,s,i){!function(){if(!C.length)throw new Error("No temp frames have been created at this point");D=C.pop()}(),t.stackRestore(i),"object"==typeof o&&(o.clear(),null!==n&&null===n.scratchResultRoot?n.scratchResultRoot=o:o.release()),"object"==typeof a&&(a.clear(),null!==n&&null===n.scratchExceptionRoot?n.scratchExceptionRoot=a:a.release()),"object"==typeof s&&(s.clear(),null!==n&&null===n.scratchThisArgRoot?n.scratchThisArgRoot=s:s.release())}function Sl(e,t){ol();const n=`${e}-${t}`;let r=yl.get(n);if(void 0===r){const o=nl(e);void 0===t&&(t=rl(o,void 0)),r=el(o,t,!1,e),yl.set(n,r)}return r}function kl(e,t,n){return ol(),t||(t=[[]]),function(e,t){ol();const n=Dc(e);"string"!=typeof t&&(t=rl(n,void 0));const r=el(n,t,!1,"_"+e+"__entrypoint");return async function(...e){return u.assert_runtime_running(),e.length>0&&Array.isArray(e[0])&&(e[0]=function(e,t,n){const r=Be();kt.mono_wasm_string_array_new_ref(e.length,r.address);const o=Be(S),a=r.address,s=o.address;try{for(let t=0;t<e.length;++t){let n=e[t];n=n.toString(),Wc(n,o,!1),kt.mono_wasm_obj_array_set_ref(a,t,s)}return r.value}finally{Oe(r,o)}}(e[0])),r(...e)}}(e,n)(...t)}function vl(e,t){const n=e.toLocaleTimeString(t,{hourCycle:"h12"}),r=e.toLocaleTimeString(t,{hourCycle:"h24"}),o=n.replace(r,"").trim();if(new RegExp("[0-9]$").test(o)){const e=n.split(" ").filter((e=>new RegExp("^((?![0-9]).)*$").test(e)));return e&&0!=e.length?e.join(" "):""}return o}function El(e){try{return new Intl.Locale(e).weekInfo}catch(t){try{return new Intl.Locale(e).getWeekInfo()}catch(e){return}}}const Ul=[function(e){Po&&(globalThis.clearTimeout(Po),Po=void 0),Po=t.safeSetTimeout(mono_wasm_schedule_timer_tick,e)},function(e,t,n,r,o){if(!0!==l.mono_wasm_runtime_is_ready)return;const a=Ee(),s=0!==e?Qe(e).concat(".dll"):"",i=It(new Uint8Array(a.buffer,t,n));let c;r&&(c=It(new Uint8Array(a.buffer,r,o))),zt({eventName:"AssemblyLoaded",assembly_name:s,assembly_b64:i,pdb_b64:c})},function(e,t){const r=Qe(t);n.logging&&"function"==typeof n.logging.debugger&&n.logging.debugger(e,r)},function(e,t,n,r){const o={res_ok:e,res:{id:t,value:It(new Uint8Array(Ee().buffer,n,r))}};xt.has(t)&&pt(`Adding an id (${t}) that already exists in commands_received`),xt.set(t,o)},function mono_wasm_fire_debugger_agent_message_with_data(e,t){mono_wasm_fire_debugger_agent_message_with_data_to_pause(It(new Uint8Array(Ee().buffer,e,t)))},mono_wasm_fire_debugger_agent_message_with_data_to_pause,function(){++Vo,t.safeSetTimeout(Go,0)},function(e,n,r,o,a,s,i){if(r||w(!1,"expected instruction pointer"),mi||(mi=os()),!mi.enableTraces)return 1;if(mi.wasmBytesLimit<=$a.bytesGenerated)return 1;let c,u=vi[r];if(u||(vi[r]=u=new yi(r,o,i)),$a.traceCandidates++,mi.estimateHeat||bi.length>0||u.isVerbose){const e=St.mono_wasm_method_get_full_name(n);c=Qe(e),t._free(e)}const p=Qe(St.mono_wasm_method_get_name(n));u.name=c||p;const d=ue(qa(4)+e),_=ue(qa(11)+d),f=ue(qa(10)+d);let m=_?new Uint16Array(Ee().buffer,f,_):null;if(m&&r!==a){const e=(r-a)/2;let t=!1;for(let n=0;n<m.length;n++)if(m[n]>e){t=!0;break}t||(m=null)}const h=function(e,t,n,r,o,a,s){let i=Ti;i?i.clear(8):(Ti=i=new Ta(8),function(e){e.defineType("trace",{frame:127,pLocals:127,cinfo:127},127,!0),e.defineType("bailout",{retval:127,base:127,reason:127},127,!0),e.defineType("copy_ptr",{dest:127,src:127},64,!0),e.defineType("value_copy",{dest:127,src:127,klass:127},64,!0),e.defineType("entry",{imethod:127},127,!0),e.defineType("strlen",{ppString:127,pResult:127},127,!0),e.defineType("getchr",{ppString:127,pIndex:127,pResult:127},127,!0),e.defineType("getspan",{destination:127,span:127,index:127,element_size:127},127,!0),e.defineType("overflow_check_i4",{lhs:127,rhs:127,opcode:127},127,!0),e.defineType("mathop_d_d",{value:124},124,!0),e.defineType("mathop_dd_d",{lhs:124,rhs:124},124,!0),e.defineType("mathop_f_f",{value:125},125,!0),e.defineType("mathop_ff_f",{lhs:125,rhs:125},125,!0),e.defineType("fmaf",{x:125,y:125,z:125},125,!0),e.defineType("fma",{x:124,y:124,z:124},124,!0),e.defineType("trace_eip",{traceId:127,eip:127},64,!0),e.defineType("newobj_i",{ppDestination:127,vtable:127},127,!0),e.defineType("newstr",{ppDestination:127,length:127},127,!0),e.defineType("localloc",{destination:127,len:127,frame:127},64,!0),e.defineType("ld_del_ptr",{ppDestination:127,ppSource:127},64,!0),e.defineType("ldtsflda",{ppDestination:127,offset:127},64,!0),e.defineType("gettype",{destination:127,source:127},127,!0),e.defineType("castv2",{destination:127,source:127,klass:127,opcode:127},127,!0),e.defineType("hasparent",{klass:127,parent:127},127,!0),e.defineType("imp_iface",{vtable:127,klass:127},127,!0),e.defineType("imp_iface_s",{obj:127,vtable:127,klass:127},127,!0),e.defineType("box",{vtable:127,destination:127,source:127,vt:127},64,!0),e.defineType("conv",{destination:127,source:127,opcode:127},127,!0),e.defineType("relop_fp",{lhs:124,rhs:124,opcode:127},127,!0),e.defineType("safepoint",{frame:127,ip:127},64,!0),e.defineType("hashcode",{ppObj:127},127,!0),e.defineType("try_hash",{ppObj:127},127,!0),e.defineType("hascsize",{ppObj:127},127,!0),e.defineType("hasflag",{klass:127,dest:127,sp1:127,sp2:127},64,!0),e.defineType("array_rank",{destination:127,source:127},127,!0),e.defineType("stfld_o",{locals:127,fieldOffsetBytes:127,targetLocalOffsetBytes:127,sourceLocalOffsetBytes:127},127,!0),e.defineType("notnull",{ptr:127,expected:127,traceIp:127,ip:127},64,!0),e.defineType("cmpxchg_i32",{dest:127,newVal:127,expected:127},127,!0),e.defineType("cmpxchg_i64",{dest:127,newVal:127,expected:127,oldVal:127},64,!0),e.defineType("transfer",{displacement:127,trace:127,frame:127,locals:127,cinfo:127},127,!0),e.defineType("stelem_ref",{o:127,aindex:127,ref:127},127,!0),e.defineType("simd_p_p",{arg0:127,arg1:127},64,!0),e.defineType("simd_p_pp",{arg0:127,arg1:127,arg2:127},64,!0),e.defineType("simd_p_ppp",{arg0:127,arg1:127,arg2:127,arg3:127},64,!0);const t=$i();for(let n=0;n<t.length;n++)t[n]||w(!1,`trace #${n} missing`),e.defineImportedFunction("i",t[n][0],t[n][1],!0,t[n][2])}(i)),mi=i.options;const c=r+o,u=`${t}:${(n-r).toString(16)}`,p=Na();let d=0,_=!0,f=!1;const m=vi[n],h=m.isVerbose||a&&bi.findIndex((e=>a.indexOf(e)>=0))>=0;h&&!a&&w(!1,"Expected methodFullName if trace is instrumented");const b=h?Si++:0;h&&(ut(`instrumenting: ${a}`),wi[b]=new gi(a)),i.compressImportNames=!h;try{i.appendU32(1836278016),i.appendU32(1),i.generateTypeSection();const t={disp:127,cknull_ptr:127,dest_ptr:127,src_ptr:127,memop_dest:127,memop_src:127,index:127,count:127,math_lhs32:127,math_rhs32:127,math_lhs64:126,math_rhs64:126,temp_f32:125,temp_f64:124,backbranched:127};i.options.enableSimd&&(t.v128_zero=123,t.math_lhs128=123,t.math_rhs128=123);let o=!0,a=0;if(i.defineFunction({type:"trace",name:u,export:!0,locals:t},(()=>{if(i.base=n,i.frame=e,662!==se(n))throw new Error(`Expected *ip to be MINT_TIER_PREPARE_JITERPRETER but was ${se(n)}`);return i.cfg.initialize(r,s,h?1:0),a=function(e,t,n,r,o,a,s,i){let c=!0,l=!1,u=!0,p=!1,d=!1,_=!1,f=0,m=0,h=0;const b=n;Ds();let g=n+=2*St.mono_jiterp_get_opcode_info(664,1);for(a.cfg.entry(n);n&&n;){if(a.cfg.ip=n,n>=o){Bi(b,0,0,"end-of-body"),s&&ut(`instrumented trace ${t} exited at end of body @${n.toString(16)}`);break}const y=3840-a.bytesGeneratedSoFar-a.cfg.overheadBytes;if(a.size>=y){Bi(b,0,0,"trace-too-big"),s&&ut(`instrumented trace ${t} exited because of size limit at @${n.toString(16)} (spaceLeft=${y}b)`);break}let S=se(n);const k=St.mono_jiterp_get_opcode_info(S,2),v=St.mono_jiterp_get_opcode_info(S,3),E=St.mono_jiterp_get_opcode_info(S,1),U=S>=645&&S<=647,I=U?S-645+2:0,T=U?vs(n,1+I):0;S>=0&&S<673||w(!1,`invalid opcode ${S}`);const x=U?as[I][T]:Sa(S),A=n,j=a.options.noExitBackwardBranches&&js(n,r,i),R=a.branchTargets.has(n),L=j||R||c&&i,C=h+m+a.branchTargets.size;let $=!1,N=Xa(S);switch(j&&a.backBranchOffsets.push(n),L&&(d=!1,_=!1,Ms(a,n,j),l=!0,u=!0,Ds(),h=0),N<-1&&l&&(N=-2===N?2:0),c=!1,279===S||(hi.indexOf(S)>=0?(Ba(a,n,23),S=666):d&&(S=666)),S){case 666:d&&(_||a.appendU8(0),_=!0);break;case 321:case 322:Ws(a,vs(n,1),0,vs(n,2));break;case 320:Vs(a,vs(n,1)),Ps(a,vs(n,2),40),a.local("frame"),a.callImport("localloc");break;case 294:Ps(a,vs(n,1),40),za(a,0,vs(n,2));break;case 318:{const e=vs(n,3),t=vs(n,2),r=vs(n,1),o=Ls(a,e);0!==o&&("number"!=typeof o?(Ps(a,e,40),a.local("count",34),a.block(64,4)):(a.i32_const(o),a.local("count",33)),Ps(a,r,40),a.local("dest_ptr",34),a.appendU8(69),Ps(a,t,40),a.local("src_ptr",34),a.appendU8(69),a.appendU8(114),a.block(64,4),Ba(a,n,2),a.endBlock(),"number"==typeof o&&Va(a,0,0,o,!1,"dest_ptr","src_ptr")||(a.local("dest_ptr"),a.local("src_ptr"),a.local("count"),a.appendU8(252),a.appendU8(10),a.appendU8(0),a.appendU8(0)),"number"!=typeof o&&a.endBlock());break}case 319:{const e=vs(n,3),t=vs(n,2);qs(a,vs(n,1),n,!0),Ps(a,t,40),Ps(a,e,40),a.appendU8(252),a.appendU8(11),a.appendU8(0);break}case 151:case 153:case 235:case 237:case 152:case 154:case 137:case 140:case 141:ti(a,n,e,S)?l=!0:n=0;break;case 537:{const e=vs(n,2),t=vs(n,1);e!==t?(a.local("pLocals"),qs(a,e,n,!0),zs(a,t,54)):qs(a,e,n,!1),a.allowNullCheckOptimization&&Cs.set(t,n),$=!0;break}case 626:case 627:{const t=ue(e+qa(4));a.ptr_const(t),a.callImport("entry"),a.block(64,4),Ba(a,n,1),a.endBlock();break}case 664:if(N=0,f>=a.options.minimumTraceValue&&!a.options.noExitBackwardBranches&&(!l||u)){const e=Is(n,1);a.ip_const(n),a.i32_const(e),a.local("frame"),a.local("pLocals"),a.local("cinfo"),a.callImport("transfer"),a.appendU8(15),n=0}break;case 146:Da(a,n);break;case 94:{a.local("pLocals");const e=vs(n,2);Gs(a,e)||dt(`${t}: Expected local ${e} to have address taken flag`),Vs(a,e),zs(a,vs(n,1),54);break}case 280:case 308:case 309:case 555:{a.local("pLocals");let t=xs(e,vs(n,2));308===S&&(t=St.mono_jiterp_imethod_to_ftnptr(t)),a.ptr_const(t),zs(a,vs(n,1),54);break}case 313:{const t=xs(e,vs(n,3));Ps(a,vs(n,1),40),Ps(a,vs(n,2),40),a.ptr_const(t),a.callImport("value_copy");break}case 314:{const e=vs(n,3);Ps(a,vs(n,1),40),Ps(a,vs(n,2),40),Wa(a,e);break}case 315:{const e=vs(n,3);Vs(a,vs(n,1),e),qs(a,vs(n,2),n,!0),Wa(a,e);break}case 316:{const t=xs(e,vs(n,3));Ps(a,vs(n,1),40),Vs(a,vs(n,2),0),a.ptr_const(t),a.callImport("value_copy");break}case 317:{const e=vs(n,3);Ps(a,vs(n,1),40),Vs(a,vs(n,2),0),Wa(a,e);break}case 539:a.local("pLocals"),qs(a,vs(n,2),n,!0),a.appendU8(40),a.appendMemarg(qa(2),2),zs(a,vs(n,1),54);break;case 538:{a.block(),Ps(a,vs(n,3),40),a.local("index",34);let e="cknull_ptr";a.options.zeroPageOptimization&&Qa()?($a.nullChecksFused++,Ps(a,vs(n,2),40),e="src_ptr",a.local(e,34)):qs(a,vs(n,2),n,!0),a.appendU8(40),a.appendMemarg(qa(2),2),a.appendU8(72),a.local("index"),a.i32_const(0),a.appendU8(78),a.appendU8(113),a.appendU8(13),a.appendULeb(0),Ba(a,n,11),a.endBlock(),a.local("pLocals"),a.local("index"),a.i32_const(2),a.appendU8(108),a.local(e),a.appendU8(106),a.appendU8(47),a.appendMemarg(qa(3),1),zs(a,vs(n,1),54);break}case 349:case 350:{const e=Es(n,4);a.block(),Ps(a,vs(n,3),40),a.local("index",34);let t="cknull_ptr";349===S?qs(a,vs(n,2),n,!0):(Vs(a,vs(n,2),0),t="src_ptr",a.local(t,34)),a.appendU8(40),a.appendMemarg(qa(7),2),a.appendU8(73),a.local("index"),a.i32_const(0),a.appendU8(78),a.appendU8(113),a.appendU8(13),a.appendULeb(0),Ba(a,n,18),a.endBlock(),a.local("pLocals"),a.local(t),a.appendU8(40),a.appendMemarg(qa(8),2),a.local("index"),a.i32_const(e),a.appendU8(108),a.appendU8(106),zs(a,vs(n,1),54);break}case 652:a.block(),Ps(a,vs(n,3),40),a.local("count",34),a.i32_const(0),a.appendU8(78),a.appendU8(13),a.appendULeb(0),Ba(a,n,18),a.endBlock(),Vs(a,vs(n,1),16),a.local("dest_ptr",34),Ps(a,vs(n,2),40),a.appendU8(54),a.appendMemarg(0,0),a.local("dest_ptr"),a.local("count"),a.appendU8(54),a.appendMemarg(4,0);break;case 567:Vs(a,vs(n,1),8),Vs(a,vs(n,2),8),a.callImport("ld_del_ptr");break;case 81:Vs(a,vs(n,1),4),a.ptr_const(Us(n,2)),a.callImport("ldtsflda");break;case 651:a.block(),Vs(a,vs(n,1),4),Vs(a,vs(n,2),0),a.callImport("gettype"),a.appendU8(13),a.appendULeb(0),Ba(a,n,2),a.endBlock();break;case 648:{const t=xs(e,vs(n,4));a.ptr_const(t),Vs(a,vs(n,1),4),Vs(a,vs(n,2),0),Vs(a,vs(n,3),0),a.callImport("hasflag");break}case 657:{const e=qa(1);a.local("pLocals"),qs(a,vs(n,2),n,!0),a.i32_const(e),a.appendU8(106),zs(a,vs(n,1),54);break}case 649:a.local("pLocals"),Vs(a,vs(n,2),0),a.callImport("hashcode"),zs(a,vs(n,1),54);break;case 650:a.local("pLocals"),Vs(a,vs(n,2),0),a.callImport("try_hash"),zs(a,vs(n,1),54);break;case 653:a.local("pLocals"),Vs(a,vs(n,2),0),a.callImport("hascsize"),zs(a,vs(n,1),54);break;case 658:a.local("pLocals"),Ps(a,vs(n,2),40),a.local("math_lhs32",34),Ps(a,vs(n,3),40),a.appendU8(115),a.i32_const(2),a.appendU8(116),a.local("math_rhs32",33),a.local("math_lhs32"),a.i32_const(327685),a.appendU8(106),a.i32_const(10485920),a.appendU8(114),a.i32_const(1703962),a.appendU8(106),a.i32_const(-8388737),a.appendU8(114),a.local("math_rhs32"),a.appendU8(113),a.appendU8(69),zs(a,vs(n,1),54);break;case 540:case 541:a.block(),Vs(a,vs(n,1),4),Vs(a,vs(n,2),0),a.callImport(540===S?"array_rank":"a_elesize"),a.appendU8(13),a.appendULeb(0),Ba(a,n,2),a.endBlock();break;case 297:case 298:{const t=xs(e,vs(n,3)),r=St.mono_jiterp_is_special_interface(t),o=297===S,s=vs(n,1);if(!t){Bi(b,0,0,"null-klass"),n=0;continue}a.block(),a.options.zeroPageOptimization&&Qa()?(Ps(a,vs(n,2),40),a.local("dest_ptr",34),$a.nullChecksFused++):(a.block(),Ps(a,vs(n,2),40),a.local("dest_ptr",34),a.appendU8(13),a.appendULeb(0),a.local("pLocals"),a.i32_const(0),zs(a,s,54),a.appendU8(12),a.appendULeb(1),a.endBlock(),a.local("dest_ptr")),r&&a.local("dest_ptr"),a.appendU8(40),a.appendMemarg(qa(14),0),a.ptr_const(t),a.callImport(r?"imp_iface_s":"imp_iface"),o&&(a.local("dest_ptr"),a.appendU8(69),a.appendU8(114)),a.block(64,4),a.local("pLocals"),a.local("dest_ptr"),zs(a,s,54),a.appendU8(5),o?Ba(a,n,19):(a.local("pLocals"),a.i32_const(0),zs(a,s,54)),a.endBlock(),a.endBlock();break}case 299:case 300:case 295:case 296:{const t=xs(e,vs(n,3)),r=299===S||300===S,o=295===S||299===S,s=vs(n,1);if(!t){Bi(b,0,0,"null-klass"),n=0;continue}a.block(),a.options.zeroPageOptimization&&Qa()?(Ps(a,vs(n,2),40),a.local("dest_ptr",34),$a.nullChecksFused++):(a.block(),Ps(a,vs(n,2),40),a.local("dest_ptr",34),a.appendU8(13),a.appendULeb(0),a.local("pLocals"),a.i32_const(0),zs(a,s,54),a.appendU8(12),a.appendULeb(1),a.endBlock(),a.local("dest_ptr")),a.appendU8(40),a.appendMemarg(qa(14),0),a.appendU8(40),a.appendMemarg(qa(15),0),r&&a.local("src_ptr",34),a.i32_const(t),a.appendU8(70),a.block(64,4),a.local("pLocals"),a.local("dest_ptr"),zs(a,s,54),a.appendU8(5),r?(a.local("src_ptr"),a.ptr_const(t),a.callImport("hasparent"),o&&(a.local("dest_ptr"),a.appendU8(69),a.appendU8(114)),a.block(64,4),a.local("pLocals"),a.local("dest_ptr"),zs(a,s,54),a.appendU8(5),o?Ba(a,n,19):(a.local("pLocals"),a.i32_const(0),zs(a,s,54)),a.endBlock()):(Vs(a,vs(n,1),4),a.local("dest_ptr"),a.ptr_const(t),a.i32_const(S),a.callImport("castv2"),a.appendU8(69),a.block(64,4),Ba(a,n,19),a.endBlock()),a.endBlock(),a.endBlock();break}case 303:case 304:a.ptr_const(xs(e,vs(n,3))),Vs(a,vs(n,1),4),Vs(a,vs(n,2),0),a.i32_const(304===S?1:0),a.callImport("box");break;case 307:{const t=xs(e,vs(n,3)),r=qa(17),o=vs(n,1),s=ue(t+r);if(!t||!s){Bi(b,0,0,"null-klass"),n=0;continue}a.options.zeroPageOptimization&&Qa()?(Ps(a,vs(n,2),40),a.local("dest_ptr",34),$a.nullChecksFused++):(qs(a,vs(n,2),n,!0),a.local("dest_ptr",34)),a.appendU8(40),a.appendMemarg(qa(14),0),a.appendU8(40),a.appendMemarg(qa(15),0),a.local("src_ptr",34),a.appendU8(40),a.appendMemarg(r,0),a.i32_const(s),a.appendU8(70),a.local("src_ptr"),a.appendU8(45),a.appendMemarg(qa(16),0),a.appendU8(69),a.appendU8(113),a.block(64,4),a.local("pLocals"),a.local("dest_ptr"),a.i32_const(qa(18)),a.appendU8(106),zs(a,o,54),a.appendU8(5),Ba(a,n,21),a.endBlock();break}case 302:a.block(),Vs(a,vs(n,1),4),Ps(a,vs(n,2),40),a.callImport("newstr"),a.appendU8(13),a.appendULeb(0),Ba(a,n,17),a.endBlock();break;case 291:a.block(),Vs(a,vs(n,1),4),a.ptr_const(xs(e,vs(n,2))),a.callImport("newobj_i"),a.appendU8(13),a.appendULeb(0),Ba(a,n,17),a.endBlock();break;case 293:{const e=vs(n,3);Vs(a,vs(n,2),e),za(a,0,e),a.local("pLocals"),Vs(a,vs(n,2),e),zs(a,vs(n,1),54);break}case 290:case 292:case 543:case 542:l?(Oa(a,n,C,15),d=!0,N=0):n=0;break;case 545:case 546:case 547:case 548:case 544:l?(Oa(a,n,C,544==S?22:15),d=!0):n=0;break;case 145:case 142:Ba(a,n,16),d=!0;break;case 138:case 139:Ba(a,n,26),d=!0;break;case 144:if(a.callHandlerReturnAddresses.length>0&&a.callHandlerReturnAddresses.length<=3){const t=As(e,vs(n,1));a.local("pLocals"),a.appendU8(40),a.appendMemarg(t,0),a.local("index",33);for(let e=0;e<a.callHandlerReturnAddresses.length;e++){const t=a.callHandlerReturnAddresses[e];a.local("index"),a.ptr_const(t),a.appendU8(70),a.cfg.branch(t,t<n,1)}Ba(a,n,25)}else n=0;break;case 143:case 623:case 624:n=0;break;case 500:case 505:case 501:case 503:case 510:case 502:case 509:case 504:a.block(),Vs(a,vs(n,1),8),Vs(a,vs(n,2),0),a.i32_const(S),a.callImport("conv"),a.appendU8(13),a.appendULeb(0),Ba(a,n,13),a.endBlock();break;case 463:case 464:case 469:case 470:{const e=463===S||469===S,t=469===S||470===S,r=t?0x8000000000000000:2147483648,o=e?"temp_f32":"temp_f64";a.local("pLocals"),Ps(a,vs(n,2),e?42:43),a.local(o,34),a.appendU8(e?139:153),a.appendU8(e?67:68),e?a.appendF32(r):a.appendF64(r),a.appendU8(e?93:99),a.block(t?126:127,4),a.local(o),a.appendU8(is[S]),a.appendU8(5),a.appendU8(t?66:65),a.appendBoundaryValue(t?64:32,-1),a.endBlock(),zs(a,vs(n,1),t?55:54);break}case 520:case 521:{const e=520===S;a.local("pLocals"),Ps(a,vs(n,2),e?40:41);const t=Es(n,3),r=Es(n,4);e?a.i32_const(t):a.i52_const(t),a.appendU8(e?106:124),e?a.i32_const(r):a.i52_const(r),a.appendU8(e?108:126),zs(a,vs(n,1),e?54:55);break}case 560:a.local("pLocals"),Ps(a,vs(n,2),40),Ps(a,vs(n,3),40),Ps(a,vs(n,4),40),a.callImport("cmpxchg_i32"),zs(a,vs(n,1),54);break;case 561:Ps(a,vs(n,2),40),Vs(a,vs(n,3),0),Vs(a,vs(n,4),0),Vs(a,vs(n,1),8),a.callImport("cmpxchg_i64");break;case 638:case 639:{const e=639===S;a.local("pLocals"),Ps(a,vs(n,2),e?41:40),e?a.i52_const(1):a.i32_const(1),a.appendU8(e?132:114),a.appendU8(e?121:103),e&&a.appendU8(167),a.i32_const(e?63:31),a.appendU8(115),zs(a,vs(n,1),54);break}case 530:case 531:{const e=530===S,t=e?40:41,r=e?54:55;a.local("pLocals"),Ps(a,vs(n,2),t),Ps(a,vs(n,3),t),e?a.i32_const(31):a.i52_const(63),a.appendU8(e?113:131),a.appendU8(e?116:134),zs(a,vs(n,1),r);break}case 580:case 607:{const e=607===S,t=e?42:43,r=e?56:57;a.local("pLocals"),Ps(a,vs(n,2),t),Ps(a,vs(n,3),t),Ps(a,vs(n,4),t),a.callImport(e?"fmaf":"fma"),zs(a,vs(n,1),r);break}default:S>=3&&S<=12||S>=516&&S<=517?l||a.options.countBailouts?(Ba(a,n,14),d=!0):n=0:S>=13&&S<=29?Js(a,n,S)?$=!0:n=0:S>=82&&S<=93?Ys(a,n,S)||(n=0):S>=351&&S<=434?Ks(a,n,S)||(n=0):cs[S]?Qs(a,n,S)||(n=0):ps[S]?ni(a,n,e,S)?l=!0:n=0:S>=31&&S<=57?Xs(a,e,n,S)||(n=0):S>=58&&S<=81?Zs(a,e,n,S)||(n=0):S>=95&&S<=135?oi(a,n,S)||(n=0):S>=568&&S<=621?ri(a,n,S)||(n=0):S>=323&&S<=348?si(a,e,n,S)||(n=0):S>=235&&S<=278?a.branchTargets.size>0?(Oa(a,n,C,8),d=!0):n=0:S>=640&&S<=647?li(a,n,S,x,I,T)?(p=!0,$=!0):n=0:0===N||(n=0)}if(n){if(!$){const e=n+2;for(let t=0;t<v;t++)Bs(se(e+2*t))}if(mi.dumpTraces||s){let e=`${n.toString(16)} ${x} `;const t=n+2,r=t+2*v;for(let t=0;t<k;t++)0!==t&&(e+=", "),e+=se(r+2*t);v>0&&(e+=" -> ");for(let n=0;n<v;n++)0!==n&&(e+=", "),e+=se(t+2*n);a.traceBuf.push(e)}N>0&&(l?h++:m++,f+=N),(n+=2*E)<=o&&(g=n)}else s&&ut(`instrumented trace ${t} aborted for opcode ${x} @${A.toString(16)}`),Bi(b,0,0,S)}for(;a.activeBlocks>0;)a.endBlock();return a.cfg.exitIp=g,p&&(f+=10240),f}(e,u,n,r,c,i,b,s),o=a>=mi.minimumTraceValue,i.cfg.generate()})),i.emitImportsAndFunctions(!1),!o)return m&&"end-of-body"===m.abortReason&&(m.abortReason="trace-too-small"),0;d=Na();const p=i.getArrayView();if($a.bytesGenerated+=p.length,p.length>=4080)return pt(`Jiterpreter generated too much code (${p.length} bytes) for trace ${u}. Please report this issue.`),0;const f=new WebAssembly.Module(p),g=i.getWasmImports(),y=new WebAssembly.Instance(f,g).exports[u];_=!1,l.storeMemorySnapshotPending&&w(!1,"Attempting to set function into table during creation of memory snapshot");const S=Fa(y);if(!S)throw new Error("add_function_pointer returned a 0 index");return i.options.enableStats&&$a.tracesCompiled&&$a.tracesCompiled%500==0&&Oi(!1,!0),S}catch(e){return f=!0,_=!1,dt(`${a||u} code generation failed: ${e} ${e.stack}`),Ha(),0}finally{const e=Na();if(d?(Ca.generation+=d-p,Ca.compilation+=e-d):Ca.generation+=e-p,f||!_&&mi.dumpTraces||h){if(f||mi.dumpTraces||h)for(let e=0;e<i.traceBuf.length;e++)ut(i.traceBuf[e]);ut(`// ${a||u} generated, blob follows //`);let e="",t=0;try{for(;i.activeBlocks>0;)i.endBlock();i.inSection&&i.endSection()}catch(e){}const n=i.getArrayView();for(let r=0;r<n.length;r++){const o=n[r];o<16&&(e+="0"),e+=o.toString(16),e+=" ",e.length%10==0&&(ut(`${t}\t${e}`),e="",t=r+1)}ut(`${t}\t${e}`),ut("// end blob //")}}}(e,p,r,a,s,c,m);return h?($a.tracesCompiled++,u.fnPtr=h,h):mi.estimateHeat?0:1},function(e){const t=Xi[e&=-2];if(t){if(Ki||(Ki=os()),t.hitCount++,t.hitCount===Ki.interpEntryFlushThreshold)Qi();else if(t.hitCount!==Ki.interpEntryHitCount)return;Yi.push(t),Yi.length>=4?Qi():Ji>0||"function"==typeof globalThis.setTimeout&&(Ji=globalThis.setTimeout((()=>{Ji=0,Qi()}),10))}},function(e,t,n,r,o,a,s,i,c){if(n>16)return 0;const l=new class{constructor(e,t,n,r,o,a,s,i,c){this.imethod=e,this.method=t,this.argumentCount=n,this.unbox=o,this.hasThisReference=a,this.hasReturnValue=s,this.name=i,this.paramTypes=new Array(n);for(let e=0;e<n;e++)this.paramTypes[e]=ue(r+4*e);this.defaultImplementation=c,this.result=0;let l=i;if(l){const e=24;l.length>e&&(l=l.substring(l.length-e,l.length)),l=`${this.imethod.toString(16)}_${l}`}else l=`${this.imethod.toString(16)}_${this.hasThisReference?"i":"s"}${this.hasReturnValue?"_r":""}_${this.argumentCount}`;this.traceName=l,this.hitCount=0}}(e,t,n,r,o,a,s,Qe(i),c);qi||(qi=Ma());const u=qi.get(c);return l.result=Fa(u),Xi[e]=l,l.result},function(e,t,n,r,o){const a=ue(n+0),s=lc[a];if(s)return void(s.result>0?St.mono_jiterp_register_jit_call_thunk(n,s.result):(s.queue.push(n),s.queue.length>12&&mc()));const i=new pc(e,t,n,r,0!==o);lc[a]=i,uc.push(i),uc.length>=6&&mc()},function(e,t,n,r,o){const a=dc(e);try{a(t,n,r,o)}catch(e){G(o,1)}},mc,function(e,n,r){l.storeMemorySnapshotPending&&w(!1,"Attempting to set function into table during creation of memory snapshot");const o=Ma().get(e),a=function(e,t,n){try{o(t)}catch(e){G(n,1)}};let s=!fc();if(!s)try{const e=new WebAssembly.Instance(_c,{i:{jit_call_cb:o},m:{h:t.getMemory()}}).exports.do_jit_call_indirect;if("function"!=typeof e)throw new Error("Did not find exported do_jit_call handler");const n=Fa(e);St.mono_jiterp_update_jit_call_dispatcher(n),s=!1}catch(e){dt("failed to compile do_jit_call handler",e),s=!0}if(s)try{const e=t.addFunction(a,"viii");St.mono_jiterp_update_jit_call_dispatcher(e)}catch(e){St.mono_jiterp_update_jit_call_dispatcher(0)}a(0,n,r)},function(){l.enablePerfMeasure&&Xt.push(globalThis.performance.now())},function(e){if(l.enablePerfMeasure){const t=Xt.pop(),n=a?{start:t}:{startTime:t};let r=Zt.get(e);r||(r=Qe(vt.mono_wasm_method_get_name(e)),Zt.set(e,r)),globalThis.performance.measure(r,n)}},function(e,t,r,o,a){const s=Qe(r),i=!!o,c=Qe(e),l=a,u=Qe(t),p=`[MONO] ${s}`;if(n.logging&&"function"==typeof n.logging.trace)n.logging.trace(c,u,p,i,l);else switch(u){case"critical":case"error":console.error(ht(p));break;case"warning":console.warn(p);break;case"message":default:console.log(p);break;case"info":console.info(p);break;case"debug":console.debug(p)}},function(e,t){jt=Qe(e).concat(".dll"),Rt=t,console.assert(!0,`Adding an entrypoint breakpoint ${jt} at method token  ${Rt}`);debugger},function(){},Br,function(e,r,o,a,s,i){fr();const c=De(e),l=De(r),u=De(i);try{const e=fn(o);1!==e&&w(!1,`Signature version ${e} mismatch.`);const t=rt(c),r=Jt(),i=rt(l);lt(`Binding [JSImport] ${t} from ${i} module`);const p=function(e,t){e&&"string"==typeof e||w(!1,"function_name must be string");let r={};const o=e.split(".");t?(r=ur.get(t),r||w(!1,`ES6 module ${t} was not imported yet, please call JSHost.ImportAsync() first.`)):"INTERNAL"===o[0]?(r=n,o.shift()):"globalThis"===o[0]&&(r=globalThis,o.shift());for(let t=0;t<o.length-1;t++){const n=o[t],a=r[n];a||w(!1,`${n} not found while looking up ${e}`),r=a}const a=r[o[o.length-1]];return"function"!=typeof a&&w(!1,`${e} must be a Function but was ${typeof a}`),a.bind(r)}(t,i),d=_n(o),_=new Array(d),f=new Array(d);let m=!1;for(let e=0;e<d;e++){const t=sn(o,e+2),n=cn(t),r=Rn(t,n,e+2);r||w(!1,"ERR42: argument marshaler must be resolved"),_[e]=r,n===R.Span?(f[e]=e=>{e&&e.dispose()},m=!0):R.Task}const h=sn(o,1),b=cn(h);R.Task;const g=Yr(h,b,1),y={fn:p,fqn:i+":"+t,args_count:d,arg_marshalers:_,res_converter:g,has_cleanup:m,arg_cleanup:f,isDisposed:!1};let S;S=0!=d||g?1!=d||m||g?1==d&&!m&&g?function(e){const t=e.fn,n=e.arg_marshalers[0],r=e.res_converter,o=e.fqn;return e=null,function(a){const s=Jt();try{L&&e.isDisposed;const o=n(a),s=t(o);r(a,s)}catch(e){ho(a,e)}finally{Yt(s,"mono.callCsFunction:",o)}}}(y):2==d&&!m&&g?function(e){const t=e.fn,n=e.arg_marshalers[0],r=e.arg_marshalers[1],o=e.res_converter,a=e.fqn;return e=null,function(s){const i=Jt();try{L&&e.isDisposed;const a=n(s),i=r(s),c=t(a,i);o(s,c)}catch(e){ho(s,e)}finally{Yt(i,"mono.callCsFunction:",a)}}}(y):function(e){const t=e.args_count,n=e.arg_marshalers,r=e.res_converter,o=e.arg_cleanup,a=e.has_cleanup,s=e.fn,i=e.fqn;return e=null,function(c){const l=Jt();try{L&&e.isDisposed;const i=new Array(t);for(let e=0;e<t;e++){const t=(0,n[e])(c);i[e]=t}const l=s(...i);if(r&&r(c,l),a)for(let e=0;e<t;e++){const t=o[e];t&&t(i[e])}}catch(e){ho(c,e)}finally{Yt(l,"mono.callCsFunction:",i)}}}(y):function(e){const t=e.fn,n=e.arg_marshalers[0],r=e.fqn;return e=null,function(o){const a=Jt();try{L&&e.isDisposed;const r=n(o);t(r)}catch(e){ho(o,e)}finally{Yt(a,"mono.callCsFunction:",r)}}}(y):function(e){const t=e.fn,n=e.fqn;return e=null,function(r){const o=Jt();try{L&&e.isDisposed,t()}catch(e){ho(r,e)}finally{Yt(o,"mono.callCsFunction:",n)}}}(y),S[nn]=y;const k=nr.length;nr.push(S),Z(a,k),_r(s,u),Yt(r,"mono.bindJsFunction:",t)}catch(e){Z(a,0),t.err(e.toString()),dr(s,e,u)}finally{u.release(),c.release()}},function(e,t){const n=Nr(e);n&&"function"==typeof n&&n[tn]||w(!1,`Bound function handle expected ${e}`),n(t)},function(e,t){const n=nr[e];n||w(!1,`Imported function handle expected ${e}`),n(t)},function(e,n,r,o,a){fr();const s=De(e),i=De(a),c=Jt();try{const e=fn(r);1!==e&&w(!1,`Signature version ${e} mismatch.`);const a=_n(r),l=rt(s);l||w(!1,"fully_qualified_name must be string"),lt(`Binding [JSExport] ${l}`);const{assembly:p,namespace:d,classname:_,methodname:f}=Ur(l),m=wr(p);if(!m)throw new Error("Could not find assembly: "+p);const h=St.mono_wasm_assembly_find_class(m,d,_);if(!h)throw new Error("Could not find class: "+d+":"+_+" in assembly "+p);const b=`__Wrapper_${f}_${n}`,g=St.mono_wasm_assembly_find_method(h,b,-1);if(!g)throw new Error(`Could not find method: ${b} in ${h} [${p}]`);const y=new Array(a);for(let e=0;e<a;e++){const t=sn(r,e+2),n=cn(t);R.Task;const o=Yr(t,n,e+2);o||w(!1,"ERR43: argument marshaler must be resolved"),y[e]=o}const S=sn(r,1),k=cn(S);R.Task;const v=Rn(S,k,1),E={method:g,fqn:l,args_count:a,arg_marshalers:y,res_converter:v,isDisposed:!1};let U;U=0!=a||v?1!=a||v?1==a&&v?function(e){const n=e.method,r=e.arg_marshalers[0],o=e.res_converter,a=e.fqn;return e=null,function(e){const s=Jt();u.assert_runtime_running();const i=t.stackSave();try{const t=on(3);return r(t,e),kr(n,t),o(t)}finally{t.stackRestore(i),Yt(s,"mono.callCsFunction:",a)}}}(E):2==a&&v?function(e){const n=e.method,r=e.arg_marshalers[0],o=e.arg_marshalers[1],a=e.res_converter,s=e.fqn;return e=null,function(e,i){const c=Jt();u.assert_runtime_running();const l=t.stackSave();try{const t=on(4);return r(t,e),o(t,i),kr(n,t),a(t)}finally{t.stackRestore(l),Yt(c,"mono.callCsFunction:",s)}}}(E):function(e){const n=e.args_count,r=e.arg_marshalers,o=e.res_converter,a=e.method,s=e.fqn;return e=null,function(...e){const i=Jt();u.assert_runtime_running();const c=t.stackSave();try{const t=on(2+n);for(let o=0;o<n;o++){const n=r[o];n&&n(t,e[o])}if(kr(a,t),o)return o(t)}finally{t.stackRestore(c),Yt(i,"mono.callCsFunction:",s)}}}(E):function(e){const n=e.method,r=e.arg_marshalers[0],o=e.fqn;return e=null,function(e){const a=Jt();u.assert_runtime_running();const s=t.stackSave();try{const t=on(3);r(t,e),kr(n,t)}finally{t.stackRestore(s),Yt(a,"mono.callCsFunction:",o)}}}(E):function(e){const n=e.method,r=e.fqn;return e=null,function(){const e=Jt();u.assert_runtime_running();const o=t.stackSave();try{const e=on(2);kr(n,e)}finally{t.stackRestore(o),Yt(e,"mono.callCsFunction:",r)}}}(E),U[en]=E,function(e,t,n,r,o,a){const s=`${t}.${n}`.replace(/\//g,".").split(".");let i,c=vr.get(e);c||(c={},vr.set(e,c),vr.set(e+".dll",c)),i=c;for(let e=0;e<s.length;e++){const t=s[e];if(""!=t){let e=i[t];void 0===e&&(e={},i[t]=e),e||w(!1,`${t} not found while looking up ${n}`),i=e}}i[r]||(i[r]=a),i[`${r}.${o}`]=a}(p,d,_,f,n,U),Yt(c,"mono.bindCsFunction:",l),_r(o,i)}catch(e){t.err(e.toString()),dr(o,e,i)}finally{i.release(),s.release()}},function(e){const t=an(e,0),n=an(e,1),r=an(e,2),o=an(e,3),a=mn(t),s=mn(o),i=kn(r);if(i===T){const{promise:e,promise_control:r}=y();if(vn(n,Dr(e)),a!==R.None){const e=Jn(t);r.reject(e)}else if(s!==R.Task){const e=Kt.get(s);e||w(!1,`Unknown sub_converter for type ${R[s]}. ${Jr}`);const t=e(o);r.resolve(t)}}else{const e=Nr(i);e||w(!1,`ERR25: promise not found for js_handle: ${i} `),u.assertIsControllablePromise(e);const n=u.getPromiseController(e);if(a!==R.None){const e=Jn(t);n.reject(e)}else s!==R.Task&&n.resolve(o)}hn(n,R.Task),hn(t,R.None)},function(e,t,n,r,o,a,s){const i=De(s);try{const s=tt(e,e+2*t),c=o?s.toUpperCase():s.toLowerCase();if(c.length<=r)return nt(n,n+2*r,c),void _r(a,i);const l=Ue();let u=1;if(o)for(let e=0;e<s.length;e+=u)if(vc(s,e)){u=2;const t=s.substring(e,e+2),r=t.toUpperCase();Ec(l,n,r.length>2?t:r,e)}else{u=1;const t=s[e].toUpperCase();H(l,n+2*e,(t.length>1?s[e]:t).charCodeAt(0))}else for(let e=0;e<s.length;e+=u)if(vc(s,e)){u=2;const t=s.substring(e,e+2),r=t.toLowerCase();Ec(l,n,r.length>2?t:r,e)}else{u=1;const t=s[e].toLowerCase();H(l,n+2*e,(t.length>1?s[e]:t).charCodeAt(0))}}catch(e){dr(a,e,i)}finally{i.release()}},function(e,t,n,r,o,a,s,i){const c=De(e),l=De(i);try{const e=rt(c);if(!e)throw new Error("Cannot change case, the culture name is null.");const i=tt(t,t+2*n),u=a?i.toLocaleUpperCase(e):i.toLocaleLowerCase(e);if(u.length<=i.length)return nt(r,r+2*o,u),void _r(s,l);const p=Ue();let d=1;if(a)for(let t=0;t<i.length;t+=d)if(vc(i,t)){d=2;const n=i.substring(t,t+2),o=n.toLocaleUpperCase(e);Ec(p,r,o.length>2?n:o,t)}else{d=1;const n=i[t].toLocaleUpperCase(e);H(p,r+2*t,(n.length>1?i[t]:n).charCodeAt(0))}else for(let t=0;t<i.length;t+=d)if(vc(i,t)){d=2;const n=i.substring(t,t+2),o=n.toLocaleLowerCase(e);Ec(p,r,o.length>2?n:o,t)}else{d=1;const n=i[t].toLocaleLowerCase(e);H(p,r+2*t,(n.length>1?i[t]:n).charCodeAt(0))}_r(s,l)}catch(e){dr(s,e,l)}finally{c.release(),l.release()}},function(e,t,n,r,o,a,s,i){const c=De(e),l=De(i);try{const e=rt(c),i=et(t,t+2*n),u=et(r,r+2*o),p=31&a,d=e||void 0;return _r(s,l),Uc(i,u,d,p)}catch(e){return dr(s,e,l),-2}finally{c.release(),l.release()}},function(e,t,n,r,o,a,s,i){const c=De(e),l=De(i);try{const e=rt(c),i=Ic(r,o);if(0==i.length)return 1;const u=Ic(t,n);if(u.length<i.length)return 0;const p=Uc(u.slice(0,i.length),i,e||void 0,31&a);return _r(s,l),0===p?1:0}catch(e){return dr(s,e,l),-1}finally{c.release(),l.release()}},function(e,t,n,r,o,a,s,i){const c=De(e),l=De(i);try{const e=rt(c),i=Ic(r,o);if(0==i.length)return 1;const u=Ic(t,n),p=u.length-i.length;if(p<0)return 0;const d=Uc(u.slice(p,u.length),i,e||void 0,31&a);return _r(s,l),0===d?1:0}catch(e){return dr(s,e,l),-1}finally{c.release(),l.release()}},function(e,t,n,r,o,a,s,i,c){const l=De(e),u=De(c);try{const e=et(t,t+2*n);if(0==Tc(e).length)return _r(i,u),s?0:o;const c=et(r,r+2*o);if(0==Tc(c).length)return _r(i,u),s?0:o;const d=rt(l)||void 0,_=31&a,f=new Intl.Segmenter(d,{granularity:"grapheme"}),m=Array.from(f.segment(e)).map((e=>e.segment));let h=0,b=!1,g=-1,y=0,w=0,S=0;for(;!b;){const e=f.segment(c.slice(h,c.length))[Symbol.iterator]();let t=e.next();if(t.done)break;let n=p(t.value.segment,m[0],d,_);if(w=S,t=e.next(),t.done){g=n?w:g;break}if(y=t.value.index,S=w+y,n){for(let r=1;r<m.length;r++){if(t.done){b=!0;break}if(n=p(t.value.segment,m[r],d,_),!n)break;t=e.next()}if(b)break}if(n&&(g=w,s))break;h=S}return _r(i,u),g}catch(e){return dr(i,e,u),-1}finally{l.release(),u.release()}function p(e,t,n,r){return 0===Uc(e,t,n,r)}},function(e,t,n,r,o,a){const s=De(e),i=De(a);try{const e=rt(s)||void 0,a={EnglishName:"",YearMonth:"",MonthDay:"",LongDates:"",ShortDates:"",EraNames:"",AbbreviatedEraNames:"",DayNames:"",AbbreviatedDayNames:"",ShortestDayNames:"",MonthNames:"",AbbreviatedMonthNames:"",MonthGenitiveNames:"",AbbrevMonthGenitiveNames:""},c=new Date(999,10,22);a.EnglishName=function(e){const t=function(e){try{return new Intl.Locale(e).calendars}catch(t){try{return new Intl.Locale(e).getCalendars()}catch(e){return}}}(e);return t&&0!=t.length?t[0]:""}(e);const l=function(e){const t=new Date(2023,5,25),n=[],r=[],o=[];for(let a=0;a<7;a++)n[a]=t.toLocaleDateString(e,{weekday:"long"}),r[a]=t.toLocaleDateString(e,{weekday:"short"}),o[a]=t.toLocaleDateString(e,{weekday:"narrow"}),t.setDate(t.getDate()+1);return{long:n,abbreviated:r,shortest:o}}(e);a.DayNames=l.long.join(xc),a.AbbreviatedDayNames=l.abbreviated.join(xc),a.ShortestDayNames=l.shortest.join(xc);const u=function(e){const t=e?e.split("-")[0]:"",n="ar"==t?8:"fa"==t?3:0,r=new Date(2021,n,1),o=[],a=[],s=[],i=[];let c,l;for(let t=n;t<12+n;t++){const u=t%12;r.setMonth(u);const p=r.toLocaleDateString(e,{month:"long"}),d=r.toLocaleDateString(e,{month:"short"});if(o[t-n]=p,a[t-n]=d,c=null!=c?c:"月"==p.charAt(p.length-1),c){s[t-n]=p,i[t-n]=d;continue}const _=new Intl.DateTimeFormat(e,{day:"numeric"}),f=r.toLocaleDateString(e,{month:"long",day:"numeric"});if(s[t-n]=Cc(r,f,p,_),l=null!=l?l:/^\d+$/.test(d),l){i[t-n]=d;continue}const m=r.toLocaleDateString(e,{month:"short",day:"numeric"});i[t-n]=Cc(r,m,d,_)}return{long:o,abbreviated:a,longGenitive:s,abbreviatedGenitive:i}}(e);a.MonthNames=u.long.join(xc),a.AbbreviatedMonthNames=u.abbreviated.join(xc),a.MonthGenitiveNames=u.longGenitive.join(xc),a.AbbrevMonthGenitiveNames=u.abbreviatedGenitive.join(xc),a.YearMonth=function(e,t){let n=t.toLocaleDateString(e,{year:"numeric",month:"long"}).toLowerCase();const r=t.toLocaleString(e,{month:"long"}).toLowerCase().trim();if("月"==r.charAt(r.length-1))return"yyyy年M月";n=n.replace(r,jc),n=n.replace("999",Rc);const o=t.toLocaleDateString(e,{year:"numeric"});return n.replace(o,Rc)}(e,c),a.MonthDay=function(e,t){let n=t.toLocaleDateString(e,{month:"long",day:"numeric"}).toLowerCase();const r=t.toLocaleString(e,{month:"long"}).toLowerCase().trim();if("月"==r.charAt(r.length-1))return"M月d日";const o=new Intl.DateTimeFormat(e,{day:"numeric"}),a=Cc(t,n,r,o);n=n.replace(a,jc),n=n.replace("22",Lc);const s=o.format(t);return n.replace(s,Lc)}(e,c),a.ShortDates=function(e){if("fa"==(null==e?void 0:e.substring(0,2)))return"yyyy/M/d";const t=new Date(2014,0,2);let n=t.toLocaleDateString(e,{dateStyle:"short"});if(n.includes("14"))n=n.replace("2014",Rc),n=n.replace("14",Rc);else{const r=t.toLocaleDateString(e,{year:"numeric"}),o=r.substring(r.length-2,r.length);n=n.replace(r,Rc),o&&(n=n.replace(o,Rc))}if(n.includes("1"))n=n.replace("01","MM"),n=n.replace("1","M");else{const r=t.toLocaleDateString(e,{month:"numeric"}),o=1==r.length?"M":"MM";n=n.replace(r,o)}if(n.includes("2"))n=n.replace("02","dd"),n=n.replace("2","d");else{const r=t.toLocaleDateString(e,{day:"numeric"}),o=1==r.length?"d":"dd";n=n.replace(r,o)}return n}(e),a.LongDates=function(e,t){if("th-TH"==e)return"ddddที่ d MMMM g yyyy";let n=new Intl.DateTimeFormat(e,{weekday:"long",year:"numeric",month:"long",day:"numeric"}).format(t).toLowerCase();const r=t.toLocaleString(e,{month:"long"}).trim().toLowerCase(),o=r.charAt(r.length-1);if("月"==o||"월"==o){const r=t.toLocaleString(e,{month:"short"});n=n.replace(r,`M${o}`)}else{const o=Cc(t,n,r,new Intl.DateTimeFormat(e,{weekday:"long",year:"numeric",day:"numeric"}));n=n.replace(o,jc)}n=n.replace("999",Rc);const a=t.toLocaleDateString(e,{year:"numeric"});n=n.replace(a,Rc);const s=t.toLocaleDateString(e,{weekday:"long"}).toLowerCase(),i=Cc(t,n,s,new Intl.DateTimeFormat(e,{year:"numeric",month:"long",day:"numeric"}));n=n.replace(i,"dddd"),n=n.replace("22",Lc);const c=t.toLocaleDateString(e,{day:"numeric"});return n.replace(c,Lc)}(e,c);const p=function(e,t,n){if(function(e){return e>1&&e<15||22==e||23==e}(n))return{eraNames:"",abbreviatedEraNames:""};const r=e.toLocaleDateString(t,{year:"numeric"}),o=e.toLocaleDateString(t,{day:"numeric"}),a=e.toLocaleDateString(t,{era:"short"}),s=e.toLocaleDateString(t,{era:"narrow"}),i=a.includes(r)?l(r):l(e.getFullYear().toString());return{eraNames:c(i.eraDateParts,i.ignoredPart),abbreviatedEraNames:c(i.abbrEraDateParts,i.ignoredPart)};function c(e,n){const r=new RegExp(`^((?!${n}|[0-9]).)*$`),o=e.filter((e=>r.test(e)));if(0==o.length)throw new Error(`Internal error, era for locale ${t} was in non-standard format.`);return o[0].trim()}function l(e){return a.startsWith(e)||a.endsWith(e)?{eraDateParts:a.split(o),abbrEraDateParts:s.split(o),ignoredPart:e}:{eraDateParts:a.split(e),abbrEraDateParts:s.split(e),ignoredPart:o}}}(c,e,t);a.EraNames=p.eraNames,a.AbbreviatedEraNames=p.abbreviatedEraNames;const d=Object.values(a).join("##");if(d.length>r)throw new Error(`Calendar info exceeds length of ${r}.`);return nt(n,n+2*d.length,d),_r(o,i),d.length}catch(e){return dr(o,e,i),-1}finally{s.release(),i.release()}},function(e,t,n,r,o){const a=De(e),s=De(o);try{const e=rt(a),o={AmDesignator:"",PmDesignator:"",LongTimePattern:"",ShortTimePattern:""},i=Ac(e),c=function(e){const t=new Date("August 19, 1975 12:15:30"),n=new Date("August 19, 1975 11:15:30"),r=vl(t,e);return{am:vl(n,e),pm:r}}(i);o.AmDesignator=c.am,o.PmDesignator=c.pm,o.LongTimePattern=function(e,t){const n=18..toLocaleString(e),r=6..toLocaleString(e),o=new Date("August 19, 1975 18:15:30"),a=new Intl.DateTimeFormat(e,{timeStyle:"medium"}),s=a.format(o),i=o.toLocaleTimeString(e,{minute:"numeric"}),c=o.toLocaleTimeString(e,{second:"numeric"});let l=s.replace(t.pm,"tt").replace(i,"mm").replace(c,"ss");const u=l.includes(n),p=`${(0).toLocaleString(e)}${r}`,d=new Date("August 19, 1975 6:15:30"),_=a.format(d);let f;if(u)f=_.includes(p)?"HH":"H",l=l.replace(n,f);else{const e=_.includes(p);f=e?"hh":"h",l=l.replace(e?p:r,f)}return l}(i,c),o.ShortTimePattern=function(e){const t=e.indexOf("ss");if(t>0){const n=`${e[t-1]}ss`,r=e.replace(n,"");e=r.length>t&&"t"!=r[r.length-1]?e.split(n)[0]:r}return e}(o.LongTimePattern);const l=Object.values(o).join("##");if(l.length>n)throw new Error(`Culture info exceeds length of ${n}.`);return nt(t,t+2*l.length,l),_r(r,s),l.length}catch(e){return dr(r,e,s),-1}finally{a.release(),s.release()}},function(e,t,n){const r=De(e),o=De(n);try{return function(e){const t=El(e);if(t)return 7==t.firstDay?0:t.firstDay;if(["en-AE","en-SD","fa-IR"].includes(e))return 6;const n=e.split("-")[0];return["zh","th","pt","mr","ml","ko","kn","ja","id","hi","he","gu","fil","bn","am","ar"].includes(n)||["ta-SG","ta-IN","sw-KE","ms-SG","fr-CA","es-MX","en-US","en-ZW","en-ZA","en-WS","en-VI","en-UM","en-TT","en-SG","en-PR","en-PK","en-PH","en-MT","en-MO","en-MH","en-KE","en-JM","en-IN","en-IL","en-HK","en-GU","en-DM","en-CA","en-BZ","en-BW","en-BS","en-AU","en-AS","en-AG"].includes(e)?0:1}(Ac(rt(r)))}catch(e){return dr(t,e,o),-1}finally{r.release(),o.release()}},function(e,t,n){const r=De(e),o=De(n);try{return function(e){const t=El(e);if(t)return 7==t.minimalDays?1:t.minimalDays<4?0:2;const n=e.split("-")[0];return["pt-PT","fr-CH","fr-FR","fr-BE","es-ES","en-SE","en-NL","en-JE","en-IM","en-IE","en-GI","en-GG","en-GB","en-FJ","en-FI","en-DK","en-DE","en-CH","en-BE","en-AT","el-GR"].includes(e)||["sv","sk","ru","pl","nl","no","lt","it","hu","fi","et","de","da","cs","ca","bg"].includes(n)?2:0}(Ac(rt(r)))}catch(e){return dr(t,e,o),-1}finally{r.release(),o.release()}}],Il=[...Ul,function(e,t,n,r,o){ol();const a=De(n),s=De(t),i=De(o);try{const t=rt(s);if(!t||"string"!=typeof t)return void dr(r,"ERR12: Invalid method name object @"+s.value,i);const n=function(e){return e!==T&&e!==I?Nr(e):null}(e);if(j(n))return void dr(r,"ERR13: Invalid JS object handle '"+e+"' while invoking '"+t+"'",i);const o=hl(a);try{const e=n[t];if(void 0===e)throw new Error("Method: '"+t+"' not found for: '"+Object.prototype.toString.call(n)+"'");Wc(e.apply(n,o),i,!0),_r(r)}catch(e){dr(r,e,i)}}finally{a.release(),s.release(),i.release()}},function(e,t,n,r){ol();const o=De(t),a=De(r);try{const t=rt(o);if(!t)return void dr(n,"Invalid property name object '"+o.value+"'",a);const r=Nr(e);if(j(r))return void dr(n,"ERR01: Invalid JS object handle '"+e+"' while geting '"+t+"'",a);Wc(r[t],a,!0),_r(n)}catch(e){dr(n,e,a)}finally{a.release(),o.release()}},function(e,t,n,r,o,a,s){ol();const i=De(n),c=De(t),l=De(s);try{const n=rt(c);if(!n)return void dr(a,"Invalid property name object '"+t+"'",l);const s=Nr(e);if(j(s))return void dr(a,"ERR02: Invalid JS object handle '"+e+"' while setting '"+n+"'",l);const u=fl(i);if(r)s[n]=u;else{if(!r&&!Object.prototype.hasOwnProperty.call(s,n))return;!0===o?Object.prototype.hasOwnProperty.call(s,n)&&(s[n]=u):s[n]=u}_r(a,l)}catch(e){dr(a,e,l)}finally{l.release(),c.release(),i.release()}},function(e,t,n,r){ol();const o=De(r);try{const r=Nr(e);if(j(r))return void dr(n,"ERR03: Invalid JS object handle '"+e+"' while getting ["+t+"]",o);Wc(r[t],o,!0),_r(n)}catch(e){dr(n,e,o)}finally{o.release()}},function(e,t,n,r,o){ol();const a=De(n),s=De(o);try{const n=Nr(e);if(j(n))return void dr(r,"ERR04: Invalid JS object handle '"+e+"' while setting ["+t+"]",s);const o=fl(a);n[t]=o,_r(r,s)}catch(e){dr(r,e,s)}finally{s.release(),a.release()}},function(e,r,o){ol();const a=De(e),s=De(o);try{const e=rt(a);let o;if(o=e?"Module"==e?t:"INTERNAL"==e?n:globalThis[e]:globalThis,null===o||void 0===typeof o)return void dr(r,"Global object '"+e+"' not found.",s);Wc(o,s,!0),_r(r)}catch(e){dr(r,e,s)}finally{s.release(),a.release()}},function(e,t,n,r){const o=De(t),a=De(e),s=De(r);try{const e=rt(a);if(!e)return void dr(n,"Invalid name @"+a.value,s);const t=globalThis[e];if(null==t)return void dr(n,"JavaScript host object '"+e+"' not found.",s);try{const e=hl(o),r=function(e,t){let n=[];return n[0]=e,t&&(n=n.concat(t)),new(e.bind.apply(e,n))};Wc(Dr(r(t,e)),s,!1),_r(n)}catch(e){return void dr(n,e,s)}}finally{s.release(),o.release(),a.release()}},function(e,t,n){const r=De(n);try{const n=Nr(e);if(j(n))return void dr(t,"ERR06: Invalid JS object handle '"+e+"'",r);Gc(n,r),_r(t)}catch(e){dr(t,String(e),r)}finally{r.release()}},function(e,t,n,r,o,a,s){const i=De(s);try{const s=function(e,t,n,r,o){let a=null;switch(o){case 5:a=new Int8Array(n-t);break;case 6:a=new Uint8Array(n-t);break;case 7:a=new Int16Array(n-t);break;case 8:a=new Uint16Array(n-t);break;case 9:a=new Int32Array(n-t);break;case 10:a=new Uint32Array(n-t);break;case 13:a=new Float32Array(n-t);break;case 14:a=new Float64Array(n-t);break;case 15:a=new Uint8ClampedArray(n-t);break;default:throw new Error("Unknown array type "+o)}return function(e,t,n,r,o){if(Pc(e)&&e.BYTES_PER_ELEMENT){if(o!==e.BYTES_PER_ELEMENT)throw new Error("Inconsistent element sizes: TypedArray.BYTES_PER_ELEMENT '"+e.BYTES_PER_ELEMENT+"' sizeof managed element: '"+o+"'");let a=(r-n)*o;const s=e.length*e.BYTES_PER_ELEMENT;a>s&&(a=s);const i=n*o;return new Uint8Array(e.buffer,0,a).set(Ee().subarray(t+i,t+i+a)),a}throw new Error("Object '"+e+"' is not a typed array")}(a,e,t,n,r),a}(e,t,n,r,o);Wc(s,i,!0),_r(a)}catch(e){dr(a,String(e),i)}finally{i.release()}},function(e,t,n,r,o){try{ol();const e=globalThis.Blazor;if(!e)throw new Error("The blazor.webassembly.js library is not loaded.");return e._internal.invokeJSFromDotNet(t,n,r,o)}catch(t){const n=t.message+"\n"+t.stack,r=Be();return ot(n,r),r.copy_to_address(e),r.release(),0}}];function Tl(e){const t=e.env||e.a;if(!t)return void pt("WARNING: Neither imports.env or imports.a were present when instantiating the wasm module. This likely indicates an emscripten configuration issue.");const n=new Array(Il.length);for(const e in t){const r=t[e];if("function"==typeof r&&-1!==r.toString().indexOf("runtime_idx"))try{const{runtime_idx:t}=r();if(void 0!==n[t])throw new Error(`Duplicate runtime_idx ${t}`);n[t]=e}catch(e){}}for(const[e,r]of Il.entries()){const o=n[e];if(void 0!==o){const e=t[o];if("function"!=typeof e)throw new Error(`Expected ${o} to be a function`);t[o]=r,lt(`Replaced WASM import ${o} stub ${e.name} with ${r.name||"minified implementation"}`)}}}const xl="https://dotnet.generated.invalid/wasm-memory";async function Al(){if(void 0===globalThis.caches)return null;if(a&&!1===globalThis.window.isSecureContext)return null;const e=`dotnet-resources${document.baseURI.substring(document.location.origin.length)}`;try{return await globalThis.caches.open(e)||null}catch(e){return pt("Failed to open cache"),null}}async function jl(){if(l.memorySnapshotCacheKey)return l.memorySnapshotCacheKey;if(!l.subtle)return null;const t=Object.assign({},l.config);t.resourcesHash=t.resources.hash,delete t.assets,delete t.resources,t.preferredIcuAsset=u.preferredIcuAsset,delete t.forwardConsoleLogsToWS,delete t.diagnosticTracing,delete t.appendElementOnExit,delete t.assertAfterExit,delete t.interopCleanupOnExit,delete t.logExitCode,delete t.pthreadPoolSize,delete t.asyncFlushOnExit,delete t.remoteSources,delete t.ignorePdbLoadErrors,delete t.maxParallelDownloads,delete t.enableDownloadRetry,delete t.exitAfterSnapshot,delete t.extensions,t.GitHash=u.gitHash,t.ProductVersion=e;const n=JSON.stringify(t),r=await l.subtle.digest("SHA-256",(new TextEncoder).encode(n)),o=new Uint8Array(r),a=Array.from(o).map((e=>e.toString(16).padStart(2,"0"))).join("");return l.memorySnapshotCacheKey=`${xl}-${a}`,l.memorySnapshotCacheKey}async function Rl(){await Io(),await async function(){try{if(!l.config.startupMemoryCache)return;const e=await jl();if(!e)return;const t=await Al();if(!t)return;const n=await t.match(e),r=null==n?void 0:n.headers.get("content-length"),o=r?parseInt(r):void 0;l.loadedMemorySnapshotSize=o,l.storeMemorySnapshotPending=!o}catch(e){pt("Failed find memory snapshot in the cache",e)}finally{l.loadedMemorySnapshotSize||u.memorySnapshotSkippedOrDone.promise_control.resolve()}}()}function Ll(e){const n=Jt();e.locateFile||(e.locateFile=e.__locateFile=e=>u.scriptDirectory+e),e.out||(e.out=console.log.bind(console)),e.err||(e.err=console.error.bind(console)),u.out=e.out,u.err=e.err,e.mainScriptUrlOrBlob=u.scriptUrl;const h=e.instantiateWasm,b=e.preInit?"function"==typeof e.preInit?[e.preInit]:e.preInit:[],g=e.preRun?"function"==typeof e.preRun?[e.preRun]:e.preRun:[],y=e.postRun?"function"==typeof e.postRun?[e.postRun]:e.postRun:[],S=e.onRuntimeInitialized?e.onRuntimeInitialized:()=>{};e.instantiateWasm=(e,n)=>function(e,n,r){const o=Jt();if(r){const t=r(e,((e,t)=>{Yt(o,"mono.instantiateWasm"),l.afterInstantiateWasm.promise_control.resolve(),n(e,t)}));return t}return async function(e,n){var r;try{await u.afterConfigLoaded,lt("instantiate_wasm_module"),await l.beforePreInit.promise,t.addRunDependency("instantiate_wasm_module");const o=async function(){d&&(await u.simd()||w(!1,"This browser/engine doesn't support WASM SIMD. Please use a modern version. See also https://aka.ms/dotnet-wasm-features")),_&&(await u.exceptions()||w(!1,"This browser/engine doesn't support WASM exception handling. Please use a modern version. See also https://aka.ms/dotnet-wasm-features"))}();Tl(e);const i=await u.wasmDownloadPromise.promise;if(await o,await async function(e,t,n){e&&e.pendingDownloadInternal&&e.pendingDownloadInternal.response||w(!1,"Can't load dotnet.native.wasm");const r=await e.pendingDownloadInternal.response,o=r.headers&&r.headers.get?r.headers.get("Content-Type"):void 0;let i,c;if("function"==typeof WebAssembly.instantiateStreaming&&"application/wasm"===o){lt("instantiate_wasm_module streaming");const e=await WebAssembly.instantiateStreaming(r,t);i=e.instance,c=e.module}else{a&&"application/wasm"!==o&&pt('WebAssembly resource does not have the expected content type "application/wasm", so falling back to slower ArrayBuffer instantiation.');const e=await r.arrayBuffer();if(lt("instantiate_wasm_module buffered"),s)c=new WebAssembly.Module(e),i=new WebAssembly.Instance(c,t);else{const n=await WebAssembly.instantiate(e,t);i=n.instance,c=n.module}}n(i,c)}(i,e,n),i.pendingDownloadInternal=null,i.pendingDownload=null,i.buffer=null,i.moduleExports=null,lt("instantiate_wasm_module done"),l.loadedMemorySnapshotSize){try{const e=(null===(r=t.asm)||void 0===r?void 0:r.memory)||t.wasmMemory;e.grow(l.loadedMemorySnapshotSize-e.buffer.byteLength+65535>>>16),l.updateMemoryViews()}catch(e){pt("failed to resize memory for the snapshot",e),l.loadedMemorySnapshotSize=void 0}u.memorySnapshotSkippedOrDone.promise_control.resolve()}l.afterInstantiateWasm.promise_control.resolve()}catch(e){throw dt("instantiate_wasm_module() failed",e),u.mono_exit(1,e),e}t.removeRunDependency("instantiate_wasm_module")}(e,n),[]}(e,n,h),e.preInit=[()=>function(e){t.addRunDependency("mono_pre_init");const n=Jt();try{$l(!1),lt("preInit"),l.beforePreInit.promise_control.resolve(),e.forEach((e=>e()))}catch(e){throw dt("user preInint() failed",e),u.mono_exit(1,e),e}(async()=>{try{await async function(){lt("mono_wasm_pre_init_essential_async"),t.addRunDependency("mono_wasm_pre_init_essential_async"),t.removeRunDependency("mono_wasm_pre_init_essential_async")}(),Yt(n,"mono.preInit")}catch(e){throw u.mono_exit(1,e),e}l.afterPreInit.promise_control.resolve(),t.removeRunDependency("mono_pre_init")})()}(b)],e.preRun=[()=>async function(e){t.addRunDependency("mono_pre_run_async");try{await l.afterInstantiateWasm.promise,await l.afterPreInit.promise,lt("preRunAsync");const t=Jt();e.map((e=>e())),Yt(t,"mono.preRun")}catch(e){throw dt("user callback preRun() failed",e),u.mono_exit(1,e),e}l.afterPreRun.promise_control.resolve(),t.removeRunDependency("mono_pre_run_async")}(g)],e.onRuntimeInitialized=()=>async function(e){try{await l.afterPreRun.promise,lt("onRuntimeInitialized"),l.mono_wasm_exit=St.mono_wasm_exit,l.abort=e=>{throw u.is_exited()||St.mono_wasm_abort(),e};const n=Jt();if(l.beforeOnRuntimeInitialized.promise_control.resolve(),await async function(){await l.allAssetsInMemory.promise,l.config.assets&&(u.actual_downloaded_assets_count!=u.expected_downloaded_assets_count&&w(!1,`Expected ${u.expected_downloaded_assets_count} assets to be downloaded, but only finished ${u.actual_downloaded_assets_count}`),u.actual_instantiated_assets_count!=u.expected_instantiated_assets_count&&w(!1,`Expected ${u.expected_instantiated_assets_count} assets to be in memory, but only instantiated ${u.actual_instantiated_assets_count}`),u._loaded_files.forEach((e=>u.loadedFiles.push(e.url))),lt("all assets are loaded in wasm memory"))}(),L&&l.config.startupMemoryCache,await async function(){const e=Jt();if(l.loadedMemorySnapshotSize){const e=await async function(){try{const e=await jl();if(!e)return;const t=await Al();if(!t)return;const n=await t.match(e);if(!n)return;return n.arrayBuffer()}catch(e){return void pt("Failed load memory snapshot from the cache",e)}}(),t=Ee();return e.byteLength!==t.byteLength&&w(!1,"Loaded memory is not the expected size"),t.set(new Uint8Array(e),0),void lt("Loaded WASM linear memory from browser cache")}for(const e in l.config.environmentVariables){const t=l.config.environmentVariables[e];if("string"!=typeof t)throw new Error(`Expected environment variable '${e}' to be a string but it was ${typeof t}: '${t}'`);Nl(e,t)}l.config.startupMemoryCache&&St.mono_jiterp_update_jit_call_dispatcher(0),l.config.runtimeOptions&&function(e){if(!Array.isArray(e))throw new Error("Expected runtimeOptions to be an array of strings");const n=t._malloc(4*e.length);let r=0;for(let o=0;o<e.length;++o){const a=e[o];if("string"!=typeof a)throw new Error("Expected runtimeOptions to be an array of strings");t.setValue(n+4*r,St.mono_wasm_strdup(a),"i32"),r+=1}St.mono_wasm_parse_runtime_options(e.length,n)}(l.config.runtimeOptions),l.config.aotProfilerOptions&&function(e){f||w(!1,"AOT profiler is not enabled, please use <WasmProfilers>aot;</WasmProfilers> in your project file."),null==e&&(e={}),"writeAt"in e||(e.writeAt="System.Runtime.InteropServices.JavaScript.JavaScriptExports::StopProfile"),"sendTo"in e||(e.sendTo="Interop/Runtime::DumpAotProfileData");const t="aot:write-at-method="+e.writeAt+",send-to-method="+e.sendTo;vt.mono_wasm_profiler_init_aot(t)}(l.config.aotProfilerOptions),l.config.browserProfilerOptions&&(l.config.browserProfilerOptions,m||w(!1,"Browser profiler is not enabled, please use <WasmProfilers>browser;</WasmProfilers> in your project file."),vt.mono_wasm_profiler_init_browser("browser:")),Dl("unused",l.config.debugLevel),l.config.startupMemoryCache&&(St.mono_jiterp_update_jit_call_dispatcher(-1),await async function(e){try{const t=await jl();if(!t)return;const n=await Al();if(!n)return;const r=L?new Uint8Array(e).slice(0):e,o=new Response(r,{headers:{"content-type":"wasm-memory","content-length":e.byteLength.toString()}});await n.put(t,o),async function(e){try{const t=await Al();if(!t)return;const n=await t.keys();for(const r of n)r.url&&r.url!==e&&r.url.startsWith(xl)&&await t.delete(r)}catch(e){return}}(t)}catch(e){return void pt("Failed to store memory snapshot in the cache",e)}}(Ee().buffer),l.storeMemorySnapshotPending=!1),Yt(e,"mono.memorySnapshot")}(),l.config.exitAfterSnapshot){const e=l.ExitStatus?new l.ExitStatus(0):new Error("Snapshot taken, exiting because exitAfterSnapshot was set.");return e.silent=!0,void u.mono_exit(0,e)}L&&l.config.startupMemoryCache,function(){if(!l.mono_wasm_bindings_is_ready){lt("bindings_init"),l.mono_wasm_bindings_is_ready=!0;try{const e=Jt();Ve||("undefined"!=typeof TextDecoder&&(He=new TextDecoder("utf-16le"),Ge=new TextDecoder("utf-8",{fatal:!1}),qe=new TextDecoder("utf-8"),Je=new TextEncoder),Ve=t._malloc(12)),function(){const e="System.Runtime.InteropServices.JavaScript";if(l.runtime_interop_module=St.mono_wasm_assembly_load(e),!l.runtime_interop_module)throw"Can't find bindings module assembly: "+e;if(l.runtime_interop_namespace="System.Runtime.InteropServices.JavaScript",l.runtime_interop_exports_classname="JavaScriptExports",l.runtime_interop_exports_class=St.mono_wasm_assembly_find_class(l.runtime_interop_module,l.runtime_interop_namespace,l.runtime_interop_exports_classname),!l.runtime_interop_exports_class)throw"Can't find "+l.runtime_interop_namespace+"."+l.runtime_interop_exports_classname+" class";const n=To("CallEntrypoint");n||w(!1,"Can't find CallEntrypoint method");const r=To("ReleaseJSOwnedObjectByGCHandle");r||w(!1,"Can't find ReleaseJSOwnedObjectByGCHandle method");const o=To("CreateTaskCallback");o||w(!1,"Can't find CreateTaskCallback method");const a=To("CompleteTask");a||w(!1,"Can't find CompleteTask method");const s=To("CallDelegate");s||w(!1,"Can't find CallDelegate method");const i=To("GetManagedStackTrace");i||w(!1,"Can't find GetManagedStackTrace method");const c=To("LoadSatelliteAssembly");c||w(!1,"Can't find LoadSatelliteAssembly method");const p=To("LoadLazyAssembly");p||w(!1,"Can't find LoadLazyAssembly method"),l.javaScriptExports.call_entry_point=async(e,r)=>{u.assert_runtime_running();const o=t.stackSave();try{t.runtimeKeepalivePush();const o=on(4),a=an(o,1),s=an(o,2),i=an(o,3);so(s,e),r&&0==r.length&&(r=void 0),wo(i,r,R.String),kr(n,o);let c=Gn(a,0,Bn);return null==c&&(c=Promise.resolve(0)),c[$r]=!0,await c}finally{t.runtimeKeepalivePop(),t.stackRestore(o)}},l.javaScriptExports.load_satellite_assembly=e=>{const n=t.stackSave();try{const t=on(3),n=an(t,2);hn(n,R.Array),yo(n,e,R.Byte),kr(c,t)}finally{t.stackRestore(n)}},l.javaScriptExports.load_lazy_assembly=(e,n)=>{const r=t.stackSave();try{const t=on(4),r=an(t,2),o=an(t,3);hn(r,R.Array),hn(o,R.Array),yo(r,e,R.Byte),yo(o,n,R.Byte),kr(p,t)}finally{t.stackRestore(r)}},l.javaScriptExports.release_js_owned_object_by_gc_handle=e=>{e||w(!1,"Must be valid gc_handle"),u.assert_runtime_running();const n=t.stackSave();try{const t=on(3),n=an(t,2);hn(n,R.Object),Un(n,e),kr(r,t)}finally{t.stackRestore(n)}},l.javaScriptExports.create_task_callback=()=>{const e=t.stackSave();u.assert_runtime_running();try{const e=on(2);return kr(o,e),En(an(e,1))}finally{t.stackRestore(e)}},l.javaScriptExports.complete_task=(e,n,r,o)=>{u.assert_runtime_running();const s=t.stackSave();try{const t=on(5),s=an(t,2);hn(s,R.Object),Un(s,e);const i=an(t,3);if(n)ho(i,n);else{hn(i,R.None);const e=an(t,4);o||w(!1,"res_converter missing"),o(e,r)}kr(a,t)}finally{t.stackRestore(s)}},l.javaScriptExports.call_delegate=(e,n,r,o,a,i,c,l)=>{u.assert_runtime_running();const p=t.stackSave();try{const t=on(6),u=an(t,2);if(hn(u,R.Object),Un(u,e),i&&i(an(t,3),n),c&&c(an(t,4),r),l&&l(an(t,5),o),kr(s,t),a)return a(an(t,1))}finally{t.stackRestore(p)}},l.javaScriptExports.get_managed_stack_trace=e=>{u.assert_runtime_running();const n=t.stackSave();try{const t=on(3),n=an(t,2);return hn(n,R.Exception),Un(n,e),kr(i,t),qn(an(t,1))}finally{t.stackRestore(n)}}}(),p||i||function(){if(Object.prototype[Fc]=0,Array.prototype[Fc]=1,ArrayBuffer.prototype[Fc]=2,DataView.prototype[Fc]=3,Function.prototype[Fc]=4,Uint8Array.prototype[Fc]=11,Mc._unbox_buffer_size=65536,Mc._box_buffer=t._malloc(65536),Mc._unbox_buffer=t._malloc(Mc._unbox_buffer_size),Mc._class_int32=Sr("System","Int32"),Mc._class_uint32=Sr("System","UInt32"),Mc._class_double=Sr("System","Double"),Mc._class_boolean=Sr("System","Boolean"),Mc._null_root=Be(),function(){const e=Xc;e.set("m",{steps:[{}],size:0}),e.set("s",{steps:[{convert_root:ot.bind(t)}],size:0,needs_root:!0}),e.set("S",{steps:[{convert_root:at.bind(t)}],size:0,needs_root:!0}),e.set("o",{steps:[{convert_root:Wc.bind(t)}],size:0,needs_root:!0}),e.set("u",{steps:[{convert_root:zc.bind(t,!1)}],size:0,needs_root:!0}),e.set("R",{steps:[{convert_root:Wc.bind(t),byref:!0}],size:0,needs_root:!0}),e.set("j",{steps:[{convert:Jc.bind(t),indirect:"i32"}],size:8}),e.set("b",{steps:[{indirect:"bool"}],size:8}),e.set("i",{steps:[{indirect:"i32"}],size:8}),e.set("I",{steps:[{indirect:"u32"}],size:8}),e.set("l",{steps:[{indirect:"i52"}],size:8}),e.set("L",{steps:[{indirect:"u52"}],size:8}),e.set("f",{steps:[{indirect:"float"}],size:8}),e.set("d",{steps:[{indirect:"double"}],size:8})}(),Mc.runtime_legacy_exports_classname="LegacyExports",Mc.runtime_legacy_exports_class=St.mono_wasm_assembly_find_class(l.runtime_interop_module,l.runtime_interop_namespace,Mc.runtime_legacy_exports_classname),!Mc.runtime_legacy_exports_class)throw"Can't find "+l.runtime_interop_namespace+"."+Mc.runtime_legacy_exports_classname+" class";for(const e of al){const t=sl,[n,r,o,a]=e;if(n)t[r]=function(...e){const n=il(o,a);return t[r]=n,n(...e)};else{const e=il(o,a);t[r]=e}}}(),0==Kt.size&&(Kt.set(R.Array,Zn),Kt.set(R.Span,Qn),Kt.set(R.ArraySegment,er),Kt.set(R.Boolean,Cn),Kt.set(R.Byte,$n),Kt.set(R.Char,Nn),Kt.set(R.Int16,Dn),Kt.set(R.Int32,Bn),Kt.set(R.Int52,On),Kt.set(R.BigInt64,Mn),Kt.set(R.Single,Fn),Kt.set(R.IntPtr,zn),Kt.set(R.Double,Pn),Kt.set(R.String,qn),Kt.set(R.Exception,Jn),Kt.set(R.JSException,Jn),Kt.set(R.JSObject,Yn),Kt.set(R.Object,Xn),Kt.set(R.DateTime,Wn),Kt.set(R.DateTimeOffset,Wn),Kt.set(R.Task,Gn),Kt.set(R.Action,Hn),Kt.set(R.Function,Hn),Kt.set(R.None,Vn),Kt.set(R.Void,Vn),Kt.set(R.Discard,Vn)),0==Qt.size&&(Qt.set(R.Array,yo),Qt.set(R.Span,So),Qt.set(R.ArraySegment,ko),Qt.set(R.Boolean,Zr),Qt.set(R.Byte,Kr),Qt.set(R.Char,Qr),Qt.set(R.Int16,eo),Qt.set(R.Int32,to),Qt.set(R.Int52,no),Qt.set(R.BigInt64,ro),Qt.set(R.Double,oo),Qt.set(R.Single,ao),Qt.set(R.IntPtr,so),Qt.set(R.DateTime,io),Qt.set(R.DateTimeOffset,co),Qt.set(R.String,lo),Qt.set(R.Exception,ho),Qt.set(R.JSException,ho),Qt.set(R.JSObject,bo),Qt.set(R.Object,go),Qt.set(R.Task,mo),Qt.set(R.Action,_o),Qt.set(R.Function,_o),Qt.set(R.None,po),Qt.set(R.Discard,po),Qt.set(R.Void,po)),l._i52_error_scratch_buffer=t._malloc(4),Yt(e,"mono.bindingsInit")}catch(e){throw dt("Error in bindings_init",e),e}}}(),l.runtimeReady=!0,r&&!o&&t.runtimeKeepalivePush(),l.mono_wasm_runtime_is_ready||mono_wasm_runtime_ready(),0!==u.config.debugLevel&&u.config.cacheBootResources&&u.logDownloadStatsToConsole(),setTimeout((()=>{u.purgeUnusedCacheEntriesAsync()}),u.config.cachedResourcesPurgeDelay);try{e()}catch(e){throw dt("user callback onRuntimeInitialized() failed",e),e}await async function(){lt("mono_wasm_after_user_runtime_initialized");try{if(!t.disableDotnet6Compatibility&&t.exports){const e=globalThis;for(let n=0;n<t.exports.length;++n){const r=t.exports[n],o=t[r];null!=o?e[r]=o:pt(`The exported symbol ${r} could not be found in the emscripten module`)}}if(lt("Initializing mono runtime"),t.onDotnetReady)try{await t.onDotnetReady()}catch(e){throw dt("onDotnetReady () failed",e),e}}catch(e){throw dt("mono_wasm_after_user_runtime_initialized () failed",e),e}}(),Yt(n,"mono.onRuntimeInitialized")}catch(e){throw dt("onRuntimeInitializedAsync() failed",e),u.mono_exit(1,e),e}l.afterOnRuntimeInitialized.promise_control.resolve()}(S),e.postRun=[()=>async function(e){try{await l.afterOnRuntimeInitialized.promise,lt("postRunAsync");const n=Jt();t.FS_createPath("/","usr",!0,!0),t.FS_createPath("/","usr/share",!0,!0),e.map((e=>e())),Yt(n,"mono.postRun")}catch(e){throw dt("user callback posRun() failed",e),u.mono_exit(1,e),e}l.afterPostRun.promise_control.resolve()}(y)],e.ready.then((async()=>{await l.afterPostRun.promise,Yt(n,"mono.emscriptenStartup"),l.dotnetReady.promise_control.resolve(c)})).catch((e=>{l.dotnetReady.promise_control.reject(e)})),e.ready=l.dotnetReady.promise,e.onAbort||(e.onAbort=e=>{u.mono_exit(1,e)}),e.onExit||(e.onExit=e=>{u.mono_exit(e,null)})}async function Cl(e,n){await u.afterConfigLoaded.promise,Tl(e),n(new WebAssembly.Instance(t.wasmModule,e),void 0),t.wasmModule=null}function $l(e){var r,o,a;e||t.addRunDependency("mono_wasm_pre_init_essential"),lt("mono_wasm_pre_init_essential"),u.gitHash!==l.gitHash&&pt("The version of dotnet.runtime.js is different from the version of dotnet.js!"),u.gitHash!==l.moduleGitHash&&pt("The version of dotnet.native.js is different from the version of dotnet.js!"),function(){const e=[...yt,...p?[]:gt];for(const t of e){const e=wt,[n,r,o,a,s]=t,i="function"==typeof n;if(!0===n||i)e[r]=function(...t){!i||!n()||w(!1,`cwrap ${r} should not be called when binding was skipped`);const c=Ut(r,o,a,s);return e[r]=c,c(...t)};else{const t=Ut(r,o,a,s);e[r]=t}}}(),r=n,Object.assign(r,{mono_wasm_exit:St.mono_wasm_exit,mono_wasm_enable_on_demand_gc:St.mono_wasm_enable_on_demand_gc,mono_wasm_profiler_init_aot:vt.mono_wasm_profiler_init_aot,mono_wasm_profiler_init_browser:vt.mono_wasm_profiler_init_browser,mono_wasm_exec_regression:St.mono_wasm_exec_regression}),p||(a=Bc,Object.assign(a,{mono_wasm_add_assembly:kt.mono_wasm_add_assembly}),o=Oc,Object.assign(o,{mono_obj_array_new:kt.mono_wasm_obj_array_new,mono_obj_array_set:kt.mono_wasm_obj_array_set,mono_obj_array_new_ref:kt.mono_wasm_obj_array_new_ref,mono_obj_array_set_ref:kt.mono_wasm_obj_array_set_ref})),e||t.removeRunDependency("mono_wasm_pre_init_essential")}function Nl(e,t){St.mono_wasm_setenv(e,t)}function Dl(e,t){lt("mono_wasm_load_runtime");try{const n=Jt();null==t&&(t=0,l.config.debugLevel&&(t=0+t)),St.mono_wasm_load_runtime(e||"unused",t),Yt(n,"mono.loadRuntime")}catch(e){throw dt("mono_wasm_load_runtime () failed",e),u.mono_exit(1,e),e}}async function Bl(e){tr=null,null.addEventListener("dotnet:pthread:created",(e=>{lt("pthread created 0x"+e.pthread_self.pthreadId.toString(16))})),e.preInit=[()=>async function(){lt("worker initializing essential C exports and APIs");const e=Jt();try{lt("preInitWorker"),l.beforePreInit.promise_control.resolve(),$l(!0),await Io(),l.afterPreInit.promise_control.resolve(),Yt(e,"mono.preInitWorker")}catch(e){throw dt("user preInitWorker() failed",e),u.mono_exit(1,e),e}}()],e.instantiateWasm=Cl,await l.afterPreInit.promise}function Ol(n){const r=t,o=n,a=globalThis;p||function(e){Bc=e.mono,Oc=e.binding}(o),p||(Object.assign(o.mono,{mono_wasm_setenv:Nl,mono_wasm_load_bytes_into_heap:ye,mono_wasm_load_icu_data:ha,mono_wasm_runtime_ready:mono_wasm_runtime_ready,mono_wasm_new_root_buffer:Ne,mono_wasm_new_root:Be,mono_wasm_new_external_root:De,mono_wasm_release_roots:Oe,mono_run_main:Nc,mono_run_main_and_exit:$c,mono_wasm_add_assembly:null,mono_wasm_load_runtime:Dl,config:l.config,loaded_files:[],setB32:z,setI8:J,setI16:Y,setI32:Z,setI52:Q,setU52:ee,setI64Big:te,setU8:V,setU16:W,setU32:q,setF32:ne,setF64:re,getB32:oe,getI8:pe,getI16:de,getI32:_e,getI52:fe,getU52:me,getI64Big:he,getU8:ae,getU16:se,getU32:ie,getF32:be,getF64:ge}),Object.assign(o.binding,{bind_static_method:Sl,call_assembly_entry_point:kl,mono_obj_array_new:null,mono_obj_array_set:null,js_string_to_mono_string:ll,js_typed_array_to_array:qc,mono_array_to_js_array:ml,js_to_mono_obj:Vc,conv_string:gl,unbox_mono_obj:dl,mono_obj_array_new_ref:null,mono_obj_array_set_ref:null,js_string_to_mono_string_root:ot,js_typed_array_to_array_root:Gc,js_to_mono_obj_root:Wc,conv_string_root:rt,unbox_mono_obj_root:fl,mono_array_root_to_js_array:hl}),Object.assign(o.internal,{stringToMonoStringIntern:ul,mono_method_resolve:nl})),Object.assign(o.internal,{mono_wasm_exit:e=>{t.err("early exit "+e)},forceDisposeProxies:Vr,logging:void 0,mono_wasm_stringify_as_error_with_stack:ht,mono_wasm_get_loaded_files:ya,mono_wasm_send_dbg_command_with_parms:Dt,mono_wasm_send_dbg_command:Bt,mono_wasm_get_dbg_command_info:Ot,mono_wasm_get_details:Ht,mono_wasm_release_object:qt,mono_wasm_call_function_on:Wt,mono_wasm_debugger_resume:Mt,mono_wasm_detach_debugger:Ft,mono_wasm_raise_debug_event:zt,mono_wasm_change_debugger_log_level:Pt,mono_wasm_debugger_attached:Vt,mono_wasm_runtime_is_ready:l.mono_wasm_runtime_is_ready,mono_wasm_get_func_id_to_name_mappings:bt,get_property:ar,set_property:or,has_property:sr,get_typeof_property:ir,get_global_this:cr,get_dotnet_instance:()=>c,dynamic_import:pr,mono_wasm_cancel_promise:qr,ws_wasm_create:ca,ws_wasm_open:la,ws_wasm_send:ua,ws_wasm_receive:pa,ws_wasm_close:da,ws_wasm_abort:_a,http_wasm_supports_streaming_response:Ao,http_wasm_create_abort_controler:jo,http_wasm_abort_request:Ro,http_wasm_abort_response:Lo,http_wasm_fetch:$o,http_wasm_fetch_bytes:Co,http_wasm_get_response_header_names:Do,http_wasm_get_response_header_values:Bo,http_wasm_get_response_bytes:Mo,http_wasm_get_response_length:Oo,http_wasm_get_streamed_response_bytes:Fo,jiterpreter_dump_stats:Oi,jiterpreter_apply_options:rs,jiterpreter_get_options:os,mono_wasm_gc_lock:Fi,mono_wasm_gc_unlock:Pi,loadLazyAssembly:zi,loadSatelliteAssemblies:Vi}),Object.assign(l,{stringify_as_error_with_stack:ht,instantiate_symbols_asset:ga,instantiate_asset:ba,jiterpreter_dump_stats:Oi,forceDisposeProxies:Vr});const s={runMain:Nc,runMainAndExit:$c,setEnvironmentVariable:Nl,getAssemblyExports:Er,setModuleImports:rr,getConfig:()=>l.config,invokeLibraryInitializers:u.invokeLibraryInitializers,setHeapB32:z,setHeapU8:V,setHeapU16:W,setHeapU32:q,setHeapI8:J,setHeapI16:Y,setHeapI32:Z,setHeapI52:Q,setHeapU52:ee,setHeapI64Big:te,setHeapF32:ne,setHeapF64:re,getHeapB32:oe,getHeapU8:ae,getHeapU16:se,getHeapU32:ie,getHeapI8:pe,getHeapI16:de,getHeapI32:_e,getHeapI52:fe,getHeapU52:me,getHeapI64Big:he,getHeapF32:be,getHeapF64:ge,localHeapViewU8:Ee,localHeapViewU16:Ue,localHeapViewU32:Ie,localHeapViewI8:we,localHeapViewI16:Se,localHeapViewI32:ke,localHeapViewI64Big:ve,localHeapViewF32:Te,localHeapViewF64:xe};if(Object.assign(c,{INTERNAL:o.internal,Module:r,runtimeBuildInfo:{productVersion:e,gitHash:l.gitHash,buildConfiguration:"Release"},...s}),p||Object.assign(c,{MONO:o.mono,BINDING:o.binding}),void 0===r.disableDotnet6Compatibility&&(r.disableDotnet6Compatibility=!0),!r.disableDotnet6Compatibility){Object.assign(r,c),p||(r.mono_bind_static_method=(e,t)=>(pt("Module.mono_bind_static_method is obsolete, please use [JSExportAttribute] interop instead"),Sl(e,t)));const e=(e,t)=>{if(void 0!==a[e])return;let n;Object.defineProperty(globalThis,e,{get:()=>{if(j(n)){const r=(new Error).stack,o=r?r.substr(r.indexOf("\n",8)+1):"";pt(`global ${e} is obsolete, please use Module.${e} instead ${o}`),n=t()}return n}})};a.MONO=o.mono,a.BINDING=o.binding,a.INTERNAL=o.internal,a.Module=r,e("cwrap",(()=>r.cwrap)),e("addRunDependency",(()=>r.addRunDependency)),e("removeRunDependency",(()=>r.removeRunDependency))}let i;return a.getDotnetRuntime?i=a.getDotnetRuntime.__list:(a.getDotnetRuntime=e=>a.getDotnetRuntime.__list.getRuntime(e),a.getDotnetRuntime.__list=i=new Ml),i.registerRuntime(c),c}class Ml{constructor(){this.list={}}registerRuntime(e){return e.runtimeId=Object.keys(this.list).length,this.list[e.runtimeId]=hr(e),e.runtimeId}getRuntime(e){const t=this.list[e];return t?t.deref():void 0}}export{Ll as configureEmscriptenStartup,Rl as configureRuntimeStartup,Bl as configureWorkerStartup,Ol as initializeExports,Uo as initializeReplacements,b as passEmscriptenInternals,g as setRuntimeGlobals};
//# sourceMappingURL=dotnet.runtime.js.map
