import{fetchAsync as i,debug,resolve}from"../base/croco.js";import{getPathUrl as p,LOGGERS as t,ctaTypes as l}from"../base/config.js";import{tplCta as m}from"../templates/components/cta.tpl.js";const g=t.DEFAULT;let u=null;async function k(content){const{openPopin:t}=await import("../base/popin-refit.js");const{cssLoad:o}=await import("../modules/asset-load.js");u=content.declineUrl;t({instanceId:"campaign-marketing",options:{noStack:true},loadContents:async()=>{const t=p(true);const{tplMarketingCampaign:i}=await import("../templates/campaign-marketing.tpl.js");await o({src:`${t}css/non-critical/campaign-marketing-non-critical.css`});const[title,link]=resolve(["title","link"],content);return{contents:i(content),title:title,footer:link&&m({...link,type:l.BUTTON_PRIMARY})}},closeCallback:()=>{if(u){i(u)}}})}export function marketingPopinInit(o){if(o){i(o,{method:"GET"}).then(.then(response=>{if(!response.replace(/\s/g,"")){debug("warn",g,"[MarketingPopinCampaign]","no popin configured");return}let content=null;const t=response.replace(/(\s)*<!--[ ](.*)-->(\s)*/gm,"");try{const i=JSON.parse(t);content=i.content;if(!content){content=null}else{k(content)}}catch(error){debug("error",g,"[MarketingPopinCampaign]","invalid JSON returned by fetch",o,t)}return content})}else{debug("warn",g,"[MarketingPopinCampaign]","Lacoste.features.marketingCampaignUrl is not configured")}}