import{AttributePart as l,directive as t,PropertyPart as h}from"../lit-html.js";class m{constructor(element){this.classes=new Set;this.changed=false;this.element=element;const classList=(element.getAttribute("class")||"").split(/\s+/);for(const t of classList){this.classes.add(t)}}add(t){this.classes.add(t);this.changed=true}removeommit(){if(this.changed){let i="";this.classes.forEach(;this.element.setAttribute("class",i)}}}const u=new WeakMap;export const classMap=t(o=>part=>{if(!(part instanceof l)||part instanceof h||part.committer.name!=="class"||part.committer.parts.length>1){throw new Error("The `classMap` directive must be used in the `class` attribute "+"and must be the only part in the attribute.")}const{committer:t}=part;const{element}=t;let i=u.get(part);if(i===undefined){element.setAttribute("class",t.strings.join(" "));u.set(part,i=new Set)}const classList=element.classList||new m(element);i.forEach(name=>{if(!(name in o)){classList.remove(name);i.delete(name)}});for(const name in o){const value=o[name];if(value!=i.has(name)){if(value){classList.add(name);i.add(name)}else{classList.remove(name);i.delete(name)}}}if(typeof classList.commit==="function"){classList.commit()}});