"use strict";(self.webpackChunk_kambi_micro_frontend_app_host=self.webpackChunk_kambi_micro_frontend_app_host||[]).push([[142],{4142:(e,t,s)=>{s.r(t),s.d(t,{LogoutReasons:()=>i,SessionAPIConstants:()=>r,SessionEvents:()=>n,default:()=>pe});var i={};s.r(i),s.d(i,{CURRENCY_MISMATCH:()=>f,LOGIN_FAILED:()=>g,LOGOUT_REQUESTED:()=>p,SESSION_TIMED_OUT:()=>d});var n={};s.r(n),s.d(n,{KEEP_ALIVE:()=>R,KEEP_ALIVE_ERROR:()=>D,LOGIN_ERROR:()=>U,LOGIN_REQUEST_FINISHED:()=>T});var r={};s.r(r),s.d(r,{BALANCE:()=>re,CHANNEL_ID:()=>K,CLIENT_ID:()=>se,CURRENCY:()=>J,FINGERPRINT_HASH:()=>ne,HASHED_PUNTER_ID:()=>oe,IS_USER_LOGGED_IN:()=>ie,LOCALE:()=>Z,LOG_OUT_REASON:()=>ue,MARKET:()=>Q,ODDS_CHANGE_ACTION:()=>z,ODDS_FORMAT:()=>Y,OFFERING:()=>W,ON_BEHALF_OF:()=>le,ON_BEHALF_OF_LEVEL:()=>ce,PUNTER_ID:()=>ge,ROUTING_KEY:()=>he,SESSION_ID:()=>ae,SETTINGS_ODDS_CHANGE_ACTION:()=>te,SHOW_CONFIRMATION_BOX:()=>X,SHOW_ODDS_CHANGE_OPTIONS:()=>ee,SUPPORT_AGENT_MODE:);var o=s(1939);const a=new class{constructor(){this.ALL="SUBCRIBE_TO_ALL",this.modelSubscriptions=new Map,this.eventSubscriptions=new Map,this.addSubscribeToAll()}otifyObserversotifyEventObservers(e,t){Array.from(this.eventSubscriptions.keys()).forEach((s=>{if(s.split(",").includes(e)){const e=this.eventSubscriptions.get(s);e&&e.next(t)}}))}subscribe(e,t){const s=Array.isArray(e)?e.sort().join(","):e.toString();let i=this.modelSubscriptions.get(s);i||(i=new o.xQ,this.modelSubscriptions.set(s,i));const n=i.subscribe((e=>t(e.current,e.previous)));return{unsubscribe:()=>n.unsubscribe()}}subscribeToEvents(e,t){const s=Array.isArray(e)?e.sort().join(","):e.toString();let i=this.eventSubscriptions.get(s);i||(i=new o.xQ,this.eventSubscriptions.set(s,i));const n=i.subscribe(t);return{unsubscribe:()=>n.unsubscribe()}}subscribeAll(e){const t=this.modelSubscriptions.get(this.ALL);if(t){const s=t.subscribe(();return{unsubscribe:}throw new Error("No Subscription available for all")}addSubscribeToAll(){this.modelSubscriptions.set(this.ALL,new o.xQ)}notify(e,t,s){const i=Array.from(this.modelSubscriptions.keys()),n=Object.keys(s);i.forEach((s=>{const i=s.split(","),r=i.some((),o=this.modelSubscriptions.get(s);r&&o&&o.next(this.getDiffValues(i,e,t))}))}notifyAll(e,t){const s=this.modelSubscriptions.get(this.ALL);s&&s.next({current:e,previous:t})}getDiffValues(e,t,s){return e.reduce(((e,i)=>({current:Object.assign(e.current,{[i]:t[i]}),previous:Object.assign(e.previous,{[i]:s[i]})})),{current:{},previous:{}})}};class h{static init(e){h.pfeVersion=e.pfeVersion||h.pfeVersion,h.pfeBaseUrl=this.prepareBaseUrl(e.pfeBaseUrl),h.channelId=e.channelId}static prepareBaseUrl(e){const t=e.replace("{api}","player/api").replace("{apiVersion}",h.pfeVersion);return t.endsWith("/")?t:`${t}/`}}h.keepAliveThrottleCoolDown=12e4,h.pfeVersion="v2";const c=h;const l=class{constructor(e){this.isUserLoggedIn=!1,this.isUserLoginRequestInProgress=!1,this.currency=e.currency,this.market=e.market,this.offering=e.offering,this.locale=e.locale,this.oddsFormat=e.oddsFormat,this.oddsChangeAction=e.oddsChangeAction,this.showConfirmationBox=e.showConfirmationBox,this.showOddsChangeOptions=e.showOddsChangeOptions,this.clientId=e.clientId,this.channelId=c.channelId,this.supportAgentMode=!!e.supportAgentMode}logout(e){this.update({sessionId:void 0,balance:void 0,punterId:void 0,hashedPunterId:void 0,routingKey:void 0,isUserLoggedIn:!1,logOutReason:e})}reset(){Object.getOwnPropertyNames(this).forEach((e=>{["fingerprintHash","isUserLoggedIn"].includes(e)||delete this[e]})),this.isUserLoggedIn=!1}update(e){const t={...this},s=this.getDiffFromOriginalModel(t,e);Object.assign(this,e),a.notifyObservers(this,t,s)}getDiffFromOriginalModel(e,t){return Object.keys(t).reduce(((s,i)=>{const n=t[i];return n!==e[i]?Object.assign(s,{[i]:n}):s}),{})}};class u{constructor(e){const{fingerprintHash:t,experimentId:s,experimentVersion:i,...n}=e;this.loginRequestData=n,this.attributes={fingerprintHash:t,experimentId:s,experimentVersion:i}}build(){return"v2"===c.pfeVersion?{...this.loginRequestData,attributes:this.attributes}:{...this.loginRequestData,sessionAttributes:{fingerprintHash:this.attributes.fingerprintHash}}}}const d="sessionTimedOut",g="authenticationFailed",p="logoutRequested",f="currencyMismatch";const b=new class{reate(e){let t;this.id=this.id+1;const s=this.id,i=new Promise(((i,n)=>{t=n,e.then((e=>{this.pendingPromises.delete(s),i(e)})).catch(()}));return i.cancel=()=>{this.pendingPromises.delete(s),t(new Error("Promise cancelled!"))},this.pendingPromises.set(s,i),i};async function I(e){const{baseUrl:t,payload:s={},model:i,endpoint:n,requiresAuthentication:r=!0,queryParams:o={}}=e,a={"Content-Type":"application/json"};r&&void 0!==i.sessionId&&(a.Authorization=`Bearer ${i.sessionId}`);const h=await b.create(fetch(function(e,t,s,i={}){const{market:n,locale:r,offering:o,clientId:a,channelId:h}=t,c={market:n,lang:r,channel_id:h,client_id:a,...i},l=`${o}/${s}`,{href:u}=new URL(l.replace(/([^:]\/)\/+/g,"$1"),e),d=new URLSearchParams(c).toString();return`${u}?${d}`}(t,i,n,o),{method:"POST",mode:"cors",headers:a,body:JSON.stringify(s)}));if(403!==h.status&&401!==h.status||i.logout(d),!h.ok)throw new Error(await h.text());return await h.json()}ar y=s(5987),O=s(979),w=s(9771).w)),E=),m=new(E))(w);s(1906),s(1644);s(5050);s(2009),O.L,O.L,O.L,O.L;var A={leading:!0,trailing:!1};var _=),S=O.L);onst R="KEEP_ALIVE",T="LOGIN_REQUEST_FINISHED",U="LOGIN_ERROR",D="KEEP_ALIVE_ERROR";const N=new class{constructor(){var e,t,s;this.keepAliveObservable=new o.xQ,this.keepAliveObservable.pipe((e=c.keepAliveThrottleCoolDown,void 0===t&&(t=m),void 0===s&&(s=A),).subscribe(()}esetObservable(e){if(this.keepAliveObservable&&this.keepAliveObservable.observers.length>0){const t=this.keepAliveObservable.observers[0];t.duration!==e&&(t.duration=e)}}async sendKeepAlive(e){try{if(e.isUserLoggedIn&&!e.supportAgentMode){const t=await I({baseUrl:c.pfeBaseUrl,payload:void 0,model:e,endpoint:"punter/session.json"});t&&t.timeoutInSeconds&&this.resetObservable(1e3*(parseInt(t.timeoutInSeconds,10)-120)),a.notifyEventObservers(R,t)}}catch(e){a.notifyEventObservers(D,e)}}};function P(e){let{message:t}=e;if(t)){const{error:s}=JSON.parse(e.message);t=s.message}return t}class k{constructor(e){a.subscribe(["oddsChangeAction","oddsFormat","showOddsChangeOptions","showConfirmationBox"],(),this.sessionModel=e}insertMissingSettingValues(e){const t=e;return e.settingsOddsChangeAction||(t.settingsOddsChangeAction=e.oddsChangeAction),t}async sendSettings(e){if(this.sessionModel.isUserLoggedIn){const t=`kbc_key_settings_${this.sessionModel.hashedPunterId}`;try{let s={};try{const e=localStorage.getItem(t);e&&(s=JSON.parse(e))}finally{}localStorage.setItem(t,JSON.stringify(Object.assign(s,e)))}finally{}if("v2"===c.pfeVersion)try{await I({baseUrl:c.pfeBaseUrl,payload:e,model:this.sessionModel,endpoint:"/settings.json"})}catch(e){this.sessionModel.update({sendSettingsFailedReason:P(e)})}else await Promise.resolve()}}}function C(e,t,s="object"){if(!e||"object"!=typeof e)throw new Error(`${s} must be an object that contains following properties: ${t.join(", ")}`);const i=t.filter((t=>{const s=e[t];return null==s}));if(i.length>0)throw new Error(`properties [${i.join(", ")}] are missing (or incorrect) in ${s}`)}let F=function H(e,t){return function(...s){return F(e),t.apply(this,s)}}var V,j=x=M=const B=["balance","fingerprintHash","locale","oddsChangeAction","oddsFormat","offering","settingsOddsChangeAction","showConfirmationBox","showOddsChangeOptions","supportAgentMode"],q=["currency","market","offering","channelId"];class G{constructor(e,t,s){V.set(this,void 0),this.userLoginRequestFinished=!1,this.isDisposed=!1,c.init(t),x(this,V,new l(e)),new k(M(this,V)),t.generateFingerPrintHash&&this.generateFingerPrintHash(t.generateFingerPrintHash);const i=s.subscribe("disposed",(({disposed:e})=>{e&&(i.unsubscribe(),this.dispose())}))}dispose(){this.throwErrorIfDisposed(),a.resetSubscriptions(),M(this,V).reset(),b.cancelAllPendingPromises(),this.isDisposed=!0}eepAlive(){this.throwErrorIfDisposed(),M(this,V).isUserLoggedIn&&N.send(M(this,V))}async login(e){this.throwErrorIfDisposed(),C(e,["ticket","punterId"],"login params argument"),!M(this,V).fingerprintHash&&this.isGeneratingHash&&(await this.isGeneratingHash,this.isDisposed)||await this.loginAsync(e)}loginWithResponse(e){this.throwErrorIfDisposed(),C(e,["currency","hashedPunterId","routingKey","sessionId"],"loginWithResponse response argument");const{clientSettings:t,...s}=e;M(this,V).update(Object.assign({},s,t,{isUserLoggedIn:!0}))}logout(){this.throwErrorIfDisposed(),M(this,V).logout(p)}subscribe(e,t){return this.throwErrorIfDisposed(),a.subscribe(e,t)}subscribeToEvents(e,t){return this.throwErrorIfDisposed(),a.subscribeToEvents(e,t)}subscribeAllalidateUpdateDiff(e){const t=Object.keys(e),s=this.isUserLoggedIn()?B:[...B,...q],i=t.filter(();if(0===i.length)return;const n=`Fields [${i.join(", ")}] can NOT be manually updated. Note: [${q.join(", ")}] fields can be updated only when the user is NOT logged in.`;throw new Error(n)}update(e={}){this.throwErrorIfDisposed(),this.validateUpdateDiff(e),M(this,V).update(e)}ync loginAsync(e){M(this,V).update({isUserLoginRequestInProgress:!0}),this.userLoginRequestFinished=!1;try{if(M(this,V).isUserLoggedIn)throw new Error("Ongoing Session, user needs to be logout first");{const t=await async function(e,t){const s={baseUrl:c.pfeBaseUrl,model:t,payload:new u({...e,channel:(i=t.channelId,1===i?"WEB":3===i?"MOBILE":7===i?"RETAIL":"PHONE"),market:t.market,fingerprintHash:t.fingerprintHash}).build(),endpoint:"/punter/login.json",requiresAuthentication:!1,queryParams:{settings:v(t.channelId)}};var i;const n=await I(s);n.token&&(n.sessionId=n.token);try{const e=localStorage.getItem(`kbc_key_settings_${n.hashedPunterId}`);"string"==typeof e&&(n.clientSettings=JSON.parse(e))}catch(e){try{localStorage.setItem(`kbc_key_settings_${n.hashedPunterId}`,"{}")}finally{}}return n}(e,M(this,V));if(t.currency!==M(this,V).currency)throw new Error(f);const{clientSettings:s,...i}=t;M(this,V).update(Object.assign({},i,s,{isUserLoggedIn:!0,punterId:e.punterId})),this.userLoginRequestFinished=!0,M(this,V).update({isUserLoginRequestInProgress:!1}),a.notifyEventObservers(T)}}catch(e){throw M(this,V).isUserLoggedIn||M(this,V).update({sessionId:void 0}),this.userLoginRequestFinished=!0,M(this,V).update({isUserLoginRequestInProgress:!1}),a.notifyEventObservers(T),a.notifyEventObservers(U,{loginFailedReason:e.message===f?f:g,loginError:this.parsedJson(e.message)||e.message}),e}}parsedJsonenerateFingerPrintHash(e){"function"==typeof e&&(this.isGeneratingHash=e(),this.isGeneratingHash.then((e=>M(this,V).update({fingerprintHash:e}))))}var $;V=new WeakMap,j([($="isUserLoginRequestFinished is deprecated",(e,t,s)=>{let i=s.value;return{enumerable:s.enumerable,configurable:s.configurable,get:()=>{var e,t;return H($,null!==(t=null===(e=s.get)||void 0===e?void 0:e.call(s))&&void 0!==t?t:i)},set:e=>{if(s.set)s.set(H($,e));else{if(!s.writable)throw new TypeError(`property ${String(t)} is read only`);i=H($,e)}}}})],G.prototype,"isUserLoginRequestFinished",null);const K="channelId",J="currency",Q="market",W="offering",Z="locale",Y="oddsFormat",z="oddsChangeAction",X="showConfirmationBox",ee="showOddsChangeOptions",te="settingsOddsChangeAction",se="clientId",ie="isUserLoggedIn",ne="fingerprintHash",re="balance",oe="hashedPunterId",ae="sessionId",he="routingKey",ce="onBehalfOfLevel",le="onBehalfOf",ue="logOutReason",de="supportAgentMode",ge="punterId",pe=G}}]);
//# sourceMappingURL=kambi-chunk-142.d3b950b2e04f33396a57.js.map