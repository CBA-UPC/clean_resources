(self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[]).push([[186],{10840:(e,t,i)=>{"use strict";i.d(t,{T:()=>v});var n=i(81396),o=i(11677),r=i(44724),s=i.n(r),a=i(7188),c=i.n(a),d=i(52059),l=i.n(d),h=i(75215),u=i.n(h),m=i(56449),f=i.n(m);const v={endpoint:{uniforms:{opacity:{type:"f",value:1},color:{type:"c",value:new n.Color},bg:{type:"t",value:null}},vertexShader:o.Z.basicTextured.vertexShader,fragmentShader:s()},line:{uniforms:n.UniformsUtils.merge([n.UniformsLib.common,n.UniformsLib.fog,{linewidth:{value:4},resolution:{value:new n.Vector2(0,0)},dashScale:{value:1},dashSize:{value:.025},gapSize:{value:.05},mask:{value:null}}]),vertexShader:c(),fragmentShader:l()},screenline:{uniforms:{lineWidth:{value:1},screenSize:{value:new n.Vector2(0,0)},dashed:{value:0},dashSize:{value:1},gapSize:{value:1},antialiasWidth:{value:1},color:{value:new n.Color(1,0,0)},opacity:{value:1},start:{value:new n.Vector3},end:{value:new n.Vector3}},vertexShader:u(),fragmentShader:f()}}},7402:(e,t,i)=>{"use strict";i.d(t,{g:()=>d});var n=i(81396),o=i(17878),r=i(56512),s=i(82814),a=i(12529),c=i(53203);class d extends s.S{constructor(e,t,i=o.o.ALL){super(),this._opacity=1,this._chunks=[],this.size=new n.Vector3,this.center=new n.Vector3,this.built=!1,this.layers.mask=i.mask,this.name=`RoomMesh:${e}-${t}`,this.meshGroup=e,this.meshSubgroup=t,this.renderOrder=a.z.default,this.onBeforeRender=(e,t,i,n,o,r)=>{this.updateUniforms(o,r)}}eset(){this._chunks.length=0,this.geometry.dispose(),delete this.onBuild,delete this.onOpacityUpdate,this.built=!1}ild(){if(this.built)throw new Error("build() should only be called once");if(!this._chunks.length)return;const e=(0,r.qf)(this._chunks.map((e=>e.geometry)));e.clearGroups();let t=0;this.material=[],this._chunks.forEach(((i,n)=>{i.geometry&&i.geometry.index&&(e.addGroup(t,i.geometry.index.count,n),t+=i.geometry.index.count,i.geometry.dispose(),i.geometry=e,i.notifyOnMaterialUpdated((e=>{Array.isArray(this.material)&&(this.material[n]=e),this.onMaterialUpdate&&this.onMaterialUpdate()})),i.onOpacityUpdate=e=>{this.opacity=e})})),this.geometry=e,this.geometry.computeBoundingBox(),this.geometry.computeBoundingSphere(),this.material=this._chunks.map((),this.size=this.boundingBox.getSize(this.size),this.center=this.boundingBox.getCenter(this.center),this.built=!0,this.onBuild&&this.onBuild()}buildWithTileChunk(e){if(this.built)return;const{meshGroup:t,meshSubgroup:i,lod:n}=e;this.name=`RoomMesh:${n}-${t}-${i}-${e.chunkIndex}`,this.meshGroup=t,this.meshSubgroup=i,this._chunks.push(e),e.notifyOnMaterialUpdated((),e.onOpacityUpdate=this.size=this.boundingBox.getSize(this.size),this.center=this.boundingBox.getCenter(this.center),this.built=!0,this.onBuild&&this.onBuild()}updateUniforms(e,t){e instanceof n.RawShaderMaterial&&(t?this.chunks[t.materialIndex].onBeforeDraw(e):this.chunks.length&&this.chunks[0].onBeforeDraw(e))}et opacity(e){e!==this.opacity&&(this._opacity=e,this.raycastEnabled=e>c.xx.FADE_CLICKABLE_THRESHOLD,this.renderOrder=e<c.xx.FADE_OPAQUE?a.z.ghostFloor:a.z.default,this.onOpacityUpdate&&this.onOpacityUpdate(e))}get opacity(){return this._opacity}get chunks(){return this._chunks}getSortKey(){return this.chunks.length?this._chunks[0].getSortKey():0}}},38987:(e,t,i)=>{"use strict";i.d(t,{u:()=>o});var n=i(19663);class o extends n.m{constructor(e=null){super(),this.id="SET_MOUSE_CURSOR",this.payload={cursor:e}}}},34956:(e,t,i)=>{"use strict";var n;i.d(t,{C:()=>n}),n||(n={}))},39564:(e,t,i)=>{"use strict";i.d(t,{t:()=>r});var n=i(67992),o=i(15637);class r extends n.V{dateNote(e){this.notes.has(e.id)?this.notes.get(e.id).copy(e):this.notes.set(e.id,e)}updateNoteProperties(e,t){if(this.notes.has(e)){const i=this.notes.get(e);let n=!1;void 0!==t.resolved&&t.resolved!==i.resolved&&(i.resolved=t.resolved,n=!0),void 0!==t.color&&t.color!==i.color&&(i.color=t.color,n=!0),void 0!==t.anchorPosition&&t.anchorPosition!==i.anchorPosition&&(i.anchorPosition=t.anchorPosition,n=!0),void 0!==t.stemNormal&&t.stemNormal!==i.stemNormal&&(i.stemNormal=t.stemNormal,n=!0),void 0!==t.stemLength&&t.stemLength!==i.stemLength&&(i.stemLength=t.stemLength,n=!0),void 0!==t.stemEnabled&&t.stemEnabled!==i.stemEnabled&&(i.stemEnabled=t.stemEnabled,n=!0),void 0!==t.floorId&&t.floorId!==i.floorId&&(i.floorId=t.floorId,n=!0),void 0!==t.roomId&&t.roomId!==i.roomId&&(i.roomId=t.roomId,n=!0),n&&i.commit()}}removeNotetNoteProperties(e){const t=this.notes.get(e);if(!t)return null;return Object.assign({},t)}get collection(){return this.notes}}},56163:(e,t,i)=>{"use strict";i.d(t,{K:()=>a});var n=i(52528),o=i(71166),r=i(63319);const s=new n.v({});class a{constructor(e,t,i){this.commandBinder=e,this.layersData=t,this.dataTypeGroup=i,this.textParser=s,this.enabled=!0,this.bindings=[]}getGroupingId(e){switch(e){case r.HH.TYPE:return this.getTypeId();case r.HH.FLOOR:return this.getFloorId();case r.HH.ROOM:return this.getRoomId();case r.HH.LAYER:return this.getLayerGroupId();case r.HH.DATE:return this.dateBucket}}getFloorId(){return this.floorId}getRoomId(){return this.roomId}getDateBucket(){return this.dateBucket}upportsBatchDelete(){return!1}etLayerGroupId(){var e,t;const i=null===(e=this.layersData)||void 0===e?void 0:e.getBaseLayerId(),n=null===(t=this.layersData)||void 0===t?void 0:t.getViewLayerId();return this.layerId&&n&&this.layerId===i?n:this.layerId}isLayerVisible(){return!this.layersData||!this.layerId||this.layersData.layerVisible(this.layerId)}onSelect(e,t,i){this.commandBinder.issueCommand(new o.IL(this.id,this.typeId))},94046:(e,t,i)=>{"use strict";i.d(t,{i:);var n=i(81396);,44724:e=>{e.exports="precision highp float;precision highp int;uniform mat4 viewMatrix;uniform vec3 cameraPosition;uniform float opacity;uniform vec3 color;uniform sampler2D bg;varying vec2 vUv;void main(){vec4 bgColor=texture2D(bg,vUv);gl_FragColor=vec4(bgColor.rgb,bgColor.a*opacity);}"},52059:e=>{e.exports="precision highp float;precision highp int;uniform mat4 viewMatrix;uniform vec3 cameraPosition;uniform vec3 diffuse;uniform float opacity;uniform sampler2D mask;\n#ifdef USE_DASH\nuniform float dashSize;uniform float gapSize;\n#endif\nvarying float vLineDistance;\n#include <common>\nvarying vec2 vUv;void main(){\n#ifdef USE_DASH\nif(vUv.y<-1.||vUv.y>1.)discard;if(mod(vLineDistance,dashSize+gapSize)>dashSize)discard;\n#endif\n#ifdef USE_MASK\nvec2 modUv=vec2(vUv);modUv*=2.;vec4 texelColor=texture2D(mask,modUv);gl_FragColor=vec4(texelColor.rgb,min(texelColor.a,opacity));\n#else\ngl_FragColor=vec4(diffuse,opacity);\n#endif\n}"},7188:e=>{e.exports="precision highp float;precision highp int;uniform mat4 modelMatrix;uniform mat4 modelViewMatrix;uniform mat4 projectionMatrix;uniform mat4 viewMatrix;uniform mat3 normalMatrix;uniform vec3 cameraPosition;attribute vec3 position;attribute vec3 normal;attribute vec2 uv;\n#include <common>\nuniform float linewidth;uniform vec2 resolution;attribute vec3 instanceStart;attribute vec3 instanceEnd;attribute vec3 instanceColorStart;attribute vec3 instanceColorEnd;varying vec2 vUv;\n#ifdef USE_DASH\nuniform float dashScale;attribute float instanceDistanceStart;attribute float instanceDistanceEnd;varying float vLineDistance;\n#endif\nvoid trimSegment(const in vec4 start,inout vec4 end){float a=projectionMatrix[2][2];float b=projectionMatrix[3][2];float nearEstimate=-0.5*b/a;float alpha=(nearEstimate-start.z)/(end.z-start.z);end.xyz=mix(start.xyz,end.xyz,alpha);}void main(){\n#ifdef USE_COLOR\nvColor.xyz=(position.y<0.5)?instanceColorStart:instanceColorEnd;\n#endif\n#ifdef USE_DASH\nvLineDistance=(position.y<0.5)?dashScale*instanceDistanceStart:dashScale*instanceDistanceEnd;\n#endif\nfloat aspect=resolution.x/resolution.y;vUv=uv;vec4 start=modelViewMatrix*vec4(instanceStart,1.);vec4 end=modelViewMatrix*vec4(instanceEnd,1.);bool perspective=(projectionMatrix[2][3]==-1.);if(perspective){if(start.z<0.&&end.z>=0.){trimSegment(start,end);}else if(end.z<0.&&start.z>=0.){trimSegment(end,start);}}vec4 clipStart=projectionMatrix*start;vec4 clipEnd=projectionMatrix*end;vec2 ndcStart=clipStart.xy/clipStart.w;vec2 ndcEnd=clipEnd.xy/clipEnd.w;vec2 dir=ndcEnd-ndcStart;dir.x*=aspect;dir=normalize(dir);vec2 offset=vec2(dir.y,-dir.x);dir.x/=aspect;offset.x/=aspect;if(position.x<0.)offset*=-1.;offset*=linewidth;offset/=resolution.y;vec4 clip=(position.y<0.5)?clipStart:clipEnd;\n#ifdef USE_MASK\noffset*=(clipEnd.w+clipStart.w)*0.5;\n#else\noffset*=clip.w;\n#endif\nclip.xy+=offset;gl_Position=clip;\n#include <worldpos_vertex>\n}"},56449:e=>{e.exports="precision highp float;uniform vec3 color;uniform float antialiasWidth;uniform float lineWidth;uniform float dashed;uniform float dashSize;uniform float gapSize;uniform float opacity;varying float vDistanceFromAxis;varying float vDistanceAlong;void main(){float halfWidth=lineWidth*0.5;float antialiasing=1.-smoothstep(halfWidth,halfWidth+antialiasWidth,vDistanceFromAxis);float dashOpacity=1.;if(dashed>0.){\n#ifdef WORLDSPACE_DASH\nfloat dashAA=fwidth(vDistanceAlong)*antialiasWidth*0.5;\n#else\nfloat dashAA=antialiasWidth*0.5;\n#endif\nfloat dashT=mod(vDistanceAlong,dashSize+gapSize);dashOpacity=smoothstep(0.,dashAA,dashT)*(1.-smoothstep(dashSize-dashAA,dashSize,dashT));}gl_FragColor=vec4(color,opacity*dashOpacity*antialiasing);}"},75215:]);