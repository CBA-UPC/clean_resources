define(["exports"],(function(t){"use strict";try{self["workbox:core:6.5.3"]&&_()}catch(t){}const e=ry{self["workbox:routing:6.5.3"]&&_()}catch(t){}const n= o;const c=ry{self["workbox:strategies:6.5.3"]&&_()}catch(t){}const u={cacheWillUpdate:,l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=w=t=>t||f(l.precache),d=nst g=new Set;,U;const x=new WeakMap,L=new WeakMap,I=new WeakMap,C=new WeakMap,E=new WeakMap;let N={getset:has:;st B=t=>E.get(t);const P=["get","getKey","getAll","getAllKeys","count"],M=["put","add","delete","clear"],W=new Map;=((N);try{self["workbox:expiration:6.5.3"]&&_()}catch(t){}const S="cache-entries",K=y{self["workbox:range-requests:6.5.3"]&&_()}catch(t){}y{self["workbox:precaching:6.5.3"]&&_()}catch(t){} J,Q;defaultPrecacheCacheabilityPlugin={cacheWillUpdate:,Y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:;onst tt=.CacheFirst=t.ExpirationPlugin=t.NetworkFirst=t.RangeRequestsPlugin=t.StaleWhileRevalidate=t.cleanupOutdatedCaches=t.clientsClaim=t.precacheAndRoute=t.registerRoute=h}));
