/*! For license information please see vendors~socketmodule.d61b4234ec9469e9958e.chunk.v7.js.LICENSE.txt */
(window.officehome_webpackJsonp=window.officehome_webpackJsonp||[]).push([[665],{Xcci:function(e,t,s){"use strict";s.r(t),s.d(t,"OdspDelayLoadedDeltaStream",();var n=s("he5V"),i=s("rK/e"),o=s("zQYL"),r=s("DX81"),c=s("1bkS"),a=s("V0Op"),d=s("mOo8"),h=s("NgDi"),l=s("NsUA"),u=s("j9A4"),p=s("2IM6"),f=s("tJEp"),v=s("A3AF"),m=s("FiVw");function g(e,t){try{const s=`ODSP socket error (${t}): ${e.message}`,n=Object(d.a)(s,e.code,e.retryAfter,void 0,e.error?JSON.stringify({error:e.error},Object(o.d)()):void 0);return n.addTelemetryProperties({odspError:!0,relayServiceError:!0}),n}catch(e){return new c.f("Internal error: errorObjectFromSocketError",r.a.fileNotFoundOrAccessDeniedError,{driverVersion:m.a})}}const S=["^0.4.0","^0.3.0","^0.2.0","^0.1.0"];class k extends h.a{constructor(e,t){super(),this.key=e,this.references=1,this.isPendingInitialConnection=!0,this._socket=t,Object(n.a)(!k.socketIoSockets.has(e),544),k.socketIoSockets.set(e,this),t.on("server_disconnect",((e,t)=>{const s=g(e,"server_disconnect");s.addTelemetryProperties({disconnectClientId:t}),s.canRetry=!0,this.isPendingInitialConnection=!1,void 0===t?this.closeSocket(s):this.emit("disconnect",s,t)}))}static find(e,t){const s=k.socketIoSockets.get(e);if(!(null==s?void 0:s.disconnected))return s&&(s.clearTimer(),s.references++),s;s.closeSocket()}removeSocketIoReference(){Object(n.a)(this.references>0,159),this.references--,this.isPendingInitialConnection=!1,this.disconnected?this.closeSocket():0===this.references&&void 0===this.delayDeleteTimeout&&(this.delayDeleteTimeout=setTimeout((()=>{Object(n.a)(0===this.references,160),this.closeSocket()}),2e3))}get socket(){if(!this._socket)throw new Error(`Invalid socket for key "${this.key}`);return this._socket}clearTimer(){void 0!==this.delayDeleteTimeout&&(clearTimeout(this.delayDeleteTimeout),this.delayDeleteTimeout=void 0)}closeSocket(e){if(!this._socket)return;this.clearTimer(),Object(n.a)(k.socketIoSockets.get(this.key)===this,161),k.socketIoSockets.delete(this.key);const t=this._socket;this._socket=void 0,this.emit("disconnect",null!=e?e:Object(c.k)("Socket closed without error",{canRetry:!0},{driverVersion:m.a}),void 0),Object(n.a)(0===this.references,1042),t.disconnect()}get disconnected(){return void 0===this._socket||!this.socket.connected&&!this.isPendingInitialConnection}}k.socketIoSockets=new Map;class O extends u.a{constructor(e,t,s,n,i){super(e,t,n,!1,Object(v.a)()),this.enableMultiplexing=i,this.pushCallCounter=0,this.getOpsMap=new Map,this.disconnectHandler=(e,t)=>{void 0!==t&&t!==this.clientId||(this.logger.sendTelemetryEvent({eventName:"ServerDisconnect",driverVersion:m.a,details:JSON.stringify(Object.assign({},this.getConnectionDetailsProps()))},e),this.disconnect(e))},this.socketReference=s,this.requestOpsNoncePrefix=`${Object(v.a)()}-`}static async create(e,t,s,n,i,o,r,c,a){const d=Object(p.c)(o),h=new URL(i),l=!h.searchParams.has("documentId")&&!h.searchParams.has("tenantId"),u=a?`${a},${i}`:i,f=O.getOrCreateSocketIoReference(r,l?u:`${u},${e},${t}`,i,l,e,t,o),g=f.socket,k={client:n,id:t,mode:n.mode,tenantId:e,token:s,versions:S,driverVersion:m.a,nonce:Object(v.a)(),epoch:c.fluidEpoch,relayUserAgent:[n.details.environment,` driverVersion:${m.a}`].join(";"),supportedFeatures:{}};!1!==d.config.getBoolean("Fluid.Driver.Odsp.GetOpsEnabled")&&(k.supportedFeatures.api_get_ops=!0);const b=new O(g,t,f,o,l);try{await b.initialize(k,r),await c.validateEpoch(b.details.epoch,"push")}catch(e){throw null!==e&&"object"==typeof e&&(400!==e.statusCode&&404!==e.statusCode||(e.canRetry=!0)),e}return b}createErrorObject(e,t){let s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return s&&Number.isInteger(null==t?void 0:t.code)&&"string"==typeof(null==t?void 0:t.message)?g(t,e):super.createErrorObject(e,t,s)}static getOrCreateSocketIoReference(e,t,s,n,i,o,r){const c=k.find(t,r);if(c)return c;const a=n?void 0:{documentId:o,tenantId:i},d=Object(f.b)(s,{multiplex:!1,query:a,reconnection:!1,transports:["websocket"],timeout:e});return new k(t,d)}requestOps(e,t){var s,o;if(Object(n.a)(!(null===(s=this.socketReference)||void 0===s?void 0:s.disconnected),1043),Object(n.a)(t>e,626),!0!==(null===(o=this.details.supportedFeatures)||void 0===o?void 0:o.api_get_ops))return;this.pushCallCounter++;const r=`${this.requestOpsNoncePrefix}${this.pushCallCounter}`,c=i.a.now();if(this.getOpsMap.size>=5){let e,t=c;for(const[s,n]of this.getOpsMap.entries())(n.start<=t||void 0===e)&&(t=n.start,e=s);const s=this.getOpsMap.get(e);this.logger.sendErrorEvent({eventName:"GetOpsTooMany",nonce:r,from:s.from,to:s.to,length:s.to-s.from,duration:i.a.now()-s.start}),this.getOpsMap.delete(e)}this.getOpsMap.set(r,{start:c,from:e,to:t}),this.socket.emit("get_ops",this.clientId,{nonce:r,from:e,to:t-1})}async flush(){var e,t;if(Object(n.a)(!(null===(e=this.socketReference)||void 0===e?void 0:e.disconnected),1044),!0!==(null===(t=this.details.supportedFeatures)||void 0===t?void 0:t.api_flush_ops))throw this.logger.sendErrorEvent({eventName:"FlushOpsNotSupported"}),new Error("flush() API is not supported by PUSH, required for single-commit summaries");this.pushCallCounter++;const s=`${this.requestOpsNoncePrefix}${this.pushCallCounter}`;return void 0!==this.flushDeferred&&(this.logger.sendErrorEvent({eventName:"FlushOpsTooMany"}),this.flushDeferred.reject("process involving flush() was cancelled OR unsupported concurrency")),this.socket.emit("flush_ops",this.clientId,{nonce:s}),this.flushOpNonce=s,this.flushDeferred=new l.a,this.flushDeferred.promise}async initialize(e,t){var s;Object(n.a)(!(null===(s=this.socketReference)||void 0===s?void 0:s.disconnected),1045),this.enableMultiplexing&&(this.earlyOpHandler=(e,t)=>{this.documentId===e&&this.queuedMessages.push(...t)},this.earlySignalHandler=(e,t)=>{void 0!==t&&t!==this.documentId||this.queuedSignals.push(e)}),this.socketReference.on("disconnect",this.disconnectHandler),this.socket.on("get_ops_response",(e=>{const t=e.messages,s=this.getOpsMap.get(e.nonce);if(void 0!==s||0===e.nonce.indexOf(this.requestOpsNoncePrefix)){this.getOpsMap.delete(e.nonce);const n={eventName:"GetOps",nonce:void 0===s?e.nonce:void 0,code:e.code,from:null==s?void 0:s.from,to:null==s?void 0:s.to,duration:void 0===s?void 0:i.a.now()-s.start};void 0!==t&&t.length>0?(this.logger.sendPerformanceEvent(Object.assign(Object.assign({},n),{first:t[0].sequenceNumber,last:t[t.length-1].sequenceNumber,length:t.length})),this.emit("op",this.documentId,t)):this.logger.sendPerformanceEvent(Object.assign(Object.assign({},n),{length:0}))}})),this.socket.on("flush_ops_response",(e=>{if(this.flushOpNonce===e.nonce){const t=e.lastPersistedSequenceNumber;let s="generic";if(void 0===e.lastPersistedSequenceNumber||200!==e.code)switch(e.code){case 409:case 429:s="error";break;case 204:break;default:s="error"}this.logger.sendTelemetryEvent({eventName:"FlushResult",code:e.code,sequenceNumber:t,category:s}),this.flushDeferred.resolve(e),this.flushDeferred=void 0,this.flushOpNonce=void 0}})),await super.initialize(e,t)}addTrackedListener(e,t){switch(e){case"op":super.addTrackedListener(e,((e,s)=>{this.enableMultiplexing&&this.documentId!==e||t(e,s)}));break;case"signal":super.addTrackedListener(e,((e,s)=>{this.enableMultiplexing&&s&&s!==this.documentId||t(e,s)}));break;case"nack":super.addTrackedListener(e,((e,t)=>{var s,n,i,o,r,c;const a=0===e.length||e===this.documentId||e===this.clientId,{code:d,type:h,message:l,retryAfter:u}=null!==(n=null===(s=t[0])||void 0===s?void 0:s.content)&&void 0!==n?n:{},{clientSequenceNumber:p,referenceSequenceNumber:f}=null!==(o=null===(i=t[0])||void 0===i?void 0:i.operation)&&void 0!==o?o:{};this.logger.sendTelemetryEvent({eventName:"ServerNack",code:d,type:h,message:l,retryAfterSeconds:u,clientId:this.clientId,handle:a,clientSequenceNumber:p,referenceSequenceNumber:f,opType:null===(c=null===(r=t[0])||void 0===r?void 0:r.operation)||void 0===c?void 0:c.type}),a&&this.emit("nack",e,t)}));break;default:super.addTrackedListener(e,t)}}get disposed(){return this._disposed||this.socket.connected||void 0===this.connectionNotYetDisposedTimeout&&(this.connectionNotYetDisposedTimeout=setTimeout((()=>{this._disposed||this.logger.sendErrorEvent({eventName:"ConnectionNotYetDisposed",driverVersion:m.a,details:JSON.stringify(Object.assign({},this.getConnectionDetailsProps()))})}),15e3)),this._disposed}mitMessages(e,t){this.connected&&this.socket.emit(e,this.clientId,t)}ubmitSignal(e){this.emitMessages("submitSignal",[[e]])}closeSocketCore(e){const t=this.socketReference;Object(n.a)(void 0!==t,1046),t.closeSocket(e),Object(n.a)(void 0===this.socketReference,1047)}disconnectCore(){const e=this.socketReference;Object(n.a)(void 0!==e,162),this.socketReference=void 0,e.off("disconnect",this.disconnectHandler),this.hasDetails&&this.socket.emit("disconnect_document",this.clientId,this.documentId),e.removeSocketIoReference()}}var b=s("hpQ0"),y=s("Unhj"),j=s("KqdK"),T=s("Qkn4");class C{constructor(e,t,s,n,i,o,r,c,a,d){this.odspResolvedUrl=e,this.policies=t,this.getStorageToken=s,this.getWebsocketToken=n,this.mc=i,this.cache=o,this.hostPolicy=r,this.epochTracker=c,this.opsReceived=a,this.socketReferenceKeyPrefix=d,this.joinSessionKey=`${this.odspResolvedUrl.hashedDocumentId}/joinsession`}get resolvedUrl(){return this.odspResolvedUrl}get currentDeltaConnection(){return this.currentConnection}nnotateConnectionError(e,t,s){return Object(o.g)(e,{props:{failedConnectionStep:t,separateTokenRequest:s}})}async connectToDeltaStream(e){return Object(n.a)(void 0===this.currentConnection,1197),Object(b.i)((async t=>{var s;const i=void 0===this.getWebsocketToken,o=i?Promise.resolve(null):this.getWebsocketToken(t),d=e=>t=>{throw this.annotateConnectionError(t,e,!i)},h=this.joinSession(i,t,!1),[l,u]=await Promise.all([h.catch(d("joinSession")),o.catch(d("getWebsocketToken"))]),p=null!==(s=null!=u?u:l.socketToken)&&void 0!==s?s:null;if(null===p)throw this.annotateConnectionError(new c.f("Websocket token is null",a.a.fetchTokenError,{driverVersion:m.a}),"getWebsocketToken",!i);try{const t=await this.createDeltaConnection(l.tenantId,l.id,p,e,l.deltaStreamSocketUrl);return t.on("op",(),t.once("disconnect",(e=>{this.clearJoinSessionTimer(),"object"==typeof e&&null!==e&&e.errorType===r.a.authorizationError&&this.cache.sessionJoinCache.remove(this.joinSessionKey),Object(n.a)(t.disposed,1198),this.currentConnection=void 0})),this.currentConnection=t,t}catch(e){this.cache.sessionJoinCache.remove(this.joinSessionKey);const t=this.annotateConnectionError(e,"createDeltaConnection",!i);throw"object"==typeof e&&null!==e&&t.addTelemetryProperties({socketDocumentId:l.id}),t}}))}sync scheduleJoinSessionRefresh(e,t,s){await new Promise(((n,i)=>{this.joinSessionRefreshTimer=setTimeout((()=>{Object(b.i)((async e=>{await this.joinSession(t,e,!0,s),n()})).catch(()}),e)}))}async joinSession(e,t,s,n){var i;if(s&&(void 0===this.currentConnection||void 0!==n&&this.currentConnection.clientId!==n))throw this.clearJoinSessionTimer(),new c.f("JoinSessionRefreshTimerNotCancelled",r.a.genericError,{driverVersion:m.a,details:JSON.stringify({schedulerClientId:n,currentClientId:null===(i=this.currentConnection)||void 0===i?void 0:i.clientId})});const o=await this.joinSessionCore(e,t,s).catch((e=>{if(Object(d.d)(e)&&void 0!==e.facetCodes)for(const t of e.facetCodes)switch(t){case"sessionForbiddenOnPreservedFiles":case"sessionForbiddenOnModerationEnabledLibrary":case"sessionForbiddenOnRequireCheckout":throw this.policies=Object.assign(Object.assign({},this.policies),{storageOnly:!0}),new c.b(t,{driverVersion:m.a});default:continue}throw e}));return this._relayServiceTenantAndSessionId=`${o.tenantId}/${o.id}`,o}async joinSessionCore(e,t,s){var n;const i=this.mc.config.getBoolean("Fluid.Driver.Odsp.disableJoinSessionRefresh"),o=async()=>{var n;const o=await async function(e,t,s,n,i,o,r,c,a,d,h){const l=await i(c,"JoinSession"),u=c.refresh?{hasClaims:!!c.claims,hasTenantId:!!c.tenantId}:{},p=Object.assign(Object.assign({refreshedToken:c.refresh,requestSocketToken:r},u),{refreshingSession:d});return y.b.timedExecAsync(n,Object.assign({eventName:"JoinSession",attempts:c.refresh?2:1,details:JSON.stringify(p)},u),(async t=>{const s=Object(b.h)(e.siteUrl),i=Object(v.a)();let c=`--${i}\r\n`;c+=`Authorization: Bearer ${l}\r\n`,c+="X-HTTP-Method-Override: POST\r\n",c+="Content-Type: application/json\r\n",a||(c+="prefer: FluidRemoveCheckAccess\r\n"),c+="_post: 1\r\n",r&&void 0!==h&&(c+=`\r\n${JSON.stringify({requestSocketToken:!0,guestDisplayName:h})}\r\n`),c+=`\r\n--${i}--`;const d={"Content-Type":`multipart/form-data;boundary=${i}`},u=await Object(T.a)((async()=>o.fetchAndParseAsJSON(`${Object(j.a)(s)}/drives/${e.driveId}/items/${e.itemId}/opStream/joinSession?ump=1`,{method:"POST",headers:d,body:c},"joinSession",!0)),"joinSession",n),p=u.content.deltaStreamSocketUrl,f=p.split("/")[2];return t.end(Object.assign(Object.assign({},u.propsToLog),{pushv2:p.includes("pushf"),webSocketHostName:f,refreshSessionDurationSeconds:u.content.refreshSessionDurationSeconds})),u.content.runtimeTenantId&&!u.content.tenantId&&(u.content.tenantId=u.content.runtimeTenantId),u.content}))}(this.odspResolvedUrl,0,0,this.mc.logger,this.getStorageToken,this.epochTracker,e,t,i,s,null===(n=this.hostPolicy.sessionOptions)||void 0===n?void 0:n.unauthenticatedUserDisplayName);return{entryTime:Date.now(),joinSessionResponse:o}},r=async()=>{var e;const t=await this.cache.sessionJoinCache.addOrGet(this.joinSessionKey,o);return t.joinSessionResponse.refreshSessionDurationSeconds=null!==(e=t.joinSessionResponse.refreshSessionDurationSeconds)&&void 0!==e?e:3600,Object.assign(Object.assign({},t),{refreshAfterDeltaMs:this.calculateJoinSessionRefreshDelta(t.entryTime,t.joinSessionResponse.refreshSessionDurationSeconds)})};let c=await r();if(c.refreshAfterDeltaMs<=0&&(this.cache.sessionJoinCache.remove(this.joinSessionKey),c=await r()),!i){const t={entryTime:c.entryTime,refreshSessionDurationSeconds:c.joinSessionResponse.refreshSessionDurationSeconds,refreshAfterDeltaMs:c.refreshAfterDeltaMs};c.refreshAfterDeltaMs>0?this.scheduleJoinSessionRefresh(c.refreshAfterDeltaMs,e,null===(n=this.currentConnection)||void 0===n?void 0:n.clientId).catch((e=>{this.mc.logger.sendTelemetryEvent({eventName:"JoinSessionRefreshError",details:JSON.stringify(t)},e)})):this.mc.logger.sendTelemetryEvent({eventName:"JoinSessionRefreshNotScheduled",details:JSON.stringify(t)})}return c.joinSessionResponse}calculateJoinSessionRefreshDelta(e,t){return e+(1e3*t-3e4)-Date.now()}async createDeltaConnection(e,t,s,n,o){const r=i.a.now(),c=await O.create(e,t,s,n,o,this.mc.logger,6e4,this.epochTracker,this.socketReferenceKeyPrefix),a=i.a.now()-r;return a>=2e3&&this.mc.logger.sendPerformanceEvent({eventName:"ConnectionSuccess",duration:a}),c}dispose(e){var t;this.clearJoinSessionTimer(),null===(t=this.currentConnection)||void 0===t||t.dispose(),this.currentConnection=void 0}}}}]);
//# sourceMappingURL=vendors~socketmodule.d61b4234ec9469e9958e.chunk.v7.js.map