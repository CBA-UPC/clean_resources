import{objDataset as l,debug,delegate as t,resolve}from"../../base/croco.js";import{mediaQuery as p,LOGGERS as o,noElement as u,getLocalData as h,getPathUrl as m}from"../../base/config.js";import{scriptLoad as S}from"../../modules/asset-load.js";import{enableTransparentHeader as j}from"../header-transparent.js";import{Mediator as I}from"../../base/mediator.js";import{EVENTS as g,sendEvent as A}from"../../base/event-tracker.js";let P=false;let _=false;const O=o.SEARCH;export async function openSearchPopin(){const{getPopinById:t}=await import("../../base/popin.js");const o=t("popin-search");o&&!o.opened&&o.open()}export async function closeSearchPopin(){if(_){const t=document.querySelector(".js-search-bar-form");const{getPopinById:o}=await import("../../base/popin.js");const i=o("popin-search");t&&t.classList.toggle("is-folded-down",false);i&&i.close()}}export async function onSearchPopinClosed(){const{isInstantSearchActive:i}=await import("./instant-search/instant-search.js");const t=document.querySelector(".js-menu-main.is-opened");j(!t);_=false;document.documentElement.classList.remove("search-panel--opened");setTimeout(()=>{const t=document.querySelector(".js-instant-search-input");let o=null;if(p.desktopOnly.matches){o=document.querySelector(".js-search-desk")}else{o=document.querySelector(".js-search-no-desk")}if(t){if(i()){import("./instant-search/instant-search-behavior.js").then(}else{t.blur();t.value=""}}if(o){o.focus()}})}export async function clickAnalyticsInstantSearchInit(){const{appId:t,apiKey:o}=await h("configuration.search.algolia")||{};if(!t||!o){debug("error",O,"Fail to initialize Algolia - Siteprefs missing: ALGOLIA(APP_ID or API_KEY)");return}window.AlgoliaAnalyticsObject="aa";window.aa=window.aa||window.aa("init",{appId:t,apiKey:o})}export async function bootInstantSearch(){if(P){return}P=true;const{instantSearchInit:t}=await import("./instant-search/instant-search.js");const o=["algoliasearchLite.min.js","algoliasearch.helper.min.js"];if(!window.aa){await clickAnalyticsInstantSearchInit();o.push("search-insights-1.1.1.min.js")}const i=m();return S(...o.map(source=>{return{src:`${i}js/vendor/${source}`,async:false}})).then(t)}export async function onSearchPopinOpened(){I.publish("header-burger.reset");_=true;document.documentElement.classList.add("search-panel--opened");const t=await h("configuration.search");const o=document.querySelector(".js-search-container");if(o&&t&&t.isPocEnabled){const{pocSearch:i}=await import("./poc-search.js");i(o,o.dataset.searchUrl)}else if(t&&t.isAlgoliaEnabled){await bootInstantSearch()}else{debug("warn",O,"Algolia is not enabled")}j(false);const data=resolve("tracking.pageViewData",window);data&&A(g.PAGE_VIEW,data)}export xport function bindSearchPopinBehavior(){const i=document.querySelectorAll(".js-search");t(document.documentElement,".js-search-close","click",closeSearchPopin,false);if(i.length){for(let t=0,o=i.length;t<o;t++){l(i[t],"closeCallback",onSearchPopinClosed);l(i[t],"openCallback",onSearchPopinOpened)}}else{debug("warn",O,u(".js-search"))}}export function getSuggestionsResponsivityClasses(t){const o=[];if(t.IS_SUGGESTIONS_DESKTOP_ENABLED&&!t.IS_SUGGESTIONS_MOBILE_ENABLED){o.push("no-mob")}else if(t.IS_SUGGESTIONS_MOBILE_ENABLED&&!t.IS_SUGGESTIONS_DESKTOP_ENABLED){o.push("no-desk","no-tab")}return o}