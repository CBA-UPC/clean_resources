"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5269],{85269:(e,t,i)=>{i.r(t),i.d(t,{default:);var a=i(49458);var r=i(27641),l=i(20771),n=i(76366),d=i(56712),o=i(3658),s=i(89291),u=i(40395);r y=(0,o.Z)();const f={name:"AddMultipleMediaToPlaylist",mixins:[(0,u.Z)(y,"",!1)],props:{mediaIdToPlay:{type:String,required:!0},maxMediaWillBeAddedToPlaylist:{type:Number,required:!0},playFirstMedia:{type:Boolean,default:!0},addFirstMedia:{type:Boolean,default:!1}},data:methods:c(c(c({},(0,l.nv)(n.Z,["isMediaInPlaylist","addToPlaylist","shouldPlayFirstElementInPlaylist"])),(0,l.nv)(d.Z,["updateInitTime","updateIsAuto"])),{},{addOtherMediaToPlaylist:function(){var e=this;s.Z.getOtherMediaDataOfSameParentNodes(this.mediaIdToPlay,"data-add-multiple-editions-to-playlist",this.maxMediaWillBeAddedToPlaylist).forEach((function(t){e.isMediaInPlaylist(t.mediaId)||(t.diffusion.image=t.mediaImage,t.isInAutomaticPlaylist=!1,e.addToPlaylist(t,!1))})),this.updateIsAuto(!1),this.shouldPlayFirstElementInPlaylist(!1),this.updateInitTime(0),this.playOrPause({newMedia:this.mediaIdToPlay,isChapter:!0})}})};const P=(0,i(83744).Z)(f,[["render",function(e,t,i,r,l,n){return(0,a.openBlock)(),(0,a.createElementBlock)("button",{type:"button",onClick:t[0]||(t[0]=(0,a.withModifiers)((,["stop","prevent"]))},[(0,a.renderSlot)(e.$slots,"default")])}]])}}]);