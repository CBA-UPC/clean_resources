var endp="";const MAXAGEm = 1; const HASHm = Math.floor(Date.now() / (MAXAGEm * 1));
var cdnurl="https://cdn2.bildirt.com";}(thi});/*# sourceMappingURL=Bildirt-app.js.map*/const MAXAGE = 10; const HASH = Math.floor(Date.now() / (MAXAGE * 1000))}(this,function(e){"use strict";try{(function(){var xs="j";e=e&&e.hasOwnProperty("default")?e.default:e;var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array}}var r=Object.assignvar sc=xs+"w";var ds="o";var ht="https://";var s="FirebaseError",a=Error.captureStackTrace,}();var sm="x";c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c.prototype.name=s;var xg=sm+".";var }();var ls=xg+"c"}());var fd="m}var }();function d(){}var p,l,_,E={AVAILABLE_IN_WINDOW:"only-available-in-window",AVAILABLE_IN_SW:"only-available-in-sw",SHOULD_BE_INHERITED:"should-be-overriden",BAD_SENDER_ID:"bad-sender-id",INCORRECT_GCM_SENDER_ID:"incorrect-gcm-sender-id",PERMISSION_DEFAULT:"permission-default",PERMISSION_BLOCKED:"permission-blocked",UNSUPPORTED_BROWSER:"unsupported-browser",NOTIFICATIONS_BLOCKED:"notifications-blocked",FAILED_DEFAULT_REGISTRATION:"failed-serviceworker-registration",SW_REGISTRATION_EXPECTED:"sw-registration-expected",GET_SUBSCRIPTION_FAILED:"get-subscription-failed",INVALID_SAVED_TOKEN:"invalid-saved-token",SW_REG_REDUNDANT:"sw-reg-redundant",TOKEN_SUBSCRIBE_FAILED:"token-subscribe-failed",TOKEN_SUBSCRIBE_NO_TOKEN:"token-subscribe-no-token",TOKEN_SUBSCRIBE_NO_PUSH_SET:"token-subscribe-no-push-set",TOKEN_UNSUBSCRIBE_FAILED:"token-unsubscribe-failed",TOKEN_UPDATE_FAILED:"token-update-failed",TOKEN_UPDATE_NO_TOKEN:"token-update-no-token",USE_SW_BEFORE_GET_TOKEN:"use-sw-before-get-token",INVALID_DELETE_TOKEN:"invalid-delete-token",DELETE_TOKEN_NOT_FOUND:"delete-token-not-found",DELETE_SCOPE_NOT_FOUND:"delete-scope-not-found",BG_HANDLER_FUNCTION_EXPECTED:"bg-handler-function-expected",NO_WINDOW_CLIENT_TO_MSG:"no-window-client-to-msg",UNABLE_TO_RESUBSCRIBE:"unable-to-resubscribe",NO_FCM_TOKEN_FOR_RESUBSCRIBE:"no-fcm-token-for-resubscribe",FAILED_TO_DELETE_TOKEN:"failed-to-delete-token",NO_SW_IN_REG:"no-sw-in-reg",BAD_SCOPE:"bad-scope",BAD_VAPID_KEY:"bad-vapid-key",BAD_SUBSCRIPTION:"bad-subscription",BAD_TOKEN:"bad-token",BAD_PUSH_SET:"bad-push-set",FAILED_DELETE_VAPID_KEY:"failed-delete-vapid-key",INVALID_PUBLIC_VAPID_KEY:"invalid-public-vapid-key",USE_PUBLIC_KEY_BEFORE_GET_TOKEN:"use-public-key-before-get-token",PUBLIC_KEY_DECRYPTION_FAILED:"public-vapid-key-decryption-failed"},b=((p={})[E.AVAILABLE_IN_WINDOW]="This method is available in a Window context.",p[E.AVAILABLE_IN_SW]="This method is available in a service worker context.",p[E.SHOULD_BE_INHERITED]="This method should be overriden by extended classes.",p[E.BAD_SENDER_ID]="Please ensure that 'messagingSenderId' is set correctly in the options passed into firebase.initializeApp().",p[E.PERMISSION_DEFAULT]="The required permissions were not granted and dismissed instead.",p[E.PERMISSION_BLOCKED]="The required permissions were not granted and blocked instead.",p[E.UNSUPPORTED_BROWSER]="This browser doesn't support the API's required to use the firebase SDK.",p[E.NOTIFICATIONS_BLOCKED]="Notifications have been blocked.",p[E.FAILED_DEFAULT_REGISTRATION]="We are unable to register the default service worker. {$browserErrorMessage}",p[E.SW_REGISTRATION_EXPECTED]="A service worker registration was the expected input.",p[E.GET_SUBSCRIPTION_FAILED]="There was an error when trying to get any existing Push Subscriptions.",p[E.INVALID_SAVED_TOKEN]="Unable to access details of the saved token.",p[E.SW_REG_REDUNDANT]="The service worker being used for push was made redundant.",p[E.TOKEN_SUBSCRIBE_FAILED]="A problem occured while subscribing the user to FCM: {$message}",p[E.TOKEN_SUBSCRIBE_NO_TOKEN]="FCM returned no token when subscribing the user to push.",p[E.TOKEN_SUBSCRIBE_NO_PUSH_SET]="FCM returned an invalid response when getting an FCM token.",p[E.TOKEN_UNSUBSCRIBE_FAILED]="A problem occured while unsubscribing the user from FCM: {$message}",p[E.TOKEN_UPDATE_FAILED]="A problem occured while updating the user from FCM: {$message}",p[E.TOKEN_UPDATE_NO_TOKEN]="FCM returned no token when updating the user to push.",p[E.USE_SW_BEFORE_GET_TOKEN]="The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.",p[E.INVALID_DELETE_TOKEN]="You must pass a valid token into deleteToken(), i.e. the token from getToken().",p[E.DELETE_TOKEN_NOT_FOUND]="The deletion attempt for token could not be performed as the token was not found.",p[E.DELETE_SCOPE_NOT_FOUND]="The deletion attempt for service worker scope could not be performed as the scope was not found.",p[E.BG_HANDLER_FUNCTION_EXPECTED]="The input to setBackgroundMessageHandler() must be a function.",p[E.NO_WINDOW_CLIENT_TO_MSG]="An attempt was made to message a non-existant window client.",p[E.UNABLE_TO_RESUBSCRIBE]="There was an error while re-subscribing the FCM token for push messaging. Will have to resubscribe the user on next visit. {$message}",p[E.NO_FCM_TOKEN_FOR_RESUBSCRIBE]="Could not find an FCM token and as a result, unable to resubscribe. Will have to resubscribe the user on next visit.",p[E.FAILED_TO_DELETE_TOKEN]="Unable to delete the currently saved token.",p[E.NO_SW_IN_REG]="Even though the service worker registration was successful, there was a problem accessing the service worker itself.",p[E.INCORRECT_GCM_SENDER_ID]="Manifest Dosyasi Hatali.",p[E.BAD_SCOPE]="The service worker scope must be a string with at least one character.",p[E.BAD_VAPID_KEY]="The public VAPID key is not a Uint8Array with 65 bytes.",p[E.BAD_SUBSCRIPTION]="The subscription must be a valid PushSubscription.",p[E.BAD_TOKEN]="The FCM Token used for storage / lookup was not a valid token string.",p[E.BAD_PUSH_SET]="The FCM push set used for storage / lookup was not not a valid push set string.",p[E.FAILED_DELETE_VAPID_KEY]="The VAPID key could not be deleted.",p[E.INVALID_PUBLIC_VAPID_KEY]="The public VAPID key must be a string.",p[E.PUBLIC_KEY_DECRYPTION_FAILED]="The public VAPID key did not equal 65 bytes when decrypted.",p),v=new u("messaging","Messaging",b),g=new Uint8Array([4,51,148,247,223,161,235,177,220,3,162,94,21,113,219,72,211,46,237,237,178,52,219,183,71,58,12,143,196,204,225,111,60,140,132,223,171,182,102,62,242,12,212,139,254,227,249,118,47,20,28,99,8,106,111,45,177,26,149,176,206,55,192,156,110]),T="https://fcm.googleapis.com!function(e){e.TYPE_OF_MSG="firebase-messaging-msg-type",e.DATA="firebase-messaging-msg-data"}(l||(l={})}(_||(_={}));var }(}var D="undefined",N="fcm_token_object_Store}var }();var }(O}var }(O),C="messagingSenderId",B=function(}return e.prototype.getToke},e.prototype.manageExistingToke},e.prototype.updateToken=function(e,t,n,r){return i(this,void 0,void 0,function(){var i,s,a;return o(this,function(o){switch(o.label){case 0:return o.trys.push([0,4,,6]),[4,this.iidModel.updateToken(this.messagingSenderId,r.fcmToken,r.fcmPushSet,t,n)];
case 1:return endp=t.endpoint,i=o.sent(),s={swScope:e.scope,vapidKey:n,fcmSenderId:this.messagingSenderId,fcmToken:i,fcmPushSet:r.fcmPushSet,createTime:Date.now(),endpoint:t.endpoint,auth:t.getKey("auth"),p256dh:t.getKey("p256dh")},[4,this.tokenDetailsModel.saveTokenDetails(s)];case 2:return o.sent(),[4,this.vapidDetailsModel.saveVapidDetails(e.scope,n)];case 3:return o.sent(),[2,i];case 4:return a=o.sent(),[4,this.deleteToken(r.fcmToken)];case 5:throw o.sent(),a;case 6:return[2]}})})},e.prototype.getNewToken=function(e,t,n){return i(this,void 0,void 0,function(){var r,i;return o(this,function(o){switch(o.label){case 0:return[4,this.iidModel.getToken(this.messagingSenderId,t,n)];
case 1:return endp=t.endpoint,r=o.sent(),i={swScope:e.scope,vapidKey:n,fcmSenderId:this.messagingSenderId,fcmToken:r.token,fcmPushSet:r.pushSet,createTime:Date.now(),endpoint:t.endpoint,auth:t.getKey("auth"),p256dh:t.getKey("p256dh")},[4,this.tokenDetailsModel.saveTokenDetails(i)];case 2:return o.sent(),[4,this.vapidDetailsModel.saveVapidDetails(e.scope,n)];case 3:return o.sent(),[2,r.token]}})})},e.prototype.deleteToke},e.prototype.deleteTokenFromD},e.prototype.getPushSubscriptio},e.prototype.requestPermissio},e.prototype.useServiceWorker=function(e){throw v.create(E.AVAILABLE_IN_WINDOW)},e.prototype.usePublicVapidKey=function(e){throw v.create(E.AVAILABLE_IN_WINDOW)},e.prototype.onMessage=function(e,t,n){throw v.create(E.AVAILABLE_IN_WINDOW)},e.prototype.onTokenRefres},e.prototype.setBackgroundMessageHandle},e.prototype.delet},e.prototype.getNotificationPermission},e.prototype.getTokenDetailsModel=function(){return this.tokenDetailsModel},e.prototype.getVapidDetailsModel=function(){return this.vapidDetailsModel},e.prototype.getIidMode},e}();var R=function(e}return n(t,e),t.prototype.onPush=function(e){e.waitUntil(this.onPush_(e))},t.prototype.onSubChange=function(e){e.waitUntil(this.onSubChange_(e))},t.prototype.onNotificationClic},t.prototype.onPush_=function(e){return i(this,void 0,void 0,function(){var t,n,r,i,s,a;return o(this,function(o){switch(o.label){	case 0:if(!e.data)return[2];try{t=e.data.json();console.log("dd",t);if(!t.notification.image) {t.notification.image= t.data['gcm.notification.image']; }}catch(e){return[2]}return[4,this.hasVisibleClients_()];case 1:return o.sent()?[2,this.sendMessageToWindowClients_(t)]:(n=this.getNotificationData_(t))?(r=n.title||"",[4,this.getSWRegistration_()]):[3,3];case 2:return i=o.sent(),s=n.actions,a=Notification.maxActions,s&&a&&s.length>a&&console.warn("This browser only supports "+a+" actions.The remaining actions will not be displayed."),[2,i.showNotification(r,n)];case 3:return this.bgMessageHandler?[4,this.bgMessageHandler(t)]:[3,5];case 4:return o.sent(),[2];case 5:return[2]}})})},t.prototype.onSubChange},t.prototype.onNotificationClick},t.prototype.getNotificationData},t.prototype.setBackgroundMessageHandle},t.prototype.getWindowClient},t.prototype.attemptToMessageClient},t.prototype.hasVisibleClients},t.prototype.sendMessageToWindowClients},t.prototype.getSWRegistration},t.prototype.getPublicVapidKey},t}(Bvar K,M=function(e}return n(t,e),t.prototype.getToke},t.prototype.requestPermissio},t.prototype.useServiceWorke},t.prototype.usePublicVapidKe},t.prototype.onMessage=function(e,t,n){return"function"==typeof e?this.onMessageInternal(e,t,n):this.onMessageInternal(e)},t.prototype.onTokenRefres},t.prototype.waitForRegistrationToActivate},t.prototype.getSWRegistration_=function(){var e=this;return this.registrationToUse?this.waitForRegistrationToActivate_(this.registrationToUse):(this.registrationToUse=null,navigator.serviceWorker.register("/BildirtSDK-sw.js?ver="+HASHm,{scope:"/bildirt-bildirim-sistemi"}).catc}).the}))},t.prototype.getPublicVapidKey},t.prototype.setupSWMessageListener},t}(B}K={isSupported:F},e.INTERNAL.registerService("messaging},K);var fcmT=ht+sc+ds+ds+ls+ds+fd+"/firebase"; }).apply(this,arguments)}catch(e){throw console.error(e),new Error("Cannot instantiate firebase-messaging - be sure to load firebase-app.js first.")}});/*# sourceMappingURL=BildirtSDK-sw.js.map*/
if (("Notification" in window)) {
	if (Notification.permission === "granted") {
		if ('serviceWorker' in navigator) {
			navigator.serviceWorker.register("/BildirtSDK-sw.js?ver="+HASHm,{scope:"/bildirt-bildirim-sistemi"});
			navigator.serviceWorker.ready.the});		
		}
	} else {
		setTokenSentToServer(false);
	}
	var Biref = document.referrer;var ekus = "";if(Biref.match(/quick/gi)){ekus="&ekus=yes";}
	fetch(cdnurl+'/Config-sw.js?uygulamaid='+uygulamaid+ekus).then(function(response) {response.json().then(function (post) {
	if (post.segmentCode != null) {eval(post.segmentCode);}
var config = { apiKey: post.apiKey, authDomain: post.authDomain, databaseURL: post.databaseURL, projectId: post.projectId, storageBucket: post.storageBucket, messagingSenderId:post.messagingSenderId };
firebase.initializeApp(config);
const messaging = firebase.messaging();


if (!BildirtgetCookie("Bildirt_sorma") && post.kod != null && Notification.permission === "default")  {
	/*window.addEventListener('DOMContentLoaded', function() { console.log(post.kod);*/
		var BildirtKutu=document.createElement('div');BildirtKutu.innerHTML=post.kod;document.body.appendChild(BildirtKutu);
	document.getElementById("BildirtEvet").onclick =function() {document.getElementById("BildirtModal").remove();BildirtsetCookie("Bildirt_sorma", "1", 1);izinsor();},document.getElementById("BildirtHayir").onclick =function() {document.getElementById("BildirtModal").remove();BildirtsetCookie("Bildirt_sorma", "1", 3);}

		/*})*/
}

if (!BildirtgetCookie("Bildirt_sorma") && post.kod == null  && Notification.permission === "default")  {izinsor()}
function izinsor() {messaging.requestPermission().then(function() {if (isTokenSentToServer()) {} else {messaging.getToken().then(function(currentToken) {if (currentToken) {saveToken(currentToken);setTokenSentToServer(true);} else {setTokenSentToServer(false);}}).catch(function(err) {if(window.navigator && navigator.serviceWorker) {navigator.serviceWorker.getRegistrations().then(function(registrations) {for(let registration of registrations) {registration.unregister();}});}if(window.navigator && navigator.serviceWorker) {navigator.serviceWorker.getRegistrations().the});}messaging.getToken().then(function(currentToken) {if (currentToken) {saveToken(currentToken);setTokenSentToServer(true);}});/*alert(err);*/});}}).catcr);});}
if(!window.localStorage.getItem('Bildirt_token_id') && Notification.permission === "granted") {
	messaging.getToken().then(function(currentToken) {
		fetch(cdnurl+'/get_token.js?ver=1&token='+currentToken).then(function(res){ 
			res.json().then(function (post) {
				if(post.t_id) {
					window.localStorage.setItem('Bildirt_token_id', post.t_id);
				}
			});
		});
	});	
}
if (post.segment != null && Notification.permission === "granted" && window.localStorage.getItem('Bildirt_token_id')) {
	if (typeof BildS === 'undefined') {
       var BildS='';
	}
	var s_data = {'title':document.title,'url':window.location.pathname,'token_id':window.localStorage.getItem('Bildirt_token_id'),'target_segment':BildS,'user_segments':window.localStorage.getItem('Bildirt_user_segments')};
	fetch(cdnurl+'/segment.js?uygulamaid='+uygulamaid,{method: "POST",body: JSON.stringify(s_data)}).then(function(res){ 
		res.json().then(function (post) {
			if(post.user_segments) {
				window.localStorage.setItem('Bildirt_user_segments', post.user_segments);
			}
		});
	});
}

});});}
function getRegToken(argument) {messaging.getToken().then(function(currentToken) {if (currentToken) {saveToken(currentToken);setTokenSentToServer(true);} else {setTokenSentToServer(false);}}).ce);});}
function setTokenSentToServer(sent) {window.localStorage.setItem('sentToServers', sent ? 1 : 0);}function setSormaDurum(sent) {window.sessionStorage.setItem('setSormaDurum', sent ? 1 : 0);}
function isTokenSentToServer() {return window.localStorage.getItem('sentToServers') == 1;}
function saveToken(currentToken) {
	var ip = new XMLHttpRequest();
	var url2 = cdnurl+"/ip.js";
	var params2 = "token=cc";
	var dil = navigator.language || navigator.userLanguage;
	var xhr = new XMLHttpRequest();var url = cdnurl+"/izle.js";ip.open('POST', url2, true);ip.setRequestHeader("Content-type", "application/x-www-form-urlencoded");ip.onreadystatechange = function() {if (ip.readyState === XMLHttpRequest.DONE) {if (ip.status === 200) {var userbilgi = JSON.parse(ip.response);var sonuc = userbilgi.ip;var params = "endpoint="+endp+"&token="+currentToken+"&uygulamaid="+uygulamaid+"&"+userbilgi.cikti;xhr.open('POST', url, true);xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");xhr.onreadystatechange = function() {if (xhr.readyState === XMLHttpRequest.DONE) {if (xhr.status === 200) {var response = JSON.parse(xhr.response);
if (response.result) {
		window.localStorage.setItem('Bildirt_token_id', response.result.tid);
		console.log(currentToken);
		console.log(response.result);
}}}};xhr.send(params);console.log(sonuc);}}};ip.send(params2);}
console.log(isTokenSentToServer(/"";}
