(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./js/app/common/views/NewDateFormat.js":function(e,t,n){var i;void 0===(i=function(){var e,t,n,i,r=(e=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,t=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,n=/[^-+\dA-Z]/g,i=function(o,a,s){var c=r;if(1!=arguments.length||"[object String]"!=Object.prototype.toString.call(o)||/\d/.test(o)||(a=o,o=void 0),o=o?new Date(o):new Date,isNaN(o))throw SyntaxError("invalid date");"UTC:"==(a=String(c.masks[a]||a||c.masks.default)).slice(0,4)&&(a=a.slice(4),s=!0);var l=s?"getUTC":"get",u=o[l+"Date"](),d=o[l+"Day"](),f=o[l+"Month"](),h=o[l+"FullYear"](),g=o[l+"Hours"](),p=o[l+"Minutes"](),m=o[l+"Seconds"](),v=o[l+"Milliseconds"](),y=s?0:o.getTimezoneOffset(),k={d:u,dd:i(u),ddd:c.i18n.dayNames[d],dddd:c.i18n.dayNames[d+7],m:f+1,mm:i(f+1),mmm:c.i18n.monthNames[f],mmmm:c.i18n.monthNames[f+12],yy:String(h).slice(2),yyyy:h,h:g%12||12,hh:i(g%12||12),H:g,HH:i(g),M:p,MM:i(p),s:m,ss:i(m),l:i(v,3),L:i(v>99?Math.round(v/10):v),t:g<12?"a":"p",tt:g<12?"am":"pm",T:g<12?"A":"P",TT:g<12?"AM":"PM",Z:s?"UTC":(String(o).match(t)||[""]).pop().replace(n,""),o:(y>0?"-":"+")+i(100*Math.floor(Math.abs(y)/60)+Math.abs(y)%60,4),S:["th","st","nd","rd"][u%10>3?0:(u%100-u%10!=10)*u%10]};return a.replace(e,()});return r.masks={default:"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"},r.i18n={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]},r}.apply(t,[]))||(e.exports=i)},"./js/app/common/views/NewDateRangeView.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./js/app/govinfo.js"),n("./js/app/utils.js"),n("./js/app/common/views/NewDateFormat.js")],void 0===(r=function(e,t,n,i,r,o){return i.BaseView.extend({template:"./common/templates/NewDateRangeViewSearch.html",events:{"change #dateRangeSelect":"dateRangeChanged"},initialize:function(e){i.BaseView.prototype.initialize.call(this,e),this.queryType="AD"},parseMMYYYY:function(e){var t=e.split("/");return 2==t.length?("DI"!==this.queryType&&t.splice(1,0,"01"),t.join("/")):e},getDateRange:function(e){var t={t:this.$("#dateRangeSelect").val()};if("AD"==t.t)return t.dateFrom=o(new Date,e||"mm-dd-yyyy"),t;if(this.$("#dateFrom").val()){var n=this.parseMMYYYY(this.$("#dateFrom").val()),i="mm-dd-yyyy",r=new Date(n);if("DI"===this.queryType){var a=n.split("/"),s=2===a.length,c=1===a.length;if(s){var l=parseInt(a[0],10)-1,u=parseInt(a[1],10);r=new Date(u,l),i="mm-yyyy"}else if(c){var d=parseInt(a[0],10);r=new Date(d,0),i="yyyy"}}var f=o(r,e||i);t.dateFrom=f}if(this.$("#dateTo").val()){var h=this.parseMMYYYY(this.$("#dateTo").val()),g=o(new Date(h),e||"mm-dd-yyyy");t.dateTo=g}return t},setDateRange:function(e){var t=e.dateFrom,n=e.dateTo;if(t){var i=(t=t.replace(/\-/g,"/")).split("/");1===i.length||2===i.length||(t=o(new Date(t),"mm/dd/yyyy"))}n&&(n=n.replace(/\-/g,"/"),n=o(new Date(n),"mm/dd/yyyy")),this.$("#dateFrom").val(t),this.$("#dateTo").val(n),this.$("#dateRangeSelect").val(e.t),this.dateRangeChanged()},getQueryString:function(){var e=new Date,t=o(e,"yyyy-mm-dd"),n=this.$("#dateFrom").val(),i=this.$("#dateTo").val(),r=!1;if(2==n.split("/").length)try{var a=n.split("/");r=!0,"DI"==this.queryType?a.splice(1,0,a.splice(0,1)):a.splice(1,0,"01"),n=a.join("/")}catch(e){return"null"}if(2==i.split("/").length)try{(a=i.split("/")).splice(1,0,"01"),i=a.join("/")}catch(e){return"null"}switch(this.queryType){case"AD":return"publishdate:range(,"+t+")";case"DI":try{var s=n,c=new Date(s);if(1==s.split("/").length)return"publishdate:"+s;if(2==s.split("/").length){var l=s.split("/"),u=parseInt(l[0],10),d=parseInt(l[1],10)-1;return"publishdate:"+o(new Date(u,d),"yyyy-mm")}return"publishdate:"+o(c,"yyyy-mm-dd")}catch(e){return"null"}break;case"DA":try{var f=n,h=new Date(f);return h=1==f.split("/").length?new Date(parseInt(f)+1,0,1):1==r?new Date(h.getFullYear(),h.getMonth()+1,1):new Date(h.getFullYear(),h.getMonth(),h.getDate()+1),"publishdate:range("+o(h,"yyyy-mm-dd")+",)"}catch(e){return"null"}break;case"DB":try{var g=n,p=new Date(g);return 3==g.split("/").length&&(p=new Date(p.getFullYear(),p.getMonth(),p.getDate()-1)),"publishdate:range(,"+o(p,"yyyy-mm-dd")+")"}catch(e){return"null"}break;case"DBT":try{var m=n,v=new Date(m);1==m.split("/").length&&(v=new Date(v.getFullYear()+1,0,1));var y=o(v,"yyyy-mm-dd"),k=i,C=new Date(k);return 1==k.split("/").length?C=new Date(C.getFullYear()+1,11,31):3==k.split("/").length&&1==r&&(C=new Date(C.getFullYear(),C.getMonth()+1,0)),"publishdate:range("+y+","+o(C,"yyyy-mm-dd")+")"}catch(e){return"null"}}return"publishdate:range("+e+","+e+")"},render:function(){this.$(".aswv-datepicker").datepicker({todayBtn:"linked",autoclose:!0,clearBtn:!0,orientation:"top auto",todayHighlight:!0}).on("show",().on("changeDate",(),this.$("#dateToContainer").hide(),this.$("#dateFromContainer").hide()},dateRangeChanged:function(e){switch(this.$("#dateRangeSelect").val()){case"AD":this.queryType="AD",this.$("#dateFromContainer").hide(),this.$("#dateToContainer").hide();break;case"DI":this.queryType="DI",this.$("#dateFromContainer").show(),this.$("#dateToContainer").hide();break;case"DA":this.queryType="DA",this.$("#dateFromContainer").show(),this.$("#dateToContainer").hide();break;case"DB":this.queryType="DB",this.$("#dateFromContainer").show(),this.$("#dateToContainer").hide();break;case"DBT":this.queryType="DBT",this.$("#dateFromContainer").show(),this.$("#dateToContainer").show()}}})}.apply(t,i))||(e.exports=r)},"./js/app/common/views/baseview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./node_modules/text-loader/index.js!./js/app/common/templates/loadingspinner.html"),n("./node_modules/text-loader/index.js!./js/app/common/templates/blockingspinner.html"),n("./node_modules/text-loader/index.js!./js/app/common/templates/errornotificationpage.html"),n("./node_modules/text-loader/index.js!./js/app/common/templates/errornotificationsection.html")],void 0===(r=function(e,t,n,i,r,o,a){var s=function(e){this.spinnertemplate=t.template(i),this.blockingtemplate=t.template(r),this.errortemplatepage=t.template(o),this.errortemplatesection=t.template(a),n.View.call(this,e)};return t.extend(s.prototype,n.View.prototype,{close:function(){for(var i in this.closing&&this.closing(),void 0!==this.childViews&&t.each(this.childViews,(function(e){void 0!==e&&void 0!==this.$el&&e.close()})),void 0!==this.childViews2&&t.each(this.childViews2,(function(e){void 0!==e&&void 0!==this.$el&&e.close()})),this)this[i]instanceof n.View&&this[i].close();this.onClose&&this.onClose(),e(this).empty,this.unbind(),void 0!==this.$el&&(this.remove(),delete this.$el,delete this.el)},getParameter:function(e){var t=location.hash;if(0==t.length)return null;for(var n=t.substr(1).split("&"),i=0,r=n.length;i<r;i++){var o=n[i].split("=");if(o[0]==e)return o[1]}return null},setParameter:function(e,t){var n=location.hash;0==n.length&&(n="#");var i=n.substr(1).split("&");""==i[0]&&(i=[]);for(var r=!1,o=0,a=i.length;o<a;o++){if(i[o].split("=")[0]==e){i[o]=t?e+"="+t:"",r=!0;break}}!r&&t&&i.push(e+"="+t);var s=[];for(o=0,a=i.length;o<a;o++)i[o]&&s.push(i[o]);location.hash="#"+s.join("&")},getPageTitle:getAppBaseUrl:getAppBaseUrlWOContext:function(e){return[window.location.protocol,"//",window.location.hostname,e].join("")},getmodelBaseUrl:function(e){return(e=[window.location.protocol,"//",window.location.hostname,e]).join("")},getLocationBaseUrl:function(){var e,t=document.createElement("a"),n=t.hostname;""===n?""===(e=t.href.split("?")[0])&&(e=window.location.href.split("?")[0]):e=[t.protocol,"//",n,t.pathname].join("");return e},getSpinnerTemplate:function(){return this.spinnertemplate},getBlockingTemplate:function(){return this.blockingtemplate},getErrorTemplatePage:function(){return this.errortemplatepage},getErrorTemplateSection:function(){return this.errortemplatesection}}),s.extend=n.View.extend,s}.apply(t,i))||(e.exports=r)},"./js/app/common/views/notificationview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./js/app/common/views/baseview.js")],void 0===(r=function(e,t,n,i){return i.extend({targetElement:"#errorMessage",tagName:"div",className:"notification",automaticClose:!1,defaultMessages:{success:"Success!",error:"Sorry! An error occurred in the process",warning:"Are you sure you want to take this action?",information:"An unknown event occurred"},cssClasses:{success:"alert alert-success",error:"alert alert-danger",warning:"alert alert-warning",information:"alert alert-info"},events:{click:"closeNotification"},initialize:function(t){var n="information",i=this.defaultMessages[n],r=this.targetElement;t&&t.hasOwnProperty("type")&&(n=t.type),t&&t.hasOwnProperty("text")&&(i=t.text),t&&t.hasOwnProperty("target")&&(r=t.target),t&&t.hasOwnProperty("automaticClose")&&(this.automaticClose=t.automaticClose),0===e(r+":contains("+i+")").length&&this.render(n,i,r)},render:function(e,t,n){"No Results found."!=t&&"No Search Results found."!=t||(console.log('hack - switching "No Results found." error to info message'),e="information",t="No results available."),this.$el.addClass(this.cssClasses[e]),this.$el.text(t),this.$el.prependTo(n)}})}.apply(t,i))||(e.exports=r)},"./js/app/common/views/searchwidgetview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./js/app/govinfo.js"),n("./js/app/utils.js"),n("./js/app/common/views/notificationview.js"),n("./js/app/search/views/simple/simplesearchview.js"),n("./js/app/search/views/advanced/advancedsearchwidgetview.js"),n("./js/app/search/views/citation/citationsearchwidgetview.js")],void 0===(r=function(e,t,n,i,r,o,a,s,c){return i.TabView.extend({Constructors:{SimpleSearchView:a,AdvancedSearchView:s,CitationSearchView:c},initialize:function(e){var t=location.href.substr((location.protocol+"//"+location.host).length);t=t.substr(0,4),this.isCustomApp="/app"==t,this.isCustomApp||(this.persistBy="root",this.useHash=!0,this.useState=!1,this.doNotleaveHistoryTrail=!0),i.TabView.prototype.initialize.call(this,e)},_change:function(e){switch(e){case"default":case"advanced":case"citation":break;default:e=null}i.TabView.prototype._change.call(this,e)},loadingTemplate:"./common/templates/searchwidget/Loading.html",template:"./common/templates/searchwidget/SearchWidgetView.html",renderView:)}.apply(t,i))||(e.exports=r)},"./js/app/piwik.js":function(module,exports,__webpack_require__){(function(module,global){var __WEBPACK_AMD_DEFINE_RESULT__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;object"!=("undefined"==typeof JSON2?"undefined":_typeof(JSON2))&&"object"==_typeof(window.JSON)&&window.JSON.stringify&&window.JSON.parse?JSON2=window.JSON:function(){var e={};(function(){function t(e,n){||(e=o.Object()),n||(n=o.Object());var a=e.Number||o.Number,s=e.String||o.String,c=e.Object||o.Object,l=e.Date||o.Date,u=e.SyntaxError||o.SyntaxError,d=e.TypeError||o.TypeError,f=e.Math||o.Math,h=e.JSON||o.JSON;"object"==_typeof(h)&&h&&(n.stringify=h.stringify,n.parse=h.parse);var g,p,m,v=c.prototype,y=v.toString,k=new l(-0xc782b5b800cec);try{k=-109252==k.getUTCFullYear()&&0===k.getUTCMonth()&&1===k.getUTCDate()&&10==k.getUTCHours()&&37==k.getUTCMinutes()&&6==k.getUTCSeconds()&&708==k.getUTCMilliseconds()}catch(e){}if(!r("json")){var C="[object Function]",T="[object Number]",b="[object String]",w="[object Array]",A=r("bug-string-char-index");if(!k)var N=f.floor,_=[0,31,59,90,120,151,181,212,243,273,304,334],S=if((g=v.hasOwnProperty)||(g=,p=function(e,t){var n,r,o,a=0;for(o in(n=.prototype.valueOf=0,r=new n)g.call(r,o)&&a++;return n=r=null,a?p=2==a?(r=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"],p=,p(e,t)},!r("json-stringify")){var I={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"},D=E=R=function e(t,n,i,r,o,a,s){var c,l,u,f,h,v,k,C,A,_,I,R,O,q,x,P;try{c=n[t]}catch(t){}if("object"==_typeof(c)&&c)if("[object Date]"!=(l=y.call(c))||g.call(c,"toJSON"))"function"==typeof c.toJSON&&(l!=T&&l!=b&&l!=w||g.call(c,"toJSON"))&&(c=c.toJSON(t));else if(c>-1/0&&c<1/0){if(S){for(h=N(c/864e5),u=N(h/365.2425)+1970-1;S(u+1,0)<=h;u++);for(f=N((h-S(u,0))/30.42);S(u,f+1)<=h;f++);h=1+h-S(u,f),k=N((v=(c%864e5+864e5)%864e5)/36e5)%24,C=N(v/6e4)%60,A=N(v/1e3)%60,_=v%1e3}else u=c.getUTCFullYear(),f=c.getUTCMonth(),h=c.getUTCDate(),k=c.getUTCHours(),C=c.getUTCMinutes(),A=c.getUTCSeconds(),_=c.getUTCMilliseconds();c=(u<=0||u>=1e4?(u<0?"-":"+")+D(6,u<0?-u:u):D(4,u))+"-"+D(2,f+1)+"-"+D(2,h)+"T"+D(2,k)+":"+D(2,C)+":"+D(2,A)+"."+D(3,_)+"Z"}else c=null;if(i&&(c=i.call(n,t,c)),null===c)return"null";if("[object Boolean]"==(l=y.call(c)))return""+c;if(l==T)return c>-1/0&&c<1/0?""+c:"null";if(l==b)return E(""+c);if("object"==_typeof(c)){for(q=s.length;q--;)if(s[q]===c)throw d();if(s.push(c),I=[],x=a,a+=o,l==w){for(O=0,q=c.length;O<q;O++)R=e(O,c,i,r,o,a,s),I.push(R===m?"null":R);P=I.length?o?"[\n"+a+I.join(",\n"+a)+"\n"+x+"]":"["+I.join(",")+"]":"[]"}else p(r||c,(),P=I.length?o?"{\n"+a+I.join(",\n"+a)+"\n"+x+"}":"{"+I.join(",")+"}":"{}";return s.pop(),P}};n.stringify=function(e,t,n){var r,o,a,s;if(i[_typeof(t)]&&t)if((s=y.call(t))==C)o=t;else if(s==w){a={};for(var c,l=0,u=t.length;l<u;c=t[l++],((s=y.call(c))==b||s==T)&&(a[c]=1));}if(n)if((s=y.call(n))==T){if((n-=n%1)>0)for(r="",n>10&&(n=10);r.length<n;r+=" ");}else s==b&&(r=n.length<=10?n:n.slice(0,10));return R("",((c={})[""]=e,c),o,a,r,"",[])}}if(!r("json-parse")){var O,q,x=s.fromCharCode,P={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"},j=V=U=H=n.parse=function(e,t){var n,i;return O=0,q=""+e,n=V()),"$"!=V()&&j(),O=q=null,t&&y.call(t)==C?H(((i={})[""]=n,i),"",t):n}}}return n.runInContext=t,n}var n=__webpack_require__("./node_modules/webpack/buildin/amd-options.js"),i={function:!0,object:!0},r=i[_typeof(e)]&&e&&!e.nodeType&&e,o=i["undefined"==typeof window?"undefined":_typeof(window)]&&window||this,a=r&&i[_typeof(module)]&&module&&!module.nodeType&&"object"==(void 0===global?"undefined":_typeof(global))&&global;if(!a||a.global!==a&&a.window!==a&&a.self!==a||(o=a),r&&!n)t(o,r);else{var s=o.JSON,c=o.JSON3,l=!1,u=t(o,o.JSON3={noConflict:);o.JSON={parse:u.parse,stringify:u.stringify}}n&&(void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return u}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))}).call(this),JSON2=e}(),"object"!=("undefined"==typeof _paq?"undefined":_typeof(_paq))&&(_paq=[]),"object"!=("undefined"==typeof Piwik?"undefined":_typeof(Piwik))&&(Piwik=function(){"use strict";ion apply(){var e,t,n;for(e=0;e<arguments.length;e+=1)isString(t=(n=arguments[e]).shift())?asyncTracker[t].apply(asyncTracker,n):t.apply(asyncTracker,n)}unction executePluginMethod(e,t){var n,i,r="";for(n in plugins)Object.prototype.hasOwnProperty.call(plugins,n)&&(isFunction(i=plugins[n][e])&&(r+=i(t)));return r}function beforeUnloadHandler(){var e;if(executePluginMethod("unload"),expireDateTime)do{e=new Date}while(e.getTimeAlias()<expireDateTime)}function loadHandler(){var e;if(!hasLoaded)for(hasLoaded=!0,executePluginMethod("load"),e=0;e<registeredOnLoadHandlers.length;e++)registeredOnLoadHandlers[e]();return!0}function addReadyListener(){var e;documentAlias.addEventListener?addEventListener(documentAlias,"DOMContentLoaded",():documentAlias.attachEvent&&(documentAlias.attachEvent("onreadystatechange",(),documentAlias.documentElement.doScroll&&windowAlias===windowAlias.top&&)),new RegExp("WebKit").test(navigatorAlias.userAgent)&&(e=setInterval((function(){(hasLoaded||/loaded|complete/.test(documentAlias.readyState))&&(clearInterval(e),loadHandler())}),10)),addEventListener(windowAlias,"load",loadHandler,!1)}on sha1(e){var t,n,i,r,o,a,s,c,l,u,d=f=h=[],g=1732584193,p=4023233417,m=2562383102,v=271733878,y=3285377520,k=[];for(u=(e=utf8_encode(e)).length,n=0;n<u-3;n+=4)i=e.charCodeAt(n)<<24|e.charCodeAt(n+1)<<16|e.charCodeAt(n+2)<<8|e.charCodeAt(n+3),k.push(i);switch(3&u){case 0:n=2147483648;break;case 1:n=e.charCodeAt(u-1)<<24|8388608;break;case 2:n=e.charCodeAt(u-2)<<24|e.charCodeAt(u-1)<<16|32768;break;case 3:n=e.charCodeAt(u-3)<<24|e.charCodeAt(u-2)<<16|e.charCodeAt(u-1)<<8|128}for(k.push(n);14!=(15&k.length);)k.push(0);for(k.push(u>>>29),k.push(u<<3&4294967295),t=0;t<k.length;t+=16){for(n=0;n<16;n++)h[n]=k[t+n];for(n=16;n<=79;n++)h[n]=d(h[n-3]^h[n-8]^h[n-14]^h[n-16],1);for(r=g,o=p,a=m,s=v,c=y,n=0;n<=19;n++)l=d(r,5)+(o&a|~o&s)+c+h[n]+1518500249&4294967295,c=s,s=a,a=d(o,30),o=r,r=l;for(n=20;n<=39;n++)l=d(r,5)+(o^a^s)+c+h[n]+1859775393&4294967295,c=s,s=a,a=d(o,30),o=r,r=l;for(n=40;n<=59;n++)l=d(r,5)+(o&a|o&s|a&s)+c+h[n]+2400959708&4294967295,c=s,s=a,a=d(o,30),o=r,r=l;for(n=60;n<=79;n++)l=d(r,5)+(o^a^s)+c+h[n]+3395469782&4294967295,c=s,s=a,a=d(o,30),o=r,r=l;g=g+r&4294967295,p=p+o&4294967295,m=m+a&4294967295,v=v+s&4294967295,y=y+c&4294967295}return(l=f(g)+f(p)+f(m)+f(v)+f(y)).toLowerCase()}function urlFixup(e,t,n){return"translate.googleusercontent.com"===e?(""===n&&(n=t),e=getHostName(t=getParameter(t,"u"))):"cc.bingj.com"!==e&&"webcache.googleusercontent.com"!==e&&"74.6."!==e.slice(0,5)||(e=getHostName(t=documentAlias.links[0].href)),[e,t,n]}unction titleFixup(e){if(!isString(e=e&&e.text?e.text:e)){var t=documentAlias.getElementsByTagName("title");t&&isDefined(t[0])&&(e=t[0].text)}return e}ction isVisible(e){eturn!!e&&e)}function getPiwikUrlForOverlay(e,t){return t||("piwik.php"===e.slice(-9)&&(e=e.slice(0,e.length-9)),e)}function isOverlaySession(e){var t="Piwik_Overlay",n=new RegExp("index\\.php\\?module=Overlay&action=startOverlaySession&idSite=([0-9]+)&period=([^&]+)&date=([^&]+)$").exec(documentAlias.referrer);if(n){if(n[1]!==String(e))return!1;var i=n[2],r=n[3];windowAlias.name=t+"###"+i+"###"+r}var o=windowAlias.name.split("###");return 3===o.length&&o[0]===t}function injectOverlayScripts(e,t,n){var i=windowAlias.name.split("###"),r=i[1],o=i[2],a=getPiwikUrlForOverlay(e,t);loadScript(a+"plugins/Overlay/client/client.js?v=1",()}function Tracker(trackerUrl,siteId){function setCookie(e,t,n,i,r,o){var a;configCookiesDisabled||(n&&(a=new Date).setTime(a.getTime()+n),documentAlias.cookie=e+"="+encodeWrapper(t)+(n?";expires="+a.toGMTString():"")+";path="+(i||"/")+(r?";domain="+r:"")+(o?";secure":""))}nction resolveRelativeReference(e,t){var n;return getProtocolScheme(t)?t:"/"===t.slice(0,1)?getProtocolScheme(e)+"://"+getHostName(e)+t:((n=(e=purify(e)).indexOf("?"))>=0&&(e=e.slice(0,n)),(n=e.lastIndexOf("/"))!==e.length-1&&(e=e.slice(0,n+1)),e+t)}unction getImage(e,t){var n=new Image(1,1);n.onload=n.src=configTrackerUrl+(configTrackerUrl.indexOf("?")<0?"?":"&")+e}function sendXmlHttpRequest(e,t,n){isDefined(n)&&null!==n||(n=!0);try{var i=windowAlias.XMLHttpRequest?new windowAlias.XMLHttpRequest:windowAlias.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):null;i.open("POST",configTrackerUrl,!0),i.onreadystatechange=function(){4!==this.readyState||this.status>=200&&this.status<300||!n?"function"==typeof t&&t():getImage(e,t)},i.setRequestHeader("Content-Type",configRequestContentType),i.send(e)}catch(i){n&&getImage(e,t)}}unction heartBeatUp(e){!heartBeatTimeout&&configHeartBeatDelay&&(heartBeatTimeout=setTimeout((function(){if(heartBeatTimeout=null,!heartBeatPingIfActivityAlias()){var e=new Date,t=configHeartBeatDelay-(e.getTime()-lastTrackerRequestTime);heartBeatUp(t=Math.min(configHeartBeatDelay,t))}}),e||configHeartBeatDelay))}ion sendRequest(e,t,n){!configDoNotTrack&&e&&makeSureThereIsAGapAfterFirstTrackingRequestToPreventMultipleVisitorCreation((function(){"POST"===configRequestMethod?sendXmlHttpRequest(e,n):getImage(e,n),setExpireDateTime(t)})),heartBeatSetUp?heartBeatUp():setUpHeartBeat()}function canSendBulkRequest(e){return!configDoNotTrack&&e&&e.length}function sendBulkRequest(e,t){if(canSendBulkRequest(e)){var n='{"requests":["?'+e.join('","?')+'"]}';makeSureThereIsAGapAfterFirstTrackingRequestToPreventMultipleVisitorCreation((function(){sendXmlHttpRequest(n,null,!1),setExpireDateTime(t)}))}}unction hasCookies(){if(configCookiesDisabled)return"0";if(!isDefined(navigatorAlias.cookieEnabled)){var e=getCookieName("testcookie");return setCookie(e,"1"),"1"===getCookie(e)?"1":"0"}return navigatorAlias.cookieEnabled?"1":"0"}tion loadVisitorIdCookie(){var e,t=new Date,n=Math.round(t.getTime()/1e3),i=getCookie(getCookieName("id"));return i?((e=i.split(".")).unshift("0"),visitorUUID.length&&(e[1]=visitorUUID),e):e=["1",visitorUUID.length?visitorUUID:"0"===hasCookies()?"":generateRandomUuid(),n,0,n,"",""]}unction getRemainingVisitorCookieTimeout(){var e=(new Date).getTime(),t=getValuesFromVisitorIdCookie().createTs;return 1e3*parseInt(t,10)+configVisitorCookieTimeout-e}function setVisitorIdCookie(e){if(configTrackerSiteId){var t=new Date,n=Math.round(t.getTime()/1e3);isDefined(e)||(e=getValuesFromVisitorIdCookie());var i=e.uuid+"."+e.createTs+"."+e.visitCount+"."+n+"."+e.lastVisitTs+"."+e.lastEcommerceOrderTs;setCookie(getCookieName("id"),i,getRemainingVisitorCookieTimeout(),configCookiePath,configCookieDomain)}}function loadReferrerAttributionCookie(){var e=getCookie(getCookieName("ref"));if(e.length)try{if(isObject(e=JSON2.parse(e)))return e}catch(e){}return["","",0,""]}unction isPossibleToSetCookieOnDomain(e){var t="testvalue";return setCookie("test",t,1e4,null,e),getCookie("test")===t&&(deleteCookie("test",null,e),!0)}function _deleteCookies(){var e=configCookiesDisabled;configCookiesDisabled=!1;var t,n,i=["id","ses","cvar","ref"];for(t=0;t<i.length;t++)0!==getCookie(n=getCookieName(i[t]))&&deleteCookie(n,configCookiePath,configCookieDomain);configCookiesDisabled=e}ction _getRequest(e,t,n,i){function r(e,t){var n=JSON2.stringify(e);return n.length>2?"&"+t+"="+encodeWrapper(n):""}var o,a,s,c,l,u,d,f=new Date,h=Math.round(f.getTime()/1e3),g=customVariables,p=getCookieName("ses"),m=getCookieName("ref"),v=getCookieName("cvar"),y=getCookie(p),k=loadReferrerAttributionCookie(),C=configCustomUrl||locationHrefAlias;if(configCookiesDisabled&&_deleteCookies(),configDoNotTrack)return"";var T=getValuesFromVisitorIdCookie();isDefined(i)||(i="");var b=documentAlias.characterSet||documentAlias.charset;if(b&&"utf-8"!==b.toLowerCase()||(b=null),u=k[0],d=k[1],a=k[2],s=k[3],!y){var w=configSessionCookieTimeout/1e3;if((!T.lastVisitTs||h-T.lastVisitTs>w)&&(T.visitCount++,T.lastVisitTs=T.currentVisitTs),!configConversionAttributionFirstReferrer||!u.length){for(o in configCampaignNameParameters)if(Object.prototype.hasOwnProperty.call(configCampaignNameParameters,o)&&(u=getParameter(C,configCampaignNameParameters[o])).length)break;for(o in configCampaignKeywordParameters)if(Object.prototype.hasOwnProperty.call(configCampaignKeywordParameters,o)&&(d=getParameter(C,configCampaignKeywordParameters[o])).length)break}c=getHostName(configReferrerUrl),l=s.length?getHostName(s):"",!c.length||isSiteHostName(c)||configConversionAttributionFirstReferrer&&l.length&&!isSiteHostName(l)||(s=configReferrerUrl),(s.length||u.length)&&(k=[u,d,a=h,purify(s.slice(0,1024))],setCookie(m,JSON2.stringify(k),configReferralCookieTimeout,configCookiePath,configCookieDomain))}for(o in e+="&idsite="+configTrackerSiteId+"&rec=1&r="+String(Math.random()).slice(2,8)+"&h="+f.getHours()+"&m="+f.getMinutes()+"&s="+f.getSeconds()+"&url="+encodeWrapper(purify(C))+(configReferrerUrl.length?"&urlref="+encodeWrapper(purify(configReferrerUrl)):"")+(configUserId&&configUserId.length?"&uid="+encodeWrapper(configUserId):"")+"&_id="+T.uuid+"&_idts="+T.createTs+"&_idvc="+T.visitCount+"&_idn="+T.newVisitor+(u.length?"&_rcn="+encodeWrapper(u):"")+(d.length?"&_rck="+encodeWrapper(d):"")+"&_refts="+a+"&_viewts="+T.lastVisitTs+(String(T.lastEcommerceOrderTs).length?"&_ects="+T.lastEcommerceOrderTs:"")+(String(s).length?"&_ref="+encodeWrapper(purify(s.slice(0,1024))):"")+(b?"&cs="+encodeWrapper(b):"")+"&send_image=0",browserFeatures)Object.prototype.hasOwnProperty.call(browserFeatures,o)&&(e+="&"+o+"="+browserFeatures[o]);t?e+="&data="+encodeWrapper(JSON2.stringify(t)):configCustomData&&(e+="&data="+encodeWrapper(JSON2.stringify(configCustomData)));var A=sortObjectByKeys(customVariablesPage),N=sortObjectByKeys(customVariablesEvent);if(e+=r(A,"cvar"),e+=r(N,"e_cvar"),customVariables){for(o in e+=r(customVariables,"_cvar"),g)Object.prototype.hasOwnProperty.call(g,o)&&(""!==customVariables[o][0]&&""!==customVariables[o][1]||delete customVariables[o]);configStoreCustomVariablesInCookie&&setCookie(v,JSON2.stringify(customVariables),configSessionCookieTimeout,configCookiePath,configCookieDomain)}return configPerformanceTrackingEnabled&&(configPerformanceGenerationTime?e+="&gt_ms="+configPerformanceGenerationTime:performanceAlias&&performanceAlias.timing&&performanceAlias.timing.requestStart&&performanceAlias.timing.responseEnd&&(e+="&gt_ms="+(performanceAlias.timing.responseEnd-performanceAlias.timing.requestStart))),T.lastEcommerceOrderTs=isDefined(i)&&String(i).length?i:T.lastEcommerceOrderTs,setVisitorIdCookie(T),setSessionCookie(),e+=executePluginMethod(n),configAppendToTrackingUrl.length&&(e+="&"+configAppendToTrackingUrl),isFunction(configCustomRequestContentProcessing)&&(e=configCustomRequestContentProcessing(e)),e}function logEcommerce(e,t,n,i,r,o){var a,s,c="idgoal=0",l=new Date,u=[];if(String(e).length&&(c+="&ec_id="+encodeWrapper(e),a=Math.round(l.getTime()/1e3)),c+="&revenue="+t,String(n).length&&(c+="&ec_st="+n),String(i).length&&(c+="&ec_tx="+i),String(r).length&&(c+="&ec_sh="+r),String(o).length&&(c+="&ec_dt="+o),ecommerceItems){for(s in ecommerceItems)Object.prototype.hasOwnProperty.call(ecommerceItems,s)&&(isDefined(ecommerceItems[s][1])||(ecommerceItems[s][1]=""),isDefined(ecommerceItems[s][2])||(ecommerceItems[s][2]=""),isDefined(ecommerceItems[s][3])&&0!==String(ecommerceItems[s][3]).length||(ecommerceItems[s][3]=0),isDefined(ecommerceItems[s][4])&&0!==String(ecommerceItems[s][4]).length||(ecommerceItems[s][4]=1),u.push(ecommerceItems[s]));c+="&ec_items="+encodeWrapper(JSON2.stringify(u))}sendRequest(c=_getRequest(c,configCustomData,"ecommerce",a),configTrackerPause)}nction logPageView(e,t){sendRequest((new Date,_getRequest("action_name="+encodeWrapper(titleFixup(e||configTitle)),t,"log")),configTrackerPause)}tion getLinkIfShouldBeProcessed(e){if((e=getSourceElement(e),query.hasNodeAttribute(e,"href")&&isDefined(e.href))&&!startsUrlWithTrackerUrl(query.getAttributeValueFromNode(e,"href"))){var t=e.hostname||getHostName(e.href),n=t.toLowerCase(),i=e.href.replace(t,n);if(!new RegExp("^(javascript|vbscript|jscript|mocha|livescript|ecmascript|mailto):","i").test(i)){var r=getLinkType(e.className,i,isSiteHostName(n),query.hasNodeAttribute(e,"download"));if(r)return{type:r,href:i}}}}nction isNodeAuthorizedToTriggerInteraction(e,t){if(!e||!t)return!1;var n=content.findTargetNode(e);return!(content.shouldIgnoreInteraction(n)||(n=content.findTargetNodeNoDefault(e),n&&!containsNodeElement(n,t)))}ction replaceHrefsIfInternalLink(e){var t;if(e&&e.length)for(t=0;t<e.length;t++)replaceHrefIfInternalLink(e[t])}function trackContentImpressionClickInteraction(e){return function(t){if(e){var n,i=content.findParentContentNode(e);if(t&&(n=t.target||t.srcElement),n||(n=e),isNodeAuthorizedToTriggerInteraction(i,n)){if(setExpireDateTime(configTrackerPause),query.isLinkElement(e)&&query.hasNodeAttributeWithValue(e,"href")&&query.hasNodeAttributeWithValue(e,content.CONTENT_TARGET_ATTR))!startsUrlWithTrackerUrl(query.getAttributeValueFromNode(e,"href"))&&e.wasContentTargetAttrReplaced&&query.setAnyAttribute(e,content.CONTENT_TARGET_ATTR,"");var r=getLinkIfShouldBeProcessed(e);if(linkTrackingInstalled&&r&&r.type)return r.type;if(replaceHrefIfInternalLink(i))return"href";var o=content.buildContentBlock(i);if(o){var a=buildContentInteractionRequest("click",o.name,o.piece,o.target);return sendRequest(a,configTrackerPause),a}}}}}function setupInteractionsTracking(e){var t,n;if(e&&e.length)for(t=0;t<e.length;t++)(n=content.findTargetNode(e[t]))&&!n.contentInteractionTrackingSetupDone&&(n.contentInteractionTrackingSetupDone=!0,addEventListener(n,"click",trackContentImpressionClickInteraction(n)))}function buildContentImpressionsRequests(e,t){if(!e||!e.length)return[];var n,i;for(n=0;n<e.length;n++)wasContentImpressionAlreadyTracked(e[n])?(e.splice(n,1),n--):trackedContentImpressions.push(e[n]);if(!e||!e.length)return[];replaceHrefsIfInternalLink(t),setupInteractionsTracking(t);var r=[];for(n=0;n<e.length;n++)i=_getRequest(content.buildImpressionRequestParams(e[n].name,e[n].piece,e[n].target),void 0,"contentImpressions"),r.push(i);return r}ion logEvent(e,t,n,i,r){if(0===String(e).length||0===String(t).length)return!1;sendRequest(_getRequest(buildEventRequest(e,t,n,i),r,"event"),configTrackerPause)}nction logLink(e,t,n,i,r){var o=t+"="+encodeWrapper(purify(e)),a=getContentInteractionToRequestIfPossible(r,"click",e);a&&(o+="&"+a),sendRequest(_getRequest(o,n,"link"),i?0:configTrackerPause,i)}unction trackCallback(e){var t,n,i,r=["","webkit","ms","moz"];if(!configCountPreRendered)for(n=0;n<r.length;n++)if(i=r[n],Object.prototype.hasOwnProperty.call(documentAlias,prefixPropertyName(i,"hidden"))){"prerender"===documentAlias[prefixPropertyName(i,"visibilityState")]&&(t=!0);break}return t?void addEventListener(documentAlias,i+"visibilitychange",():void e()}unction trackCallbackOnReady(e){(documentAlias.attachEvent?"complete"===documentAlias.readyState:"loading"!==documentAlias.readyState)?e():documentAlias.addEventListener?documentAlias.addEventListener("DOMContentLoaded",e):documentAlias.attachEvent&&documentAlias.attachEvent("onreadystatechange",e)}function processClick(e){var t=getLinkIfShouldBeProcessed(e);t&&t.type&&(t.href=safeDecodeWrapper(t.href),logLink(t.href,t.type,void 0,null,e))}unction getKeyCodeFromEvent(e){var t=e.which,n=_typeof(e.button);return t||"undefined"===n||(isIE8orOlder()?1&e.button?t=1:2&e.button?t=3:4&e.button&&(t=2):0===e.button||"0"===e.button?t=1:1&e.button?t=2:2&e.button&&(t=3)),t}nction clickHandler(e){return function(t){var n=getNameOfClickedButton(t=t||windowAlias.event),i=getTargetElementFromEvent(t);if("click"===t.type){var r=!1;e&&"middle"===n&&(r=!0),i&&!r&&processClick(i)}else"mousedown"===t.type?"middle"===n&&i?(lastButton=n,lastTarget=i):lastButton=lastTarget=null:"mouseup"===t.type?(n===lastButton&&i===lastTarget&&processClick(i),lastButton=lastTarget=null):"contextmenu"===t.type&&processClick(i)}}function addClickListener(e,t){addEventListener(e,"click",clickHandler(t),!1),t&&(addEventListener(e,"mouseup",clickHandler(t),!1),addEventListener(e,"mousedown",clickHandler(t),!1),addEventListener(e,"contextmenu",clickHandler(t),!1))}function addClickListeners(e){if(!linkTrackingInstalled){linkTrackingInstalled=!0;var t,n=getClassesRegExp(configIgnoreClasses,"ignore"),i=documentAlias.links;if(i)for(t=0;t<i.length;t++)n.test(i[t].className)||addClickListener(i[t],e)}}function _enableTrackOnlyVisibleContent(e,t,n){f(isTrackOnlyVisibleContentEnabled)return!0;isTrackOnlyVisibleContentEnabled=!0;var r,o,a=!1;trackCallbackOnLoad((function(){if(e){for(r=["scroll","resize"],o=0;o<r.length;o++)documentAlias.addEventListener?documentAlias.addEventListener(r[o],i):windowAlias.attachEvent("on"+r[o],i);!100)}t&&t>0&&t=parseInt(t,10))}))}function detectBrowserFeatures(){var e,t,n={pdf:"application/pdf",qt:"video/quicktime",realp:"audio/x-pn-realaudio-plugin",wma:"application/x-mplayer2",dir:"application/x-director",fla:"application/x-shockwave-flash",java:"application/x-java-vm",gears:"application/x-googlegears",ag:"application/x-silverlight"},i=windowAlias.devicePixelRatio||1;if(!new RegExp("MSIE").test(navigatorAlias.userAgent)){if(navigatorAlias.mimeTypes&&navigatorAlias.mimeTypes.length)for(e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t=navigatorAlias.mimeTypes[n[e]],browserFeatures[e]=t&&t.enabledPlugin?"1":"0");"unknown"!=typeof navigator.javaEnabled&&isDefined(navigatorAlias.javaEnabled)&&navigatorAlias.javaEnabled()&&(browserFeatures.java="1"),isFunction(windowAlias.GearsFactory)&&(browserFeatures.gears="1"),browserFeatures.cookie=hasCookies()}browserFeatures.res=screenAlias.width*i+"x"+screenAlias.height*i}ar registeredHooks={},locationArray=urlFixup(documentAlias.domain,windowAlias.location.href,getReferrer()),domainAlias=domainFixup(locationArray[0]),locationHrefAlias=safeDecodeWrapper(locationArray[1]),configReferrerUrl=safeDecodeWrapper(locationArray[2]),_enableJSErrorTracking=!1,defaultRequestMethod="GET",configRequestMethod=defaultRequestMethod,defaultRequestContentType="application/x-www-form-urlencoded; charset=UTF-8",configRequestContentType=defaultRequestContentType,configTrackerUrl=trackerUrl||"",configApiUrl="",configAppendToTrackingUrl="",configTrackerSiteId=siteId||"",configUserId="",visitorUUID="",configCustomUrl,configTitle=documentAlias.title,configDownloadExtensions=["7z","aac","apk","arc","arj","asf","asx","avi","azw3","bin","csv","deb","dmg","doc","docx","epub","exe","flv","gif","gz","gzip","hqx","ibooks","jar","jpg","jpeg","js","mobi","mp2","mp3","mp4","mpg","mpeg","mov","movie","msi","msp","odb","odf","odg","ods","odt","ogg","ogv","pdf","phps","png","ppt","pptx","qt","qtm","ra","ram","rar","rpm","sea","sit","tar","tbz","tbz2","bz","bz2","tgz","torrent","txt","wav","wma","wmv","wpd","xls","xlsx","xml","z","zip"],configHostsAlias=[domainAlias],configIgnoreClasses=[],configDownloadClasses=[],configLinkClasses=[],configTrackerPause=500,configMinimumVisitTime,configHeartBeatDelay,heartBeatPingIfActivityAlias,configDiscardHashTag,configCustomData,configCampaignNameParameters=["pk_campaign","piwik_campaign","utm_campaign","utm_source","utm_medium"],configCampaignKeywordParameters=["pk_kwd","piwik_kwd","utm_term"],configCookieNamePrefix="_pk_",configCookieDomain,configCookiePath,configCookiesDisabled=!1,configDoNotTrack,configCountPreRendered,configConversionAttributionFirstReferrer,configVisitorCookieTimeout=339552e5,configSessionCookieTimeout=18e5,configReferralCookieTimeout=15768e6,configPerformanceTrackingEnabled=!0,configPerformanceGenerationTime=0,configStoreCustomVariablesInCookie=!1,customVariables=!1,configCustomRequestContentProcessing,customVariablesPage={},customVariablesEvent={},customVariableMaximumLength=200,ecommerceItems={},browserFeatures={},trackedContentImpressions=[],isTrackOnlyVisibleContentEnabled=!1,timeNextTrackingRequestCanBeExecutedImmediately=!1,linkTrackingInstalled=!1,linkTrackingEnabled=!1,heartBeatSetUp=!1,lastTrackerRequestTime=null,heartBeatTimeout,lastButton,lastTarget,hash=sha1,domainHash;return heartBeatPingIfActivityAlias=function(){var e=new Date;return lastTrackerRequestTime+configHeartBeatDelay<=e.getTime()&&(sendRequest(_getRequest("ping=1",null,"ping"),configTrackerPause),!0)},detectBrowserFeatures(),updateDomainHash(),setVisitorIdCookie(),executePluginMethod("run",registerHook),{hook:registeredHooks,getHook:function(e){return registeredHooks[e]},getQuery:function(){return query},getContent:function(){return content},buildContentImpressionRequest:buildContentImpressionRequest,buildContentInteractionRequest:buildContentInteractionRequest,buildContentInteractionRequestNode:buildContentInteractionRequestNode,buildContentInteractionTrackingRedirectUrl:buildContentInteractionTrackingRedirectUrl,getContentImpressionsRequestsFromNodes:getContentImpressionsRequestsFromNodes,getCurrentlyVisibleContentImpressionsRequestsIfNotTrackedYet:getCurrentlyVisibleContentImpressionsRequestsIfNotTrackedYet,trackCallbackOnLoad:trackCallbackOnLoad,trackCallbackOnReady:trackCallbackOnReady,buildContentImpressionsRequests:buildContentImpressionsRequests,wasContentImpressionAlreadyTracked:wasContentImpressionAlreadyTracked,appendContentInteractionToRequestIfPossible:getContentInteractionToRequestIfPossible,setupInteractionsTracking:setupInteractionsTracking,trackContentImpressionClickInteraction:trackContentImpressionClickInteraction,internalIsNodeVisible:isVisible,isNodeAuthorizedToTriggerInteraction:isNodeAuthorizedToTriggerInteraction,replaceHrefIfInternalLink:replaceHrefIfInternalLink,getConfigDownloadExtensions:function(){return configDownloadExtensions},enableTrackOnlyVisibleContent:clearTrackedContentImpressions:getTrackedContentImpressions:function(){return trackedContentImpressions},clearEnableTrackOnlyVisibleContent:function(){isTrackOnlyVisibleContentEnabled=!1},disableLinkTracking:getConfigVisitorCookieTimeout:function(){return configVisitorCookieTimeout},getRemainingVisitorCookieTimeout:getRemainingVisitorCookieTimeout,getVisitorId:getVisitorInfo:function(){return loadVisitorIdCookie()},getAttributionInfo:getAttributionCampaignName:function(){return loadReferrerAttributionCookie()[0]},getAttributionCampaignKeyword:function(){return loadReferrerAttributionCookie()[1]},getAttributionReferrerTimestamp:function(){return loadReferrerAttributionCookie()[2]},getAttributionReferrerUrl:setTrackerUrl:function(e){configTrackerUrl=e},getTrackerUrl:function(){return configTrackerUrl},getSiteId:function(){return configTrackerSiteId},setSiteId:function(e){_setSiteId(e)},setUserId:function(e){isDefined(e)&&e.length&&(visitorUUID=hash(configUserId=e).substr(0,16))},getUserId:function(){return configUserId},setCustomData:getCustomData:function(){return configCustomData},setCustomRequestProcessing:function(e){configCustomRequestContentProcessing=e},appendToTrackingUrl:function(e){configAppendToTrackingUrl=e},getRequest:addPlugin:function(e,t){plugins[e]=t},setCustomVariable:function(e,t,n,i){var r;isDefined(i)||(i="visit"),isDefined(t)&&(isDefined(n)||(n=""),e>0&&(t=isString(t)?t:String(t),n=isString(n)?n:String(n),r=[t.slice(0,customVariableMaximumLength),n.slice(0,customVariableMaximumLength)],"visit"===i||2===i?(loadCustomVariables(),customVariables[e]=r):"page"===i||3===i?customVariablesPage[e]=r:"event"===i&&(customVariablesEvent[e]=r)))},getCustomVariable:deleteCustomVariable:storeCustomVariablesInCookie:function(){configStoreCustomVariablesInCookie=!0},setLinkTrackingTimer:function(e){configTrackerPause=e},setDownloadExtensions:addDownloadExtensions:removeDownloadExtensions:setDomains:function(e){(configHostsAlias=isString(e)?[e]:e).push(domainAlias)},setIgnoreClasses:function(e){configIgnoreClasses=isString(e)?[e]:e},setRequestMethod:function(e){configRequestMethod=e||defaultRequestMethod},setRequestContentType:setReferrerUrl:function(e){configReferrerUrl=e},setCustomUrl:setDocumentTitle:function(e){configTitle=e},setAPIUrl:function(e){configApiUrl=e},setDownloadClasses:function(e){configDownloadClasses=isString(e)?[e]:e},setLinkClasses:function(e){configLinkClasses=isString(e)?[e]:e},setCampaignNameKey:function(e){configCampaignNameParameters=isString(e)?[e]:e},setCampaignKeywordKey:discardHashTag:function(e){configDiscardHashTag=e},setCookieNamePrefix:setCookieDomain:setCookiePath:setVisitorCookieTimeout:function(e){configVisitorCookieTimeout=1e3*e},setSessionCookieTimeout:function(e){configSessionCookieTimeout=1e3*e},setReferralCookieTimeout:setConversionAttributionFirstReferrer:function(e){configConversionAttributionFirstReferrer=e},disableCookies:function(){configCookiesDisabled=!0,browserFeatures.cookie="0",configTrackerSiteId&&_deleteCookies()},deleteCookies:setDoNotTrack:addListener:enableLinkTracking:function(e){linkTrackingEnabled=!0,hasLoaded?addClickListeners(e):registeredOnLoadHandlers.push(()},enableJSErrorTracking:function(){if(!_enableJSErrorTracking){_enableJSErrorTracking=!0;var e=windowAlias.onerror;windowAlias.onerror=function(t,n,i,r,o){return trackCallback((function(){var e=n+":"+i;r&&(e+=":"+r),logEvent("JavaScript Errors",e,t)})),!!e&&e(t,n,i,r,o)}}},disablePerformanceTracking:setGenerationTimeMs:enableHeartBeatTimer:function(e){e=Math.max(e,1),configHeartBeatDelay=1e3*(e||15),null!==lastTrackerRequestTime&&setUpHeartBeat()},disableHeartBeatTimer:function(){heartBeatDown(),configHeartBeatDelay=null,window.removeEventListener("focus",heartBeatOnFocus),window.removeEventListener("blur",heartBeatOnBlur)},killFrame:redirectFile:setCountPreRendered:trackGoal:function(e,t,n){trackCallback((function(){logGoal(e,t,n)}))},trackLink:function(e,t,n,i){trackCallback((function(){logLink(e,t,n,i)}))},trackPageView:function(e,t){trackedContentImpressions=[],trackCallback(isOverlaySession(configTrackerSiteId)?function(){injectOverlayScripts(configTrackerUrl,configApiUrl,configTrackerSiteId)}:},trackAllContentImpressions:trackVisibleContentImpressions:trackContentImpression:function(e,t,n){isOverlaySession(configTrackerSiteId)||e&&(t=t||"Unknown",trackCallback(())},trackContentImpressionsWithinNode:trackContentInteraction:function(e,t,n,i){isOverlaySession(configTrackerSiteId)||e&&t&&(n=n||"Unknown",trackCallback(())},trackContentInteractionNode:logAllContentBlocksOnPage:function(){var e=content.findContentNodes(),t=content.collectContent(e);void 0!==console&&console&&console.log&&console.log(t)},trackEvent:trackSiteSearch:setEcommerceView:addEcommerceItem:trackEcommerceOrder:trackEcommerceCartUpdate:}unction applyMethodsInOrder(e,t){var n,i,r={};for(n=0;n<t.length;n++){var o=t[n];for(r[o]=1,i=0;i<e.length;i++)if(e[i]&&e[i][0]){var a=e[i][0];o===a&&(apply(e[i]),delete e[i],r[a]>1&&void 0!==console&&console&&console.error&&console.error("The method "+a+' is registered more than once in "paq" variable. Only the last call has an effect. Please have a look at the multiple Piwik trackers documentation: http://developer.piwik.org/guides/tracking-javascript-guide#multiple-piwik-trackers'),r[a]++)}}return e}var expireDateTime,plugins={},documentAlias=document,navigatorAlias=navigator,screenAlias=screen,windowAlias=window,performanceAlias=windowAlias.performance||windowAlias.mozPerformance||windowAlias.msPerformance||windowAlias.webkitPerformance,hasLoaded=!1,registeredOnLoadHandlers=[],encodeWrapper=windowAlias.encodeURIComponent,decodeWrapper=windowAlias.decodeURIComponent,urldecode=unescape,asyncTracker,iterator,Piwik,query={htmlCollectionToArray:find:findMultiple:function(e){if(!e||!e.length)return[];var t,n,i=[];for(t=0;t<e.length;t++)n=this.find(e[t]),i=i.concat(n);return this.makeNodesUnique(i)},findNodesByTagName:makeNodesUnique:getAttributeValueFromNode:function(e,t){if(this.hasNodeAttribute(e,t)){if(e&&e.getAttribute)return e.getAttribute(t);if(e&&e.attributes)if("undefined"!==_typeof(e.attributes[t])){if(e.attributes[t].value)return e.attributes[t].value;if(e.attributes[t].nodeValue)return e.attributes[t].nodeValue;var n,i=e.attributes;if(i){for(n=0;n<i.length;n++)if(i[n].nodeName===t)return i[n].nodeValue;return null}}}},hasNodeAttributeWithValue:hasNodeAttribute:function(e,t){return e&&e.hasAttribute?e.hasAttribute(t):!(!e||!e.attributes)&&"undefined"!==_typeof(e.attributes[t])},hasNodeCssClass:findNodesHavingAttribute:findFirstNodeHavingAttribute:function(e,t){if(e&&t){if(this.hasNodeAttribute(e,t))return e;var n=this.findNodesHavingAttribute(e,t);return n&&n.length?n[0]:void 0}},findFirstNodeHavingAttributeWithValue:findNodesHavingCssClass:findFirstNodeHavingClass:isLinkElement:setAnyAttribute:,content={CONTENT_ATTR:"data-track-content",CONTENT_CLASS:"piwikTrackContent",CONTENT_NAME_ATTR:"data-content-name",CONTENT_PIECE_ATTR:"data-content-piece",CONTENT_PIECE_CLASS:"piwikContentPiece",CONTENT_TARGET_ATTR:"data-content-target",CONTENT_TARGET_CLASS:"piwikContentTarget",CONTENT_IGNOREINTERACTION_ATTR:"data-content-ignoreinteraction",CONTENT_IGNOREINTERACTION_CLASS:"piwikContentIgnoreInteraction",location:void 0,findContentNodes:findContentNodesWithinNode:function(e){if(!e)return[];var t,n=query.findNodesHavingCssClass(e,this.CONTENT_CLASS),i=query.findNodesHavingAttribute(e,this.CONTENT_ATTR);if(i&&i.length)for(t=0;t<i.length;t++)n.push(i[t]);return(query.hasNodeAttribute(e,this.CONTENT_ATTR)||query.hasNodeCssClass(e,this.CONTENT_CLASS))&&n.push(e),query.makeNodesUnique(n)},findParentContentNode:function(e){if(e)for(var t=e,n=0;t&&t!==documentAlias&&t.parentNode;){if(query.hasNodeAttribute(t,this.CONTENT_ATTR))return t;if(query.hasNodeCssClass(t,this.CONTENT_CLASS))return t;if(t=t.parentNode,n>1e3)break;n++}},findPieceNode:function(e){var t;return(t=query.findFirstNodeHavingAttribute(e,this.CONTENT_PIECE_ATTR))||(t=query.findFirstNodeHavingClass(e,this.CONTENT_PIECE_CLASS)),t||e},findTargetNodeNoDefault:function(e){if(e){var t=query.findFirstNodeHavingAttributeWithValue(e,this.CONTENT_TARGET_ATTR);return t||((t=query.findFirstNodeHavingAttribute(e,this.CONTENT_TARGET_ATTR))?t:(t=query.findFirstNodeHavingClass(e,this.CONTENT_TARGET_CLASS))||void 0)}},findTargetNode:findContentName:findContentPiece:findContentTarget:isSameDomain:removeDomainIfIsInLink:findMediaUrlInNode:trim:function(e){return e&&String(e)===e?e.replace(/^\s+|\s+$/g,""):e},isOrWasNodeInViewport:isNodeVisible:buildInteractionRequestParams:buildImpressionRequestParams:buildContentBlock:collectContent:setLocation:getLocation:toAbsoluteUrl:isUrlToCurrentDomain:setHrefAttribute:shouldIgnoreInteraction:;addEventListener(windowAlias,"beforeunload",beforeUnloadHandler,!1),addReadyListener(),Date.prototype.getTimeAlias=Date.prototype.getTime,asyncTracker=new Tracker;var applyFirst=["disableCookies","setTrackerUrl","setAPIUrl","setCookiePath","setCookieDomain","setUserId","setSiteId","enableLinkTracking"];for(_paq=applyMethodsInOrder(_paq,applyFirst),iterator=0;iterator<_paq.length;iterator++)_paq[iterator]&&apply(_paq[iterator]);return _paq=new TrackerProxy,Piwik={addPlugin:getTracker:getAsyncTracker:function(){return asyncTracker}},__WEBPACK_AMD_DEFINE_ARRAY__=[],__WEBPACK_AMD_DEFINE_RESULT__=apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__),Piwik}()),window&&window.piwikAsyncInit&&window.piwikAsyncInit(),"undefined"===("undefined"==typeof AnalyticsTracker?"undefined":_typeof(AnalyticsTracker))&&(AnalyticsTracker=Piwik),"function"!=typeof piwik_log&&(piwik_log=function(e,t,n,i){"use strict";ar o,a=Piwik.getTracker(n,t);a.setDocumentTitle(e),a.setCustomData(i),(o=r("tracker_pause"))&&a.setLinkTrackingTimer(o),(o=r("download_extensions"))&&a.setDownloadExtensions(o),(o=r("hosts_alias"))&&a.setDomains(o),(o=r("ignore_classes"))&&a.setIgnoreClasses(o),a.trackPageView(),r("install_tracker")&&(piwik_track=a.enableLinkTracking())})}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module),__webpack_require__("./node_modules/webpack/buildin/global.js"))},"./js/app/search/views/advanced/advancedsearchwidgetview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./node_modules/bootstrap-datepicker/dist/bootstrap-datepicker.js"),n("./js/app/govinfo.js"),n("./js/app/common/views/NewDateRangeView.js"),n("./js/app/search/views/newSearchConstraintModel.js")],void 0===(r=function(e,t,n,i,r,o,a){return AdvancedSearchView=r.BaseView.extend({loadingTemplate:"./common/templates/searchwidget/Loading.html",template:"./common/templates/searchwidget/AdvancedSearchView.html",doNotleaveHistoryTrail:!0,doNotKillDiv:!0,useHash:!0,useState:!1,statePath:["advanced"],events:{"change .aswv-search-in-select":"onSearchInSelect","change .aswv-collection-cb":"populateByCollection","change #selectAllCollections":"onSelectAllCollections","click  #searchButton":"search","click #addcriteriabuttons":"onAddCriteria","click .aswvoc-criteria-remove":"onRemoveCriteria","click #showHistoryUrl":"showHistoryUrl","click .copyBtn":"copyShareUrl"},_getCollections:function(){for(var t=[],n=this.$(".aswv-collection-cb:checked"),i=0,r=n.length;i<r;i++)t.push(e(n[i]).data("value"));return t},getHistoryUrl:function(){var t={},n=this._getCollections();t.collections=n;this.$("#dateRangeSelect").val();"AD"!=this.$("#dateRangeSelect").val()&&(t.date=this.selectDateRangeView.getDateRange());for(var i=this.$(".aswvoc-criteria-holder:visible"),r=[],o=0,a=i.length;o<a;o++){var s=e(i[o]),c={};c.f=s.find(".aswv-search-in-select").val(),c.v=s.find(".aswvoc-criteria-input").val(),c.p=s.data("row"),r.push(c)}t.fields=r;var l=JSON.stringify(t);return l=encodeURI(l)},_showHistoryUrl:!0,putForm:function(e){if(this._stopHistory=!0,e&&e.collections)for(var t=0,n=e.collections.length;t<n;t++){var i=e.collections[t];this.$('.aswv-collection-item [data-value="'+i+'"]').prop("checked",!0)}if(this.populateByCollection(),e&&e.date&&this.selectDateRangeView.setDateRange(e.date),e&&e.fields)for(t=0,n=e.fields.length;t<n;t++){var r=e.fields[t],o=this.$("#holderId"+r.p),a=o.find(".aswv-search-in-select");a.val(r.f),this._onSearchInSelect(a,(function(e,t){e.find(".aswvoc-criteria-input").val(t),o.show()}),o,r.v)}this._stopHistory=!1},getHistory:function(){var e=this.getParameter("ash");return e?(e=decodeURIComponent(e),JSON.parse(e)):null},_getFields:function(t,n,i){var r="/wssearch/search/fieldvalues/"+n;n&&null!=n?e.ajax({type:"POST",url:r,dataType:"json",processData:!1,contentType:"application/json",data:JSON.stringify(t),success:error:):i([])},_onSearchInSelect:function(t,n,i,r){var o=t.val(),a=this._mapFields[o],s=this.$("#"+t.data("holder")),c=e(s.find(".aswvoc-criteria-div-right"));c.empty(),c.html('<i class="fa fa-spinner fa-spin"><i>');var l=this._getCollections(),u=a?a.value:null;this._getFields(l,u,(function(t){if(0==t.length){var o=e('<input type="text" class="aswvoc-criteria-input form-control">');c.html(o)}else{var a=e('<select class="aswvoc-criteria-input form-control">');a.append("<option value=''>Choose Value</option>");for(var s=0,l=t.length;s<l;s++)a.append("<option value='"+t[s].value+"'>"+t[s].display+"</option>");var u=e('<div style="position:relative">'),d=e('<div class="styled-select">');d.append(a),u.append(d),c.html(u)}n&&n(i,r)}))},viaFacets:!1,preloadDataAsync:function(e,n){var i={},r=function(n,r){if(r)n=t.sortBy(n,"display"),i.collections=n;else{n=t.sortBy(n,(),i.fields=n,this._allFields=n,this._mapFields={};for(var o=n.length-1;o>=0;o--)this._mapFields[n[o].value]=n[o]}i.fields&&i.collections&&e(i)}.bind(this);this.getJSON("/wssearch/search/collections",(function(e){r(e,!0)}),n),this.getJSON("/wssearch/search/allfields",(,n)},initialize:function(e){r.BaseView.prototype.initialize.call(this,e),this.selectDateRangeView=this.instantiate(o),this.listenTo(this.getParent(),"simplesearch",this.onSimpleSearch.bind(this))},onSimpleSearch:function(){this.destroy()},render:function(){this.selectDateRangeView.setElement("#newDateRangeView").renderView(function(){var e=this.getHistory();e?this.putForm(e):this.populateByCollection(null,!0)}.bind(this))},putInHolders:function(t){for(var n=0,i=t.length;n<i;n++){var r=e(t[n]);this.tempHolders||(this.tempHolders={}),this.tempHolders[r.data("holder")]||(this.tempHolders[r.data("holder")]=e('<select style="display:none;">'),this.$el.append(this.tempHolders[r.data("holder")])),this.tempHolders[r.data("holder")].append(r)}},putInFields:function(t){for(var n=0,i=t.length;n<i;n++){var r=e(t[n]);this.$('select[data-holder="'+r.data("holder")+'"]').append(r)}},showHistoryUrl:function(e){var t=this.$("#advBookmark_placeholder");t.hide();var n=this.getHistoryUrl(),i='<div class="alert alert-info">Copy and save this link: <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> <div class="input-group"><input id="advUrlInput" type="text" class="form-control" value="'+(location.protocol+"//"+location.host+"/#advanced?ash="+n)+'"><span class="input-group-btn"><button class="copyBtn btn btn-default" type="button">Copy</button></span></div></div>';t.html(i),t.fadeIn()},copyShareUrl:function(e){var t=document.getElementById("advUrlInput").value;r.BaseView.prototype.copyShareUrl(e,t)}}),AdvancedSearchView.prototype.onSearchInSelect=function(t){var n=e(t.currentTarget);this._onSearchInSelect(n,bind(this))},AdvancedSearchView.prototype.populateByCollection=function(t,n){var i=this._getCollections();if(this.$(".aswvoc-criteria-div-right").empty(),0==i)for(var r=this.$(".aswv-collection-cb"),o=0,a=r.length;o<a;o++)i.push(e(r[o]).data("value"));var s=".aswvoc-"+i.join(".aswvoc-"),c=this.$(s);this.putInHolders(this.$(".aswv-search-in-option")),this.putInFields(c),this.$(".aswv-search-in-select").val("content"),this.$(".aswv-search-in-select").change(),this.$(".aswvoc-criteria-holder").hide(),e(this.$(".aswvoc-criteria-holder")[0]).show(),this.$("#addcriteriabuttons").show()},AdvancedSearchView.prototype.onSelectAllCollections=function(t){var n=e(t.currentTarget).prop("checked");this.$(".aswv-collection-cb").prop("checked",n),this.populateByCollection()},AdvancedSearchView.prototype._getSearchInStr=function(){for(var t=this.$(".aswvoc-criteria-holder:visible"),n="",i=[],r=0,o=t.length;r<o;r++){var a=e(t[r]),s=e(a.find(".aswv-search-in-select")).val();if(s&&"None"!=s){var c=e(a.find(".aswvoc-criteria-input")).val();c&&""!=c&&i.push(s+":("+c+")")}}return i.length>0&&(n=i.join(" AND ")),n},AdvancedSearchView.prototype._getCollectionsStr=function(){var e=this._getCollections();return e&&e.length>0?"collection:("+e.join(" OR ")+")":""},AdvancedSearchView.prototype.search=function(){var e=new a;this._getCollections();e.setPageNumber(null);var t=[];if(this.viaFacets){var n=this._getCollections();n&&n.length>0&&(e.constraints.facets={accodenav:n},e.constraints.filterOrder=["accodenav"])}else{var i=this._getCollectionsStr();i&&t.push(i)}var o=this.selectDateRangeView.getQueryString();o&&t.push(o);var s=this._getSearchInStr();s&&t.push(s),e.constraints.query=t.join(" AND "),e.constraints.historical=!0;var c=encodeURIComponent(e.getJSONString());c&&(c=c.replace(/%2F/g,r.apacheEscape)),window.location.href="/app/search/"+c},AdvancedSearchView.prototype.onAddCriteria=function(t){var n=e(t.currentTarget),i=this.$(".aswvoc-criteria-holder:hidden");i.length<=1&&n.hide();var r=e(i[0]);r.show();var o=e(r.find(".aswv-search-in-select")[0]);o.val("content"),o.change(),r.parent().append(r),this.$("#addcriteriabuttons").parent().append(this.$("#addcriteriabuttons"))},AdvancedSearchView.prototype.onRemoveCriteria=function(t){var n=e(t.currentTarget);e("#"+n.data("holder")).hide(),this.$("#addcriteriabuttons").show()},AdvancedSearchView}.apply(t,i))||(e.exports=r)},"./js/app/search/views/citation/citationsearchwidgetview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./js/app/govinfo.js")],void 0===(r=function(e,t,n){return n.BaseView.extend({template:"./common/templates/searchwidget/CitationSearchView.html",loadingTemplate:"./common/templates/searchwidget/Loading.html",useHash:!0,useState:!1,events:{"change #citationpublist":"onCollectionChange","change .form-control":"onFormControlChange","click #searchButton":"onSearch","click .cs-close-alert":"onCloseAlert","click #showHistoryUrl":"showHistoryUrl","click .copyBtn":"copyShareUrl","click .displayShare":"shareModal","click #closeModal":"removeModal","click #share-modal__inner--copy":"copyLinkUrl"},snippets:{"share-modal":"browse/templates/sharemodal.html"},showHistoryUrl:function(e){var t=this.$("#citationBookmark_placeholder");t.hide();var n=encodeURIComponent(JSON.stringify(this._getSearchJson(!0))),i='<div class="alert alert-info">Copy and save this link: <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> <div class="input-group"><input id="citationUrlInput" type="text" class="form-control" value="'+(location.protocol+"//"+location.host+"/#citation?csh="+n)+'"><span class="input-group-btn"><button class="copyBtn btn btn-default" type="button">Copy</button></span></div></div>';t.html(i),t.fadeIn()},copyShareUrl:function(e){var t=document.getElementById("citationUrlInput").value;n.BaseView.prototype.copyShareUrl(e,t)},shareModal:function(t){$currentTarget=e(t.target),~e.inArray("displayShare",$currentTarget[0].classList)&&e($currentTarget[0].closest(".copy-container")).after(this.snippet("share-modal")),n.BaseView.prototype.shareModalData()},removeModal:function(t){e(".imgPreview__inner").addClass("modalFadeOut--slower"),e(".dl-modal__inner").addClass("modalFadeOut--slower"),e(".share-modal__inner").addClass("modalFadeOut--slower");["#imgModal-contain","#dl-contain","#share-contain"].forEach((function(t){e(t).fadeOut(()})),document.documentElement.style.overflow="auto",document.body.scroll="yes"},copyLinkUrl:onFormControlChange:function(n){if(!e(n.currentTarget).hasClass("event-citation-dynamic-control")){var i=null;try{i=this._getSearchJson()}catch(e){}if(i){var r=this.$('.event-citation-dynamic-control[data-collection="'+i.collection+'"]');r.prop("disabled",!0);var o=function(e){r.empty();var n=e.selectOptions;if(n&&n.length>1&&r.prop("disabled",!1),t.each(n,(),void 0!==i)for(var i,o=0;i=this.history.searchCriteria[o];o++)i.value===r.attr("data-name")&&r.val(i.displayValue)};this.postJSON("/wssearch/search/citationsearch/update",o.bind(this),o.bind(this),i)}}},onCloseAlert:function(e){return e.stopPropagation(),this.$("#alertdiv").addClass("hide"),!1},preloadDataAsync:onCollectionChange:function(t){if(this.$(".cv-collection-content").hide(),this.$("#alertdiv").addClass("hide"),t){var n=e(t.currentTarget);this.$("#collection_"+n.val()).show()}},_getSearchJson:function(t){for(var n=this.$("select:visible,input:visible"),i=null,r=[],o=[],a=0,s=n.length;a<s;a++){var c=e(n[a]),l=c.data("required");if("citationpublist"==c[0].id)i=c.val();else{var u={value:c.data("name"),displayValue:c.val()};if(!(t||!l||c.val()&&"-1"!=c.val()))throw l;c.val()&&r.push(u),c.hasClass("event-citation-dynamic-control")&&o.push(u)}}return{collection:i,searchCriteria:r,selectOptions:o}},onSearch:function(){var e=null;try{e=this._getSearchJson()}catch(e){return this.$("#doctext").html(e),void this.$("#alertdiv").removeClass("hide")}var t=function(e){var t=this;e&&e.length>0&&(this.$("#doctext").html(""),e.forEach((function(e){if(e&&e.length>0&&null!=e[0]){if(msg='<table class="table"><tbody>',msg+='<tr class=""><td class="">',null!=e[4]&&(msg=msg+"<p><b>"+e[4]+"</b></p>"),null!=e[5]&&(msg=msg+'<p class="small"><em>'+e[5]+"</em></p>"),msg+='<div class="btn-group-horizontal">',null!=e[0]&&(msg=msg+'<a class="btn btn-sm btn-format" id ="pdflink" href="/content/pkg/'+e[0]+'" target="_blank">PDF</a>'),null!=e[2]){var n=e[6]+"/"+e[2];msg=msg+'<a class="btn btn-sm btn-format" id ="txtlink" href="/content/pkg/'+n+'" target="_blank">Text</a>'}if(null!=e[8]){var i=e[8].lastIndexOf("."),r=e[8].substring(i+1).toUpperCase();msg=msg+'<a class="btn btn-sm btn-format" id ="xmllink" href="/content/pkg/'+e[6]+"/"+e[8]+'" target="_blank">'+r+"</a>"}if(null!=e[9]){i=e[9].lastIndexOf(".");var o=e[9].substring(i+1).toUpperCase();msg=msg+'<a class="btn btn-sm btn-format"  href="/content/pkg/'+e[6]+"/"+e[9]+'" target="_blank">'+o+"</a>"}null!=e[10]&&(-1!=e[10].indexOf("uslm")?msg=msg+'<a class="btn btn-sm btn-format"  href="/content/pkg/'+e[6]+"/"+e[10]+'"  target="_blank">USLM</a>':msg=msg+'<a class="btn btn-sm btn-format"  href="/content/pkg/'+e[6]+"/"+e[10]+'"  target="_blank">XML</a>');var a="/app/details/";null!=e[6]&&(a+=e[6]),null!=e[7]&&(a=a+"/"+e[7]),"/app/details/"!=a&&(msg=msg+'<a class="btn btn-sm btn-format "  id ="detailslink" href='+a+' target="_blank">Details</a>',msg=msg+'<a class="btn btn-sm btn-default displayShare" addthis:title="'+e[4]+'" addthis:url="'+a+'" href="javascript:;">Share</a>'),msg+=" </div> </td></tr></tbody></table>",t.$("#doctext").append(msg),t.$("#alertdiv").removeClass("hide")}})))}.bind(this);this.setOverlay();this.postJSON("/wssearch/search/citationsearch",function(e){if(this.removeOverlay(),e&&e.result&&null!=e.result[0])t(e.result);else{var n=e&&e.status||"Error occurred while searching for citation.";console.log(JSON.stringify(e)),this.$("#doctext").html(n),this.$("#alertdiv").removeClass("hide")}}.bind(this),function(e){console.log("result in script "+e.redirectUrl),this.removeOverlay(),e&&e.result&&null!=e.result[0]&&t(e.result)}.bind(this),e)},render:function(){this.onCollectionChange();var e=this.getParameter("csh");e&&(e=decodeURIComponent(e),e=JSON.parse(e),this.history=e,this.putForm(e))},putForm:function(e){this.$("#citationpublist").val(e.collection),this.$("#citationpublist").trigger("change");for(var t,n=0;t=e.searchCriteria[n];n++){var i=this.$("#secondcriteria [data-collection='"+e.collection+"'][data-name='"+t.value+"']");i.val(t.displayValue),i.trigger("change")}}})}.apply(t,i))||(e.exports=r)},"./js/app/search/views/newSearchConstraintModel.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./js/app/govinfo.js")],void 0===(r=function(e,t,n,i){return SearchConstraintModel=i.PostConstraintModel.extend({addNavigator:function(e,t){if(this.constraints.navigator)for(var n=this.constraints.navigator,i=!1;n;){if(n.name==e){n.values.push(t),i=!0;break}if(!n.next&&!i){n.next={},n.next.name=e,n.next.values=[t],n.next.next=null;break}n=n.next}else this.constraints.navigator={},this.constraints.navigator.name=e,this.constraints.navigator.values=[t],this.constraints.navigator.next=null;return this.constraints.navigator},setPageNumber:function(e){this.constraints.offset=e||0},getPageNumber:function(){return this.constraints.offset?this.constraints.offset:0},setPageSize:getPageSize:_getNavigatorStr:function(){for(var e="&na=",t=[],n=[],i=this.constraints.navigator;i;){t.push(i.name);var r=i.values,o=r.join("!");r.length>1&&(o="!"+o),n.push(o),i=i.next}return e+=t.join("_"),e+="&se=",e+=n.join("_")},getBody:getUrl:),SearchConstraintModel}.apply(t,i))||(e.exports=r)},"./js/app/search/views/simple/simplesearchview.js":function(e,t,n){var i,r;i=[n("./node_modules/jquery/dist/jquery.js"),n("./node_modules/underscore/underscore.js"),n("./js/app/common/constants/uiprops.js"),n("./node_modules/custom-backbone/backbone-min.js"),n("./js/app/govinfo.js"),n("./js/app/utils.js"),n("./js/app/search/views/newSearchConstraintModel.js")],void 0===(r=function(e,t,n,i,r,o,a){return r.BaseView.extend({template:"./common/templates/searchwidget/SimpleSearchView.html",useState:!0,events:{"click #searchButton":"onSearch","keyup #searchString":"onKeyup","change #searchWithin":"onSearchWithinChange","focus #searchString":"onFocus"},snippets:{errornotification:"common/templates/errornotification.html"},onSearchWithinChange:function(t){e(t.currentTarget).prop("checked")?(this.withinTemp=this.$("#searchString").val(),this.$("#searchString").val("")):this.$("#searchString").val(this.withinTemp)},onFocus:onHashChange:function(){if("search"!=this.getParameter(1))this.$("#searchString").val(""),this.$(".search-within-wrap").addClass("hide");else{var t=this.getParameter(2),i=n.messages.error.GENERAL;if(t)try{t=JSON.parse(decodeURIComponent(t))}catch(t){e('div[data-id="search"]').html(this.snippet("errornotification",{errorText:i}))}t&&t.query?(this.$(".search-within-wrap").removeClass("hide"),this.$("#searchString").val(t.query)):(this.$("#searchString").val(""),this.$(".search-within-wrap").addClass("hide"))}},onKeyup:onSearch:function(){var t=new a,n=null;"search"==this.getParameter(1)&&(n=this.getParameter(2)),n&&(t.constraints=JSON.parse(decodeURIComponent(n)));var i=this.$("#searchString").val(),s=document.getElementById("alertdiv");if(""!==e.trim(i)){this.$("#searchWithin").prop("checked")?(t.constraints.query=/\S/.test(this.withinTemp)?this.withinTemp+" and "+i:i,this.$("#searchWithin").removeAttr("checked")):(t=new a).constraints.query=i,t.setPageNumber(null),this.getParent().trigger("simplesearch");var c=encodeURIComponent(t.getJSONString());c&&(c=c.replace(/%2F/g,r.apacheEscape)),location.href.indexOf("/app")>=0&&!location.href.indexOf("/appropriations")?history.pushState({},"",location.protocol+"//"+location.hostname+"/app/search/"+c):window.location.href="/app/search/"+c}else""===e.trim(i)&&null==s&&o.showalert("#formErrors","Please enter in a valid search term.","alert-info",5e3)},render:)}.apply(t,i))||(e.exports=r)},"./js/app/tracking.js":function(e,t,n){var i,r;i=[n("./js/app/piwik.js"),n("./node_modules/jquery/dist/jquery.js")],void 0===(r=function(e,t){"use strict";return _paq.push(["setTrackerUrl",tracking_server]),_paq.push(["setSiteId","'"+tracking_id_site+"'"]),_paq.push(["disableCookies"]),_paq.push(["trackPageView"]),t((function(){t("body").on("click","#searchButton",(function(){t("#searchString").val()&&_paq.push(["trackSiteSearch",t("#searchString").val()])}));var e=n=new RegExp("(pdf|xls|txt|zip|xml)$");t("body").on("click","a",(function(i){t(this).attr("href")&&(n.test(t(this).attr("href"))?_paq.push(["trackLink",e(t(this).attr("href")),"download"]):_paq.push(["trackLink",e(t(this).attr("href")),"link"]))}))})),_paq}.apply(t,i))||(e.exports=r)},"./js/app/utils.js":function(e,t,n){(function(t){e.exports={parseQueryParametersByName:function(e,t){var n=RegExp(t+"=([^&]*)").exec(e);return n&&decodeURIComponent(n[1].replace(/\+/g," "))},updateQueryStringParameter:function(e,t,n){var i=new RegExp("([?|&])"+t+"=.*?(&|#|$)","i");if(e.match(i))return e.replace(i,"$1"+t+"="+n+"$2");var r="",o=-1!==e.indexOf("?")?"&":"?";return-1!==e.indexOf("#")&&(r=e.replace(/.*#/,"#"),e=e.replace(/#.*/,"")),e+o+t+"="+n+r},getBrowsePathAndCollectionCodeFromHash:function(e){var t={};return t.hash=e||window.location.hash,t.href=t.hash.substring(t.hash.indexOf("/")),t.path=t.href.substring(1),t.collectionCode=-1==t.path.indexOf("/")?t.path.toLowerCase():t.path.substr(0,t.path.indexOf("/")).toLowerCase(),t.browsePath=t.path.substr(t.path.indexOf("/")+1),t},returnRefinedURL:function(e,t){var n=t.split("&").filter(().join("&");return"&".concat(n)},StringUtilsExists:function(e){return void 0!==e&&("NULL"!=e&&null!=e)},spinner:showalert:function(e,n,i,r){t(e).append('<div id="alertdiv" class="alert '+i+'"><span>'+n+"</span></div>"),setTimeout((,r)},convertDashYYYYMMDDToSlashMMDDYYY:function(e){var t=e.split("-");return t[1]+"/"+t[2]+"/"+t[0]},endsWith:convertSlashMMDDYYYToDashYYYYMMDD:substringSearchURL:function(e,t){return e.split(t+"=")[1]},isDeviceMobile:function(){var e={Android:BlackBerry:function(){return navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/BB10; Touch/)},iOS:function(){return navigator.userAgent.match(/iPhone|iPod/i)},Opera:Windows:any:;return e.any()}}}).call(this,n("./node_modules/jquery/dist/jquery.js"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9hcHAvY29tbW9uL3ZpZXdzL05ld0RhdGVGb3JtYXQuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL2NvbW1vbi92aWV3cy9OZXdEYXRlUmFuZ2VWaWV3LmpzIiwid2VicGFjazovLy8uL2pzL2FwcC9jb21tb24vdmlld3MvYmFzZXZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL2NvbW1vbi92aWV3cy9ub3RpZmljYXRpb252aWV3LmpzIiwid2VicGFjazovLy8uL2pzL2FwcC9jb21tb24vdmlld3Mvc2VhcmNod2lkZ2V0dmlldy5qcyIsIndlYnBhY2s6Ly8vLi9qcy9hcHAvcGl3aWsuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL3NlYXJjaC92aWV3cy9hZHZhbmNlZC9hZHZhbmNlZHNlYXJjaHdpZGdldHZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL3NlYXJjaC92aWV3cy9jaXRhdGlvbi9jaXRhdGlvbnNlYXJjaHdpZGdldHZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL3NlYXJjaC92aWV3cy9uZXdTZWFyY2hDb25zdHJhaW50TW9kZWwuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL3NlYXJjaC92aWV3cy9zaW1wbGUvc2ltcGxlc2VhcmNodmlldy5qcyIsIndlYnBhY2s6Ly8vLi9qcy9hcHAvdHJhY2tpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwL3V0aWxzLmpzIl0sIm5hbWVzIjpbImRlZmluZSIsInRva2VuIiwidGltZXpvbmUiLCJ0aW1lem9uZUNsaXAiLCJwYWQiLCJkYXRlRm9ybWF0IiwidmFsIiwibGVuIiwiU3RyaW5nIiwibGVuZ3RoIiwiZGF0ZSIsIm1hc2siLCJ1dGMiLCJkRiIsImFyZ3VtZW50cyIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsInRlc3QiLCJ1bmRlZmluZWQiLCJEYXRlIiwiaXNOYU4iLCJTeW50YXhFcnJvciIsIm1hc2tzIiwic2xpY2UiLCJfIiwiZCIsIkQiLCJtIiwieSIsIkgiLCJNIiwicyIsIkwiLCJvIiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJmbGFncyIsImRkIiwiZGRkIiwiaTE4biIsImRheU5hbWVzIiwiZGRkZCIsIm1tIiwibW1tIiwibW9udGhOYW1lcyIsIm1tbW0iLCJ5eSIsInl5eXkiLCJoIiwiaGgiLCJISCIsIk1NIiwic3MiLCJsIiwiTWF0aCIsInJvdW5kIiwidCIsInR0IiwiVCIsIlRUIiwiWiIsIm1hdGNoIiwicG9wIiwicmVwbGFjZSIsImZsb29yIiwiYWJzIiwiUyIsIiQwIiwic2hvcnREYXRlIiwibWVkaXVtRGF0ZSIsImxvbmdEYXRlIiwiZnVsbERhdGUiLCJzaG9ydFRpbWUiLCJtZWRpdW1UaW1lIiwibG9uZ1RpbWUiLCJpc29EYXRlIiwiaXNvVGltZSIsImlzb0RhdGVUaW1lIiwiaXNvVXRjRGF0ZVRpbWUiLCIkIiwiQmFja2JvbmUiLCJHb3ZJbmZvIiwidXRpbHMiLCJCYXNlVmlldyIsImV4dGVuZCIsInRlbXBsYXRlIiwiZXZlbnRzIiwiaW5pdGlhbGl6ZSIsIm9wdGlvbnMiLCJ0aGlzIiwicXVlcnlUeXBlIiwicGFyc2VNTVlZWVkiLCJkYXRlU3RyaW5nIiwic3BsaXREYXRlIiwic3BsaXQiLCJzcGxpY2UiLCJqb2luIiwiZ2V0RGF0ZVJhbmdlIiwiZm9ybWF0IiwiZGF0ZVJhbmdlIiwiZGF0ZUZyb20iLCJkZWZhdWx0RGF0ZUZvcm1hdCIsImRhdGVPYmoiLCJkYXRlVG9rZW5zIiwiaXNZZWFyTW9udGgiLCJpc1llYXIiLCJtb250aCIsInBhcnNlSW50IiwieWVhciIsInllYXIxIiwiZm9ybWF0dGVkIiwidmFsMSIsImZvcm1hdHRlZDEiLCJkYXRlVG8iLCJzZXREYXRlUmFuZ2UiLCJmcm9tIiwidG8iLCJkYXRlUmFuZ2VDaGFuZ2VkIiwiZ2V0UXVlcnlTdHJpbmciLCJub3ciLCJ0b2RheSIsImRhdGVGcm9tVmFsIiwiZGF0ZVRvVmFsIiwiZGlkX3BhcnNlX21vbnRoIiwiZGF0ZVNwbGl0IiwiZXhjZXB0aW9uIiwiZGF0ZUlzVmFsdWUiLCJkYXRlSXMiLCJkYXRlQWZ0ZXJWYWx1ZSIsImRhdGVBZnRlciIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZGF0ZUJlZm9yZVZhbHVlIiwiZGF0ZUJlZm9yZSIsImRhdGVGcm9tVmFsdWUiLCJkYXRlRnJvbUZvcm1hdCIsImRhdGVUb1ZhbHVlIiwicmVuZGVyIiwiZGF0ZXBpY2tlciIsInRvZGF5QnRuIiwiYXV0b2Nsb3NlIiwiY2xlYXJCdG4iLCJvcmllbnRhdGlvbiIsInRvZGF5SGlnaGxpZ2h0Iiwib24iLCJlIiwiY3NzIiwiaGlkZSIsImV2ZW50Iiwic2hvdyIsInNwaW5uZXJ0ZW1wbGF0ZSIsImJsb2NraW5ndGVtcGxhdGUiLCJlcnJvcnRlbXBsYXRlcGFnZSIsImVycm9ydGVtcGxhdGVzZWN0aW9uIiwiVmlldyIsImNsb3NlIiwicHJvcCIsImNsb3NpbmciLCJjaGlsZFZpZXdzIiwiZWFjaCIsImNoaWxkIiwiJGVsIiwiY2hpbGRWaWV3czIiLCJvbkNsb3NlIiwiZW1wdHkiLCJ1bmJpbmQiLCJyZW1vdmUiLCJlbCIsImdldFBhcmFtZXRlciIsInBhcmFtZXRlciIsImhhc2giLCJsb2NhdGlvbiIsInBhcmFtcyIsInN1YnN0ciIsImkiLCJ0b2tlbnMiLCJzZXRQYXJhbWV0ZXIiLCJ2YWx1ZSIsInJlcGxhY2VkIiwicHVzaCIsIm5vRW1wdHkiLCJnZXRQYWdlVGl0bGUiLCJnZXRBcHBCYXNlVXJsIiwidXJsIiwiZ2V0QXBwQmFzZVVybFdPQ29udGV4dCIsIndpbmRvdyIsInByb3RvY29sIiwiaG9zdG5hbWUiLCJnZXRtb2RlbEJhc2VVcmwiLCJnZXRMb2NhdGlvbkJhc2VVcmwiLCJjb21wdXRlZFVybCIsInVybGhvc3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJob3N0IiwiaHJlZiIsInBhdGhuYW1lIiwiZ2V0U3Bpbm5lclRlbXBsYXRlIiwiZ2V0QmxvY2tpbmdUZW1wbGF0ZSIsImdldEVycm9yVGVtcGxhdGVQYWdlIiwiZ2V0RXJyb3JUZW1wbGF0ZVNlY3Rpb24iLCJ0YXJnZXRFbGVtZW50IiwidGFnTmFtZSIsImNsYXNzTmFtZSIsImF1dG9tYXRpY0Nsb3NlIiwiZGVmYXVsdE1lc3NhZ2VzIiwiY3NzQ2xhc3NlcyIsInR5cGUiLCJ0ZXh0IiwidGFyZ2V0IiwiaGFzT3duUHJvcGVydHkiLCJjb25zb2xlIiwibG9nIiwiYWRkQ2xhc3MiLCJwcmVwZW5kVG8iLCJOb3RpZmljYXRpb25WaWV3IiwiU2ltcGxlU2VhcmNoVmlldyIsIkFkdmFuY2VkU2VhcmNoVmlldyIsIkNpdGF0aW9uU2VhcmNoVmlldyIsIlRhYlZpZXciLCJDb25zdHJ1Y3RvcnMiLCJwcnVuZWRTdHIiLCJpc0N1c3RvbUFwcCIsInBlcnNpc3RCeSIsInVzZUhhc2giLCJ1c2VTdGF0ZSIsImRvTm90bGVhdmVIaXN0b3J5VHJhaWwiLCJfY2hhbmdlIiwiaWQiLCJsb2FkaW5nVGVtcGxhdGUiLCJyZW5kZXJWaWV3IiwiY2FsbGJhY2siLCJKU09OMiIsIl90eXBlb2YiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJhIiwiZyIsImIiLCJyIiwiYyIsImoiLCJ0b0pTT04iLCJmIiwiayIsIk51bWJlciIsIlR5cGVFcnJvciIsInAiLCJxIiwibiIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInUiLCJ3IiwieCIsIkEiLCJCIiwiQyIsIl9fcHJvdG9fXyIsImNvbnN0cnVjdG9yIiwidmFsdWVPZiIsIkUiLCI5MiIsIjM0IiwiOCIsIjEyIiwiMTAiLCIxMyIsIjkiLCJHIiwiSSIsImNoYXJDb2RlQXQiLCJjaGFyQXQiLCJKIiwiRiIsIksiLCJOIiwiZnJvbUNoYXJDb2RlIiwiNDciLCI5OCIsIjExNiIsIjExMCIsIjEwMiIsIjExNCIsIk8iLCJQIiwiUiIsIlEiLCJydW5JbkNvbnRleHQiLCJmdW5jdGlvbiIsIm9iamVjdCIsIm5vZGVUeXBlIiwibW9kdWxlIiwiZ2xvYmFsIiwic2VsZiIsIkpTT04zIiwibm9Db25mbGljdCIsIl9wYXEiLCJQaXdpayIsInNhZmVEZWNvZGVXcmFwcGVyIiwiZGVjb2RlV3JhcHBlciIsInVuZXNjYXBlIiwiaXNEZWZpbmVkIiwiaXNGdW5jdGlvbiIsImlzT2JqZWN0IiwiaXNTdHJpbmciLCJhcHBseSIsInNoaWZ0IiwiYXN5bmNUcmFja2VyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiZXhlY3V0ZVBsdWdpbk1ldGhvZCIsInBsdWdpbnMiLCJiZWZvcmVVbmxvYWRIYW5kbGVyIiwiZXhwaXJlRGF0ZVRpbWUiLCJnZXRUaW1lQWxpYXMiLCJsb2FkSGFuZGxlciIsImhhc0xvYWRlZCIsInJlZ2lzdGVyZWRPbkxvYWRIYW5kbGVycyIsImFkZFJlYWR5TGlzdGVuZXIiLCJkb2N1bWVudEFsaWFzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5U3RhdGUiLCJkZXRhY2hFdmVudCIsImRvY3VtZW50RWxlbWVudCIsImRvU2Nyb2xsIiwid2luZG93QWxpYXMiLCJ0b3AiLCJzZXRUaW1lb3V0IiwiUmVnRXhwIiwibmF2aWdhdG9yQWxpYXMiLCJ1c2VyQWdlbnQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJsb2FkU2NyaXB0Iiwic3JjIiwib25yZWFkeXN0YXRlY2hhbmdlIiwib25sb2FkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJhcHBlbmRDaGlsZCIsImdldFJlZmVycmVyIiwicmVmZXJyZXIiLCJwYXJlbnQiLCJnZXRQcm90b2NvbFNjaGVtZSIsImV4ZWMiLCJnZXRIb3N0TmFtZSIsInV0ZjhfZW5jb2RlIiwiZW5jb2RlV3JhcHBlciIsInNoYTEiLCJ0b0xvd2VyQ2FzZSIsInVybEZpeHVwIiwibGlua3MiLCJkb21haW5GaXh1cCIsInRpdGxlRml4dXAiLCJnZXRDaGlsZHJlbkZyb21Ob2RlIiwiY2hpbGRyZW4iLCJjaGlsZE5vZGVzIiwiY29udGFpbnNOb2RlRWxlbWVudCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJpbmRleE9mQXJyYXkiLCJpbmRleE9mIiwiaXNWaXNpYmxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImRlZmF1bHRWaWV3IiwiY3VycmVudFN0eWxlIiwicGFyZW50Tm9kZSIsIm9mZnNldFRvcCIsIm9mZnNldExlZnQiLCJvZmZzZXRIZWlnaHQiLCJvZmZzZXRXaWR0aCIsInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiLCJvZmZzZXRQYXJlbnQiLCJnZXRQaXdpa1VybEZvck92ZXJsYXkiLCJpc092ZXJsYXlTZXNzaW9uIiwibmFtZSIsImluamVjdE92ZXJsYXlTY3JpcHRzIiwiUGl3aWtfT3ZlcmxheV9DbGllbnQiLCJUcmFja2VyIiwidHJhY2tlclVybCIsInNpdGVJZCIsInNldENvb2tpZSIsImNvbmZpZ0Nvb2tpZXNEaXNhYmxlZCIsInNldFRpbWUiLCJnZXRUaW1lIiwiY29va2llIiwidG9HTVRTdHJpbmciLCJnZXRDb29raWUiLCJwdXJpZnkiLCJjb25maWdEaXNjYXJkSGFzaFRhZyIsInJlc29sdmVSZWxhdGl2ZVJlZmVyZW5jZSIsImxhc3RJbmRleE9mIiwiaXNTaXRlSG9zdE5hbWUiLCJjb25maWdIb3N0c0FsaWFzIiwiZ2V0SW1hZ2UiLCJJbWFnZSIsIml0ZXJhdG9yIiwiY29uZmlnVHJhY2tlclVybCIsInNlbmRYbWxIdHRwUmVxdWVzdCIsIlhNTEh0dHBSZXF1ZXN0IiwiQWN0aXZlWE9iamVjdCIsIm9wZW4iLCJzdGF0dXMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwiY29uZmlnUmVxdWVzdENvbnRlbnRUeXBlIiwic2VuZCIsInNldEV4cGlyZURhdGVUaW1lIiwiaGVhcnRCZWF0VXAiLCJoZWFydEJlYXRUaW1lb3V0IiwiY29uZmlnSGVhcnRCZWF0RGVsYXkiLCJoZWFydEJlYXRQaW5nSWZBY3Rpdml0eUFsaWFzIiwibGFzdFRyYWNrZXJSZXF1ZXN0VGltZSIsIm1pbiIsImhlYXJ0QmVhdERvd24iLCJjbGVhclRpbWVvdXQiLCJoZWFydEJlYXRPbkZvY3VzIiwiaGVhcnRCZWF0T25CbHVyIiwic2V0VXBIZWFydEJlYXQiLCJoZWFydEJlYXRTZXRVcCIsIm1ha2VTdXJlVGhlcmVJc0FHYXBBZnRlckZpcnN0VHJhY2tpbmdSZXF1ZXN0VG9QcmV2ZW50TXVsdGlwbGVWaXNpdG9yQ3JlYXRpb24iLCJ0aW1lTmV4dFRyYWNraW5nUmVxdWVzdENhbkJlRXhlY3V0ZWRJbW1lZGlhdGVseSIsInNlbmRSZXF1ZXN0IiwiY29uZmlnRG9Ob3RUcmFjayIsImNvbmZpZ1JlcXVlc3RNZXRob2QiLCJjYW5TZW5kQnVsa1JlcXVlc3QiLCJzZW5kQnVsa1JlcXVlc3QiLCJnZXRDb29raWVOYW1lIiwiY29uZmlnQ29va2llTmFtZVByZWZpeCIsImNvbmZpZ1RyYWNrZXJTaXRlSWQiLCJkb21haW5IYXNoIiwiaGFzQ29va2llcyIsImNvb2tpZUVuYWJsZWQiLCJ1cGRhdGVEb21haW5IYXNoIiwiY29uZmlnQ29va2llRG9tYWluIiwiZG9tYWluQWxpYXMiLCJjb25maWdDb29raWVQYXRoIiwiZ2V0Q3VzdG9tVmFyaWFibGVzRnJvbUNvb2tpZSIsImxvYWRDdXN0b21WYXJpYWJsZXMiLCJjdXN0b21WYXJpYWJsZXMiLCJnZW5lcmF0ZVJhbmRvbVV1aWQiLCJwbGF0Zm9ybSIsImJyb3dzZXJGZWF0dXJlcyIsInJhbmRvbSIsImxvYWRWaXNpdG9ySWRDb29raWUiLCJ1bnNoaWZ0IiwidmlzaXRvclVVSUQiLCJnZXRWYWx1ZXNGcm9tVmlzaXRvcklkQ29va2llIiwibmV3VmlzaXRvciIsInV1aWQiLCJjcmVhdGVUcyIsInZpc2l0Q291bnQiLCJjdXJyZW50VmlzaXRUcyIsImxhc3RWaXNpdFRzIiwibGFzdEVjb21tZXJjZU9yZGVyVHMiLCJnZXRSZW1haW5pbmdWaXNpdG9yQ29va2llVGltZW91dCIsImNvbmZpZ1Zpc2l0b3JDb29raWVUaW1lb3V0Iiwic2V0VmlzaXRvcklkQ29va2llIiwibG9hZFJlZmVycmVyQXR0cmlidXRpb25Db29raWUiLCJkZWxldGVDb29raWUiLCJpc1Bvc3NpYmxlVG9TZXRDb29raWVPbkRvbWFpbiIsImRlbGV0ZUNvb2tpZXMiLCJzZXRTaXRlSWQiLCJzb3J0T2JqZWN0QnlLZXlzIiwic29ydCIsInNldFNlc3Npb25Db29raWUiLCJjb25maWdTZXNzaW9uQ29va2llVGltZW91dCIsImdldFJlcXVlc3QiLCJjb25maWdDdXN0b21VcmwiLCJsb2NhdGlvbkhyZWZBbGlhcyIsInYiLCJjaGFyYWN0ZXJTZXQiLCJjaGFyc2V0IiwiY29uZmlnQ29udmVyc2lvbkF0dHJpYnV0aW9uRmlyc3RSZWZlcnJlciIsImNvbmZpZ0NhbXBhaWduTmFtZVBhcmFtZXRlcnMiLCJjb25maWdDYW1wYWlnbktleXdvcmRQYXJhbWV0ZXJzIiwiY29uZmlnUmVmZXJyZXJVcmwiLCJjb25maWdSZWZlcnJhbENvb2tpZVRpbWVvdXQiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiY29uZmlnVXNlcklkIiwiY29uZmlnQ3VzdG9tRGF0YSIsInoiLCJjdXN0b21WYXJpYWJsZXNQYWdlIiwiY3VzdG9tVmFyaWFibGVzRXZlbnQiLCJjb25maWdTdG9yZUN1c3RvbVZhcmlhYmxlc0luQ29va2llIiwiY29uZmlnUGVyZm9ybWFuY2VUcmFja2luZ0VuYWJsZWQiLCJjb25maWdQZXJmb3JtYW5jZUdlbmVyYXRpb25UaW1lIiwicGVyZm9ybWFuY2VBbGlhcyIsInRpbWluZyIsInJlcXVlc3RTdGFydCIsInJlc3BvbnNlRW5kIiwiY29uZmlnQXBwZW5kVG9UcmFja2luZ1VybCIsImNvbmZpZ0N1c3RvbVJlcXVlc3RDb250ZW50UHJvY2Vzc2luZyIsImxvZ0Vjb21tZXJjZSIsImVjb21tZXJjZUl0ZW1zIiwiY29uZmlnVHJhY2tlclBhdXNlIiwibG9nRWNvbW1lcmNlT3JkZXIiLCJsb2dFY29tbWVyY2VDYXJ0VXBkYXRlIiwibG9nUGFnZVZpZXciLCJjb25maWdUaXRsZSIsImdldENsYXNzZXNSZWdFeHAiLCJzdGFydHNVcmxXaXRoVHJhY2tlclVybCIsImdldExpbmtUeXBlIiwiY29uZmlnRG93bmxvYWRDbGFzc2VzIiwiY29uZmlnTGlua0NsYXNzZXMiLCJjb25maWdEb3dubG9hZEV4dGVuc2lvbnMiLCJnZXRTb3VyY2VFbGVtZW50IiwicXVlcnkiLCJpc0xpbmtFbGVtZW50IiwiZ2V0TGlua0lmU2hvdWxkQmVQcm9jZXNzZWQiLCJoYXNOb2RlQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlVmFsdWVGcm9tTm9kZSIsImJ1aWxkQ29udGVudEludGVyYWN0aW9uUmVxdWVzdCIsImNvbnRlbnQiLCJidWlsZEludGVyYWN0aW9uUmVxdWVzdFBhcmFtcyIsImJ1aWxkQ29udGVudEludGVyYWN0aW9uVHJhY2tpbmdSZWRpcmVjdFVybCIsInRvQWJzb2x1dGVVcmwiLCJpc05vZGVBdXRob3JpemVkVG9UcmlnZ2VySW50ZXJhY3Rpb24iLCJmaW5kVGFyZ2V0Tm9kZSIsInNob3VsZElnbm9yZUludGVyYWN0aW9uIiwiZmluZFRhcmdldE5vZGVOb0RlZmF1bHQiLCJnZXRDb250ZW50SW50ZXJhY3Rpb25Ub1JlcXVlc3RJZlBvc3NpYmxlIiwiZmluZFBhcmVudENvbnRlbnROb2RlIiwiYnVpbGRDb250ZW50QmxvY2siLCJwaWVjZSIsIndhc0NvbnRlbnRJbXByZXNzaW9uQWxyZWFkeVRyYWNrZWQiLCJ0cmFja2VkQ29udGVudEltcHJlc3Npb25zIiwicmVwbGFjZUhyZWZJZkludGVybmFsTGluayIsImxpbmtUcmFja2luZ0VuYWJsZWQiLCJoYXNOb2RlQXR0cmlidXRlV2l0aFZhbHVlIiwiaXNVcmxUb0N1cnJlbnREb21haW4iLCJDT05URU5UX1RBUkdFVF9BVFRSIiwid2FzQ29udGVudFRhcmdldEF0dHJSZXBsYWNlZCIsInNldEFueUF0dHJpYnV0ZSIsInNldEhyZWZBdHRyaWJ1dGUiLCJyZXBsYWNlSHJlZnNJZkludGVybmFsTGluayIsInRyYWNrQ29udGVudEltcHJlc3Npb25DbGlja0ludGVyYWN0aW9uIiwic3JjRWxlbWVudCIsImxpbmtUcmFja2luZ0luc3RhbGxlZCIsInNldHVwSW50ZXJhY3Rpb25zVHJhY2tpbmciLCJjb250ZW50SW50ZXJhY3Rpb25UcmFja2luZ1NldHVwRG9uZSIsImJ1aWxkQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHMiLCJidWlsZEltcHJlc3Npb25SZXF1ZXN0UGFyYW1zIiwiZ2V0Q29udGVudEltcHJlc3Npb25zUmVxdWVzdHNGcm9tTm9kZXMiLCJjb2xsZWN0Q29udGVudCIsImdldEN1cnJlbnRseVZpc2libGVDb250ZW50SW1wcmVzc2lvbnNSZXF1ZXN0c0lmTm90VHJhY2tlZFlldCIsImlzTm9kZVZpc2libGUiLCJidWlsZENvbnRlbnRJbXByZXNzaW9uUmVxdWVzdCIsImJ1aWxkQ29udGVudEludGVyYWN0aW9uUmVxdWVzdE5vZGUiLCJidWlsZEV2ZW50UmVxdWVzdCIsImxvZ0V2ZW50IiwibG9nU2l0ZVNlYXJjaCIsImxvZ0dvYWwiLCJsb2dMaW5rIiwicHJlZml4UHJvcGVydHlOYW1lIiwidG9VcHBlckNhc2UiLCJ0cmFja0NhbGxiYWNrIiwiY29uZmlnQ291bnRQcmVSZW5kZXJlZCIsInRyYWNrQ2FsbGJhY2tPbkxvYWQiLCJ0cmFja0NhbGxiYWNrT25SZWFkeSIsInByb2Nlc3NDbGljayIsImlzSUU4b3JPbGRlciIsImFsbCIsImdldEtleUNvZGVGcm9tRXZlbnQiLCJ3aGljaCIsImJ1dHRvbiIsImdldE5hbWVPZkNsaWNrZWRCdXR0b24iLCJnZXRUYXJnZXRFbGVtZW50RnJvbUV2ZW50IiwiY2xpY2tIYW5kbGVyIiwibGFzdEJ1dHRvbiIsImxhc3RUYXJnZXQiLCJhZGRDbGlja0xpc3RlbmVyIiwiYWRkQ2xpY2tMaXN0ZW5lcnMiLCJjb25maWdJZ25vcmVDbGFzc2VzIiwiZW5hYmxlVHJhY2tPbmx5VmlzaWJsZUNvbnRlbnQiLCJpc1RyYWNrT25seVZpc2libGVDb250ZW50RW5hYmxlZCIsInRyYWNrVmlzaWJsZUNvbnRlbnRJbXByZXNzaW9ucyIsImRldGVjdEJyb3dzZXJGZWF0dXJlcyIsInBkZiIsInF0IiwicmVhbHAiLCJ3bWEiLCJkaXIiLCJmbGEiLCJqYXZhIiwiZ2VhcnMiLCJhZyIsImRldmljZVBpeGVsUmF0aW8iLCJtaW1lVHlwZXMiLCJlbmFibGVkUGx1Z2luIiwibmF2aWdhdG9yIiwiamF2YUVuYWJsZWQiLCJHZWFyc0ZhY3RvcnkiLCJyZXMiLCJzY3JlZW5BbGlhcyIsIndpZHRoIiwiaGVpZ2h0IiwicmVnaXN0ZXJIb29rIiwiaG9va05hbWUiLCJ1c2VySG9vayIsImhvb2tPYmoiLCJyZWdpc3RlcmVkSG9va3MiLCJldmFsIiwibG9jYXRpb25BcnJheSIsImRvbWFpbiIsImVuYWJsZUpTRXJyb3JUcmFja2luZyIsImRlZmF1bHRSZXF1ZXN0TWV0aG9kIiwiZGVmYXVsdFJlcXVlc3RDb250ZW50VHlwZSIsImNvbmZpZ0FwaVVybCIsInRpdGxlIiwiY29uZmlnTWluaW11bVZpc2l0VGltZSIsImN1c3RvbVZhcmlhYmxlTWF4aW11bUxlbmd0aCIsImhvb2siLCJnZXRIb29rIiwiZ2V0UXVlcnkiLCJnZXRDb250ZW50IiwiYXBwZW5kQ29udGVudEludGVyYWN0aW9uVG9SZXF1ZXN0SWZQb3NzaWJsZSIsImludGVybmFsSXNOb2RlVmlzaWJsZSIsImdldENvbmZpZ0Rvd25sb2FkRXh0ZW5zaW9ucyIsImNsZWFyVHJhY2tlZENvbnRlbnRJbXByZXNzaW9ucyIsImdldFRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnMiLCJjbGVhckVuYWJsZVRyYWNrT25seVZpc2libGVDb250ZW50IiwiZGlzYWJsZUxpbmtUcmFja2luZyIsImdldENvbmZpZ1Zpc2l0b3JDb29raWVUaW1lb3V0IiwiZ2V0VmlzaXRvcklkIiwiZ2V0VmlzaXRvckluZm8iLCJnZXRBdHRyaWJ1dGlvbkluZm8iLCJnZXRBdHRyaWJ1dGlvbkNhbXBhaWduTmFtZSIsImdldEF0dHJpYnV0aW9uQ2FtcGFpZ25LZXl3b3JkIiwiZ2V0QXR0cmlidXRpb25SZWZlcnJlclRpbWVzdGFtcCIsImdldEF0dHJpYnV0aW9uUmVmZXJyZXJVcmwiLCJzZXRUcmFja2VyVXJsIiwiZ2V0VHJhY2tlclVybCIsImdldFNpdGVJZCIsInNldFVzZXJJZCIsImdldFVzZXJJZCIsInNldEN1c3RvbURhdGEiLCJnZXRDdXN0b21EYXRhIiwic2V0Q3VzdG9tUmVxdWVzdFByb2Nlc3NpbmciLCJhcHBlbmRUb1RyYWNraW5nVXJsIiwiYWRkUGx1Z2luIiwic2V0Q3VzdG9tVmFyaWFibGUiLCJnZXRDdXN0b21WYXJpYWJsZSIsImRlbGV0ZUN1c3RvbVZhcmlhYmxlIiwic3RvcmVDdXN0b21WYXJpYWJsZXNJbkNvb2tpZSIsInNldExpbmtUcmFja2luZ1RpbWVyIiwic2V0RG93bmxvYWRFeHRlbnNpb25zIiwiYWRkRG93bmxvYWRFeHRlbnNpb25zIiwicmVtb3ZlRG93bmxvYWRFeHRlbnNpb25zIiwic2V0RG9tYWlucyIsInNldElnbm9yZUNsYXNzZXMiLCJzZXRSZXF1ZXN0TWV0aG9kIiwic2V0UmVxdWVzdENvbnRlbnRUeXBlIiwic2V0UmVmZXJyZXJVcmwiLCJzZXRDdXN0b21VcmwiLCJzZXREb2N1bWVudFRpdGxlIiwic2V0QVBJVXJsIiwic2V0RG93bmxvYWRDbGFzc2VzIiwic2V0TGlua0NsYXNzZXMiLCJzZXRDYW1wYWlnbk5hbWVLZXkiLCJzZXRDYW1wYWlnbktleXdvcmRLZXkiLCJkaXNjYXJkSGFzaFRhZyIsInNldENvb2tpZU5hbWVQcmVmaXgiLCJzZXRDb29raWVEb21haW4iLCJzZXRDb29raWVQYXRoIiwic2V0VmlzaXRvckNvb2tpZVRpbWVvdXQiLCJzZXRTZXNzaW9uQ29va2llVGltZW91dCIsInNldFJlZmVycmFsQ29va2llVGltZW91dCIsInNldENvbnZlcnNpb25BdHRyaWJ1dGlvbkZpcnN0UmVmZXJyZXIiLCJkaXNhYmxlQ29va2llcyIsInNldERvTm90VHJhY2siLCJkb05vdFRyYWNrIiwibXNEb05vdFRyYWNrIiwiYWRkTGlzdGVuZXIiLCJlbmFibGVMaW5rVHJhY2tpbmciLCJvbmVycm9yIiwiZGlzYWJsZVBlcmZvcm1hbmNlVHJhY2tpbmciLCJzZXRHZW5lcmF0aW9uVGltZU1zIiwiZW5hYmxlSGVhcnRCZWF0VGltZXIiLCJtYXgiLCJkaXNhYmxlSGVhcnRCZWF0VGltZXIiLCJraWxsRnJhbWUiLCJyZWRpcmVjdEZpbGUiLCJzZXRDb3VudFByZVJlbmRlcmVkIiwidHJhY2tHb2FsIiwidHJhY2tMaW5rIiwidHJhY2tQYWdlVmlldyIsInRyYWNrQWxsQ29udGVudEltcHJlc3Npb25zIiwiZmluZENvbnRlbnROb2RlcyIsInRyYWNrQ29udGVudEltcHJlc3Npb24iLCJ0cmFja0NvbnRlbnRJbXByZXNzaW9uc1dpdGhpbk5vZGUiLCJmaW5kQ29udGVudE5vZGVzV2l0aGluTm9kZSIsInRyYWNrQ29udGVudEludGVyYWN0aW9uIiwidHJhY2tDb250ZW50SW50ZXJhY3Rpb25Ob2RlIiwibG9nQWxsQ29udGVudEJsb2Nrc09uUGFnZSIsInRyYWNrRXZlbnQiLCJ0cmFja1NpdGVTZWFyY2giLCJzZXRFY29tbWVyY2VWaWV3IiwiQXJyYXkiLCJhZGRFY29tbWVyY2VJdGVtIiwidHJhY2tFY29tbWVyY2VPcmRlciIsInRyYWNrRWNvbW1lcmNlQ2FydFVwZGF0ZSIsIlRyYWNrZXJQcm94eSIsImFwcGx5TWV0aG9kc0luT3JkZXIiLCJlcnJvciIsInNjcmVlbiIsInBlcmZvcm1hbmNlIiwibW96UGVyZm9ybWFuY2UiLCJtc1BlcmZvcm1hbmNlIiwid2Via2l0UGVyZm9ybWFuY2UiLCJlbmNvZGVVUklDb21wb25lbnQiLCJkZWNvZGVVUklDb21wb25lbnQiLCJ1cmxkZWNvZGUiLCJodG1sQ29sbGVjdGlvblRvQXJyYXkiLCJmaW5kIiwicXVlcnlTZWxlY3RvckFsbCIsImZpbmRNdWx0aXBsZSIsImNvbmNhdCIsIm1ha2VOb2Rlc1VuaXF1ZSIsImZpbmROb2Rlc0J5VGFnTmFtZSIsImdldEF0dHJpYnV0ZSIsImF0dHJpYnV0ZXMiLCJub2RlVmFsdWUiLCJub2RlTmFtZSIsImhhc0F0dHJpYnV0ZSIsImhhc05vZGVDc3NDbGFzcyIsImZpbmROb2Rlc0hhdmluZ0F0dHJpYnV0ZSIsImZpbmRGaXJzdE5vZGVIYXZpbmdBdHRyaWJ1dGUiLCJmaW5kRmlyc3ROb2RlSGF2aW5nQXR0cmlidXRlV2l0aFZhbHVlIiwiZmluZE5vZGVzSGF2aW5nQ3NzQ2xhc3MiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZmluZEZpcnN0Tm9kZUhhdmluZ0NsYXNzIiwic2V0QXR0cmlidXRlIiwiQ09OVEVOVF9BVFRSIiwiQ09OVEVOVF9DTEFTUyIsIkNPTlRFTlRfTkFNRV9BVFRSIiwiQ09OVEVOVF9QSUVDRV9BVFRSIiwiQ09OVEVOVF9QSUVDRV9DTEFTUyIsIkNPTlRFTlRfVEFSR0VUX0NMQVNTIiwiQ09OVEVOVF9JR05PUkVJTlRFUkFDVElPTl9BVFRSIiwiQ09OVEVOVF9JR05PUkVJTlRFUkFDVElPTl9DTEFTUyIsImZpbmRQaWVjZU5vZGUiLCJmaW5kQ29udGVudE5hbWUiLCJmaW5kQ29udGVudFBpZWNlIiwicmVtb3ZlRG9tYWluSWZJc0luTGluayIsImZpbmRNZWRpYVVybEluTm9kZSIsImZpbmRDb250ZW50VGFyZ2V0IiwiaXNTYW1lRG9tYWluIiwiZ2V0TG9jYXRpb24iLCJvcmlnaW4iLCJzZWFyY2giLCJ0cmltIiwiaXNPcldhc05vZGVJblZpZXdwb3J0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50V2lkdGgiLCJpbm5lcldpZHRoIiwiY2xpZW50SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJib3R0b20iLCJyaWdodCIsImxlZnQiLCJzZXRMb2NhdGlvbiIsInBvcnQiLCJhcHBseUZpcnN0IiwiZ2V0VHJhY2tlciIsImdldEFzeW5jVHJhY2tlciIsInBpd2lrQXN5bmNJbml0IiwiQW5hbHl0aWNzVHJhY2tlciIsInBpd2lrX2xvZyIsInBpd2lrX3RyYWNrIiwiTmV3RGF0ZVJhbmdlVmlldyIsIlNlYXJjaENvbnN0cmFpbnRNb2RlbCIsImRvTm90S2lsbERpdiIsInN0YXRlUGF0aCIsIl9nZXRDb2xsZWN0aW9ucyIsImNvbGxlY3Rpb25zIiwiJGFycmF5IiwiZGF0YSIsImdldEhpc3RvcnlVcmwiLCJoaXN0b3J5Iiwic2VsZWN0RGF0ZVJhbmdlVmlldyIsIiRob2xkZXJzIiwiZmllbGRzIiwiJGgiLCJmaWVsZCIsInN0ciIsImVuY29kZVVSSSIsIl9zaG93SGlzdG9yeVVybCIsInB1dEZvcm0iLCJfc3RvcEhpc3RvcnkiLCJwb3B1bGF0ZUJ5Q29sbGVjdGlvbiIsIiRzIiwiX29uU2VhcmNoSW5TZWxlY3QiLCIkZGF0YSIsImZ2IiwiZ2V0SGlzdG9yeSIsIl9nZXRGaWVsZHMiLCJmaWVsZE5hbWUiLCJhamF4IiwiZGF0YVR5cGUiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwic3VjY2VzcyIsImNiIiwiYXNGaWVsZCIsIl9tYXBGaWVsZHMiLCIkZGl2IiwiJHJpZ2h0IiwiaHRtbCIsIiRpbnB1dCIsIiRzZWxlY3QiLCJhcHBlbmQiLCJkaXNwbGF5IiwiJGRpdjIiLCJ2aWFGYWNldHMiLCJwcmVsb2FkRGF0YUFzeW5jIiwicmVzdWx0IiwiaXNDb2xsZWN0aW9ucyIsInNvcnRCeSIsImRpc3BsYXlWYWx1ZSIsIl9hbGxGaWVsZHMiLCJiaW5kIiwiZ2V0SlNPTiIsImluc3RhbnRpYXRlIiwibGlzdGVuVG8iLCJnZXRQYXJlbnQiLCJvblNpbXBsZVNlYXJjaCIsImRlc3Ryb3kiLCJzZXRFbGVtZW50IiwicHV0SW5Ib2xkZXJzIiwidGVtcEhvbGRlcnMiLCJwdXRJbkZpZWxkcyIsInNob3dIaXN0b3J5VXJsIiwiJGJvb2ttYXJrX3BsYWNlaG9sZGVyIiwiY29weUJveCIsImZhZGVJbiIsImNvcHlTaGFyZVVybCIsImJvb2ttYXJrIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdXJyZW50VGFyZ2V0Iiwibm9IaXN0b3J5IiwiY29sbGVjdGlvbkFycmF5IiwiJGhhemFhIiwiY2xhc3NTdHIiLCJjaGFuZ2UiLCJjaGVja2VkIiwiY3IiLCJjclZhbHVlIiwiY29uc3RyYWludE1vZGVsIiwic2V0UGFnZU51bWJlciIsInF1ZXJ5UGFyYW1zIiwiY29uc3RyYWludHMiLCJmYWNldHMiLCJmaWx0ZXJPcmRlciIsImNvbGxlY3Rpb25TdHIiLCJfZ2V0Q29sbGVjdGlvbnNTdHIiLCJkYXRlUmFuZ2VTdHIiLCJzZWFyY2hJblN0ciIsIl9nZXRTZWFyY2hJblN0ciIsImhpc3RvcmljYWwiLCJjb25zdHJhaW50U3RyIiwiZ2V0SlNPTlN0cmluZyIsImFwYWNoZUVzY2FwZSIsIiRzZWwiLCJzbmlwcGV0cyIsIl9nZXRTZWFyY2hKc29uIiwic2hhcmVNb2RhbCIsIiRjdXJyZW50VGFyZ2V0IiwiaW5BcnJheSIsImNsYXNzTGlzdCIsImNsb3Nlc3QiLCJhZnRlciIsInNuaXBwZXQiLCJzaGFyZU1vZGFsRGF0YSIsInJlbW92ZU1vZGFsIiwiZm9yRWFjaCIsImZhZGVPdXQiLCJzdHlsZSIsIm92ZXJmbG93IiwiYm9keSIsInNjcm9sbCIsImNvcHlMaW5rVXJsIiwib25Gb3JtQ29udHJvbENoYW5nZSIsImhhc0NsYXNzIiwianNvbiIsImVyciIsIiRkeW5hbWljIiwiY29sbGVjdGlvbiIsIm9wdGlvbnNBcnIiLCJzZWxlY3RPcHRpb25zIiwic2VhcmNoQ3JpdGVyaWEiLCJhdHRyIiwicG9zdEpTT04iLCJvbkNsb3NlQWxlcnQiLCJzdG9wUHJvcGFnYXRpb24iLCJvbkNvbGxlY3Rpb25DaGFuZ2UiLCJub1ZvbGFkaXRpb24iLCIkaW5wdXRzIiwiZHluYW1pYyIsInJlcXVpcmVkIiwib25TZWFyY2giLCJyZW1vdmVDbGFzcyIsInNob3dQYW5lbCIsInJlc3VsdHMiLCJfdGhpcyIsIm1zZyIsImh0bWxmaWxlIiwibGFzdGRvdCIsIm90aGVyMWZpbGUiLCJzdWJzdHJpbmciLCJvdGhlcjJmaWxlIiwiZGV0YWlsc3VybCIsInNldE92ZXJsYXkiLCJyZW1vdmVPdmVybGF5IiwicmVkaXJlY3RVcmwiLCJ0cmlnZ2VyIiwic2VsZWN0RmllbGQiLCJQb3N0Q29uc3RyYWludE1vZGVsIiwiYWRkTmF2aWdhdG9yIiwidGVtcCIsImZvdW5kIiwidmFsdWVzIiwibmV4dCIsInBhZ2VOdW1iZXIiLCJvZmZzZXQiLCJnZXRQYWdlTnVtYmVyIiwic2V0UGFnZVNpemUiLCJwYWdlU2l6ZSIsImdldFBhZ2VTaXplIiwiX2dldE5hdmlnYXRvclN0ciIsImZpZWxkQXJyYXkiLCJ2YWx1ZUFycmF5IiwiYXJyYXkiLCJnZXRCb2R5IiwiZ2V0VXJsIiwidWlwcm9wcyIsIm9uU2VhcmNoV2l0aGluQ2hhbmdlIiwid2l0aGluVGVtcCIsIm9uRm9jdXMiLCJzZWxlY3QiLCJvbkhhc2hDaGFuZ2UiLCJlcnJvclRleHQiLCJtZXNzYWdlcyIsIm9uS2V5dXAiLCJrZXlDb2RlIiwic2VhcmNoU3RyaW5nIiwiYWxlcnRJZCIsInJlbW92ZUF0dHIiLCJwdXNoU3RhdGUiLCJzaG93YWxlcnQiLCJwaXdpayIsInRyYWNraW5nX3NlcnZlciIsInRyYWNraW5nX2lkX3NpdGUiLCJhYnNvbHV0ZVBhdGgiLCJsaW5rIiwiZGxfcmV4IiwiJGV2ZW50IiwicGFyc2VRdWVyeVBhcmFtZXRlcnNCeU5hbWUiLCJwYXJhbWV0ZXJuYW1lIiwidXBkYXRlUXVlcnlTdHJpbmdQYXJhbWV0ZXIiLCJ1cmkiLCJrZXkiLCJyZSIsInNlcGFyYXRvciIsImdldEJyb3dzZVBhdGhBbmRDb2xsZWN0aW9uQ29kZUZyb21IYXNoIiwiYnJvd3NlVmFsdWVzIiwicmV0dXJuUmVmaW5lZFVSTCIsInF1ZXJ5c3RyaW5nIiwicmVmaW5lZEtleVZhbHVlcyIsImZpbHRlciIsImtleVZhbHVlUGFpciIsIlN0cmluZ1V0aWxzRXhpc3RzIiwiZWxlbWVudCIsInNwaW5uZXIiLCJhbGVydGRpdiIsIm1lc3NhZ2UiLCJhbGVydHR5cGUiLCJzZWNvbmRzIiwiY29udmVydERhc2hZWVlZTU1ERFRvU2xhc2hNTUREWVlZIiwid3JrZGF0ZSIsImVuZHNXaXRoIiwicGF0dGVybnN0cmluZyIsInBhdHRlcm4iLCJjb252ZXJ0U2xhc2hNTUREWVlZVG9EYXNoWVlZWU1NREQiLCJzdWJzdHJpbmdTZWFyY2hVUkwiLCJxdWVyeVN0cmluZyIsInBhcmFtTmFtZSIsImlzRGV2aWNlTW9iaWxlIiwi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QU84M0IsRUFBUSxHQUFLLElBQU1BLEVBQVEsR0FBSyxJQUFNQSxFQUFRLElBSXZEQyxTQUFXLFNBQVNDLEVBQWNDLEdBQzlCLElBQUlyOEIsRUFBSW84QixFQUFjdDlCLE9BQVN1OUIsRUFBUXY5QixPQUN2QyxPQUFPa0IsR0FBSyxHQUFLbzhCLEVBQWMva0IsWUFBWWdsQixLQUFhcjhCLEdBSTVEczhCLGtDQUFvQyxTQUFpQnY5QixHQUNuRCxJQUFJbTlCLEVBQVVuOUIsRUFBS3FGLE1BQU0sS0FDekIsT0FBTzgzQixFQUFRLEdBQUssSUFBTUEsRUFBUSxHQUFLLElBQU1BLEVBQVEsSUFJdkRLLG1CQUFtQixTQUFTQyxFQUFZQyxHQUVyQyxPQURxQkQsRUFBWXA0QixNQUFNcTRCLEVBQVUsS0FDM0IsSUFLekJDLGVBQWUsV0FDZCxJQUFJQyxFQUFXLENBQ2RDLFFBQVMsV0FDTCxPQUFPL1ksVUFBVXJRLFVBQVVyUixNQUFNLGFBQWUwaEIsVUFBVXJRLFVBQVVyUixNQUFNLG1CQUU5RTA2QixXQUFZLFdBQ1IsT0FBT2haLFVBQVVyUSxVQUFVclIsTUFBTSxnQkFBaUIwaEIsVUFBVXJRLFVBQVVyUixNQUFNLGdCQUVoRjI2QixJQUFLLFdBQ0QsT0FBT2paLFVBQVVyUSxVQUFVclIsTUFBTSxpQkFFckM0NkIsTUFBTyxXQUNILE9BQU9sWixVQUFVclEsVUFBVXJSLE1BQU0sZ0JBRXJDNjZCLFFBQVMsV0FDTCxPQUFPblosVUFBVXJRLFVBQVVyUixNQUFNLGNBQWdCMGhCLFVBQVVyUSxVQUFVclIsTUFBTSxXQUUvRTg2QixJQUFLLFdBQ0QsT0FBUU4sRUFBU0MsV0FBYUQsRUFBU0UsY0FBZ0JGLEVBQVNHLE9BQVNILEVBQVNJLFNBQVdKLEVBQVNLLFlBRzNHLE9BQU9MLEVBQVNNLFUiLCJmaWxlIjoiMy5idW5kbGUuNi4yMS4wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtdLCBmdW5jdGlvbigpIHtcbi8vd2h5IHVzZSBNb21lbnQgd2hlbiB0aGlzIGlzIDEwMDAgdGltZXMgc21hbGxlcj9cbiAvKlxuICAgICAqIERhdGUgRm9ybWF0IDEuMi4zXG4gICAgICogKGMpIDIwMDctMjAwOSBTdGV2ZW4gTGV2aXRoYW4gPHN0ZXZlbmxldml0aGFuLmNvbT5cbiAgICAgKiBNSVQgbGljZW5zZVxuICAgICAqXG4gICAgICogSW5jbHVkZXMgZW5oYW5jZW1lbnRzIGJ5IFNjb3R0IFRyZW5kYSA8c2NvdHQudHJlbmRhLm5ldD5cbiAgICAgKiBhbmQgS3JpcyBLb3dhbCA8Y2l4YXIuY29tL35rcmlzLmtvd2FsLz5cbiAgICAgKlxuICAgICAqIEFjY2VwdHMgYSBkYXRlLCBhIG1hc2ssIG9yIGEgZGF0ZSBhbmQgYSBtYXNrLlxuICAgICAqIFJldHVybnMgYSBmb3JtYXR0ZWQgdmVyc2lvbiBvZiB0aGUgZ2l2ZW4gZGF0ZS5cbiAgICAgKiBUaGUgZGF0ZSBkZWZhdWx0cyB0byB0aGUgY3VycmVudCBkYXRlL3RpbWUuXG4gICAgICogVGhlIG1hc2sgZGVmYXVsdHMgdG8gZGF0ZUZvcm1hdC5tYXNrcy5kZWZhdWx0LlxuICAgICAqL1xuXG4gICAgdmFyIGRhdGVGb3JtYXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciAgICB0b2tlbiA9IC9kezEsNH18bXsxLDR9fHl5KD86eXkpP3woW0hoTXNUdF0pXFwxP3xbTGxvU1pdfFwiW15cIl0qXCJ8J1teJ10qJy9nLFxuICAgICAgICAgICAgdGltZXpvbmUgPSAvXFxiKD86W1BNQ0VBXVtTRFBdVHwoPzpQYWNpZmljfE1vdW50YWlufENlbnRyYWx8RWFzdGVybnxBdGxhbnRpYykgKD86U3RhbmRhcmR8RGF5bGlnaHR8UHJldmFpbGluZykgVGltZXwoPzpHTVR8VVRDKSg/OlstK11cXGR7NH0pPylcXGIvZyxcbiAgICAgICAgICAgIHRpbWV6b25lQ2xpcCA9IC9bXi0rXFxkQS1aXS9nLFxuICAgICAgICAgICAgcGFkID0gZnVuY3Rpb24gKHZhbCwgbGVuKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gU3RyaW5nKHZhbCk7XG4gICAgICAgICAgICAgICAgbGVuID0gbGVuIHx8IDI7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHZhbC5sZW5ndGggPCBsZW4pIHZhbCA9IFwiMFwiICsgdmFsO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICB9O1xuICAgIFxuICAgICAgICAvLyBSZWdleGVzIGFuZCBzdXBwb3J0aW5nIGZ1bmN0aW9ucyBhcmUgY2FjaGVkIHRocm91Z2ggY2xvc3VyZVxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGRhdGUsIG1hc2ssIHV0Yykge1xuICAgICAgICAgICAgdmFyIGRGID0gZGF0ZUZvcm1hdDtcbiAgICBcbiAgICAgICAgICAgIC8vIFlvdSBjYW4ndCBwcm92aWRlIHV0YyBpZiB5b3Ugc2tpcCBvdGhlciBhcmdzICh1c2UgdGhlIFwiVVRDOlwiIG1hc2sgcHJlZml4KVxuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZGF0ZSkgPT0gXCJbb2JqZWN0IFN0cmluZ11cIiAmJiAhL1xcZC8udGVzdChkYXRlKSkge1xuICAgICAgICAgICAgICAgIG1hc2sgPSBkYXRlO1xuICAgICAgICAgICAgICAgIGRhdGUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAvLyBQYXNzaW5nIGRhdGUgdGhyb3VnaCBEYXRlIGFwcGxpZXMgRGF0ZS5wYXJzZSwgaWYgbmVjZXNzYXJ5XG4gICAgICAgICAgICBkYXRlID0gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpIDogbmV3IERhdGU7XG4gICAgICAgICAgICBpZiAoaXNOYU4oZGF0ZSkpIHRocm93IFN5bnRheEVycm9yKFwiaW52YWxpZCBkYXRlXCIpO1xuICAgIFxuICAgICAgICAgICAgbWFzayA9IFN0cmluZyhkRi5tYXNrc1ttYXNrXSB8fCBtYXNrIHx8IGRGLm1hc2tzW1wiZGVmYXVsdFwiXSk7XG4gICAgXG4gICAgICAgICAgICAvLyBBbGxvdyBzZXR0aW5nIHRoZSB1dGMgYXJndW1lbnQgdmlhIHRoZSBtYXNrXG4gICAgICAgICAgICBpZiAobWFzay5zbGljZSgwLCA0KSA9PSBcIlVUQzpcIikge1xuICAgICAgICAgICAgICAgIG1hc2sgPSBtYXNrLnNsaWNlKDQpO1xuICAgICAgICAgICAgICAgIHV0YyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICB2YXIgICAgXyA9IHV0YyA/IFwiZ2V0VVRDXCIgOiBcImdldFwiLFxuICAgICAgICAgICAgICAgIGQgPSBkYXRlW18gKyBcIkRhdGVcIl0oKSxcbiAgICAgICAgICAgICAgICBEID0gZGF0ZVtfICsgXCJEYXlcIl0oKSxcbiAgICAgICAgICAgICAgICBtID0gZGF0ZVtfICsgXCJNb250aFwiXSgpLFxuICAgICAgICAgICAgICAgIHkgPSBkYXRlW18gKyBcIkZ1bGxZZWFyXCJdKCksXG4gICAgICAgICAgICAgICAgSCA9IGRhdGVbXyArIFwiSG91cnNcIl0oKSxcbiAgICAgICAgICAgICAgICBNID0gZGF0ZVtfICsgXCJNaW51dGVzXCJdKCksXG4gICAgICAgICAgICAgICAgcyA9IGRhdGVbXyArIFwiU2Vjb25kc1wiXSgpLFxuICAgICAgICAgICAgICAgIEwgPSBkYXRlW18gKyBcIk1pbGxpc2Vjb25kc1wiXSgpLFxuICAgICAgICAgICAgICAgIG8gPSB1dGMgPyAwIDogZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpLFxuICAgICAgICAgICAgICAgIGZsYWdzID0ge1xuICAgICAgICAgICAgICAgICAgICBkOiAgICBkLFxuICAgICAgICAgICAgICAgICAgICBkZDogICBwYWQoZCksXG4gICAgICAgICAgICAgICAgICAgIGRkZDogIGRGLmkxOG4uZGF5TmFtZXNbRF0sXG4gICAgICAgICAgICAgICAgICAgIGRkZGQ6IGRGLmkxOG4uZGF5TmFtZXNbRCArIDddLFxuICAgICAgICAgICAgICAgICAgICBtOiAgICBtICsgMSxcbiAgICAgICAgICAgICAgICAgICAgbW06ICAgcGFkKG0gKyAxKSxcbiAgICAgICAgICAgICAgICAgICAgbW1tOiAgZEYuaTE4bi5tb250aE5hbWVzW21dLFxuICAgICAgICAgICAgICAgICAgICBtbW1tOiBkRi5pMThuLm1vbnRoTmFtZXNbbSArIDEyXSxcbiAgICAgICAgICAgICAgICAgICAgeXk6ICAgU3RyaW5nKHkpLnNsaWNlKDIpLFxuICAgICAgICAgICAgICAgICAgICB5eXl5OiB5LFxuICAgICAgICAgICAgICAgICAgICBoOiAgICBIICUgMTIgfHwgMTIsXG4gICAgICAgICAgICAgICAgICAgIGhoOiAgIHBhZChIICUgMTIgfHwgMTIpLFxuICAgICAgICAgICAgICAgICAgICBIOiAgICBILFxuICAgICAgICAgICAgICAgICAgICBISDogICBwYWQoSCksXG4gICAgICAgICAgICAgICAgICAgIE06ICAgIE0sXG4gICAgICAgICAgICAgICAgICAgIE1NOiAgIHBhZChNKSxcbiAgICAgICAgICAgICAgICAgICAgczogICAgcyxcbiAgICAgICAgICAgICAgICAgICAgc3M6ICAgcGFkKHMpLFxuICAgICAgICAgICAgICAgICAgICBsOiAgICBwYWQoTCwgMyksXG4gICAgICAgICAgICAgICAgICAgIEw6ICAgIHBhZChMID4gOTkgPyBNYXRoLnJvdW5kKEwgLyAxMCkgOiBMKSxcbiAgICAgICAgICAgICAgICAgICAgdDogICAgSCA8IDEyID8gXCJhXCIgIDogXCJwXCIsXG4gICAgICAgICAgICAgICAgICAgIHR0OiAgIEggPCAxMiA/IFwiYW1cIiA6IFwicG1cIixcbiAgICAgICAgICAgICAgICAgICAgVDogICAgSCA8IDEyID8gXCJBXCIgIDogXCJQXCIsXG4gICAgICAgICAgICAgICAgICAgIFRUOiAgIEggPCAxMiA/IFwiQU1cIiA6IFwiUE1cIixcbiAgICAgICAgICAgICAgICAgICAgWjogICAgdXRjID8gXCJVVENcIiA6IChTdHJpbmcoZGF0ZSkubWF0Y2godGltZXpvbmUpIHx8IFtcIlwiXSkucG9wKCkucmVwbGFjZSh0aW1lem9uZUNsaXAsIFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICBvOiAgICAobyA+IDAgPyBcIi1cIiA6IFwiK1wiKSArIHBhZChNYXRoLmZsb29yKE1hdGguYWJzKG8pIC8gNjApICogMTAwICsgTWF0aC5hYnMobykgJSA2MCwgNCksXG4gICAgICAgICAgICAgICAgICAgIFM6ICAgIFtcInRoXCIsIFwic3RcIiwgXCJuZFwiLCBcInJkXCJdW2QgJSAxMCA+IDMgPyAwIDogKGQgJSAxMDAgLSBkICUgMTAgIT0gMTApICogZCAlIDEwXVxuICAgICAgICAgICAgICAgIH07XG4gICAgXG4gICAgICAgICAgICByZXR1cm4gbWFzay5yZXBsYWNlKHRva2VuLCBmdW5jdGlvbiAoJDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJDAgaW4gZmxhZ3MgPyBmbGFnc1skMF0gOiAkMC5zbGljZSgxLCAkMC5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH0oKTtcbiAgICBcbiAgICAvLyBTb21lIGNvbW1vbiBmb3JtYXQgc3RyaW5nc1xuICAgIGRhdGVGb3JtYXQubWFza3MgPSB7XG4gICAgICAgIFwiZGVmYXVsdFwiOiAgICAgIFwiZGRkIG1tbSBkZCB5eXl5IEhIOk1NOnNzXCIsXG4gICAgICAgIHNob3J0RGF0ZTogICAgICBcIm0vZC95eVwiLFxuICAgICAgICBtZWRpdW1EYXRlOiAgICAgXCJtbW0gZCwgeXl5eVwiLFxuICAgICAgICBsb25nRGF0ZTogICAgICAgXCJtbW1tIGQsIHl5eXlcIixcbiAgICAgICAgZnVsbERhdGU6ICAgICAgIFwiZGRkZCwgbW1tbSBkLCB5eXl5XCIsXG4gICAgICAgIHNob3J0VGltZTogICAgICBcImg6TU0gVFRcIixcbiAgICAgICAgbWVkaXVtVGltZTogICAgIFwiaDpNTTpzcyBUVFwiLFxuICAgICAgICBsb25nVGltZTogICAgICAgXCJoOk1NOnNzIFRUIFpcIixcbiAgICAgICAgaXNvRGF0ZTogICAgICAgIFwieXl5eS1tbS1kZFwiLFxuICAgICAgICBpc29UaW1lOiAgICAgICAgXCJISDpNTTpzc1wiLFxuICAgICAgICBpc29EYXRlVGltZTogICAgXCJ5eXl5LW1tLWRkJ1QnSEg6TU06c3NcIixcbiAgICAgICAgaXNvVXRjRGF0ZVRpbWU6IFwiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJ1wiXG4gICAgfTtcbiAgICBcbiAgICAvLyBJbnRlcm5hdGlvbmFsaXphdGlvbiBzdHJpbmdzXG4gICAgZGF0ZUZvcm1hdC5pMThuID0ge1xuICAgICAgICBkYXlOYW1lczogW1xuICAgICAgICAgICAgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIixcbiAgICAgICAgICAgIFwiU3VuZGF5XCIsIFwiTW9uZGF5XCIsIFwiVHVlc2RheVwiLCBcIldlZG5lc2RheVwiLCBcIlRodXJzZGF5XCIsIFwiRnJpZGF5XCIsIFwiU2F0dXJkYXlcIlxuICAgICAgICBdLFxuICAgICAgICBtb250aE5hbWVzOiBbXG4gICAgICAgICAgICBcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiLFxuICAgICAgICAgICAgXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXG4gICAgICAgIF1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGRhdGVGb3JtYXQ7XG59KTsiLCJkZWZpbmUoW1xuICAgICAgICBcImpxdWVyeVwiLFxuICAgICAgICBcInVuZGVyc2NvcmVcIixcbiAgICAgICAgXCJiYWNrYm9uZVwiLFxuICAgICAgICBcImdvdmluZm9cIixcbiAgICAgICAgXCJ1dGlsc1wiLFxuICAgICAgICBcImNvbW1vbi92aWV3cy9OZXdEYXRlRm9ybWF0XCJcblxuICAgIF0sXG4gICAgZnVuY3Rpb24oJCwgXywgQmFja2JvbmUsIEdvdkluZm8sIHV0aWxzLCBkYXRlRm9ybWF0KSB7XG5cbiAgICAgICAgdmFyIE5ld0RhdGVSYW5nZVZpZXcgPSBHb3ZJbmZvLkJhc2VWaWV3LmV4dGVuZCh7XG4gICAgICAgICAgICB0ZW1wbGF0ZTogJy4vY29tbW9uL3RlbXBsYXRlcy9OZXdEYXRlUmFuZ2VWaWV3U2VhcmNoLmh0bWwnLFxuICAgICAgICAgICAgZXZlbnRzIDoge1xuICAgICAgICAgICAgICAgICdjaGFuZ2UgI2RhdGVSYW5nZVNlbGVjdCcgOiAnZGF0ZVJhbmdlQ2hhbmdlZCdcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uKG9wdGlvbnMpIFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIEdvdkluZm8uQmFzZVZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLnF1ZXJ5VHlwZSA9IFwiQURcIjsgLy9hbGwgZGF0ZXNcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHBhcnNlTU1ZWVlZIDogZnVuY3Rpb24oZGF0ZVN0cmluZykge1xuICAgICAgICAgICAgICAgIC8vdHJ5IHNwbGl0dGluZyBvbiBhIC9cbiAgICAgICAgICAgICAgICB2YXIgc3BsaXREYXRlID0gZGF0ZVN0cmluZy5zcGxpdCgnLycpO1xuICAgICAgICAgICAgICAgIC8vaWYgd2UgaGF2ZSAyIGV4YWN0bHksIHdlIGhhdmUgMSBzbGFzaCBhbmQgc3BsaXQgaXQgaW4gaGFsZlxuICAgICAgICAgICAgICAgIGlmKHNwbGl0RGF0ZS5sZW5ndGggPT0gMikge1xuICAgICAgICAgICAgICAgICAgICAvLyBXaGVuIHVzaW5nIFwiRGF0ZSBJc1wiIG9wdGlvbiBhbmQgZW50ZXJpbmcganVzdCBtb250aCBhbmQgeWVhciwgZG8gbm90IGFkZCBhIGRlZmF1bHQgZGF5XG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMucXVlcnlUeXBlICE9PSAnREknKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGxpdERhdGUuc3BsaWNlKDEsIDAsICcwMScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzcGxpdERhdGUuam9pbignLycpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRlU3RyaW5nO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgZ2V0RGF0ZVJhbmdlOiBmdW5jdGlvbiAoZm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGVSYW5nZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdCA6IHRoaXMuJCgnI2RhdGVSYW5nZVNlbGVjdCcpLnZhbCgpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZihkYXRlUmFuZ2UudCA9PSBcIkFEXCIpe1xuICAgICAgICAgICAgICAgICAgICBkYXRlUmFuZ2UuZGF0ZUZyb20gPSBkYXRlRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCB8fCBcIm1tLWRkLXl5eXlcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRlUmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmKHRoaXMuJCgnI2RhdGVGcm9tJykudmFsKCkpe1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsID0gdGhpcy5wYXJzZU1NWVlZWSh0aGlzLiQoJyNkYXRlRnJvbScpLnZhbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRlZmF1bHREYXRlRm9ybWF0ID0gJ21tLWRkLXl5eXknO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZU9iaiA9IG5ldyBEYXRlKHZhbCk7XG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMucXVlcnlUeXBlID09PSAnREknKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZVRva2VucyA9IHZhbC5zcGxpdCgnLycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzWWVhck1vbnRoID0gKGRhdGVUb2tlbnMubGVuZ3RoID09PSAyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1llYXIgPSAoZGF0ZVRva2Vucy5sZW5ndGggPT09IDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNZZWFyTW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbW9udGggPSBwYXJzZUludChkYXRlVG9rZW5zWzBdLCAxMCkgLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5ZWFyID0gcGFyc2VJbnQoZGF0ZVRva2Vuc1sxXSwgMTApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmogPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdERhdGVGb3JtYXQgPSAnbW0teXl5eSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpc1llYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgeWVhcjEgPSBwYXJzZUludChkYXRlVG9rZW5zWzBdLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZU9iaiA9IG5ldyBEYXRlKHllYXIxLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0RGF0ZUZvcm1hdCA9ICd5eXl5J1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBmb3JtYXR0ZWQgPSBkYXRlRm9ybWF0KGRhdGVPYmosIGZvcm1hdCB8fCBkZWZhdWx0RGF0ZUZvcm1hdCk7XG4gICAgICAgICAgICAgICAgICAgIGRhdGVSYW5nZS5kYXRlRnJvbSA9IGZvcm1hdHRlZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYodGhpcy4kKCcjZGF0ZVRvJykudmFsKCkpe1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsMSA9IHRoaXMucGFyc2VNTVlZWVkodGhpcy4kKCcjZGF0ZVRvJykudmFsKCkpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZm9ybWF0dGVkMSA9IGRhdGVGb3JtYXQobmV3IERhdGUodmFsMSksIGZvcm1hdCB8fCBcIm1tLWRkLXl5eXlcIik7XG4gICAgICAgICAgICAgICAgICAgIGRhdGVSYW5nZS5kYXRlVG8gPSBmb3JtYXR0ZWQxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0ZVJhbmdlO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgc2V0RGF0ZVJhbmdlIDogZnVuY3Rpb24oZGF0ZVJhbmdlKXtcbiAgICAgICAgICAgICAgICB2YXIgZnJvbSA9IGRhdGVSYW5nZS5kYXRlRnJvbTtcbiAgICAgICAgICAgICAgICB2YXIgdG8gPSBkYXRlUmFuZ2UuZGF0ZVRvO1xuICAgICAgICAgICAgICAgIGlmKGZyb20pe1xuICAgICAgICAgICAgICAgICAgICBmcm9tID0gZnJvbS5yZXBsYWNlKC9cXC0vZywgJy8nKTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRlVG9rZW5zID0gZnJvbS5zcGxpdCgnLycpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIElmIG9ubHkgeWVhciBvciBtb250aC95ZWFyIGlzIHByZXNlbnQgaW4gdGhlICdmcm9tJyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIC8vIGRvIG5vdGhpbmcuIExldCAnZnJvbScgc3RheSBhcyBpcy5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGVUb2tlbnMubGVuZ3RoID09PSAxIHx8IGRhdGVUb2tlbnMubGVuZ3RoID09PSAyKSB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZG8gbm90aGluZy5cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gPSBkYXRlRm9ybWF0KG5ldyBEYXRlKGZyb20pLCBcIm1tL2RkL3l5eXlcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYodG8pe1xuICAgICAgICAgICAgICAgICAgICB0byA9IHRvLnJlcGxhY2UoL1xcLS9nLCAnLycpO1xuICAgICAgICAgICAgICAgICAgICB0byA9IGRhdGVGb3JtYXQobmV3IERhdGUodG8pLCBcIm1tL2RkL3l5eXlcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RhdGVGcm9tJykudmFsKGZyb20pO1xuICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RhdGVUbycpLnZhbCh0byk7XG4gICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZVJhbmdlU2VsZWN0JykudmFsKGRhdGVSYW5nZS50KTtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGVSYW5nZUNoYW5nZWQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGdldFF1ZXJ5U3RyaW5nIDogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgICB2YXIgdG9kYXkgPSBkYXRlRm9ybWF0KG5vdywgXCJ5eXl5LW1tLWRkXCIpO1xuXG4gICAgICAgICAgICAgICAgdmFyIGRhdGVGcm9tVmFsID0gdGhpcy4kKCcjZGF0ZUZyb20nKS52YWwoKTtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZVRvVmFsID0gdGhpcy4kKCcjZGF0ZVRvJykudmFsKCk7XG4gICAgICAgICAgICAgICAgdmFyIGRpZF9wYXJzZV9tb250aCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx0Ly9zb21lIGNvb2wgbW0veXl5eSBwYXJzaW5nOlxuICAgICAgICAgICAgICAgICAgICBpZihkYXRlRnJvbVZhbC5zcGxpdCgnLycpLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVTcGxpdCA9IGRhdGVGcm9tVmFsLnNwbGl0KCcvJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBEbyBub3QgYWRkIGRheSBmb3IgREFURSBJU1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpZF9wYXJzZV9tb250aCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5xdWVyeVR5cGUgPT0gXCJESVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHRkYXRlU3BsaXQuc3BsaWNlKDEsMCxkYXRlU3BsaXQuc3BsaWNlKDAsMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHRkYXRlU3BsaXQuc3BsaWNlKDEsIDAsICcwMScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZyb21WYWwgPSBkYXRlU3BsaXQuam9pbignLycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJudWxsXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0ZVRvVmFsLnNwbGl0KCcvJykubGVuZ3RoID09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVTcGxpdCA9IGRhdGVUb1ZhbC5zcGxpdCgnLycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVTcGxpdC5zcGxpY2UoMSwgMCwgJzAxJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZVRvVmFsID0gZGF0ZVNwbGl0LmpvaW4oJy8nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIm51bGxcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzd2l0Y2godGhpcy5xdWVyeVR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICBjYXNlIFwiQURcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcInB1Ymxpc2hkYXRlOnJhbmdlKCxcIiArIHRvZGF5ICsgXCIpXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIkRJXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlSXNWYWx1ZSA9IGRhdGVGcm9tVmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlSXMgPSBuZXcgRGF0ZShkYXRlSXNWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgb25seSB5ZWFyIGVudGVyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRlSXNWYWx1ZS5zcGxpdCgnLycpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHRyZXR1cm4gXCJwdWJsaXNoZGF0ZTpcIiArIGRhdGVJc1ZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihkYXRlSXNWYWx1ZS5zcGxpdCgnLycpLmxlbmd0aCA9PSAyKSB7IC8vZm9yIHBhcnRpYWwgeWVhclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBkYXRlSXMgd291bGQgYmUgaW52YWxpZCBpbiBGRi9JRS4gU28gbmVlZCB0byBleHRyYWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHllYXIgYW5kIG1vbnRoIGFuZCB0aGVuIGJ1aWxkIGEgRGF0ZSBvYmplY3QuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlVG9rZW5zID0gZGF0ZUlzVmFsdWUuc3BsaXQoXCIvXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgeWVhciA9IHBhcnNlSW50KGRhdGVUb2tlbnNbMF0sIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1vbnRoID0gcGFyc2VJbnQoZGF0ZVRva2Vuc1sxXSwgMTApIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdHJldHVybiBcInB1Ymxpc2hkYXRlOlwiICsgZGF0ZUZvcm1hdChuZXcgRGF0ZSh5ZWFyLCBtb250aCksXCJ5eXl5LW1tXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUlzRm9ybWF0ID0gZGF0ZUZvcm1hdChkYXRlSXMsIFwieXl5eS1tbS1kZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJwdWJsaXNoZGF0ZTpcIiArIGRhdGVJc0Zvcm1hdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIm51bGxcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiREFcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVBZnRlclZhbHVlID0gZGF0ZUZyb21WYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVBZnRlciA9IG5ldyBEYXRlKGRhdGVBZnRlclZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRlQWZ0ZXJWYWx1ZS5zcGxpdCgnLycpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIGlmIHlvdSBvbmx5IGhhdmUgYSBzcGVjaWZpYyB5ZWFyLCBzZXQgaXQgdG8gdGhlIGVuZCBvZiB0aGUgeWVhci4uLiAqKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUFmdGVyID0gbmV3IERhdGUocGFyc2VJbnQoZGF0ZUFmdGVyVmFsdWUpKzEsIDAsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihkaWRfcGFyc2VfbW9udGggPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2FkZCBhIG1vbnRoIGlmIG1vbnRoIHdhcyBwYXJzZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUFmdGVyID0gbmV3IERhdGUoZGF0ZUFmdGVyLmdldEZ1bGxZZWFyKCksIGRhdGVBZnRlci5nZXRNb250aCgpICsgMSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9hZGQgYSBkYXkgaWYgZGF5IHdhcyBpbmNsdWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlQWZ0ZXIgPSBuZXcgRGF0ZShkYXRlQWZ0ZXIuZ2V0RnVsbFllYXIoKSwgZGF0ZUFmdGVyLmdldE1vbnRoKCksIGRhdGVBZnRlci5nZXREYXRlKCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUFmdGVyRm9ybWF0ID0gZGF0ZUZvcm1hdChkYXRlQWZ0ZXIsIFwieXl5eS1tbS1kZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJwdWJsaXNoZGF0ZTpyYW5nZShcIiArIGRhdGVBZnRlckZvcm1hdCArIFwiLClcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbil7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwibnVsbFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJEQlwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUJlZm9yZVZhbHVlID0gZGF0ZUZyb21WYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVCZWZvcmUgPSBuZXcgRGF0ZShkYXRlQmVmb3JlVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGRhdGVCZWZvcmVWYWx1ZS5zcGxpdCgnLycpLmxlbmd0aCA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogaWYgeW91IGhhdmUgYSBzcGVjaWZpYyBtb250aCwgc2V0IHRvIHRoZSBlbmQgb2YgdGhlIGxhc3QgbW9udGguLi4uKiovXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlQmVmb3JlID0gbmV3IERhdGUoZGF0ZUJlZm9yZS5nZXRGdWxsWWVhcigpLCBkYXRlQmVmb3JlLmdldE1vbnRoKCksIGRhdGVCZWZvcmUuZ2V0RGF0ZSgpLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUJlZm9yZUZvcm1hdCA9IGRhdGVGb3JtYXQoZGF0ZUJlZm9yZSwgXCJ5eXl5LW1tLWRkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcInB1Ymxpc2hkYXRlOnJhbmdlKCxcIiArIGRhdGVCZWZvcmVGb3JtYXQgKyBcIilcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIm51bGxcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiREJUXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlRnJvbVZhbHVlID0gZGF0ZUZyb21WYWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUZyb20gPSBuZXcgRGF0ZShkYXRlRnJvbVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRlRnJvbVZhbHVlLnNwbGl0KCcvJykubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZyb20gPSBuZXcgRGF0ZShkYXRlRnJvbS5nZXRGdWxsWWVhcigpKzEsIDAsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlRnJvbUZvcm1hdCA9IGRhdGVGb3JtYXQoZGF0ZUZyb20sIFwieXl5eS1tbS1kZFwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlVG9WYWx1ZSA9IGRhdGVUb1ZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZVRvID0gbmV3IERhdGUoZGF0ZVRvVmFsdWUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIHRoZXNlIGNvbmRpdGlvbnMgZG9uJ3QgbWFrZSBzZW5zZSBpbiB0aGUgRW5nbGlzaCBsYW5ndWFnZSAqKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRlVG9WYWx1ZS5zcGxpdCgnLycpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBpZiB5b3Ugb25seSBoYXZlIGEgc3BlY2lmaWMgeWVhciwgc2V0IGl0IHRvIHRoZSBlbmQgb2YgdGhlIHllYXIuLi4gKiovXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVUbyA9IG5ldyBEYXRlKGRhdGVUby5nZXRGdWxsWWVhcigpKzEsIDExLCAzMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKGRhdGVUb1ZhbHVlLnNwbGl0KCcvJykubGVuZ3RoID09IDMgJiYgZGlkX3BhcnNlX21vbnRoID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIGlmIHlvdSBoYXZlIGEgc3BlY2lmaWMgbW9udGgsIHNldCB0byB0aGUgZW5kIG9mIHRoZSBtb250aC4uLi4qKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZVRvID0gbmV3IERhdGUoZGF0ZVRvLmdldEZ1bGxZZWFyKCksIGRhdGVUby5nZXRNb250aCgpICsgMSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZVRvRm9ybWF0ID0gZGF0ZUZvcm1hdChkYXRlVG8sIFwieXl5eS1tbS1kZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJwdWJsaXNoZGF0ZTpyYW5nZShcIiArIGRhdGVGcm9tRm9ybWF0ICsgXCIsXCIgICsgZGF0ZVRvRm9ybWF0ICsgXCIpXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJudWxsXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gXCJwdWJsaXNoZGF0ZTpyYW5nZShcIiArIG5vdyArIFwiLFwiICsgbm93ICsgXCIpXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXG4gICAgICAgICAgICByZW5kZXIgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAvL3RoaXMuJCgnLmFzd3YtZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLiQoJy5hc3d2LWRhdGVwaWNrZXInKS5kYXRlcGlja2VyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvZGF5QnRuOiBcImxpbmtlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b2Nsb3NlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJCdG46IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbjogXCJ0b3AgYXV0b1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG9kYXlIaWdobGlnaHQ6IHRydWVcblxuICAgICAgICAgICAgICAgIH0pLm9uKCdzaG93JywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmRhdGVwaWNrZXInKS5jc3MoXCJ6LWluZGV4XCIsIFwiMTA0MVwiKTtcbiAgICAgICAgICAgICAgICB9KS5vbignY2hhbmdlRGF0ZScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGVwaWNrZXIoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZVRvQ29udGFpbmVyJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RhdGVGcm9tQ29udGFpbmVyJykuaGlkZSgpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgZGF0ZVJhbmdlQ2hhbmdlZCA6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuJCgnI2RhdGVSYW5nZVNlbGVjdCcpLnZhbCgpO1xuICAgICAgICAgICAgICAgIHN3aXRjaCh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiQURcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVlcnlUeXBlID0gXCJBRFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZUZyb21Db250YWluZXInKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNkYXRlVG9Db250YWluZXInKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIkRJXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnF1ZXJ5VHlwZSA9IFwiRElcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RhdGVGcm9tQ29udGFpbmVyJykuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZVRvQ29udGFpbmVyJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJEQVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5xdWVyeVR5cGUgPSBcIkRBXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNkYXRlRnJvbUNvbnRhaW5lcicpLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RhdGVUb0NvbnRhaW5lcicpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiREJcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVlcnlUeXBlID0gXCJEQlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZUZyb21Db250YWluZXInKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNkYXRlVG9Db250YWluZXInKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIkRCVFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5xdWVyeVR5cGUgPSBcIkRCVFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjZGF0ZUZyb21Db250YWluZXInKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNkYXRlVG9Db250YWluZXInKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIE5ld0RhdGVSYW5nZVZpZXc7XG4gICAgfSk7IiwiZGVmaW5lKFtcbiAgICAgICAgXCJqcXVlcnlcIixcbiAgICAgICAgXCJ1bmRlcnNjb3JlXCIsXG4gICAgICAgIFwiYmFja2JvbmVcIixcbiAgICAgICAgXCJ0ZXh0IWNvbW1vbi90ZW1wbGF0ZXMvbG9hZGluZ3NwaW5uZXIuaHRtbFwiLFxuICAgICAgICBcInRleHQhY29tbW9uL3RlbXBsYXRlcy9ibG9ja2luZ3NwaW5uZXIuaHRtbFwiLFxuICAgICAgICBcInRleHQhY29tbW9uL3RlbXBsYXRlcy9lcnJvcm5vdGlmaWNhdGlvbnBhZ2UuaHRtbFwiLFxuICAgICAgICBcInRleHQhY29tbW9uL3RlbXBsYXRlcy9lcnJvcm5vdGlmaWNhdGlvbnNlY3Rpb24uaHRtbFwiXG5cbiAgICBdLFxuICAgIGZ1bmN0aW9uKCQsIF8sIEJhY2tib25lLCBzcGlubmVydGVtcGxhdGUsIGJsb2NraW5ndGVtcGxhdGUsIGVycm9ydGVtcGxhdGVwYWdlLCBlcnJvcnRlbXBsYXRlc2VjdGlvbikge1xuXG4gICAgICAgIHZhciBCYXNlVmlldyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Bpbm5lcnRlbXBsYXRlID0gXy50ZW1wbGF0ZShzcGlubmVydGVtcGxhdGUpO1xuICAgICAgICAgICAgdGhpcy5ibG9ja2luZ3RlbXBsYXRlID0gXy50ZW1wbGF0ZShibG9ja2luZ3RlbXBsYXRlKTtcbiAgICAgICAgICAgIHRoaXMuZXJyb3J0ZW1wbGF0ZXBhZ2UgPSBfLnRlbXBsYXRlKGVycm9ydGVtcGxhdGVwYWdlKTtcbiAgICAgICAgICAgIHRoaXMuZXJyb3J0ZW1wbGF0ZXNlY3Rpb24gPSBfLnRlbXBsYXRlKGVycm9ydGVtcGxhdGVzZWN0aW9uKTtcbiAgICAgICAgICAgIEJhY2tib25lLlZpZXcuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF8uZXh0ZW5kKEJhc2VWaWV3LnByb3RvdHlwZSwgQmFja2JvbmUuVmlldy5wcm90b3R5cGUsIHtcbiAgICAgICAgICAgIGNsb3NlOiBmdW5jdGlvbigpIHtcblxuXG4gICAgICAgICAgICAgICAgLy8gY2FsbHMgdmlld3MgY2xvc2luZyBldmVudCBoYW5kbGVyIGZpcnN0LCBpZiBpbXBsZW1lbnRlZCAob3B0aW9uYWwpXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2xvc2luZykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NpbmcoKTsgLy8gdGhpcyBmb3IgY3VzdG9tIGNsZWFudXAgcHVycG9zZXNcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBmaXJzdCBsb29wIHRocm91Z2ggY2hpbGRWaWV3c1tdIGlmIGRlZmluZWQsIGluIGNvbGxlY3Rpb24gdmlld3NcbiAgICAgICAgICAgICAgICAvLyAgcG9wdWxhdGUgYW4gYXJyYXkgcHJvcGVydHkgaS5lLiB0aGlzLmNoaWxkVmlld3NbXSA9IG5ldyBDb250cm9sVmlld3MoKVxuICAgICAgICAgICAgICAgIGlmICghKHR5cGVvZiB0aGlzLmNoaWxkVmlld3MgPT09IFwidW5kZWZpbmVkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIF8uZWFjaCh0aGlzLmNoaWxkVmlld3MsIGZ1bmN0aW9uKGNoaWxkKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHR5cGVvZiBjaGlsZCA9PT0gXCJ1bmRlZmluZWRcIikgJiYgISh0eXBlb2YgdGhpcy4kZWwgPT09IFwidW5kZWZpbmVkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKCEodHlwZW9mIHRoaXMuY2hpbGRWaWV3czIgPT09IFwidW5kZWZpbmVkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIF8uZWFjaCh0aGlzLmNoaWxkVmlld3MyLCBmdW5jdGlvbihjaGlsZCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0eXBlb2YgY2hpbGQgPT09IFwidW5kZWZpbmVkXCIpICYmICEodHlwZW9mIHRoaXMuJGVsID09PSBcInVuZGVmaW5lZFwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGNsb3NlIGFsbCBjaGlsZCB2aWV3cyB0aGF0IGFyZSByZWZlcmVuY2VkIGJ5IHByb3BlcnR5LCBpbiBtb2RlbCB2aWV3c1xuICAgICAgICAgICAgICAgIC8vICBhZGQgYSBwcm9wZXJ0eSBmb3IgcmVmZXJlbmNlIGkuZS4gdGhpcy50b29sYmFyID0gbmV3IFRvb2xiYXJWaWV3KCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcHJvcCBpbiB0aGlzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3Byb3BdIGluc3RhbmNlb2YgQmFja2JvbmUuVmlldykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1twcm9wXS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25DbG9zZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uQ2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIC8vICB0aGlzLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIC8vdGhpcy5lbCA9IG51bGw7XG4gICAgICAgICAgICAgICAgLy8gdGhpcy4kZWwgPSBudWxsO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMudW5kZWxlZ2F0ZUV2ZW50cygpO1xuICAgICAgICAgICAgICAgICQodGhpcykuZW1wdHk7XG4gICAgICAgICAgICAgICAgdGhpcy51bmJpbmQoKTtcbiAgICAgICAgICAgICAgICBpZiAoISh0eXBlb2YgdGhpcy4kZWwgPT09IFwidW5kZWZpbmVkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLiRlbDtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuZWw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgZ2V0UGFyYW1ldGVyOiBmdW5jdGlvbihwYXJhbWV0ZXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gICAgICAgICAgICAgICAgaWYgKGhhc2gubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gaGFzaC5zdWJzdHIoMSkuc3BsaXQoJyYnKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHBhcmFtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRva2VucyA9IHBhcmFtc1tpXS5zcGxpdCgnPScpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5zWzBdID09IHBhcmFtZXRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRva2Vuc1sxXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0sXG5cblxuICAgICAgICAgICAgc2V0UGFyYW1ldGVyOiBmdW5jdGlvbihwYXJhbWV0ZXIsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICAgICAgICAgICAgICAgIGlmIChoYXNoLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGhhc2ggPSAnIyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBoYXNoLnN1YnN0cigxKS5zcGxpdCgnJicpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbXNbMF0gPT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zID0gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByZXBsYWNlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gcGFyYW1zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG9rZW5zID0gcGFyYW1zW2ldLnNwbGl0KCc9Jyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0b2tlbnNbMF0gPT0gcGFyYW1ldGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zW2ldID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtc1tpXSA9IHBhcmFtZXRlciArICc9JyArIHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFyZXBsYWNlZCAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChwYXJhbWV0ZXIgKyAnPScgKyB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBub0VtcHR5ID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBwYXJhbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJhbXNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vRW1wdHkucHVzaChwYXJhbXNbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBub0VtcHR5LmpvaW4oJyYnKTtcbiAgICAgICAgICAgIH0sXG5cblxuICAgICAgICAgICAgZ2V0UGFnZVRpdGxlOiBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdnb3ZpbmZvJztcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGdldEFwcEJhc2VVcmw6IGZ1bmN0aW9uKHVybCkge1xuXG4gICAgICAgICAgICAgICAgLy92YXIgY29tcHV0ZWRVcmwgPSBbcmVxdWlyZS50b1VybCgnJyksIHVybF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVybC5zdWJzdHIoNik7XG4gICAgICAgICAgICB9LFxuXG5cbiAgICAgICAgICAgIGdldEFwcEJhc2VVcmxXT0NvbnRleHQ6IGZ1bmN0aW9uKHVybCkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGNvbXB1dGVkVXJsID0gW3dpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCwgJy8vJywgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLCB1cmxdO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb21wdXRlZFVybC5qb2luKCcnKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGdldG1vZGVsQmFzZVVybDogZnVuY3Rpb24odXJsKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgY29tcHV0ZWRVcmw7XG4gICAgICAgICAgICAgICAgLyppZiAoJC50cmltKHJlcXVpcmUudG9VcmwoJycpICE9PSAnJykgJiYgKHJlcXVpcmUudG9VcmwoJycpLnN1YnN0cmluZygwLCAyKSAhPT0gJy4uJykgJiYgKHJlcXVpcmUudG9VcmwoJycpICE9PSAnLi8nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybGhvc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmxob3N0LmhyZWYgPSByZXF1aXJlLnRvVXJsKCcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBob3N0ID0gdXJsaG9zdC5ob3N0bmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm90b2NvbCA9IHVybGhvc3QucHJvdG9jb2w7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFVybCA9IHByb3RvY29sLmNvbmNhdCgnLy8nKS5jb25jYXQoaG9zdCkuY29uY2F0KCcvJykuY29uY2F0KHVybCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gW3dpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCwgJy8vJywgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLCAnLycsIHVybF07XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFVybCA9IHVybC5qb2luKCcnKTtcblxuICAgICAgICAgICAgICAgICAgICB9Ki9cblxuICAgICAgICAgICAgICAgIHZhciB1cmwgPSBbd2luZG93LmxvY2F0aW9uLnByb3RvY29sLCAnLy8nLCB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsIHVybF07XG4gICAgICAgICAgICAgICAgY29tcHV0ZWRVcmwgPSB1cmwuam9pbignJyk7XG5cblxuICAgICAgICAgICAgICAgIHJldHVybiBjb21wdXRlZFVybDtcblxuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0TG9jYXRpb25CYXNlVXJsOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgIHZhciBjb21wdXRlZFVybDtcbiAgICAgICAgICAgICAgICB2YXIgdXJsaG9zdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblxuICAgICAgICAgICAgICAgIHZhciBob3N0ID0gdXJsaG9zdC5ob3N0bmFtZTtcbiAgICAgICAgICAgICAgICBpZiAoaG9zdCA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFVybCA9IHVybGhvc3QuaHJlZi5zcGxpdCgnPycpWzBdO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wdXRlZFVybCA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWRVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnPycpWzBdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IFt1cmxob3N0LnByb3RvY29sLCAnLy8nLCBob3N0LCB1cmxob3N0LnBhdGhuYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgLyp2YXIgcHJvdG9jb2wgPSB1cmxob3N0LnByb3RvY29sO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhdGhuYW1lID0gdXJsaG9zdC5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWRVcmwgPSBwcm90b2NvbC5jb25jYXQoJy8vJykuY29uY2F0KGhvc3QpLmNvbmNhdChwYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFVybCA9IHVybC5qb2luKCcnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gY29tcHV0ZWRVcmw7XG5cblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFNwaW5uZXJUZW1wbGF0ZTogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zcGlubmVydGVtcGxhdGU7XG5cblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEJsb2NraW5nVGVtcGxhdGU6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmxvY2tpbmd0ZW1wbGF0ZTtcblxuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0RXJyb3JUZW1wbGF0ZVBhZ2U6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3J0ZW1wbGF0ZXBhZ2U7XG5cblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEVycm9yVGVtcGxhdGVTZWN0aW9uOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVycm9ydGVtcGxhdGVzZWN0aW9uO1xuXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cblxuICAgICAgICBCYXNlVmlldy5leHRlbmQgPSBCYWNrYm9uZS5WaWV3LmV4dGVuZDtcblxuICAgICAgICAvKiAgICAgdmFyIEJhc2VWaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuXG4gICAgICAgICAgICAgY2xvc2UgOiBmdW5jdGlvbigpe1xuXG5cbiAgICAgICAgICAgICAvLyBjYWxscyB2aWV3cyBjbG9zaW5nIGV2ZW50IGhhbmRsZXIgZmlyc3QsIGlmIGltcGxlbWVudGVkIChvcHRpb25hbClcbiAgICAgICAgICAgICBpZiAodGhpcy5jbG9zaW5nKSB7XG4gICAgICAgICAgICAgdGhpcy5jbG9zaW5nKCk7ICAvLyB0aGlzIGZvciBjdXN0b20gY2xlYW51cCBwdXJwb3Nlc1xuICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgIC8vIGZpcnN0IGxvb3AgdGhyb3VnaCBjaGlsZFZpZXdzW10gaWYgZGVmaW5lZCwgaW4gY29sbGVjdGlvbiB2aWV3c1xuICAgICAgICAgICAgIC8vICBwb3B1bGF0ZSBhbiBhcnJheSBwcm9wZXJ0eSBpLmUuIHRoaXMuY2hpbGRWaWV3c1tdID0gbmV3IENvbnRyb2xWaWV3cygpXG4gICAgICAgICAgICAgaWYgKHRoaXMuY2hpbGRWaWV3cykge1xuICAgICAgICAgICAgIF8uZWFjaCh0aGlzLmNoaWxkVmlld3MsIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgIGNoaWxkLmNsb3NlKCk7XG4gICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgLy8gY2xvc2UgYWxsIGNoaWxkIHZpZXdzIHRoYXQgYXJlIHJlZmVyZW5jZWQgYnkgcHJvcGVydHksIGluIG1vZGVsIHZpZXdzXG4gICAgICAgICAgICAgLy8gIGFkZCBhIHByb3BlcnR5IGZvciByZWZlcmVuY2UgaS5lLiB0aGlzLnRvb2xiYXIgPSBuZXcgVG9vbGJhclZpZXcoKTtcbiAgICAgICAgICAgICBmb3IgKHZhciBwcm9wIGluIHRoaXMpIHtcbiAgICAgICAgICAgICBpZiAodGhpc1twcm9wXSBpbnN0YW5jZW9mIEJhY2tib25lLlZpZXcpIHtcbiAgICAgICAgICAgICB0aGlzW3Byb3BdLmNsb3NlKCk7XG4gICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cblxuXG5cblxuICAgICAgICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgICAgICAgdGhpcy51bmJpbmQoKTtcbiAgICAgICAgICAgICBpZiAodGhpcy5vbkNsb3NlKXtcbiAgICAgICAgICAgICB0aGlzLm9uQ2xvc2UoKTtcbiAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICB9XG5cblxuXG4gICAgICAgICAgICAgfSk7ICovXG5cbiAgICAgICAgcmV0dXJuIEJhc2VWaWV3O1xuICAgIH0pO1xuIiwiZGVmaW5lKFtcbiAgICAgICAgXCJqcXVlcnlcIiwgXG4gICAgICAgIFwidW5kZXJzY29yZVwiLCBcbiAgICAgICAgXCJiYWNrYm9uZVwiLFxuICAgICAgICBcImNvbW1vbi92aWV3cy9iYXNldmlld1wiXSwgXG4gICAgICAgIGZ1bmN0aW9uKCQsIF8sIEJhY2tib25lLEJhc2VWaWV3KXtcbnZhciBOb3RpZmljYXRpb25WaWV3ID0gQmFzZVZpZXcuZXh0ZW5kKHtcbiBcbiAgICB0YXJnZXRFbGVtZW50OiAnI2Vycm9yTWVzc2FnZScsIFxuICAgIHRhZ05hbWU6ICdkaXYnLCBcbiAgICBjbGFzc05hbWU6ICdub3RpZmljYXRpb24nLCAgICBcbiAgICBhdXRvbWF0aWNDbG9zZTogZmFsc2UsICAgICBcbiAgIC8vIGNsYXNzTmFtZTogJ2FsZXJ0IGFsZXJ0LW1lc3NhZ2UnLCAgICAgICAgXG4gXG4gICAgZGVmYXVsdE1lc3NhZ2VzOiB7XG4gICAgICAgICdzdWNjZXNzJzogJ1N1Y2Nlc3MhJyxcbiAgICAgICAgJ2Vycm9yJzogJ1NvcnJ5ISBBbiBlcnJvciBvY2N1cnJlZCBpbiB0aGUgcHJvY2VzcycsXG4gICAgICAgICd3YXJuaW5nJzogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byB0YWtlIHRoaXMgYWN0aW9uPycsXG4gICAgICAgICdpbmZvcm1hdGlvbic6ICdBbiB1bmtub3duIGV2ZW50IG9jY3VycmVkJ1xuICAgIH0sIFxuIFxuICAgIGNzc0NsYXNzZXM6IHtcbiAgICAgICAgLy8nc3VjY2Vzcyc6ICdhY2NlcHRlZCcsXG4gICAgICAgICdzdWNjZXNzJzogJ2FsZXJ0IGFsZXJ0LXN1Y2Nlc3MnLFxuICAgICAgICAvLydlcnJvcic6ICdjYW5jZWwnLFxuICAgICAgICAnZXJyb3InOiAnYWxlcnQgYWxlcnQtZGFuZ2VyJyxcbiAgICAgICAgJ3dhcm5pbmcnOiAnYWxlcnQgYWxlcnQtd2FybmluZycsXG4gICAgICAgICdpbmZvcm1hdGlvbic6ICdhbGVydCBhbGVydC1pbmZvJ1xuICAgIH0sIFxuIFxuICAgIGV2ZW50czoge1xuICAgICAgICBcImNsaWNrXCIgOiBcImNsb3NlTm90aWZpY2F0aW9uXCJcbiAgICB9LCAgIFxuIFxuICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uKG9wdGlvbnMpeyBcbiAgICAgICAgLy8gZGVmYXVsdHNcbiAgICAgICAgdmFyIHR5cGUgPSAnaW5mb3JtYXRpb24nO1xuICAgICAgICB2YXIgdGV4dCA9IHRoaXMuZGVmYXVsdE1lc3NhZ2VzW3R5cGVdOyBcbiAgICAgICAgdmFyIHRhcmdldCA9IHRoaXMudGFyZ2V0RWxlbWVudDsgXG4gXG4gICAgICAgIC8vIGlmIGFueSBvcHRpb25zIHdlcmUgc2V0LCBvdmVycmlkZSBkZWZhdWx0c1xuICAgICAgICBpZihvcHRpb25zICYmIG9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ3R5cGUnKSlcbiAgICAgICAgICAgIHR5cGUgPSBvcHRpb25zLnR5cGU7XG4gICAgICAgIGlmKG9wdGlvbnMgJiYgb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgndGV4dCcpKVxuICAgICAgICAgICAgdGV4dCA9IG9wdGlvbnMudGV4dDsgXG4gICAgICAgIGlmKG9wdGlvbnMgJiYgb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgndGFyZ2V0JykpIFxuICAgICAgICAgICAgdGFyZ2V0ID0gb3B0aW9ucy50YXJnZXQ7ICAgICAgIFxuIFxuICAgICAgICBpZihvcHRpb25zICYmIG9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ2F1dG9tYXRpY0Nsb3NlJykpXG4gICAgICAgIHRoaXMuYXV0b21hdGljQ2xvc2UgPSBvcHRpb25zLmF1dG9tYXRpY0Nsb3NlO1xuIFxuICAgICAgIC8vIHRoaXMucmVuZGVyKHR5cGUsIHRleHQsIHRhcmdldCk7XG4gICAgICAgIC8vIGlzIG1lc3NhZ2UgYWxyZWFkeSBkaXNwbGF5ZWQgaW4gdmlldz8gaWYgeWVzLCBkb24ndCBzaG93IGFnYWluXG4gICAgICAgIGlmKCQoJycrdGFyZ2V0Kyc6Y29udGFpbnMoJyt0ZXh0KycpJykubGVuZ3RoID09PSAwKSB7IFxuICAgICAgICAgICAgdGhpcy5yZW5kZXIodHlwZSwgdGV4dCwgdGFyZ2V0KTtcbiAgICAgICAgfVxuIFxuICAgIH0sXG4gXG4gICAgcmVuZGVyOiBmdW5jdGlvbih0eXBlLCB0ZXh0LCB0YXJnZXQpe1xuIFxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIFxuICAgICAgICBpZih0ZXh0ID09ICdObyBSZXN1bHRzIGZvdW5kLicgfHwgdGV4dCA9PSAnTm8gU2VhcmNoIFJlc3VsdHMgZm91bmQuJyl7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2hhY2sgLSBzd2l0Y2hpbmcgXCJObyBSZXN1bHRzIGZvdW5kLlwiIGVycm9yIHRvIGluZm8gbWVzc2FnZScpO1xuICAgICAgICAgIHR5cGUgPSAnaW5mb3JtYXRpb24nO1xuICAgICAgICAgIHRleHQgPSAnTm8gcmVzdWx0cyBhdmFpbGFibGUuJztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuJGVsLmFkZENsYXNzKHRoaXMuY3NzQ2xhc3Nlc1t0eXBlXSk7XG4gICAgICAgIHRoaXMuJGVsLnRleHQodGV4dCk7XG4gICAgICAgLy8gdGhpcy4kZWwucHJlcGVuZFRvKHRoaXMudGFyZ2V0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuJGVsLnByZXBlbmRUbyh0YXJnZXQpO1xuIFxuICAgICAgICAvLyBBdXRvbWF0aWNhbGx5IGNsb3NlIGFmdGVyIHNldCB0aW1lLiBhbHNvIGNsb3NlcyBvbiBjbGlja1xuICAgICAgICAvKmlmKHRoaXMuYXV0b21hdGljQ2xvc2UpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBzZWxmLmNsb3NlTm90aWZpY2F0aW9uKCk7XG4gICAgICAgICAgICB9LCAzMDAwKTtcbiAgICAgICAgfSovXG4gICAgfVxuIFxufSk7XG5cbnJldHVybiBOb3RpZmljYXRpb25WaWV3O1xufSk7IiwiZGVmaW5lKFtcclxuICAgICAgICBcImpxdWVyeVwiLFxyXG4gICAgICAgIFwidW5kZXJzY29yZVwiLFxyXG4gICAgICAgIFwiYmFja2JvbmVcIixcclxuICAgICAgICBcImdvdmluZm9cIixcclxuICAgICAgICBcInV0aWxzXCIsXHJcbiAgICAgICAgXCJjb21tb24vdmlld3Mvbm90aWZpY2F0aW9udmlld1wiLFxyXG4gICAgICAgIFwic2VhcmNoL3ZpZXdzL3NpbXBsZS9zaW1wbGVzZWFyY2h2aWV3XCIsXHJcbiAgICAgICAgXCJzZWFyY2gvdmlld3MvYWR2YW5jZWQvYWR2YW5jZWRzZWFyY2h3aWRnZXR2aWV3XCIsXHJcbiAgICAgICAgXCJzZWFyY2gvdmlld3MvY2l0YXRpb24vY2l0YXRpb25zZWFyY2h3aWRnZXR2aWV3XCJcclxuICAgICAgICBcclxuICAgIF0sXHJcbiAgICBmdW5jdGlvbigkLCBfLCBCYWNrYm9uZSwgR292SW5mbywgdXRpbHMsIE5vdGlmaWNhdGlvblZpZXcsIFNpbXBsZVNlYXJjaFZpZXcsIEFkdmFuY2VkU2VhcmNoVmlldywgQ2l0YXRpb25TZWFyY2hWaWV3ICkge1xyXG5cclxuICAgICAgICB2YXIgU2VhcmNoV2lkZ2V0VmlldyA9IEdvdkluZm8uVGFiVmlldy5leHRlbmQoe1xyXG4gICAgICAgICAgICAgICAgQ29uc3RydWN0b3JzIDoge1xyXG4gICAgICAgICAgICAgICAgICAgICdTaW1wbGVTZWFyY2hWaWV3JyA6IFNpbXBsZVNlYXJjaFZpZXcsXHJcbiAgICAgICAgICAgICAgICAgICAgJ0FkdmFuY2VkU2VhcmNoVmlldycgOiBBZHZhbmNlZFNlYXJjaFZpZXcsXHJcbiAgICAgICAgICAgICAgICAgICAgJ0NpdGF0aW9uU2VhcmNoVmlldycgOiBDaXRhdGlvblNlYXJjaFZpZXcgXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaW5pdGlhbGl6ZSA6IGZ1bmN0aW9uKG9wdGlvbnMpe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwcnVuZWRTdHIgPSBsb2NhdGlvbi5ocmVmLnN1YnN0cigobG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCkubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBwcnVuZWRTdHIgPSBwcnVuZWRTdHIuc3Vic3RyKDAsNCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0N1c3RvbUFwcCA9IChwcnVuZWRTdHIgPT0gJy9hcHAnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZighdGhpcy5pc0N1c3RvbUFwcCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGVyc2lzdEJ5ID0gJ3Jvb3QnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZUhhc2ggPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZVN0YXRlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZG9Ob3RsZWF2ZUhpc3RvcnlUcmFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIEdvdkluZm8uVGFiVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgX2NoYW5nZTogZnVuY3Rpb24oaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2goaWQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkZWZhdWx0JzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYWR2YW5jZWQnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdjaXRhdGlvbic6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBHb3ZJbmZvLlRhYlZpZXcucHJvdG90eXBlLl9jaGFuZ2UuY2FsbCh0aGlzLCBpZCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgLy9wZXJzaXN0Qnk6IDEwMCxcclxuICAgICAgICAgICAgICAgIC8vdXNlU3RhdGUgOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgLy9kb05vdGxlYXZlSGlzdG9yeVRyYWlsIDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGxvYWRpbmdUZW1wbGF0ZSA6ICcuL2NvbW1vbi90ZW1wbGF0ZXMvc2VhcmNod2lkZ2V0L0xvYWRpbmcuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA6ICcuL2NvbW1vbi90ZW1wbGF0ZXMvc2VhcmNod2lkZ2V0L1NlYXJjaFdpZGdldFZpZXcuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICByZW5kZXJWaWV3IDogZnVuY3Rpb24oY2FsbGJhY2spe1xyXG4gICAgICAgICAgICAgICAgICAgIEdvdkluZm8uVGFiVmlldy5wcm90b3R5cGUucmVuZGVyVmlldy5jYWxsKHRoaXMsIGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIFNlYXJjaFdpZGdldFZpZXc7XHJcbiAgICB9KTtcclxuIiwiXCJvYmplY3RcIiE9dHlwZW9mIEpTT04yJiZcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93LkpTT04mJndpbmRvdy5KU09OLnN0cmluZ2lmeSYmd2luZG93LkpTT04ucGFyc2U/SlNPTjI9d2luZG93LkpTT046IWZ1bmN0aW9uKCl7dmFyIGE9e307KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZyhhLGIpe2Z1bmN0aW9uIHQoYSl7aWYodFthXSE9PXIpcmV0dXJuIHRbYV07dmFyIGM7aWYoXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIj09YSljPVwiYVwiIT1cImFcIlswXTtlbHNlIGlmKFwianNvblwiPT1hKWM9dChcImpzb24tc3RyaW5naWZ5XCIpJiZ0KFwianNvbi1wYXJzZVwiKTtlbHNle3ZhciBlLGc9J3tcImFcIjpbMSx0cnVlLGZhbHNlLG51bGwsXCJcXFxcdTAwMDBcXFxcYlxcXFxuXFxcXGZcXFxcclxcXFx0XCJdfSc7aWYoXCJqc29uLXN0cmluZ2lmeVwiPT1hKXt2YXIgaD1iLnN0cmluZ2lmeSxqPVwiZnVuY3Rpb25cIj09dHlwZW9mIGgmJnM7aWYoail7KGU9ZnVuY3Rpb24oKXtyZXR1cm4gMX0pLnRvSlNPTj1lO3RyeXtqPVwiMFwiPT09aCgwKSYmXCIwXCI9PT1oKG5ldyBkKSYmJ1wiXCInPT1oKG5ldyBmKSYmaChvKT09PXImJmgocik9PT1yJiZoKCk9PT1yJiZcIjFcIj09PWgoZSkmJlwiWzFdXCI9PWgoW2VdKSYmXCJbbnVsbF1cIj09aChbcl0pJiZcIm51bGxcIj09aChudWxsKSYmXCJbbnVsbCxudWxsLG51bGxdXCI9PWgoW3IsbyxudWxsXSkmJmgoe2E6W2UsITAsITEsbnVsbCxcIlxcMFxcYlxcblxcZlxcclxcdFwiXX0pPT1nJiZcIjFcIj09PWgobnVsbCxlKSYmXCJbXFxuIDEsXFxuIDJcXG5dXCI9PWgoWzEsMl0sbnVsbCwxKSYmJ1wiLTI3MTgyMS0wNC0yMFQwMDowMDowMC4wMDBaXCInPT1oKG5ldyBpKCgtODY0ZTEzKSkpJiYnXCIrMjc1NzYwLTA5LTEzVDAwOjAwOjAwLjAwMFpcIic9PWgobmV3IGkoODY0ZTEzKSkmJidcIi0wMDAwMDEtMDEtMDFUMDA6MDA6MDAuMDAwWlwiJz09aChuZXcgaSgoLTYyMTk4NzU1MmU1KSkpJiYnXCIxOTY5LTEyLTMxVDIzOjU5OjU5Ljk5OVpcIic9PWgobmV3IGkoKC0xKSkpfWNhdGNoKGEpe2o9ITF9fWM9an1pZihcImpzb24tcGFyc2VcIj09YSl7dmFyIGs9Yi5wYXJzZTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBrKXRyeXtpZigwPT09ayhcIjBcIikmJiFrKCExKSl7ZT1rKGcpO3ZhciBsPTU9PWUuYS5sZW5ndGgmJjE9PT1lLmFbMF07aWYobCl7dHJ5e2w9IWsoJ1wiXFx0XCInKX1jYXRjaChhKXt9aWYobCl0cnl7bD0xIT09ayhcIjAxXCIpfWNhdGNoKGEpe31pZihsKXRyeXtsPTEhPT1rKFwiMS5cIil9Y2F0Y2goYSl7fX19fWNhdGNoKGEpe2w9ITF9Yz1sfX1yZXR1cm4gdFthXT0hIWN9YXx8KGE9ZS5PYmplY3QoKSksYnx8KGI9ZS5PYmplY3QoKSk7dmFyIGQ9YS5OdW1iZXJ8fGUuTnVtYmVyLGY9YS5TdHJpbmd8fGUuU3RyaW5nLGg9YS5PYmplY3R8fGUuT2JqZWN0LGk9YS5EYXRlfHxlLkRhdGUsaj1hLlN5bnRheEVycm9yfHxlLlN5bnRheEVycm9yLGs9YS5UeXBlRXJyb3J8fGUuVHlwZUVycm9yLGw9YS5NYXRofHxlLk1hdGgsbT1hLkpTT058fGUuSlNPTjtcIm9iamVjdFwiPT10eXBlb2YgbSYmbSYmKGIuc3RyaW5naWZ5PW0uc3RyaW5naWZ5LGIucGFyc2U9bS5wYXJzZSk7dmFyIHAscSxyLG49aC5wcm90b3R5cGUsbz1uLnRvU3RyaW5nLHM9bmV3IGkoKC0weGM3ODJiNWI4MDBjZWMpKTt0cnl7cz1zLmdldFVUQ0Z1bGxZZWFyKCk9PS0xMDkyNTImJjA9PT1zLmdldFVUQ01vbnRoKCkmJjE9PT1zLmdldFVUQ0RhdGUoKSYmMTA9PXMuZ2V0VVRDSG91cnMoKSYmMzc9PXMuZ2V0VVRDTWludXRlcygpJiY2PT1zLmdldFVUQ1NlY29uZHMoKSYmNzA4PT1zLmdldFVUQ01pbGxpc2Vjb25kcygpfWNhdGNoKGEpe31pZighdChcImpzb25cIikpe3ZhciB1PVwiW29iamVjdCBGdW5jdGlvbl1cIix2PVwiW29iamVjdCBEYXRlXVwiLHc9XCJbb2JqZWN0IE51bWJlcl1cIix4PVwiW29iamVjdCBTdHJpbmddXCIseT1cIltvYmplY3QgQXJyYXldXCIsej1cIltvYmplY3QgQm9vbGVhbl1cIixBPXQoXCJidWctc3RyaW5nLWNoYXItaW5kZXhcIik7aWYoIXMpdmFyIEI9bC5mbG9vcixDPVswLDMxLDU5LDkwLDEyMCwxNTEsMTgxLDIxMiwyNDMsMjczLDMwNCwzMzRdLEQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ1tiXSszNjUqKGEtMTk3MCkrQigoYS0xOTY5KyhiPSsoYj4xKSkpLzQpLUIoKGEtMTkwMStiKS8xMDApK0IoKGEtMTYwMStiKS80MDApfTtpZigocD1uLmhhc093blByb3BlcnR5KXx8KHA9ZnVuY3Rpb24oYSl7dmFyIGMsYj17fTtyZXR1cm4oYi5fX3Byb3RvX189bnVsbCxiLl9fcHJvdG9fXz17dG9TdHJpbmc6MX0sYikudG9TdHJpbmchPW8/cD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9fcHJvdG9fXyxjPWEgaW4odGhpcy5fX3Byb3RvX189bnVsbCx0aGlzKTtyZXR1cm4gdGhpcy5fX3Byb3RvX189YixjfTooYz1iLmNvbnN0cnVjdG9yLHA9ZnVuY3Rpb24oYSl7dmFyIGI9KHRoaXMuY29uc3RydWN0b3J8fGMpLnByb3RvdHlwZTtyZXR1cm4gYSBpbiB0aGlzJiYhKGEgaW4gYiYmdGhpc1thXT09PWJbYV0pfSksYj1udWxsLHAuY2FsbCh0aGlzLGEpfSkscT1mdW5jdGlvbihhLGIpe3ZhciBlLGYsZyxkPTA7KGU9ZnVuY3Rpb24oKXt0aGlzLnZhbHVlT2Y9MH0pLnByb3RvdHlwZS52YWx1ZU9mPTAsZj1uZXcgZTtmb3IoZyBpbiBmKXAuY2FsbChmLGcpJiZkKys7cmV0dXJuIGU9Zj1udWxsLGQ/cT0yPT1kP2Z1bmN0aW9uKGEsYil7dmFyIGUsYz17fSxkPW8uY2FsbChhKT09dTtmb3IoZSBpbiBhKWQmJlwicHJvdG90eXBlXCI9PWV8fHAuY2FsbChjLGUpfHwhKGNbZV09MSl8fCFwLmNhbGwoYSxlKXx8YihlKX06ZnVuY3Rpb24oYSxiKXt2YXIgZCxlLGM9by5jYWxsKGEpPT11O2ZvcihkIGluIGEpYyYmXCJwcm90b3R5cGVcIj09ZHx8IXAuY2FsbChhLGQpfHwoZT1cImNvbnN0cnVjdG9yXCI9PT1kKXx8YihkKTsoZXx8cC5jYWxsKGEsZD1cImNvbnN0cnVjdG9yXCIpKSYmYihkKX06KGY9W1widmFsdWVPZlwiLFwidG9TdHJpbmdcIixcInRvTG9jYWxlU3RyaW5nXCIsXCJwcm9wZXJ0eUlzRW51bWVyYWJsZVwiLFwiaXNQcm90b3R5cGVPZlwiLFwiaGFzT3duUHJvcGVydHlcIixcImNvbnN0cnVjdG9yXCJdLHE9ZnVuY3Rpb24oYSxiKXt2YXIgZSxnLGQ9by5jYWxsKGEpPT11LGg9IWQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGEuY29uc3RydWN0b3ImJmNbdHlwZW9mIGEuaGFzT3duUHJvcGVydHldJiZhLmhhc093blByb3BlcnR5fHxwO2ZvcihlIGluIGEpZCYmXCJwcm90b3R5cGVcIj09ZXx8IWguY2FsbChhLGUpfHxiKGUpO2ZvcihnPWYubGVuZ3RoO2U9ZlstLWddO2guY2FsbChhLGUpJiZiKGUpKTt9KSxxKGEsYil9LCF0KFwianNvbi1zdHJpbmdpZnlcIikpe3ZhciBFPXs5MjpcIlxcXFxcXFxcXCIsMzQ6J1xcXFxcIicsODpcIlxcXFxiXCIsMTI6XCJcXFxcZlwiLDEwOlwiXFxcXG5cIiwxMzpcIlxcXFxyXCIsOTpcIlxcXFx0XCJ9LEY9XCIwMDAwMDBcIixHPWZ1bmN0aW9uKGEsYil7cmV0dXJuKEYrKGJ8fDApKS5zbGljZSgtYSl9LEg9XCJcXFxcdTAwXCIsST1mdW5jdGlvbihhKXtmb3IodmFyIGI9J1wiJyxjPTAsZD1hLmxlbmd0aCxlPSFBfHxkPjEwLGY9ZSYmKEE/YS5zcGxpdChcIlwiKTphKTtjPGQ7YysrKXt2YXIgZz1hLmNoYXJDb2RlQXQoYyk7c3dpdGNoKGcpe2Nhc2UgODpjYXNlIDk6Y2FzZSAxMDpjYXNlIDEyOmNhc2UgMTM6Y2FzZSAzNDpjYXNlIDkyOmIrPUVbZ107YnJlYWs7ZGVmYXVsdDppZihnPDMyKXtiKz1IK0coMixnLnRvU3RyaW5nKDE2KSk7YnJlYWt9Yis9ZT9mW2NdOmEuY2hhckF0KGMpfX1yZXR1cm4gYisnXCInfSxKPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe3ZhciBoLGksaixsLG0sbixzLHQsdSxBLEMsRSxGLEgsSyxMO3RyeXtoPWJbYV19Y2F0Y2goYSl7fWlmKFwib2JqZWN0XCI9PXR5cGVvZiBoJiZoKWlmKGk9by5jYWxsKGgpLGkhPXZ8fHAuY2FsbChoLFwidG9KU09OXCIpKVwiZnVuY3Rpb25cIj09dHlwZW9mIGgudG9KU09OJiYoaSE9dyYmaSE9eCYmaSE9eXx8cC5jYWxsKGgsXCJ0b0pTT05cIikpJiYoaD1oLnRvSlNPTihhKSk7ZWxzZSBpZihoPi0xLzAmJmg8MS8wKXtpZihEKXtmb3IobT1CKGgvODY0ZTUpLGo9QihtLzM2NS4yNDI1KSsxOTcwLTE7RChqKzEsMCk8PW07aisrKTtmb3IobD1CKChtLUQoaiwwKSkvMzAuNDIpO0QoaixsKzEpPD1tO2wrKyk7bT0xK20tRChqLGwpLG49KGglODY0ZTUrODY0ZTUpJTg2NGU1LHM9QihuLzM2ZTUpJTI0LHQ9QihuLzZlNCklNjAsdT1CKG4vMWUzKSU2MCxBPW4lMWUzfWVsc2Ugaj1oLmdldFVUQ0Z1bGxZZWFyKCksbD1oLmdldFVUQ01vbnRoKCksbT1oLmdldFVUQ0RhdGUoKSxzPWguZ2V0VVRDSG91cnMoKSx0PWguZ2V0VVRDTWludXRlcygpLHU9aC5nZXRVVENTZWNvbmRzKCksQT1oLmdldFVUQ01pbGxpc2Vjb25kcygpO2g9KGo8PTB8fGo+PTFlND8oajwwP1wiLVwiOlwiK1wiKStHKDYsajwwPy1qOmopOkcoNCxqKSkrXCItXCIrRygyLGwrMSkrXCItXCIrRygyLG0pK1wiVFwiK0coMixzKStcIjpcIitHKDIsdCkrXCI6XCIrRygyLHUpK1wiLlwiK0coMyxBKStcIlpcIn1lbHNlIGg9bnVsbDtpZihjJiYoaD1jLmNhbGwoYixhLGgpKSxudWxsPT09aClyZXR1cm5cIm51bGxcIjtpZihpPW8uY2FsbChoKSxpPT16KXJldHVyblwiXCIraDtpZihpPT13KXJldHVybiBoPi0xLzAmJmg8MS8wP1wiXCIraDpcIm51bGxcIjtpZihpPT14KXJldHVybiBJKFwiXCIraCk7aWYoXCJvYmplY3RcIj09dHlwZW9mIGgpe2ZvcihIPWcubGVuZ3RoO0gtLTspaWYoZ1tIXT09PWgpdGhyb3cgaygpO2lmKGcucHVzaChoKSxDPVtdLEs9ZixmKz1lLGk9PXkpe2ZvcihGPTAsSD1oLmxlbmd0aDtGPEg7RisrKUU9SihGLGgsYyxkLGUsZixnKSxDLnB1c2goRT09PXI/XCJudWxsXCI6RSk7TD1DLmxlbmd0aD9lP1wiW1xcblwiK2YrQy5qb2luKFwiLFxcblwiK2YpK1wiXFxuXCIrSytcIl1cIjpcIltcIitDLmpvaW4oXCIsXCIpK1wiXVwiOlwiW11cIn1lbHNlIHEoZHx8aCxmdW5jdGlvbihhKXt2YXIgYj1KKGEsaCxjLGQsZSxmLGcpO2IhPT1yJiZDLnB1c2goSShhKStcIjpcIisoZT9cIiBcIjpcIlwiKStiKX0pLEw9Qy5sZW5ndGg/ZT9cIntcXG5cIitmK0Muam9pbihcIixcXG5cIitmKStcIlxcblwiK0srXCJ9XCI6XCJ7XCIrQy5qb2luKFwiLFwiKStcIn1cIjpcInt9XCI7cmV0dXJuIGcucG9wKCksTH19O2Iuc3RyaW5naWZ5PWZ1bmN0aW9uKGEsYixkKXt2YXIgZSxmLGcsaDtpZihjW3R5cGVvZiBiXSYmYilpZigoaD1vLmNhbGwoYikpPT11KWY9YjtlbHNlIGlmKGg9PXkpe2c9e307Zm9yKHZhciBrLGk9MCxqPWIubGVuZ3RoO2k8ajtrPWJbaSsrXSxoPW8uY2FsbChrKSwoaD09eHx8aD09dykmJihnW2tdPTEpKTt9aWYoZClpZigoaD1vLmNhbGwoZCkpPT13KXtpZigoZC09ZCUxKT4wKWZvcihlPVwiXCIsZD4xMCYmKGQ9MTApO2UubGVuZ3RoPGQ7ZSs9XCIgXCIpO31lbHNlIGg9PXgmJihlPWQubGVuZ3RoPD0xMD9kOmQuc2xpY2UoMCwxMCkpO3JldHVybiBKKFwiXCIsKGs9e30sa1tcIlwiXT1hLGspLGYsZyxlLFwiXCIsW10pfX1pZighdChcImpzb24tcGFyc2VcIikpe3ZhciBNLE4sSz1mLmZyb21DaGFyQ29kZSxMPXs5MjpcIlxcXFxcIiwzNDonXCInLDQ3OlwiL1wiLDk4OlwiXFxiXCIsMTE2OlwiXFx0XCIsMTEwOlwiXFxuXCIsMTAyOlwiXFxmXCIsMTE0OlwiXFxyXCJ9LE89ZnVuY3Rpb24oKXt0aHJvdyBNPU49bnVsbCxqKCl9LFA9ZnVuY3Rpb24oKXtmb3IodmFyIGMsZCxlLGYsZyxhPU4sYj1hLmxlbmd0aDtNPGI7KXN3aXRjaChnPWEuY2hhckNvZGVBdChNKSl7Y2FzZSA5OmNhc2UgMTA6Y2FzZSAxMzpjYXNlIDMyOk0rKzticmVhaztjYXNlIDEyMzpjYXNlIDEyNTpjYXNlIDkxOmNhc2UgOTM6Y2FzZSA1ODpjYXNlIDQ0OnJldHVybiBjPUE/YS5jaGFyQXQoTSk6YVtNXSxNKyssYztjYXNlIDM0OmZvcihjPVwiQFwiLE0rKztNPGI7KWlmKGc9YS5jaGFyQ29kZUF0KE0pLGc8MzIpTygpO2Vsc2UgaWYoOTI9PWcpc3dpdGNoKGc9YS5jaGFyQ29kZUF0KCsrTSkpe2Nhc2UgOTI6Y2FzZSAzNDpjYXNlIDQ3OmNhc2UgOTg6Y2FzZSAxMTY6Y2FzZSAxMTA6Y2FzZSAxMDI6Y2FzZSAxMTQ6Yys9TFtnXSxNKys7YnJlYWs7Y2FzZSAxMTc6Zm9yKGQ9KytNLGU9TSs0O008ZTtNKyspZz1hLmNoYXJDb2RlQXQoTSksZz49NDgmJmc8PTU3fHxnPj05NyYmZzw9MTAyfHxnPj02NSYmZzw9NzB8fE8oKTtjKz1LKFwiMHhcIithLnNsaWNlKGQsTSkpO2JyZWFrO2RlZmF1bHQ6TygpfWVsc2V7aWYoMzQ9PWcpYnJlYWs7Zm9yKGc9YS5jaGFyQ29kZUF0KE0pLGQ9TTtnPj0zMiYmOTIhPWcmJjM0IT1nOylnPWEuY2hhckNvZGVBdCgrK00pO2MrPWEuc2xpY2UoZCxNKX1pZigzND09YS5jaGFyQ29kZUF0KE0pKXJldHVybiBNKyssYztPKCk7ZGVmYXVsdDppZihkPU0sNDU9PWcmJihmPSEwLGc9YS5jaGFyQ29kZUF0KCsrTSkpLGc+PTQ4JiZnPD01Nyl7Zm9yKDQ4PT1nJiYoZz1hLmNoYXJDb2RlQXQoTSsxKSxnPj00OCYmZzw9NTcpJiZPKCksZj0hMTtNPGImJihnPWEuY2hhckNvZGVBdChNKSxnPj00OCYmZzw9NTcpO00rKyk7aWYoNDY9PWEuY2hhckNvZGVBdChNKSl7Zm9yKGU9KytNO2U8YiYmKGc9YS5jaGFyQ29kZUF0KGUpLGc+PTQ4JiZnPD01Nyk7ZSsrKTtlPT1NJiZPKCksTT1lfWlmKGc9YS5jaGFyQ29kZUF0KE0pLDEwMT09Z3x8Njk9PWcpe2ZvcihnPWEuY2hhckNvZGVBdCgrK00pLDQzIT1nJiY0NSE9Z3x8TSsrLGU9TTtlPGImJihnPWEuY2hhckNvZGVBdChlKSxnPj00OCYmZzw9NTcpO2UrKyk7ZT09TSYmTygpLE09ZX1yZXR1cm4rYS5zbGljZShkLE0pfWlmKGYmJk8oKSxcInRydWVcIj09YS5zbGljZShNLE0rNCkpcmV0dXJuIE0rPTQsITA7aWYoXCJmYWxzZVwiPT1hLnNsaWNlKE0sTSs1KSlyZXR1cm4gTSs9NSwhMTtpZihcIm51bGxcIj09YS5zbGljZShNLE0rNCkpcmV0dXJuIE0rPTQsbnVsbDtPKCl9cmV0dXJuXCIkXCJ9LFE9ZnVuY3Rpb24oYSl7dmFyIGIsYztpZihcIiRcIj09YSYmTygpLFwic3RyaW5nXCI9PXR5cGVvZiBhKXtpZihcIkBcIj09KEE/YS5jaGFyQXQoMCk6YVswXSkpcmV0dXJuIGEuc2xpY2UoMSk7aWYoXCJbXCI9PWEpe2ZvcihiPVtdO2E9UCgpLFwiXVwiIT1hO2N8fChjPSEwKSljJiYoXCIsXCI9PWE/KGE9UCgpLFwiXVwiPT1hJiZPKCkpOk8oKSksXCIsXCI9PWEmJk8oKSxiLnB1c2goUShhKSk7cmV0dXJuIGJ9aWYoXCJ7XCI9PWEpe2ZvcihiPXt9O2E9UCgpLFwifVwiIT1hO2N8fChjPSEwKSljJiYoXCIsXCI9PWE/KGE9UCgpLFwifVwiPT1hJiZPKCkpOk8oKSksXCIsXCIhPWEmJlwic3RyaW5nXCI9PXR5cGVvZiBhJiZcIkBcIj09KEE/YS5jaGFyQXQoMCk6YVswXSkmJlwiOlwiPT1QKCl8fE8oKSxiW2Euc2xpY2UoMSldPVEoUCgpKTtyZXR1cm4gYn1PKCl9cmV0dXJuIGF9LFI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVMoYSxiLGMpO2Q9PT1yP2RlbGV0ZSBhW2JdOmFbYl09ZH0sUz1mdW5jdGlvbihhLGIsYyl7dmFyIGUsZD1hW2JdO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBkJiZkKWlmKG8uY2FsbChkKT09eSlmb3IoZT1kLmxlbmd0aDtlLS07KVIoZCxlLGMpO2Vsc2UgcShkLGZ1bmN0aW9uKGEpe1IoZCxhLGMpfSk7cmV0dXJuIGMuY2FsbChhLGIsZCl9O2IucGFyc2U9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkO3JldHVybiBNPTAsTj1cIlwiK2EsYz1RKFAoKSksXCIkXCIhPVAoKSYmTygpLE09Tj1udWxsLGImJm8uY2FsbChiKT09dT9TKChkPXt9LGRbXCJcIl09YyxkKSxcIlwiLGIpOmN9fX1yZXR1cm4gYi5ydW5JbkNvbnRleHQ9ZyxifXZhciBiPVwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCxjPXtmdW5jdGlvbjohMCxvYmplY3Q6ITB9LGQ9Y1t0eXBlb2YgYV0mJmEmJiFhLm5vZGVUeXBlJiZhLGU9Y1t0eXBlb2Ygd2luZG93XSYmd2luZG93fHx0aGlzLGY9ZCYmY1t0eXBlb2YgbW9kdWxlXSYmbW9kdWxlJiYhbW9kdWxlLm5vZGVUeXBlJiZcIm9iamVjdFwiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWw7aWYoIWZ8fGYuZ2xvYmFsIT09ZiYmZi53aW5kb3chPT1mJiZmLnNlbGYhPT1mfHwoZT1mKSxkJiYhYilnKGUsZCk7ZWxzZXt2YXIgaD1lLkpTT04saT1lLkpTT04zLGo9ITEsaz1nKGUsZS5KU09OMz17bm9Db25mbGljdDpmdW5jdGlvbigpe3JldHVybiBqfHwoaj0hMCxlLkpTT049aCxlLkpTT04zPWksaD1pPW51bGwpLGt9fSk7ZS5KU09OPXtwYXJzZTprLnBhcnNlLHN0cmluZ2lmeTprLnN0cmluZ2lmeX19YiYmZGVmaW5lKGZ1bmN0aW9uKCl7cmV0dXJuIGt9KX0pLmNhbGwodGhpcyksSlNPTjI9YX0oKSxcIm9iamVjdFwiIT10eXBlb2YgX3BhcSYmKF9wYXE9W10pLFwib2JqZWN0XCIhPXR5cGVvZiBQaXdpayYmKFBpd2lrPWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gc2FmZURlY29kZVdyYXBwZXIoYSl7dHJ5e3JldHVybiBkZWNvZGVXcmFwcGVyKGEpfWNhdGNoKGIpe3JldHVybiB1bmVzY2FwZShhKX19ZnVuY3Rpb24gaXNEZWZpbmVkKGEpe3ZhciBiPXR5cGVvZiBhO3JldHVyblwidW5kZWZpbmVkXCIhPT1ifWZ1bmN0aW9uIGlzRnVuY3Rpb24oYSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYX1mdW5jdGlvbiBpc09iamVjdChhKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgYX1mdW5jdGlvbiBpc1N0cmluZyhhKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgYXx8YSBpbnN0YW5jZW9mIFN0cmluZ31mdW5jdGlvbiBhcHBseSgpe3ZhciBhLGIsYztmb3IoYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKz0xKWM9YXJndW1lbnRzW2FdLGI9Yy5zaGlmdCgpLGlzU3RyaW5nKGIpP2FzeW5jVHJhY2tlcltiXS5hcHBseShhc3luY1RyYWNrZXIsYyk6Yi5hcHBseShhc3luY1RyYWNrZXIsYyl9ZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihhLGIsYyxkKXtyZXR1cm4gYS5hZGRFdmVudExpc3RlbmVyPyhhLmFkZEV2ZW50TGlzdGVuZXIoYixjLGQpLCEwKTphLmF0dGFjaEV2ZW50P2EuYXR0YWNoRXZlbnQoXCJvblwiK2IsYyk6dm9pZChhW1wib25cIitiXT1jKX1mdW5jdGlvbiBleGVjdXRlUGx1Z2luTWV0aG9kKGEsYil7dmFyIGQsZSxjPVwiXCI7Zm9yKGQgaW4gcGx1Z2lucylPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocGx1Z2lucyxkKSYmKGU9cGx1Z2luc1tkXVthXSxpc0Z1bmN0aW9uKGUpJiYoYys9ZShiKSkpO3JldHVybiBjfWZ1bmN0aW9uIGJlZm9yZVVubG9hZEhhbmRsZXIoKXt2YXIgYTtpZihleGVjdXRlUGx1Z2luTWV0aG9kKFwidW5sb2FkXCIpLGV4cGlyZURhdGVUaW1lKWRvIGE9bmV3IERhdGU7d2hpbGUoYS5nZXRUaW1lQWxpYXMoKTxleHBpcmVEYXRlVGltZSl9ZnVuY3Rpb24gbG9hZEhhbmRsZXIoKXt2YXIgYTtpZighaGFzTG9hZGVkKWZvcihoYXNMb2FkZWQ9ITAsZXhlY3V0ZVBsdWdpbk1ldGhvZChcImxvYWRcIiksYT0wO2E8cmVnaXN0ZXJlZE9uTG9hZEhhbmRsZXJzLmxlbmd0aDthKyspcmVnaXN0ZXJlZE9uTG9hZEhhbmRsZXJzW2FdKCk7cmV0dXJuITB9ZnVuY3Rpb24gYWRkUmVhZHlMaXN0ZW5lcigpe3ZhciBhO2RvY3VtZW50QWxpYXMuYWRkRXZlbnRMaXN0ZW5lcj9hZGRFdmVudExpc3RlbmVyKGRvY3VtZW50QWxpYXMsXCJET01Db250ZW50TG9hZGVkXCIsZnVuY3Rpb24gYSgpe2RvY3VtZW50QWxpYXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixhLCExKSxsb2FkSGFuZGxlcigpfSk6ZG9jdW1lbnRBbGlhcy5hdHRhY2hFdmVudCYmKGRvY3VtZW50QWxpYXMuYXR0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIixmdW5jdGlvbiBhKCl7XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnRBbGlhcy5yZWFkeVN0YXRlJiYoZG9jdW1lbnRBbGlhcy5kZXRhY2hFdmVudChcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLGEpLGxvYWRIYW5kbGVyKCkpfSksZG9jdW1lbnRBbGlhcy5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwmJndpbmRvd0FsaWFzPT09d2luZG93QWxpYXMudG9wJiYhZnVuY3Rpb24gYSgpe2lmKCFoYXNMb2FkZWQpe3RyeXtkb2N1bWVudEFsaWFzLmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbChcImxlZnRcIil9Y2F0Y2goYil7cmV0dXJuIHZvaWQgc2V0VGltZW91dChhLDApfWxvYWRIYW5kbGVyKCl9fSgpKSxuZXcgUmVnRXhwKFwiV2ViS2l0XCIpLnRlc3QobmF2aWdhdG9yQWxpYXMudXNlckFnZW50KSYmKGE9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsoaGFzTG9hZGVkfHwvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KGRvY3VtZW50QWxpYXMucmVhZHlTdGF0ZSkpJiYoY2xlYXJJbnRlcnZhbChhKSxsb2FkSGFuZGxlcigpKX0sMTApKSxhZGRFdmVudExpc3RlbmVyKHdpbmRvd0FsaWFzLFwibG9hZFwiLGxvYWRIYW5kbGVyLCExKX1mdW5jdGlvbiBsb2FkU2NyaXB0KGEsYil7dmFyIGM9ZG9jdW1lbnRBbGlhcy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO2MudHlwZT1cInRleHQvamF2YXNjcmlwdFwiLGMuc3JjPWEsYy5yZWFkeVN0YXRlP2Mub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWFkeVN0YXRlO1wibG9hZGVkXCIhPT1hJiZcImNvbXBsZXRlXCIhPT1hfHwoYy5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxiKCkpfTpjLm9ubG9hZD1iLGRvY3VtZW50QWxpYXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLmFwcGVuZENoaWxkKGMpfWZ1bmN0aW9uIGdldFJlZmVycmVyKCl7dmFyIGE9XCJcIjt0cnl7YT13aW5kb3dBbGlhcy50b3AuZG9jdW1lbnQucmVmZXJyZXJ9Y2F0Y2goYil7aWYod2luZG93QWxpYXMucGFyZW50KXRyeXthPXdpbmRvd0FsaWFzLnBhcmVudC5kb2N1bWVudC5yZWZlcnJlcn1jYXRjaChiKXthPVwiXCJ9fXJldHVyblwiXCI9PT1hJiYoYT1kb2N1bWVudEFsaWFzLnJlZmVycmVyKSxhfWZ1bmN0aW9uIGdldFByb3RvY29sU2NoZW1lKGEpe3ZhciBiPW5ldyBSZWdFeHAoXCJeKFthLXpdKyk6XCIpLGM9Yi5leGVjKGEpO3JldHVybiBjP2NbMV06bnVsbH1mdW5jdGlvbiBnZXRIb3N0TmFtZShhKXt2YXIgYj1uZXcgUmVnRXhwKFwiXig/Oig/Omh0dHBzP3xmdHApOikvKig/OlteQF0rQCk/KFteOi8jXSspXCIpLGM9Yi5leGVjKGEpO3JldHVybiBjP2NbMV06YX1mdW5jdGlvbiBnZXRQYXJhbWV0ZXIoYSxiKXt2YXIgYz1cIltcXFxcPyYjXVwiK2IrXCI9KFteJiNdKilcIixkPW5ldyBSZWdFeHAoYyksZT1kLmV4ZWMoYSk7cmV0dXJuIGU/ZGVjb2RlV3JhcHBlcihlWzFdKTpcIlwifWZ1bmN0aW9uIHV0ZjhfZW5jb2RlKGEpe3JldHVybiB1bmVzY2FwZShlbmNvZGVXcmFwcGVyKGEpKX1mdW5jdGlvbiBzaGExKGEpe3ZhciBkLGUsZixtLG4sbyxwLHEscixzLGI9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYTw8YnxhPj4+MzItYn0sYz1mdW5jdGlvbihhKXt2YXIgYyxkLGI9XCJcIjtmb3IoYz03O2M+PTA7Yy0tKWQ9YT4+PjQqYyYxNSxiKz1kLnRvU3RyaW5nKDE2KTtyZXR1cm4gYn0sZz1bXSxoPTE3MzI1ODQxOTMsaT00MDIzMjMzNDE3LGo9MjU2MjM4MzEwMixrPTI3MTczMzg3OCxsPTMyODUzNzc1MjAsdD1bXTtmb3IoYT11dGY4X2VuY29kZShhKSxzPWEubGVuZ3RoLGU9MDtlPHMtMztlKz00KWY9YS5jaGFyQ29kZUF0KGUpPDwyNHxhLmNoYXJDb2RlQXQoZSsxKTw8MTZ8YS5jaGFyQ29kZUF0KGUrMik8PDh8YS5jaGFyQ29kZUF0KGUrMyksdC5wdXNoKGYpO3N3aXRjaCgzJnMpe2Nhc2UgMDplPTIxNDc0ODM2NDg7YnJlYWs7Y2FzZSAxOmU9YS5jaGFyQ29kZUF0KHMtMSk8PDI0fDgzODg2MDg7YnJlYWs7Y2FzZSAyOmU9YS5jaGFyQ29kZUF0KHMtMik8PDI0fGEuY2hhckNvZGVBdChzLTEpPDwxNnwzMjc2ODticmVhaztjYXNlIDM6ZT1hLmNoYXJDb2RlQXQocy0zKTw8MjR8YS5jaGFyQ29kZUF0KHMtMik8PDE2fGEuY2hhckNvZGVBdChzLTEpPDw4fDEyOH1mb3IodC5wdXNoKGUpOzE0IT09KDE1JnQubGVuZ3RoKTspdC5wdXNoKDApO2Zvcih0LnB1c2gocz4+PjI5KSx0LnB1c2goczw8MyY0Mjk0OTY3Mjk1KSxkPTA7ZDx0Lmxlbmd0aDtkKz0xNil7Zm9yKGU9MDtlPDE2O2UrKylnW2VdPXRbZCtlXTtmb3IoZT0xNjtlPD03OTtlKyspZ1tlXT1iKGdbZS0zXV5nW2UtOF1eZ1tlLTE0XV5nW2UtMTZdLDEpO2ZvcihtPWgsbj1pLG89aixwPWsscT1sLGU9MDtlPD0xOTtlKyspcj1iKG0sNSkrKG4mb3x+biZwKStxK2dbZV0rMTUxODUwMDI0OSY0Mjk0OTY3Mjk1LHE9cCxwPW8sbz1iKG4sMzApLG49bSxtPXI7Zm9yKGU9MjA7ZTw9Mzk7ZSsrKXI9YihtLDUpKyhuXm9ecCkrcStnW2VdKzE4NTk3NzUzOTMmNDI5NDk2NzI5NSxxPXAscD1vLG89YihuLDMwKSxuPW0sbT1yO2ZvcihlPTQwO2U8PTU5O2UrKylyPWIobSw1KSsobiZvfG4mcHxvJnApK3ErZ1tlXSsyNDAwOTU5NzA4JjQyOTQ5NjcyOTUscT1wLHA9byxvPWIobiwzMCksbj1tLG09cjtmb3IoZT02MDtlPD03OTtlKyspcj1iKG0sNSkrKG5eb15wKStxK2dbZV0rMzM5NTQ2OTc4MiY0Mjk0OTY3Mjk1LHE9cCxwPW8sbz1iKG4sMzApLG49bSxtPXI7aD1oK20mNDI5NDk2NzI5NSxpPWkrbiY0Mjk0OTY3Mjk1LGo9aitvJjQyOTQ5NjcyOTUsaz1rK3AmNDI5NDk2NzI5NSxsPWwrcSY0Mjk0OTY3Mjk1fXJldHVybiByPWMoaCkrYyhpKStjKGopK2MoaykrYyhsKSxyLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gdXJsRml4dXAoYSxiLGMpe3JldHVyblwidHJhbnNsYXRlLmdvb2dsZXVzZXJjb250ZW50LmNvbVwiPT09YT8oXCJcIj09PWMmJihjPWIpLGI9Z2V0UGFyYW1ldGVyKGIsXCJ1XCIpLGE9Z2V0SG9zdE5hbWUoYikpOlwiY2MuYmluZ2ouY29tXCIhPT1hJiZcIndlYmNhY2hlLmdvb2dsZXVzZXJjb250ZW50LmNvbVwiIT09YSYmXCI3NC42LlwiIT09YS5zbGljZSgwLDUpfHwoYj1kb2N1bWVudEFsaWFzLmxpbmtzWzBdLmhyZWYsYT1nZXRIb3N0TmFtZShiKSksW2EsYixjXX1mdW5jdGlvbiBkb21haW5GaXh1cChhKXt2YXIgYj1hLmxlbmd0aDtyZXR1cm5cIi5cIj09PWEuY2hhckF0KC0tYikmJihhPWEuc2xpY2UoMCxiKSksXCIqLlwiPT09YS5zbGljZSgwLDIpJiYoYT1hLnNsaWNlKDEpKSxhfWZ1bmN0aW9uIHRpdGxlRml4dXAoYSl7aWYoYT1hJiZhLnRleHQ/YS50ZXh0OmEsIWlzU3RyaW5nKGEpKXt2YXIgYj1kb2N1bWVudEFsaWFzLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGl0bGVcIik7YiYmaXNEZWZpbmVkKGJbMF0pJiYoYT1iWzBdLnRleHQpfXJldHVybiBhfWZ1bmN0aW9uIGdldENoaWxkcmVuRnJvbU5vZGUoYSl7cmV0dXJuIGE/IWlzRGVmaW5lZChhLmNoaWxkcmVuKSYmaXNEZWZpbmVkKGEuY2hpbGROb2Rlcyk/YS5jaGlsZHJlbjppc0RlZmluZWQoYS5jaGlsZHJlbik/YS5jaGlsZHJlbjpbXTpbXX1mdW5jdGlvbiBjb250YWluc05vZGVFbGVtZW50KGEsYil7cmV0dXJuISghYXx8IWIpJiYoYS5jb250YWlucz9hLmNvbnRhaW5zKGIpOmE9PT1ifHwhIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24mJiEhKDE2JmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikpKX1mdW5jdGlvbiBpbmRleE9mQXJyYXkoYSxiKXtpZihhJiZhLmluZGV4T2YpcmV0dXJuIGEuaW5kZXhPZihiKTtpZighaXNEZWZpbmVkKGEpfHxudWxsPT09YSlyZXR1cm4tMTtpZighYS5sZW5ndGgpcmV0dXJuLTE7dmFyIGM9YS5sZW5ndGg7aWYoMD09PWMpcmV0dXJuLTE7Zm9yKHZhciBkPTA7ZDxjOyl7aWYoYVtkXT09PWIpcmV0dXJuIGQ7ZCsrfXJldHVybi0xfWZ1bmN0aW9uIGlzVmlzaWJsZShhKXtmdW5jdGlvbiBiKGEsYil7cmV0dXJuIHdpbmRvd0FsaWFzLmdldENvbXB1dGVkU3R5bGU/ZG9jdW1lbnRBbGlhcy5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGEsbnVsbClbYl06YS5jdXJyZW50U3R5bGU/YS5jdXJyZW50U3R5bGVbYl06dm9pZCAwfWZ1bmN0aW9uIGMoYSl7Zm9yKGE9YS5wYXJlbnROb2RlO2E7KXtpZihhPT09ZG9jdW1lbnRBbGlhcylyZXR1cm4hMDthPWEucGFyZW50Tm9kZX1yZXR1cm4hMX1mdW5jdGlvbiBkKGUsZixnLGgsaSxqLGspe3ZhciBsPWUucGFyZW50Tm9kZSxtPTE7cmV0dXJuISFjKGUpJiYoOT09PWwubm9kZVR5cGV8fFwiMFwiIT09YihlLFwib3BhY2l0eVwiKSYmXCJub25lXCIhPT1iKGUsXCJkaXNwbGF5XCIpJiZcImhpZGRlblwiIT09YihlLFwidmlzaWJpbGl0eVwiKSYmKGlzRGVmaW5lZChmKSYmaXNEZWZpbmVkKGcpJiZpc0RlZmluZWQoaCkmJmlzRGVmaW5lZChpKSYmaXNEZWZpbmVkKGopJiZpc0RlZmluZWQoayl8fChmPWUub2Zmc2V0VG9wLGk9ZS5vZmZzZXRMZWZ0LGg9ZitlLm9mZnNldEhlaWdodCxnPWkrZS5vZmZzZXRXaWR0aCxqPWUub2Zmc2V0V2lkdGgsaz1lLm9mZnNldEhlaWdodCksKGEhPT1lfHwwIT09ayYmMCE9PWp8fFwiaGlkZGVuXCIhPT1iKGUsXCJvdmVyZmxvd1wiKSkmJighbHx8KFwiaGlkZGVuXCIhPT1iKGwsXCJvdmVyZmxvd1wiKSYmXCJzY3JvbGxcIiE9PWIobCxcIm92ZXJmbG93XCIpfHwhKGkrbT5sLm9mZnNldFdpZHRoK2wuc2Nyb2xsTGVmdHx8aStqLW08bC5zY3JvbGxMZWZ0fHxmK20+bC5vZmZzZXRIZWlnaHQrbC5zY3JvbGxUb3B8fGYray1tPGwuc2Nyb2xsVG9wKSkmJihlLm9mZnNldFBhcmVudD09PWwmJihpKz1sLm9mZnNldExlZnQsZis9bC5vZmZzZXRUb3ApLGQobCxmLGcsaCxpLGosaykpKSkpfXJldHVybiEhYSYmZChhKX1mdW5jdGlvbiBnZXRQaXdpa1VybEZvck92ZXJsYXkoYSxiKXtyZXR1cm4gYj9iOihcInBpd2lrLnBocFwiPT09YS5zbGljZSgtOSkmJihhPWEuc2xpY2UoMCxhLmxlbmd0aC05KSksYSl9ZnVuY3Rpb24gaXNPdmVybGF5U2Vzc2lvbihhKXt2YXIgYj1cIlBpd2lrX092ZXJsYXlcIixjPW5ldyBSZWdFeHAoXCJpbmRleFxcXFwucGhwXFxcXD9tb2R1bGU9T3ZlcmxheSZhY3Rpb249c3RhcnRPdmVybGF5U2Vzc2lvbiZpZFNpdGU9KFswLTldKykmcGVyaW9kPShbXiZdKykmZGF0ZT0oW14mXSspJFwiKSxkPWMuZXhlYyhkb2N1bWVudEFsaWFzLnJlZmVycmVyKTtpZihkKXt2YXIgZT1kWzFdO2lmKGUhPT1TdHJpbmcoYSkpcmV0dXJuITE7dmFyIGY9ZFsyXSxnPWRbM107d2luZG93QWxpYXMubmFtZT1iK1wiIyMjXCIrZitcIiMjI1wiK2d9dmFyIGg9d2luZG93QWxpYXMubmFtZS5zcGxpdChcIiMjI1wiKTtyZXR1cm4gMz09PWgubGVuZ3RoJiZoWzBdPT09Yn1mdW5jdGlvbiBpbmplY3RPdmVybGF5U2NyaXB0cyhhLGIsYyl7dmFyIGQ9d2luZG93QWxpYXMubmFtZS5zcGxpdChcIiMjI1wiKSxlPWRbMV0sZj1kWzJdLGc9Z2V0UGl3aWtVcmxGb3JPdmVybGF5KGEsYik7bG9hZFNjcmlwdChnK1wicGx1Z2lucy9PdmVybGF5L2NsaWVudC9jbGllbnQuanM/dj0xXCIsZnVuY3Rpb24oKXtQaXdpa19PdmVybGF5X0NsaWVudC5pbml0aWFsaXplKGcsYyxlLGYpfSl9ZnVuY3Rpb24gVHJhY2tlcih0cmFja2VyVXJsLHNpdGVJZCl7ZnVuY3Rpb24gc2V0Q29va2llKGEsYixjLGQsZSxmKXtpZighY29uZmlnQ29va2llc0Rpc2FibGVkKXt2YXIgZztjJiYoZz1uZXcgRGF0ZSxnLnNldFRpbWUoZy5nZXRUaW1lKCkrYykpLGRvY3VtZW50QWxpYXMuY29va2llPWErXCI9XCIrZW5jb2RlV3JhcHBlcihiKSsoYz9cIjtleHBpcmVzPVwiK2cudG9HTVRTdHJpbmcoKTpcIlwiKStcIjtwYXRoPVwiKyhkfHxcIi9cIikrKGU/XCI7ZG9tYWluPVwiK2U6XCJcIikrKGY/XCI7c2VjdXJlXCI6XCJcIil9fWZ1bmN0aW9uIGdldENvb2tpZShhKXtpZihjb25maWdDb29raWVzRGlzYWJsZWQpcmV0dXJuIDA7dmFyIGI9bmV3IFJlZ0V4cChcIihefDspWyBdKlwiK2ErXCI9KFteO10qKVwiKSxjPWIuZXhlYyhkb2N1bWVudEFsaWFzLmNvb2tpZSk7cmV0dXJuIGM/ZGVjb2RlV3JhcHBlcihjWzJdKTowfWZ1bmN0aW9uIHB1cmlmeShhKXt2YXIgYjtyZXR1cm4gY29uZmlnRGlzY2FyZEhhc2hUYWc/KGI9bmV3IFJlZ0V4cChcIiMuKlwiKSxhLnJlcGxhY2UoYixcIlwiKSk6YX1mdW5jdGlvbiByZXNvbHZlUmVsYXRpdmVSZWZlcmVuY2UoYSxiKXt2YXIgZCxjPWdldFByb3RvY29sU2NoZW1lKGIpO3JldHVybiBjP2I6XCIvXCI9PT1iLnNsaWNlKDAsMSk/Z2V0UHJvdG9jb2xTY2hlbWUoYSkrXCI6Ly9cIitnZXRIb3N0TmFtZShhKStiOihhPXB1cmlmeShhKSxkPWEuaW5kZXhPZihcIj9cIiksZD49MCYmKGE9YS5zbGljZSgwLGQpKSxkPWEubGFzdEluZGV4T2YoXCIvXCIpLGQhPT1hLmxlbmd0aC0xJiYoYT1hLnNsaWNlKDAsZCsxKSksYStiKX1mdW5jdGlvbiBpc1NpdGVIb3N0TmFtZShhKXt2YXIgYixjLGQ7Zm9yKGI9MDtiPGNvbmZpZ0hvc3RzQWxpYXMubGVuZ3RoO2IrKyl7aWYoYz1kb21haW5GaXh1cChjb25maWdIb3N0c0FsaWFzW2JdLnRvTG93ZXJDYXNlKCkpLGE9PT1jKXJldHVybiEwO2lmKFwiLlwiPT09Yy5zbGljZSgwLDEpKXtpZihhPT09Yy5zbGljZSgxKSlyZXR1cm4hMDtpZihkPWEubGVuZ3RoLWMubGVuZ3RoLGQ+MCYmYS5zbGljZShkKT09PWMpcmV0dXJuITB9fXJldHVybiExfWZ1bmN0aW9uIGdldEltYWdlKGEsYil7dmFyIGM9bmV3IEltYWdlKDEsMSk7Yy5vbmxvYWQ9ZnVuY3Rpb24oKXtpdGVyYXRvcj0wLFwiZnVuY3Rpb25cIj09dHlwZW9mIGImJmIoKX0sYy5zcmM9Y29uZmlnVHJhY2tlclVybCsoY29uZmlnVHJhY2tlclVybC5pbmRleE9mKFwiP1wiKTwwP1wiP1wiOlwiJlwiKSthfWZ1bmN0aW9uIHNlbmRYbWxIdHRwUmVxdWVzdChhLGIsYyl7aXNEZWZpbmVkKGMpJiZudWxsIT09Y3x8KGM9ITApO3RyeXt2YXIgZD13aW5kb3dBbGlhcy5YTUxIdHRwUmVxdWVzdD9uZXcgd2luZG93QWxpYXMuWE1MSHR0cFJlcXVlc3Q6d2luZG93QWxpYXMuQWN0aXZlWE9iamVjdD9uZXcgQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxIVFRQXCIpOm51bGw7ZC5vcGVuKFwiUE9TVFwiLGNvbmZpZ1RyYWNrZXJVcmwsITApLGQub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7NCE9PXRoaXMucmVhZHlTdGF0ZXx8dGhpcy5zdGF0dXM+PTIwMCYmdGhpcy5zdGF0dXM8MzAwfHwhYz9cImZ1bmN0aW9uXCI9PXR5cGVvZiBiJiZiKCk6Z2V0SW1hZ2UoYSxiKX0sZC5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsY29uZmlnUmVxdWVzdENvbnRlbnRUeXBlKSxkLnNlbmQoYSl9Y2F0Y2goZCl7YyYmZ2V0SW1hZ2UoYSxiKX19ZnVuY3Rpb24gc2V0RXhwaXJlRGF0ZVRpbWUoYSl7dmFyIGI9bmV3IERhdGUsYz1iLmdldFRpbWUoKSthOyghZXhwaXJlRGF0ZVRpbWV8fGM+ZXhwaXJlRGF0ZVRpbWUpJiYoZXhwaXJlRGF0ZVRpbWU9Yyl9ZnVuY3Rpb24gaGVhcnRCZWF0VXAoYSl7IWhlYXJ0QmVhdFRpbWVvdXQmJmNvbmZpZ0hlYXJ0QmVhdERlbGF5JiYoaGVhcnRCZWF0VGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoaGVhcnRCZWF0VGltZW91dD1udWxsLCFoZWFydEJlYXRQaW5nSWZBY3Rpdml0eUFsaWFzKCkpe3ZhciBiPW5ldyBEYXRlLGM9Y29uZmlnSGVhcnRCZWF0RGVsYXktKGIuZ2V0VGltZSgpLWxhc3RUcmFja2VyUmVxdWVzdFRpbWUpO2M9TWF0aC5taW4oY29uZmlnSGVhcnRCZWF0RGVsYXksYyksaGVhcnRCZWF0VXAoYyl9fSxhfHxjb25maWdIZWFydEJlYXREZWxheSkpfWZ1bmN0aW9uIGhlYXJ0QmVhdERvd24oKXtoZWFydEJlYXRUaW1lb3V0JiYoY2xlYXJUaW1lb3V0KGhlYXJ0QmVhdFRpbWVvdXQpLGhlYXJ0QmVhdFRpbWVvdXQ9bnVsbCl9ZnVuY3Rpb24gaGVhcnRCZWF0T25Gb2N1cygpe2hlYXJ0QmVhdFBpbmdJZkFjdGl2aXR5QWxpYXMoKXx8aGVhcnRCZWF0VXAoKX1mdW5jdGlvbiBoZWFydEJlYXRPbkJsdXIoKXtoZWFydEJlYXREb3duKCl9ZnVuY3Rpb24gc2V0VXBIZWFydEJlYXQoKXshaGVhcnRCZWF0U2V0VXAmJmNvbmZpZ0hlYXJ0QmVhdERlbGF5JiYoaGVhcnRCZWF0U2V0VXA9ITAsYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3dBbGlhcyxcImZvY3VzXCIsaGVhcnRCZWF0T25Gb2N1cyksYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3dBbGlhcyxcImJsdXJcIixoZWFydEJlYXRPbkJsdXIpLGhlYXJ0QmVhdFVwKCkpfWZ1bmN0aW9uIG1ha2VTdXJlVGhlcmVJc0FHYXBBZnRlckZpcnN0VHJhY2tpbmdSZXF1ZXN0VG9QcmV2ZW50TXVsdGlwbGVWaXNpdG9yQ3JlYXRpb24oYSl7dmFyIGI9bmV3IERhdGUsYz1iLmdldFRpbWUoKTtpZihsYXN0VHJhY2tlclJlcXVlc3RUaW1lPWMsdGltZU5leHRUcmFja2luZ1JlcXVlc3RDYW5CZUV4ZWN1dGVkSW1tZWRpYXRlbHkmJmM8dGltZU5leHRUcmFja2luZ1JlcXVlc3RDYW5CZUV4ZWN1dGVkSW1tZWRpYXRlbHkpe3ZhciBkPXRpbWVOZXh0VHJhY2tpbmdSZXF1ZXN0Q2FuQmVFeGVjdXRlZEltbWVkaWF0ZWx5LWM7cmV0dXJuIHNldFRpbWVvdXQoYSxkKSxzZXRFeHBpcmVEYXRlVGltZShkKzUwKSx2b2lkKHRpbWVOZXh0VHJhY2tpbmdSZXF1ZXN0Q2FuQmVFeGVjdXRlZEltbWVkaWF0ZWx5Kz01MCl9aWYodGltZU5leHRUcmFja2luZ1JlcXVlc3RDYW5CZUV4ZWN1dGVkSW1tZWRpYXRlbHk9PT0hMSl7dmFyIGU9ODAwO3RpbWVOZXh0VHJhY2tpbmdSZXF1ZXN0Q2FuQmVFeGVjdXRlZEltbWVkaWF0ZWx5PWMrZX1hKCl9ZnVuY3Rpb24gc2VuZFJlcXVlc3QoYSxiLGMpeyFjb25maWdEb05vdFRyYWNrJiZhJiZtYWtlU3VyZVRoZXJlSXNBR2FwQWZ0ZXJGaXJzdFRyYWNraW5nUmVxdWVzdFRvUHJldmVudE11bHRpcGxlVmlzaXRvckNyZWF0aW9uKGZ1bmN0aW9uKCl7XCJQT1NUXCI9PT1jb25maWdSZXF1ZXN0TWV0aG9kP3NlbmRYbWxIdHRwUmVxdWVzdChhLGMpOmdldEltYWdlKGEsYyksc2V0RXhwaXJlRGF0ZVRpbWUoYil9KSxoZWFydEJlYXRTZXRVcD9oZWFydEJlYXRVcCgpOnNldFVwSGVhcnRCZWF0KCl9ZnVuY3Rpb24gY2FuU2VuZEJ1bGtSZXF1ZXN0KGEpe3JldHVybiFjb25maWdEb05vdFRyYWNrJiYoYSYmYS5sZW5ndGgpfWZ1bmN0aW9uIHNlbmRCdWxrUmVxdWVzdChhLGIpe2lmKGNhblNlbmRCdWxrUmVxdWVzdChhKSl7dmFyIGM9J3tcInJlcXVlc3RzXCI6W1wiPycrYS5qb2luKCdcIixcIj8nKSsnXCJdfSc7bWFrZVN1cmVUaGVyZUlzQUdhcEFmdGVyRmlyc3RUcmFja2luZ1JlcXVlc3RUb1ByZXZlbnRNdWx0aXBsZVZpc2l0b3JDcmVhdGlvbihmdW5jdGlvbigpe3NlbmRYbWxIdHRwUmVxdWVzdChjLG51bGwsITEpLHNldEV4cGlyZURhdGVUaW1lKGIpfSl9fWZ1bmN0aW9uIGdldENvb2tpZU5hbWUoYSl7cmV0dXJuIGNvbmZpZ0Nvb2tpZU5hbWVQcmVmaXgrYStcIi5cIitjb25maWdUcmFja2VyU2l0ZUlkK1wiLlwiK2RvbWFpbkhhc2h9ZnVuY3Rpb24gaGFzQ29va2llcygpe2lmKGNvbmZpZ0Nvb2tpZXNEaXNhYmxlZClyZXR1cm5cIjBcIjtpZighaXNEZWZpbmVkKG5hdmlnYXRvckFsaWFzLmNvb2tpZUVuYWJsZWQpKXt2YXIgYT1nZXRDb29raWVOYW1lKFwidGVzdGNvb2tpZVwiKTtyZXR1cm4gc2V0Q29va2llKGEsXCIxXCIpLFwiMVwiPT09Z2V0Q29va2llKGEpP1wiMVwiOlwiMFwifXJldHVybiBuYXZpZ2F0b3JBbGlhcy5jb29raWVFbmFibGVkP1wiMVwiOlwiMFwifWZ1bmN0aW9uIHVwZGF0ZURvbWFpbkhhc2goKXtkb21haW5IYXNoPWhhc2goKGNvbmZpZ0Nvb2tpZURvbWFpbnx8ZG9tYWluQWxpYXMpKyhjb25maWdDb29raWVQYXRofHxcIi9cIikpLnNsaWNlKDAsNCl9ZnVuY3Rpb24gZ2V0Q3VzdG9tVmFyaWFibGVzRnJvbUNvb2tpZSgpe3ZhciBhPWdldENvb2tpZU5hbWUoXCJjdmFyXCIpLGI9Z2V0Q29va2llKGEpO3JldHVybiBiLmxlbmd0aCYmKGI9SlNPTjIucGFyc2UoYiksaXNPYmplY3QoYikpP2I6e319ZnVuY3Rpb24gbG9hZEN1c3RvbVZhcmlhYmxlcygpe2N1c3RvbVZhcmlhYmxlcz09PSExJiYoY3VzdG9tVmFyaWFibGVzPWdldEN1c3RvbVZhcmlhYmxlc0Zyb21Db29raWUoKSl9ZnVuY3Rpb24gZ2VuZXJhdGVSYW5kb21VdWlkKCl7cmV0dXJuIGhhc2goKG5hdmlnYXRvckFsaWFzLnVzZXJBZ2VudHx8XCJcIikrKG5hdmlnYXRvckFsaWFzLnBsYXRmb3JtfHxcIlwiKStKU09OMi5zdHJpbmdpZnkoYnJvd3NlckZlYXR1cmVzKSsobmV3IERhdGUpLmdldFRpbWUoKStNYXRoLnJhbmRvbSgpKS5zbGljZSgwLDE2KX1mdW5jdGlvbiBsb2FkVmlzaXRvcklkQ29va2llKCl7dmFyIGUsZixhPW5ldyBEYXRlLGI9TWF0aC5yb3VuZChhLmdldFRpbWUoKS8xZTMpLGM9Z2V0Q29va2llTmFtZShcImlkXCIpLGQ9Z2V0Q29va2llKGMpO3JldHVybiBkPyhlPWQuc3BsaXQoXCIuXCIpLGUudW5zaGlmdChcIjBcIiksdmlzaXRvclVVSUQubGVuZ3RoJiYoZVsxXT12aXNpdG9yVVVJRCksZSk6KGY9dmlzaXRvclVVSUQubGVuZ3RoP3Zpc2l0b3JVVUlEOlwiMFwiPT09aGFzQ29va2llcygpP1wiXCI6Z2VuZXJhdGVSYW5kb21VdWlkKCksZT1bXCIxXCIsZixiLDAsYixcIlwiLFwiXCJdKX1mdW5jdGlvbiBnZXRWYWx1ZXNGcm9tVmlzaXRvcklkQ29va2llKCl7dmFyIGE9bG9hZFZpc2l0b3JJZENvb2tpZSgpLGI9YVswXSxjPWFbMV0sZD1hWzJdLGU9YVszXSxmPWFbNF0sZz1hWzVdO2lzRGVmaW5lZChhWzZdKXx8KGFbNl09XCJcIik7dmFyIGg9YVs2XTtyZXR1cm57bmV3VmlzaXRvcjpiLHV1aWQ6YyxjcmVhdGVUczpkLHZpc2l0Q291bnQ6ZSxjdXJyZW50VmlzaXRUczpmLGxhc3RWaXNpdFRzOmcsbGFzdEVjb21tZXJjZU9yZGVyVHM6aH19ZnVuY3Rpb24gZ2V0UmVtYWluaW5nVmlzaXRvckNvb2tpZVRpbWVvdXQoKXt2YXIgYT1uZXcgRGF0ZSxiPWEuZ2V0VGltZSgpLGM9Z2V0VmFsdWVzRnJvbVZpc2l0b3JJZENvb2tpZSgpLmNyZWF0ZVRzLGQ9cGFyc2VJbnQoYywxMCksZT0xZTMqZCtjb25maWdWaXNpdG9yQ29va2llVGltZW91dC1iO3JldHVybiBlfWZ1bmN0aW9uIHNldFZpc2l0b3JJZENvb2tpZShhKXtpZihjb25maWdUcmFja2VyU2l0ZUlkKXt2YXIgYj1uZXcgRGF0ZSxjPU1hdGgucm91bmQoYi5nZXRUaW1lKCkvMWUzKTtpc0RlZmluZWQoYSl8fChhPWdldFZhbHVlc0Zyb21WaXNpdG9ySWRDb29raWUoKSk7dmFyIGQ9YS51dWlkK1wiLlwiK2EuY3JlYXRlVHMrXCIuXCIrYS52aXNpdENvdW50K1wiLlwiK2MrXCIuXCIrYS5sYXN0VmlzaXRUcytcIi5cIithLmxhc3RFY29tbWVyY2VPcmRlclRzO3NldENvb2tpZShnZXRDb29raWVOYW1lKFwiaWRcIiksZCxnZXRSZW1haW5pbmdWaXNpdG9yQ29va2llVGltZW91dCgpLGNvbmZpZ0Nvb2tpZVBhdGgsY29uZmlnQ29va2llRG9tYWluKX19ZnVuY3Rpb24gbG9hZFJlZmVycmVyQXR0cmlidXRpb25Db29raWUoKXt2YXIgYT1nZXRDb29raWUoZ2V0Q29va2llTmFtZShcInJlZlwiKSk7aWYoYS5sZW5ndGgpdHJ5e2lmKGE9SlNPTjIucGFyc2UoYSksaXNPYmplY3QoYSkpcmV0dXJuIGF9Y2F0Y2goYSl7fXJldHVybltcIlwiLFwiXCIsMCxcIlwiXX1mdW5jdGlvbiBkZWxldGVDb29raWUoYSxiLGMpe3NldENvb2tpZShhLFwiXCIsLTg2NDAwLGIsYyl9ZnVuY3Rpb24gaXNQb3NzaWJsZVRvU2V0Q29va2llT25Eb21haW4oYSl7dmFyIGI9XCJ0ZXN0dmFsdWVcIjtyZXR1cm4gc2V0Q29va2llKFwidGVzdFwiLGIsMWU0LG51bGwsYSksZ2V0Q29va2llKFwidGVzdFwiKT09PWImJihkZWxldGVDb29raWUoXCJ0ZXN0XCIsbnVsbCxhKSwhMCl9ZnVuY3Rpb24gZGVsZXRlQ29va2llcygpe3ZhciBhPWNvbmZpZ0Nvb2tpZXNEaXNhYmxlZDtjb25maWdDb29raWVzRGlzYWJsZWQ9ITE7dmFyIGMsZCxiPVtcImlkXCIsXCJzZXNcIixcImN2YXJcIixcInJlZlwiXTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWQ9Z2V0Q29va2llTmFtZShiW2NdKSwwIT09Z2V0Q29va2llKGQpJiZkZWxldGVDb29raWUoZCxjb25maWdDb29raWVQYXRoLGNvbmZpZ0Nvb2tpZURvbWFpbik7Y29uZmlnQ29va2llc0Rpc2FibGVkPWF9ZnVuY3Rpb24gc2V0U2l0ZUlkKGEpe2NvbmZpZ1RyYWNrZXJTaXRlSWQ9YSxzZXRWaXNpdG9ySWRDb29raWUoKX1mdW5jdGlvbiBzb3J0T2JqZWN0QnlLZXlzKGEpe2lmKGEmJmlzT2JqZWN0KGEpKXt2YXIgYyxiPVtdO2ZvcihjIGluIGEpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsYykmJmIucHVzaChjKTt2YXIgZD17fTtiLnNvcnQoKTt2YXIgZixlPWIubGVuZ3RoO2ZvcihmPTA7ZjxlO2YrKylkW2JbZl1dPWFbYltmXV07cmV0dXJuIGR9fWZ1bmN0aW9uIHNldFNlc3Npb25Db29raWUoKXtzZXRDb29raWUoZ2V0Q29va2llTmFtZShcInNlc1wiKSxcIipcIixjb25maWdTZXNzaW9uQ29va2llVGltZW91dCxjb25maWdDb29raWVQYXRoLGNvbmZpZ0Nvb2tpZURvbWFpbil9ZnVuY3Rpb24gZ2V0UmVxdWVzdChhLGIsYyxkKXtmdW5jdGlvbiB5KGEsYil7dmFyIGM9SlNPTjIuc3RyaW5naWZ5KGEpO3JldHVybiBjLmxlbmd0aD4yP1wiJlwiK2IrXCI9XCIrZW5jb2RlV3JhcHBlcihjKTpcIlwifXZhciBlLGgsaSxrLGwsdCx1LGY9bmV3IERhdGUsZz1NYXRoLnJvdW5kKGYuZ2V0VGltZSgpLzFlMyksaj0xMDI0LG09Y3VzdG9tVmFyaWFibGVzLG49Z2V0Q29va2llTmFtZShcInNlc1wiKSxvPWdldENvb2tpZU5hbWUoXCJyZWZcIikscD1nZXRDb29raWVOYW1lKFwiY3ZhclwiKSxxPWdldENvb2tpZShuKSxyPWxvYWRSZWZlcnJlckF0dHJpYnV0aW9uQ29va2llKCkscz1jb25maWdDdXN0b21Vcmx8fGxvY2F0aW9uSHJlZkFsaWFzO2lmKGNvbmZpZ0Nvb2tpZXNEaXNhYmxlZCYmZGVsZXRlQ29va2llcygpLGNvbmZpZ0RvTm90VHJhY2spcmV0dXJuXCJcIjt2YXIgdj1nZXRWYWx1ZXNGcm9tVmlzaXRvcklkQ29va2llKCk7aXNEZWZpbmVkKGQpfHwoZD1cIlwiKTt2YXIgdz1kb2N1bWVudEFsaWFzLmNoYXJhY3RlclNldHx8ZG9jdW1lbnRBbGlhcy5jaGFyc2V0O2lmKHcmJlwidXRmLThcIiE9PXcudG9Mb3dlckNhc2UoKXx8KHc9bnVsbCksdD1yWzBdLHU9clsxXSxoPXJbMl0saT1yWzNdLCFxKXt2YXIgeD1jb25maWdTZXNzaW9uQ29va2llVGltZW91dC8xZTM7aWYoKCF2Lmxhc3RWaXNpdFRzfHxnLXYubGFzdFZpc2l0VHM+eCkmJih2LnZpc2l0Q291bnQrKyx2Lmxhc3RWaXNpdFRzPXYuY3VycmVudFZpc2l0VHMpLCFjb25maWdDb252ZXJzaW9uQXR0cmlidXRpb25GaXJzdFJlZmVycmVyfHwhdC5sZW5ndGgpe2ZvcihlIGluIGNvbmZpZ0NhbXBhaWduTmFtZVBhcmFtZXRlcnMpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZ0NhbXBhaWduTmFtZVBhcmFtZXRlcnMsZSkmJih0PWdldFBhcmFtZXRlcihzLGNvbmZpZ0NhbXBhaWduTmFtZVBhcmFtZXRlcnNbZV0pLHQubGVuZ3RoKSlicmVhaztmb3IoZSBpbiBjb25maWdDYW1wYWlnbktleXdvcmRQYXJhbWV0ZXJzKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChjb25maWdDYW1wYWlnbktleXdvcmRQYXJhbWV0ZXJzLGUpJiYodT1nZXRQYXJhbWV0ZXIocyxjb25maWdDYW1wYWlnbktleXdvcmRQYXJhbWV0ZXJzW2VdKSx1Lmxlbmd0aCkpYnJlYWt9az1nZXRIb3N0TmFtZShjb25maWdSZWZlcnJlclVybCksbD1pLmxlbmd0aD9nZXRIb3N0TmFtZShpKTpcIlwiLCFrLmxlbmd0aHx8aXNTaXRlSG9zdE5hbWUoayl8fGNvbmZpZ0NvbnZlcnNpb25BdHRyaWJ1dGlvbkZpcnN0UmVmZXJyZXImJmwubGVuZ3RoJiYhaXNTaXRlSG9zdE5hbWUobCl8fChpPWNvbmZpZ1JlZmVycmVyVXJsKSwoaS5sZW5ndGh8fHQubGVuZ3RoKSYmKGg9ZyxyPVt0LHUsaCxwdXJpZnkoaS5zbGljZSgwLGopKV0sc2V0Q29va2llKG8sSlNPTjIuc3RyaW5naWZ5KHIpLGNvbmZpZ1JlZmVycmFsQ29va2llVGltZW91dCxjb25maWdDb29raWVQYXRoLGNvbmZpZ0Nvb2tpZURvbWFpbikpfWErPVwiJmlkc2l0ZT1cIitjb25maWdUcmFja2VyU2l0ZUlkK1wiJnJlYz0xJnI9XCIrU3RyaW5nKE1hdGgucmFuZG9tKCkpLnNsaWNlKDIsOCkrXCImaD1cIitmLmdldEhvdXJzKCkrXCImbT1cIitmLmdldE1pbnV0ZXMoKStcIiZzPVwiK2YuZ2V0U2Vjb25kcygpK1wiJnVybD1cIitlbmNvZGVXcmFwcGVyKHB1cmlmeShzKSkrKGNvbmZpZ1JlZmVycmVyVXJsLmxlbmd0aD9cIiZ1cmxyZWY9XCIrZW5jb2RlV3JhcHBlcihwdXJpZnkoY29uZmlnUmVmZXJyZXJVcmwpKTpcIlwiKSsoY29uZmlnVXNlcklkJiZjb25maWdVc2VySWQubGVuZ3RoP1wiJnVpZD1cIitlbmNvZGVXcmFwcGVyKGNvbmZpZ1VzZXJJZCk6XCJcIikrXCImX2lkPVwiK3YudXVpZCtcIiZfaWR0cz1cIit2LmNyZWF0ZVRzK1wiJl9pZHZjPVwiK3YudmlzaXRDb3VudCtcIiZfaWRuPVwiK3YubmV3VmlzaXRvcisodC5sZW5ndGg/XCImX3Jjbj1cIitlbmNvZGVXcmFwcGVyKHQpOlwiXCIpKyh1Lmxlbmd0aD9cIiZfcmNrPVwiK2VuY29kZVdyYXBwZXIodSk6XCJcIikrXCImX3JlZnRzPVwiK2grXCImX3ZpZXd0cz1cIit2Lmxhc3RWaXNpdFRzKyhTdHJpbmcodi5sYXN0RWNvbW1lcmNlT3JkZXJUcykubGVuZ3RoP1wiJl9lY3RzPVwiK3YubGFzdEVjb21tZXJjZU9yZGVyVHM6XCJcIikrKFN0cmluZyhpKS5sZW5ndGg/XCImX3JlZj1cIitlbmNvZGVXcmFwcGVyKHB1cmlmeShpLnNsaWNlKDAsaikpKTpcIlwiKSsodz9cIiZjcz1cIitlbmNvZGVXcmFwcGVyKHcpOlwiXCIpK1wiJnNlbmRfaW1hZ2U9MFwiO2ZvcihlIGluIGJyb3dzZXJGZWF0dXJlcylPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYnJvd3NlckZlYXR1cmVzLGUpJiYoYSs9XCImXCIrZStcIj1cIiticm93c2VyRmVhdHVyZXNbZV0pO2I/YSs9XCImZGF0YT1cIitlbmNvZGVXcmFwcGVyKEpTT04yLnN0cmluZ2lmeShiKSk6Y29uZmlnQ3VzdG9tRGF0YSYmKGErPVwiJmRhdGE9XCIrZW5jb2RlV3JhcHBlcihKU09OMi5zdHJpbmdpZnkoY29uZmlnQ3VzdG9tRGF0YSkpKTt2YXIgej1zb3J0T2JqZWN0QnlLZXlzKGN1c3RvbVZhcmlhYmxlc1BhZ2UpLEE9c29ydE9iamVjdEJ5S2V5cyhjdXN0b21WYXJpYWJsZXNFdmVudCk7aWYoYSs9eSh6LFwiY3ZhclwiKSxhKz15KEEsXCJlX2N2YXJcIiksY3VzdG9tVmFyaWFibGVzKXthKz15KGN1c3RvbVZhcmlhYmxlcyxcIl9jdmFyXCIpO2ZvcihlIGluIG0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG0sZSkmJihcIlwiIT09Y3VzdG9tVmFyaWFibGVzW2VdWzBdJiZcIlwiIT09Y3VzdG9tVmFyaWFibGVzW2VdWzFdfHxkZWxldGUgY3VzdG9tVmFyaWFibGVzW2VdKTtjb25maWdTdG9yZUN1c3RvbVZhcmlhYmxlc0luQ29va2llJiZzZXRDb29raWUocCxKU09OMi5zdHJpbmdpZnkoY3VzdG9tVmFyaWFibGVzKSxjb25maWdTZXNzaW9uQ29va2llVGltZW91dCxjb25maWdDb29raWVQYXRoLGNvbmZpZ0Nvb2tpZURvbWFpbil9cmV0dXJuIGNvbmZpZ1BlcmZvcm1hbmNlVHJhY2tpbmdFbmFibGVkJiYoY29uZmlnUGVyZm9ybWFuY2VHZW5lcmF0aW9uVGltZT9hKz1cIiZndF9tcz1cIitjb25maWdQZXJmb3JtYW5jZUdlbmVyYXRpb25UaW1lOnBlcmZvcm1hbmNlQWxpYXMmJnBlcmZvcm1hbmNlQWxpYXMudGltaW5nJiZwZXJmb3JtYW5jZUFsaWFzLnRpbWluZy5yZXF1ZXN0U3RhcnQmJnBlcmZvcm1hbmNlQWxpYXMudGltaW5nLnJlc3BvbnNlRW5kJiYoYSs9XCImZ3RfbXM9XCIrKHBlcmZvcm1hbmNlQWxpYXMudGltaW5nLnJlc3BvbnNlRW5kLXBlcmZvcm1hbmNlQWxpYXMudGltaW5nLnJlcXVlc3RTdGFydCkpKSx2Lmxhc3RFY29tbWVyY2VPcmRlclRzPWlzRGVmaW5lZChkKSYmU3RyaW5nKGQpLmxlbmd0aD9kOnYubGFzdEVjb21tZXJjZU9yZGVyVHMsc2V0VmlzaXRvcklkQ29va2llKHYpLHNldFNlc3Npb25Db29raWUoKSxhKz1leGVjdXRlUGx1Z2luTWV0aG9kKGMpLGNvbmZpZ0FwcGVuZFRvVHJhY2tpbmdVcmwubGVuZ3RoJiYoYSs9XCImXCIrY29uZmlnQXBwZW5kVG9UcmFja2luZ1VybCksaXNGdW5jdGlvbihjb25maWdDdXN0b21SZXF1ZXN0Q29udGVudFByb2Nlc3NpbmcpJiYoYT1jb25maWdDdXN0b21SZXF1ZXN0Q29udGVudFByb2Nlc3NpbmcoYSkpLGF9ZnVuY3Rpb24gbG9nRWNvbW1lcmNlKGEsYixjLGQsZSxmKXt2YXIgaCxrLGc9XCJpZGdvYWw9MFwiLGk9bmV3IERhdGUsaj1bXTtpZihTdHJpbmcoYSkubGVuZ3RoJiYoZys9XCImZWNfaWQ9XCIrZW5jb2RlV3JhcHBlcihhKSxoPU1hdGgucm91bmQoaS5nZXRUaW1lKCkvMWUzKSksZys9XCImcmV2ZW51ZT1cIitiLFN0cmluZyhjKS5sZW5ndGgmJihnKz1cIiZlY19zdD1cIitjKSxTdHJpbmcoZCkubGVuZ3RoJiYoZys9XCImZWNfdHg9XCIrZCksU3RyaW5nKGUpLmxlbmd0aCYmKGcrPVwiJmVjX3NoPVwiK2UpLFN0cmluZyhmKS5sZW5ndGgmJihnKz1cIiZlY19kdD1cIitmKSxlY29tbWVyY2VJdGVtcyl7Zm9yKGsgaW4gZWNvbW1lcmNlSXRlbXMpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGVjb21tZXJjZUl0ZW1zLGspJiYoaXNEZWZpbmVkKGVjb21tZXJjZUl0ZW1zW2tdWzFdKXx8KGVjb21tZXJjZUl0ZW1zW2tdWzFdPVwiXCIpLGlzRGVmaW5lZChlY29tbWVyY2VJdGVtc1trXVsyXSl8fChlY29tbWVyY2VJdGVtc1trXVsyXT1cIlwiKSxpc0RlZmluZWQoZWNvbW1lcmNlSXRlbXNba11bM10pJiYwIT09U3RyaW5nKGVjb21tZXJjZUl0ZW1zW2tdWzNdKS5sZW5ndGh8fChlY29tbWVyY2VJdGVtc1trXVszXT0wKSxpc0RlZmluZWQoZWNvbW1lcmNlSXRlbXNba11bNF0pJiYwIT09U3RyaW5nKGVjb21tZXJjZUl0ZW1zW2tdWzRdKS5sZW5ndGh8fChlY29tbWVyY2VJdGVtc1trXVs0XT0xKSxqLnB1c2goZWNvbW1lcmNlSXRlbXNba10pKTtnKz1cIiZlY19pdGVtcz1cIitlbmNvZGVXcmFwcGVyKEpTT04yLnN0cmluZ2lmeShqKSl9Zz1nZXRSZXF1ZXN0KGcsY29uZmlnQ3VzdG9tRGF0YSxcImVjb21tZXJjZVwiLGgpLHNlbmRSZXF1ZXN0KGcsY29uZmlnVHJhY2tlclBhdXNlKX1mdW5jdGlvbiBsb2dFY29tbWVyY2VPcmRlcihhLGIsYyxkLGUsZil7U3RyaW5nKGEpLmxlbmd0aCYmaXNEZWZpbmVkKGIpJiZsb2dFY29tbWVyY2UoYSxiLGMsZCxlLGYpfWZ1bmN0aW9uIGxvZ0Vjb21tZXJjZUNhcnRVcGRhdGUoYSl7aXNEZWZpbmVkKGEpJiZsb2dFY29tbWVyY2UoXCJcIixhLFwiXCIsXCJcIixcIlwiLFwiXCIpfWZ1bmN0aW9uIGxvZ1BhZ2VWaWV3KGEsYil7dmFyIGQ9KG5ldyBEYXRlLGdldFJlcXVlc3QoXCJhY3Rpb25fbmFtZT1cIitlbmNvZGVXcmFwcGVyKHRpdGxlRml4dXAoYXx8Y29uZmlnVGl0bGUpKSxiLFwibG9nXCIpKTtzZW5kUmVxdWVzdChkLGNvbmZpZ1RyYWNrZXJQYXVzZSl9ZnVuY3Rpb24gZ2V0Q2xhc3Nlc1JlZ0V4cChhLGIpe3ZhciBjLGQ9XCIoXnwgKShwaXdpa1tfLV1cIitiO2lmKGEpZm9yKGM9MDtjPGEubGVuZ3RoO2MrKylkKz1cInxcIithW2NdO3JldHVybiBkKz1cIikoIHwkKVwiLG5ldyBSZWdFeHAoZCl9ZnVuY3Rpb24gc3RhcnRzVXJsV2l0aFRyYWNrZXJVcmwoYSl7cmV0dXJuIGNvbmZpZ1RyYWNrZXJVcmwmJmEmJjA9PT1TdHJpbmcoYSkuaW5kZXhPZihjb25maWdUcmFja2VyVXJsKX1mdW5jdGlvbiBnZXRMaW5rVHlwZShhLGIsYyxkKXtpZihzdGFydHNVcmxXaXRoVHJhY2tlclVybChiKSlyZXR1cm4gMDt2YXIgZT1nZXRDbGFzc2VzUmVnRXhwKGNvbmZpZ0Rvd25sb2FkQ2xhc3NlcyxcImRvd25sb2FkXCIpLGY9Z2V0Q2xhc3Nlc1JlZ0V4cChjb25maWdMaW5rQ2xhc3NlcyxcImxpbmtcIiksZz1uZXcgUmVnRXhwKFwiXFxcXC4oXCIrY29uZmlnRG93bmxvYWRFeHRlbnNpb25zLmpvaW4oXCJ8XCIpK1wiKShbPyYjXXwkKVwiLFwiaVwiKTtyZXR1cm4gZi50ZXN0KGEpP1wibGlua1wiOmR8fGUudGVzdChhKXx8Zy50ZXN0KGIpP1wiZG93bmxvYWRcIjpjPzA6XCJsaW5rXCJ9ZnVuY3Rpb24gZ2V0U291cmNlRWxlbWVudChhKXt2YXIgYjtmb3IoYj1hLnBhcmVudE5vZGU7bnVsbCE9PWImJmlzRGVmaW5lZChiKSYmIXF1ZXJ5LmlzTGlua0VsZW1lbnQoYSk7KWE9YixiPWEucGFyZW50Tm9kZTtyZXR1cm4gYX1mdW5jdGlvbiBnZXRMaW5rSWZTaG91bGRCZVByb2Nlc3NlZChhKXtpZihhPWdldFNvdXJjZUVsZW1lbnQoYSkscXVlcnkuaGFzTm9kZUF0dHJpYnV0ZShhLFwiaHJlZlwiKSYmaXNEZWZpbmVkKGEuaHJlZikpe3ZhciBiPXF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoYSxcImhyZWZcIik7aWYoIXN0YXJ0c1VybFdpdGhUcmFja2VyVXJsKGIpKXt2YXIgYz1hLmhvc3RuYW1lfHxnZXRIb3N0TmFtZShhLmhyZWYpLGQ9Yy50b0xvd2VyQ2FzZSgpLGU9YS5ocmVmLnJlcGxhY2UoYyxkKSxmPW5ldyBSZWdFeHAoXCJeKGphdmFzY3JpcHR8dmJzY3JpcHR8anNjcmlwdHxtb2NoYXxsaXZlc2NyaXB0fGVjbWFzY3JpcHR8bWFpbHRvKTpcIixcImlcIik7aWYoIWYudGVzdChlKSl7dmFyIGc9Z2V0TGlua1R5cGUoYS5jbGFzc05hbWUsZSxpc1NpdGVIb3N0TmFtZShkKSxxdWVyeS5oYXNOb2RlQXR0cmlidXRlKGEsXCJkb3dubG9hZFwiKSk7aWYoZylyZXR1cm57dHlwZTpnLGhyZWY6ZX19fX19ZnVuY3Rpb24gYnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0KGEsYixjLGQpe3ZhciBlPWNvbnRlbnQuYnVpbGRJbnRlcmFjdGlvblJlcXVlc3RQYXJhbXMoYSxiLGMsZCk7aWYoZSlyZXR1cm4gZ2V0UmVxdWVzdChlLG51bGwsXCJjb250ZW50SW50ZXJhY3Rpb25cIil9ZnVuY3Rpb24gYnVpbGRDb250ZW50SW50ZXJhY3Rpb25UcmFja2luZ1JlZGlyZWN0VXJsKGEsYixjLGQsZSl7aWYoaXNEZWZpbmVkKGEpKXtpZihzdGFydHNVcmxXaXRoVHJhY2tlclVybChhKSlyZXR1cm4gYTt2YXIgZj1jb250ZW50LnRvQWJzb2x1dGVVcmwoYSksZz1cInJlZGlyZWN0dXJsPVwiK2VuY29kZVdyYXBwZXIoZikrXCImXCI7Zys9YnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0KGIsYyxkLGV8fGEpO3ZhciBoPVwiJlwiO3JldHVybiBjb25maWdUcmFja2VyVXJsLmluZGV4T2YoXCI/XCIpPDAmJihoPVwiP1wiKSxjb25maWdUcmFja2VyVXJsK2grZ319ZnVuY3Rpb24gaXNOb2RlQXV0aG9yaXplZFRvVHJpZ2dlckludGVyYWN0aW9uKGEsYil7aWYoIWF8fCFiKXJldHVybiExO3ZhciBjPWNvbnRlbnQuZmluZFRhcmdldE5vZGUoYSk7cmV0dXJuIWNvbnRlbnQuc2hvdWxkSWdub3JlSW50ZXJhY3Rpb24oYykmJihjPWNvbnRlbnQuZmluZFRhcmdldE5vZGVOb0RlZmF1bHQoYSksIShjJiYhY29udGFpbnNOb2RlRWxlbWVudChjLGIpKSl9ZnVuY3Rpb24gZ2V0Q29udGVudEludGVyYWN0aW9uVG9SZXF1ZXN0SWZQb3NzaWJsZShhLGIsYyl7aWYoYSl7dmFyIGQ9Y29udGVudC5maW5kUGFyZW50Q29udGVudE5vZGUoYSk7aWYoZCYmaXNOb2RlQXV0aG9yaXplZFRvVHJpZ2dlckludGVyYWN0aW9uKGQsYSkpe3ZhciBlPWNvbnRlbnQuYnVpbGRDb250ZW50QmxvY2soZCk7aWYoZSlyZXR1cm4hZS50YXJnZXQmJmMmJihlLnRhcmdldD1jKSxjb250ZW50LmJ1aWxkSW50ZXJhY3Rpb25SZXF1ZXN0UGFyYW1zKGIsZS5uYW1lLGUucGllY2UsZS50YXJnZXQpfX19ZnVuY3Rpb24gd2FzQ29udGVudEltcHJlc3Npb25BbHJlYWR5VHJhY2tlZChhKXtpZighdHJhY2tlZENvbnRlbnRJbXByZXNzaW9uc3x8IXRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnMubGVuZ3RoKXJldHVybiExO3ZhciBiLGM7Zm9yKGI9MDtiPHRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnMubGVuZ3RoO2IrKylpZihjPXRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnNbYl0sYyYmYy5uYW1lPT09YS5uYW1lJiZjLnBpZWNlPT09YS5waWVjZSYmYy50YXJnZXQ9PT1hLnRhcmdldClyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiByZXBsYWNlSHJlZklmSW50ZXJuYWxMaW5rKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWNvbnRlbnQuZmluZFRhcmdldE5vZGUoYSk7aWYoIWJ8fGNvbnRlbnQuc2hvdWxkSWdub3JlSW50ZXJhY3Rpb24oYikpcmV0dXJuITE7dmFyIGM9Z2V0TGlua0lmU2hvdWxkQmVQcm9jZXNzZWQoYik7aWYobGlua1RyYWNraW5nRW5hYmxlZCYmYyYmYy50eXBlKXJldHVybiExO2lmKHF1ZXJ5LmlzTGlua0VsZW1lbnQoYikmJnF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoYixcImhyZWZcIikpe3ZhciBkPVN0cmluZyhxdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGIsXCJocmVmXCIpKTtpZigwPT09ZC5pbmRleE9mKFwiI1wiKSlyZXR1cm4hMTtpZihzdGFydHNVcmxXaXRoVHJhY2tlclVybChkKSlyZXR1cm4hMDtpZighY29udGVudC5pc1VybFRvQ3VycmVudERvbWFpbihkKSlyZXR1cm4hMTt2YXIgZT1jb250ZW50LmJ1aWxkQ29udGVudEJsb2NrKGEpO2lmKCFlKXJldHVybjt2YXIgZj1lLm5hbWUsZz1lLnBpZWNlLGg9ZS50YXJnZXQ7cXVlcnkuaGFzTm9kZUF0dHJpYnV0ZVdpdGhWYWx1ZShiLGNvbnRlbnQuQ09OVEVOVF9UQVJHRVRfQVRUUikmJiFiLndhc0NvbnRlbnRUYXJnZXRBdHRyUmVwbGFjZWR8fChiLndhc0NvbnRlbnRUYXJnZXRBdHRyUmVwbGFjZWQ9ITAsaD1jb250ZW50LnRvQWJzb2x1dGVVcmwoZCkscXVlcnkuc2V0QW55QXR0cmlidXRlKGIsY29udGVudC5DT05URU5UX1RBUkdFVF9BVFRSLGgpKTt2YXIgaT1idWlsZENvbnRlbnRJbnRlcmFjdGlvblRyYWNraW5nUmVkaXJlY3RVcmwoZCxcImNsaWNrXCIsZixnLGgpO3JldHVybiBjb250ZW50LnNldEhyZWZBdHRyaWJ1dGUoYixpKSwhMH1yZXR1cm4hMX1mdW5jdGlvbiByZXBsYWNlSHJlZnNJZkludGVybmFsTGluayhhKXtpZihhJiZhLmxlbmd0aCl7dmFyIGI7Zm9yKGI9MDtiPGEubGVuZ3RoO2IrKylyZXBsYWNlSHJlZklmSW50ZXJuYWxMaW5rKGFbYl0pfX1mdW5jdGlvbiB0cmFja0NvbnRlbnRJbXByZXNzaW9uQ2xpY2tJbnRlcmFjdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYil7aWYoYSl7dmFyIGQsYz1jb250ZW50LmZpbmRQYXJlbnRDb250ZW50Tm9kZShhKTtpZihiJiYoZD1iLnRhcmdldHx8Yi5zcmNFbGVtZW50KSxkfHwoZD1hKSxpc05vZGVBdXRob3JpemVkVG9UcmlnZ2VySW50ZXJhY3Rpb24oYyxkKSl7aWYoc2V0RXhwaXJlRGF0ZVRpbWUoY29uZmlnVHJhY2tlclBhdXNlKSxxdWVyeS5pc0xpbmtFbGVtZW50KGEpJiZxdWVyeS5oYXNOb2RlQXR0cmlidXRlV2l0aFZhbHVlKGEsXCJocmVmXCIpJiZxdWVyeS5oYXNOb2RlQXR0cmlidXRlV2l0aFZhbHVlKGEsY29udGVudC5DT05URU5UX1RBUkdFVF9BVFRSKSl7dmFyIGU9cXVlcnkuZ2V0QXR0cmlidXRlVmFsdWVGcm9tTm9kZShhLFwiaHJlZlwiKTshc3RhcnRzVXJsV2l0aFRyYWNrZXJVcmwoZSkmJmEud2FzQ29udGVudFRhcmdldEF0dHJSZXBsYWNlZCYmcXVlcnkuc2V0QW55QXR0cmlidXRlKGEsY29udGVudC5DT05URU5UX1RBUkdFVF9BVFRSLFwiXCIpfXZhciBmPWdldExpbmtJZlNob3VsZEJlUHJvY2Vzc2VkKGEpO2lmKGxpbmtUcmFja2luZ0luc3RhbGxlZCYmZiYmZi50eXBlKXJldHVybiBmLnR5cGU7aWYocmVwbGFjZUhyZWZJZkludGVybmFsTGluayhjKSlyZXR1cm5cImhyZWZcIjt2YXIgZz1jb250ZW50LmJ1aWxkQ29udGVudEJsb2NrKGMpO2lmKGcpe3ZhciBoPWcubmFtZSxpPWcucGllY2Usaj1nLnRhcmdldCxrPWJ1aWxkQ29udGVudEludGVyYWN0aW9uUmVxdWVzdChcImNsaWNrXCIsaCxpLGopO3JldHVybiBzZW5kUmVxdWVzdChrLGNvbmZpZ1RyYWNrZXJQYXVzZSksa319fX19ZnVuY3Rpb24gc2V0dXBJbnRlcmFjdGlvbnNUcmFja2luZyhhKXtpZihhJiZhLmxlbmd0aCl7dmFyIGIsYztmb3IoYj0wO2I8YS5sZW5ndGg7YisrKWM9Y29udGVudC5maW5kVGFyZ2V0Tm9kZShhW2JdKSxjJiYhYy5jb250ZW50SW50ZXJhY3Rpb25UcmFja2luZ1NldHVwRG9uZSYmKGMuY29udGVudEludGVyYWN0aW9uVHJhY2tpbmdTZXR1cERvbmU9ITAsYWRkRXZlbnRMaXN0ZW5lcihjLFwiY2xpY2tcIix0cmFja0NvbnRlbnRJbXByZXNzaW9uQ2xpY2tJbnRlcmFjdGlvbihjKSkpfX1mdW5jdGlvbiBidWlsZENvbnRlbnRJbXByZXNzaW9uc1JlcXVlc3RzKGEsYil7aWYoIWF8fCFhLmxlbmd0aClyZXR1cm5bXTt2YXIgYyxkO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspd2FzQ29udGVudEltcHJlc3Npb25BbHJlYWR5VHJhY2tlZChhW2NdKT8oYS5zcGxpY2UoYywxKSxjLS0pOnRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnMucHVzaChhW2NdKTtpZighYXx8IWEubGVuZ3RoKXJldHVybltdO3JlcGxhY2VIcmVmc0lmSW50ZXJuYWxMaW5rKGIpLHNldHVwSW50ZXJhY3Rpb25zVHJhY2tpbmcoYik7dmFyIGU9W107Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKylkPWdldFJlcXVlc3QoY29udGVudC5idWlsZEltcHJlc3Npb25SZXF1ZXN0UGFyYW1zKGFbY10ubmFtZSxhW2NdLnBpZWNlLGFbY10udGFyZ2V0KSx2b2lkIDAsXCJjb250ZW50SW1wcmVzc2lvbnNcIiksZS5wdXNoKGQpO3JldHVybiBlfWZ1bmN0aW9uIGdldENvbnRlbnRJbXByZXNzaW9uc1JlcXVlc3RzRnJvbU5vZGVzKGEpe3ZhciBiPWNvbnRlbnQuY29sbGVjdENvbnRlbnQoYSk7cmV0dXJuIGJ1aWxkQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHMoYixhKX1mdW5jdGlvbiBnZXRDdXJyZW50bHlWaXNpYmxlQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHNJZk5vdFRyYWNrZWRZZXQoYSl7aWYoIWF8fCFhLmxlbmd0aClyZXR1cm5bXTt2YXIgYjtmb3IoYj0wO2I8YS5sZW5ndGg7YisrKWNvbnRlbnQuaXNOb2RlVmlzaWJsZShhW2JdKXx8KGEuc3BsaWNlKGIsMSksYi0tKTtyZXR1cm4gYSYmYS5sZW5ndGg/Z2V0Q29udGVudEltcHJlc3Npb25zUmVxdWVzdHNGcm9tTm9kZXMoYSk6W119ZnVuY3Rpb24gYnVpbGRDb250ZW50SW1wcmVzc2lvblJlcXVlc3QoYSxiLGMpe3ZhciBkPWNvbnRlbnQuYnVpbGRJbXByZXNzaW9uUmVxdWVzdFBhcmFtcyhhLGIsYyk7cmV0dXJuIGdldFJlcXVlc3QoZCxudWxsLFwiY29udGVudEltcHJlc3Npb25cIil9ZnVuY3Rpb24gYnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0Tm9kZShhLGIpe2lmKGEpe3ZhciBjPWNvbnRlbnQuZmluZFBhcmVudENvbnRlbnROb2RlKGEpLGQ9Y29udGVudC5idWlsZENvbnRlbnRCbG9jayhjKTtpZihkKXJldHVybiBifHwoYj1cIlVua25vd25cIiksYnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0KGIsZC5uYW1lLGQucGllY2UsZC50YXJnZXQpfX1mdW5jdGlvbiBidWlsZEV2ZW50UmVxdWVzdChhLGIsYyxkKXtyZXR1cm5cImVfYz1cIitlbmNvZGVXcmFwcGVyKGEpK1wiJmVfYT1cIitlbmNvZGVXcmFwcGVyKGIpKyhpc0RlZmluZWQoYyk/XCImZV9uPVwiK2VuY29kZVdyYXBwZXIoYyk6XCJcIikrKGlzRGVmaW5lZChkKT9cIiZlX3Y9XCIrZW5jb2RlV3JhcHBlcihkKTpcIlwiKTtcbn1mdW5jdGlvbiBsb2dFdmVudChhLGIsYyxkLGUpe2lmKDA9PT1TdHJpbmcoYSkubGVuZ3RofHwwPT09U3RyaW5nKGIpLmxlbmd0aClyZXR1cm4hMTt2YXIgZj1nZXRSZXF1ZXN0KGJ1aWxkRXZlbnRSZXF1ZXN0KGEsYixjLGQpLGUsXCJldmVudFwiKTtzZW5kUmVxdWVzdChmLGNvbmZpZ1RyYWNrZXJQYXVzZSl9ZnVuY3Rpb24gbG9nU2l0ZVNlYXJjaChhLGIsYyxkKXt2YXIgZT1nZXRSZXF1ZXN0KFwic2VhcmNoPVwiK2VuY29kZVdyYXBwZXIoYSkrKGI/XCImc2VhcmNoX2NhdD1cIitlbmNvZGVXcmFwcGVyKGIpOlwiXCIpKyhpc0RlZmluZWQoYyk/XCImc2VhcmNoX2NvdW50PVwiK2M6XCJcIiksZCxcInNpdGVzZWFyY2hcIik7c2VuZFJlcXVlc3QoZSxjb25maWdUcmFja2VyUGF1c2UpfWZ1bmN0aW9uIGxvZ0dvYWwoYSxiLGMpe3ZhciBkPWdldFJlcXVlc3QoXCJpZGdvYWw9XCIrYSsoYj9cIiZyZXZlbnVlPVwiK2I6XCJcIiksYyxcImdvYWxcIik7c2VuZFJlcXVlc3QoZCxjb25maWdUcmFja2VyUGF1c2UpfWZ1bmN0aW9uIGxvZ0xpbmsoYSxiLGMsZCxlKXt2YXIgZj1iK1wiPVwiK2VuY29kZVdyYXBwZXIocHVyaWZ5KGEpKSxnPWdldENvbnRlbnRJbnRlcmFjdGlvblRvUmVxdWVzdElmUG9zc2libGUoZSxcImNsaWNrXCIsYSk7ZyYmKGYrPVwiJlwiK2cpO3ZhciBoPWdldFJlcXVlc3QoZixjLFwibGlua1wiKTtzZW5kUmVxdWVzdChoLGQ/MDpjb25maWdUcmFja2VyUGF1c2UsZCl9ZnVuY3Rpb24gcHJlZml4UHJvcGVydHlOYW1lKGEsYil7cmV0dXJuXCJcIiE9PWE/YStiLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Iuc2xpY2UoMSk6Yn1mdW5jdGlvbiB0cmFja0NhbGxiYWNrKGEpe3ZhciBiLGMsZSxkPVtcIlwiLFwid2Via2l0XCIsXCJtc1wiLFwibW96XCJdO2lmKCFjb25maWdDb3VudFByZVJlbmRlcmVkKWZvcihjPTA7YzxkLmxlbmd0aDtjKyspaWYoZT1kW2NdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkb2N1bWVudEFsaWFzLHByZWZpeFByb3BlcnR5TmFtZShlLFwiaGlkZGVuXCIpKSl7XCJwcmVyZW5kZXJcIj09PWRvY3VtZW50QWxpYXNbcHJlZml4UHJvcGVydHlOYW1lKGUsXCJ2aXNpYmlsaXR5U3RhdGVcIildJiYoYj0hMCk7YnJlYWt9cmV0dXJuIGI/dm9pZCBhZGRFdmVudExpc3RlbmVyKGRvY3VtZW50QWxpYXMsZStcInZpc2liaWxpdHljaGFuZ2VcIixmdW5jdGlvbiBiKCl7ZG9jdW1lbnRBbGlhcy5yZW1vdmVFdmVudExpc3RlbmVyKGUrXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsYiwhMSksYSgpfSk6dm9pZCBhKCl9ZnVuY3Rpb24gdHJhY2tDYWxsYmFja09uTG9hZChhKXtcImNvbXBsZXRlXCI9PT1kb2N1bWVudEFsaWFzLnJlYWR5U3RhdGU/YSgpOndpbmRvd0FsaWFzLmFkZEV2ZW50TGlzdGVuZXI/d2luZG93QWxpYXMuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixhKTp3aW5kb3dBbGlhcy5hdHRhY2hFdmVudCYmd2luZG93QWxpYXMuYXR0YWNoRXZlbnQoXCJvbkxvYWRcIixhKX1mdW5jdGlvbiB0cmFja0NhbGxiYWNrT25SZWFkeShhKXt2YXIgYj0hMTtiPWRvY3VtZW50QWxpYXMuYXR0YWNoRXZlbnQ/XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnRBbGlhcy5yZWFkeVN0YXRlOlwibG9hZGluZ1wiIT09ZG9jdW1lbnRBbGlhcy5yZWFkeVN0YXRlLGI/YSgpOmRvY3VtZW50QWxpYXMuYWRkRXZlbnRMaXN0ZW5lcj9kb2N1bWVudEFsaWFzLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsYSk6ZG9jdW1lbnRBbGlhcy5hdHRhY2hFdmVudCYmZG9jdW1lbnRBbGlhcy5hdHRhY2hFdmVudChcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLGEpfWZ1bmN0aW9uIHByb2Nlc3NDbGljayhhKXt2YXIgYj1nZXRMaW5rSWZTaG91bGRCZVByb2Nlc3NlZChhKTtiJiZiLnR5cGUmJihiLmhyZWY9c2FmZURlY29kZVdyYXBwZXIoYi5ocmVmKSxsb2dMaW5rKGIuaHJlZixiLnR5cGUsdm9pZCAwLG51bGwsYSkpfWZ1bmN0aW9uIGlzSUU4b3JPbGRlcigpe3JldHVybiBkb2N1bWVudEFsaWFzLmFsbCYmIWRvY3VtZW50QWxpYXMuYWRkRXZlbnRMaXN0ZW5lcn1mdW5jdGlvbiBnZXRLZXlDb2RlRnJvbUV2ZW50KGEpe3ZhciBiPWEud2hpY2gsYz10eXBlb2YgYS5idXR0b247cmV0dXJuIGJ8fFwidW5kZWZpbmVkXCI9PT1jfHwoaXNJRThvck9sZGVyKCk/MSZhLmJ1dHRvbj9iPTE6MiZhLmJ1dHRvbj9iPTM6NCZhLmJ1dHRvbiYmKGI9Mik6MD09PWEuYnV0dG9ufHxcIjBcIj09PWEuYnV0dG9uP2I9MToxJmEuYnV0dG9uP2I9MjoyJmEuYnV0dG9uJiYoYj0zKSksYn1mdW5jdGlvbiBnZXROYW1lT2ZDbGlja2VkQnV0dG9uKGEpe3N3aXRjaChnZXRLZXlDb2RlRnJvbUV2ZW50KGEpKXtjYXNlIDE6cmV0dXJuXCJsZWZ0XCI7Y2FzZSAyOnJldHVyblwibWlkZGxlXCI7Y2FzZSAzOnJldHVyblwicmlnaHRcIn19ZnVuY3Rpb24gZ2V0VGFyZ2V0RWxlbWVudEZyb21FdmVudChhKXtyZXR1cm4gYS50YXJnZXR8fGEuc3JjRWxlbWVudH1mdW5jdGlvbiBjbGlja0hhbmRsZXIoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe2I9Ynx8d2luZG93QWxpYXMuZXZlbnQ7dmFyIGM9Z2V0TmFtZU9mQ2xpY2tlZEJ1dHRvbihiKSxkPWdldFRhcmdldEVsZW1lbnRGcm9tRXZlbnQoYik7aWYoXCJjbGlja1wiPT09Yi50eXBlKXt2YXIgZT0hMTthJiZcIm1pZGRsZVwiPT09YyYmKGU9ITApLGQmJiFlJiZwcm9jZXNzQ2xpY2soZCl9ZWxzZVwibW91c2Vkb3duXCI9PT1iLnR5cGU/XCJtaWRkbGVcIj09PWMmJmQ/KGxhc3RCdXR0b249YyxsYXN0VGFyZ2V0PWQpOmxhc3RCdXR0b249bGFzdFRhcmdldD1udWxsOlwibW91c2V1cFwiPT09Yi50eXBlPyhjPT09bGFzdEJ1dHRvbiYmZD09PWxhc3RUYXJnZXQmJnByb2Nlc3NDbGljayhkKSxsYXN0QnV0dG9uPWxhc3RUYXJnZXQ9bnVsbCk6XCJjb250ZXh0bWVudVwiPT09Yi50eXBlJiZwcm9jZXNzQ2xpY2soZCl9fWZ1bmN0aW9uIGFkZENsaWNrTGlzdGVuZXIoYSxiKXthZGRFdmVudExpc3RlbmVyKGEsXCJjbGlja1wiLGNsaWNrSGFuZGxlcihiKSwhMSksYiYmKGFkZEV2ZW50TGlzdGVuZXIoYSxcIm1vdXNldXBcIixjbGlja0hhbmRsZXIoYiksITEpLGFkZEV2ZW50TGlzdGVuZXIoYSxcIm1vdXNlZG93blwiLGNsaWNrSGFuZGxlcihiKSwhMSksYWRkRXZlbnRMaXN0ZW5lcihhLFwiY29udGV4dG1lbnVcIixjbGlja0hhbmRsZXIoYiksITEpKX1mdW5jdGlvbiBhZGRDbGlja0xpc3RlbmVycyhhKXtpZighbGlua1RyYWNraW5nSW5zdGFsbGVkKXtsaW5rVHJhY2tpbmdJbnN0YWxsZWQ9ITA7dmFyIGIsYz1nZXRDbGFzc2VzUmVnRXhwKGNvbmZpZ0lnbm9yZUNsYXNzZXMsXCJpZ25vcmVcIiksZD1kb2N1bWVudEFsaWFzLmxpbmtzO2lmKGQpZm9yKGI9MDtiPGQubGVuZ3RoO2IrKyljLnRlc3QoZFtiXS5jbGFzc05hbWUpfHxhZGRDbGlja0xpc3RlbmVyKGRbYl0sYSl9fWZ1bmN0aW9uIGVuYWJsZVRyYWNrT25seVZpc2libGVDb250ZW50KGEsYixjKXtmdW5jdGlvbiBnKCl7ZD0hMH1pZihpc1RyYWNrT25seVZpc2libGVDb250ZW50RW5hYmxlZClyZXR1cm4hMDtpc1RyYWNrT25seVZpc2libGVDb250ZW50RW5hYmxlZD0hMDt2YXIgZSxmLGQ9ITE7dHJhY2tDYWxsYmFja09uTG9hZChmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2lzVHJhY2tPbmx5VmlzaWJsZUNvbnRlbnRFbmFibGVkJiYoZD0hMSxjLnRyYWNrVmlzaWJsZUNvbnRlbnRJbXByZXNzaW9ucygpLGgoYSkpfSxhKX1mdW5jdGlvbiBpKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpc1RyYWNrT25seVZpc2libGVDb250ZW50RW5hYmxlZCYmKGQmJihkPSExLGMudHJhY2tWaXNpYmxlQ29udGVudEltcHJlc3Npb25zKCkpLGkoYSkpfSxhKX1pZihhKXtmb3IoZT1bXCJzY3JvbGxcIixcInJlc2l6ZVwiXSxmPTA7ZjxlLmxlbmd0aDtmKyspZG9jdW1lbnRBbGlhcy5hZGRFdmVudExpc3RlbmVyP2RvY3VtZW50QWxpYXMuYWRkRXZlbnRMaXN0ZW5lcihlW2ZdLGcpOndpbmRvd0FsaWFzLmF0dGFjaEV2ZW50KFwib25cIitlW2ZdLGcpO2koMTAwKX1iJiZiPjAmJihiPXBhcnNlSW50KGIsMTApLGgoYikpfSl9ZnVuY3Rpb24gZGV0ZWN0QnJvd3NlckZlYXR1cmVzKCl7dmFyIGEsYixjPXtwZGY6XCJhcHBsaWNhdGlvbi9wZGZcIixxdDpcInZpZGVvL3F1aWNrdGltZVwiLHJlYWxwOlwiYXVkaW8veC1wbi1yZWFsYXVkaW8tcGx1Z2luXCIsd21hOlwiYXBwbGljYXRpb24veC1tcGxheWVyMlwiLGRpcjpcImFwcGxpY2F0aW9uL3gtZGlyZWN0b3JcIixmbGE6XCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiLGphdmE6XCJhcHBsaWNhdGlvbi94LWphdmEtdm1cIixnZWFyczpcImFwcGxpY2F0aW9uL3gtZ29vZ2xlZ2VhcnNcIixhZzpcImFwcGxpY2F0aW9uL3gtc2lsdmVybGlnaHRcIn0sZD13aW5kb3dBbGlhcy5kZXZpY2VQaXhlbFJhdGlvfHwxO2lmKCFuZXcgUmVnRXhwKFwiTVNJRVwiKS50ZXN0KG5hdmlnYXRvckFsaWFzLnVzZXJBZ2VudCkpe2lmKG5hdmlnYXRvckFsaWFzLm1pbWVUeXBlcyYmbmF2aWdhdG9yQWxpYXMubWltZVR5cGVzLmxlbmd0aClmb3IoYSBpbiBjKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChjLGEpJiYoYj1uYXZpZ2F0b3JBbGlhcy5taW1lVHlwZXNbY1thXV0sYnJvd3NlckZlYXR1cmVzW2FdPWImJmIuZW5hYmxlZFBsdWdpbj9cIjFcIjpcIjBcIik7XCJ1bmtub3duXCIhPXR5cGVvZiBuYXZpZ2F0b3IuamF2YUVuYWJsZWQmJmlzRGVmaW5lZChuYXZpZ2F0b3JBbGlhcy5qYXZhRW5hYmxlZCkmJm5hdmlnYXRvckFsaWFzLmphdmFFbmFibGVkKCkmJihicm93c2VyRmVhdHVyZXMuamF2YT1cIjFcIiksaXNGdW5jdGlvbih3aW5kb3dBbGlhcy5HZWFyc0ZhY3RvcnkpJiYoYnJvd3NlckZlYXR1cmVzLmdlYXJzPVwiMVwiKSxicm93c2VyRmVhdHVyZXMuY29va2llPWhhc0Nvb2tpZXMoKX1icm93c2VyRmVhdHVyZXMucmVzPXNjcmVlbkFsaWFzLndpZHRoKmQrXCJ4XCIrc2NyZWVuQWxpYXMuaGVpZ2h0KmR9ZnVuY3Rpb24gcmVnaXN0ZXJIb29rKGhvb2tOYW1lLHVzZXJIb29rKXt2YXIgaG9va09iaj1udWxsO2lmKGlzU3RyaW5nKGhvb2tOYW1lKSYmIWlzRGVmaW5lZChyZWdpc3RlcmVkSG9va3NbaG9va05hbWVdKSYmdXNlckhvb2spe2lmKGlzT2JqZWN0KHVzZXJIb29rKSlob29rT2JqPXVzZXJIb29rO2Vsc2UgaWYoaXNTdHJpbmcodXNlckhvb2spKXRyeXtldmFsKFwiaG9va09iaiA9XCIrdXNlckhvb2spfWNhdGNoKGEpe31yZWdpc3RlcmVkSG9va3NbaG9va05hbWVdPWhvb2tPYmp9cmV0dXJuIGhvb2tPYmp9dmFyIHJlZ2lzdGVyZWRIb29rcz17fSxsb2NhdGlvbkFycmF5PXVybEZpeHVwKGRvY3VtZW50QWxpYXMuZG9tYWluLHdpbmRvd0FsaWFzLmxvY2F0aW9uLmhyZWYsZ2V0UmVmZXJyZXIoKSksZG9tYWluQWxpYXM9ZG9tYWluRml4dXAobG9jYXRpb25BcnJheVswXSksbG9jYXRpb25IcmVmQWxpYXM9c2FmZURlY29kZVdyYXBwZXIobG9jYXRpb25BcnJheVsxXSksY29uZmlnUmVmZXJyZXJVcmw9c2FmZURlY29kZVdyYXBwZXIobG9jYXRpb25BcnJheVsyXSksZW5hYmxlSlNFcnJvclRyYWNraW5nPSExLGRlZmF1bHRSZXF1ZXN0TWV0aG9kPVwiR0VUXCIsY29uZmlnUmVxdWVzdE1ldGhvZD1kZWZhdWx0UmVxdWVzdE1ldGhvZCxkZWZhdWx0UmVxdWVzdENvbnRlbnRUeXBlPVwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsY29uZmlnUmVxdWVzdENvbnRlbnRUeXBlPWRlZmF1bHRSZXF1ZXN0Q29udGVudFR5cGUsY29uZmlnVHJhY2tlclVybD10cmFja2VyVXJsfHxcIlwiLGNvbmZpZ0FwaVVybD1cIlwiLGNvbmZpZ0FwcGVuZFRvVHJhY2tpbmdVcmw9XCJcIixjb25maWdUcmFja2VyU2l0ZUlkPXNpdGVJZHx8XCJcIixjb25maWdVc2VySWQ9XCJcIix2aXNpdG9yVVVJRD1cIlwiLGNvbmZpZ0N1c3RvbVVybCxjb25maWdUaXRsZT1kb2N1bWVudEFsaWFzLnRpdGxlLGNvbmZpZ0Rvd25sb2FkRXh0ZW5zaW9ucz1bXCI3elwiLFwiYWFjXCIsXCJhcGtcIixcImFyY1wiLFwiYXJqXCIsXCJhc2ZcIixcImFzeFwiLFwiYXZpXCIsXCJhenczXCIsXCJiaW5cIixcImNzdlwiLFwiZGViXCIsXCJkbWdcIixcImRvY1wiLFwiZG9jeFwiLFwiZXB1YlwiLFwiZXhlXCIsXCJmbHZcIixcImdpZlwiLFwiZ3pcIixcImd6aXBcIixcImhxeFwiLFwiaWJvb2tzXCIsXCJqYXJcIixcImpwZ1wiLFwianBlZ1wiLFwianNcIixcIm1vYmlcIixcIm1wMlwiLFwibXAzXCIsXCJtcDRcIixcIm1wZ1wiLFwibXBlZ1wiLFwibW92XCIsXCJtb3ZpZVwiLFwibXNpXCIsXCJtc3BcIixcIm9kYlwiLFwib2RmXCIsXCJvZGdcIixcIm9kc1wiLFwib2R0XCIsXCJvZ2dcIixcIm9ndlwiLFwicGRmXCIsXCJwaHBzXCIsXCJwbmdcIixcInBwdFwiLFwicHB0eFwiLFwicXRcIixcInF0bVwiLFwicmFcIixcInJhbVwiLFwicmFyXCIsXCJycG1cIixcInNlYVwiLFwic2l0XCIsXCJ0YXJcIixcInRielwiLFwidGJ6MlwiLFwiYnpcIixcImJ6MlwiLFwidGd6XCIsXCJ0b3JyZW50XCIsXCJ0eHRcIixcIndhdlwiLFwid21hXCIsXCJ3bXZcIixcIndwZFwiLFwieGxzXCIsXCJ4bHN4XCIsXCJ4bWxcIixcInpcIixcInppcFwiXSxjb25maWdIb3N0c0FsaWFzPVtkb21haW5BbGlhc10sY29uZmlnSWdub3JlQ2xhc3Nlcz1bXSxjb25maWdEb3dubG9hZENsYXNzZXM9W10sY29uZmlnTGlua0NsYXNzZXM9W10sY29uZmlnVHJhY2tlclBhdXNlPTUwMCxjb25maWdNaW5pbXVtVmlzaXRUaW1lLGNvbmZpZ0hlYXJ0QmVhdERlbGF5LGhlYXJ0QmVhdFBpbmdJZkFjdGl2aXR5QWxpYXMsY29uZmlnRGlzY2FyZEhhc2hUYWcsY29uZmlnQ3VzdG9tRGF0YSxjb25maWdDYW1wYWlnbk5hbWVQYXJhbWV0ZXJzPVtcInBrX2NhbXBhaWduXCIsXCJwaXdpa19jYW1wYWlnblwiLFwidXRtX2NhbXBhaWduXCIsXCJ1dG1fc291cmNlXCIsXCJ1dG1fbWVkaXVtXCJdLGNvbmZpZ0NhbXBhaWduS2V5d29yZFBhcmFtZXRlcnM9W1wicGtfa3dkXCIsXCJwaXdpa19rd2RcIixcInV0bV90ZXJtXCJdLGNvbmZpZ0Nvb2tpZU5hbWVQcmVmaXg9XCJfcGtfXCIsY29uZmlnQ29va2llRG9tYWluLGNvbmZpZ0Nvb2tpZVBhdGgsY29uZmlnQ29va2llc0Rpc2FibGVkPSExLGNvbmZpZ0RvTm90VHJhY2ssY29uZmlnQ291bnRQcmVSZW5kZXJlZCxjb25maWdDb252ZXJzaW9uQXR0cmlidXRpb25GaXJzdFJlZmVycmVyLGNvbmZpZ1Zpc2l0b3JDb29raWVUaW1lb3V0PTMzOTU1MmU1LGNvbmZpZ1Nlc3Npb25Db29raWVUaW1lb3V0PTE4ZTUsY29uZmlnUmVmZXJyYWxDb29raWVUaW1lb3V0PTE1NzY4ZTYsY29uZmlnUGVyZm9ybWFuY2VUcmFja2luZ0VuYWJsZWQ9ITAsY29uZmlnUGVyZm9ybWFuY2VHZW5lcmF0aW9uVGltZT0wLGNvbmZpZ1N0b3JlQ3VzdG9tVmFyaWFibGVzSW5Db29raWU9ITEsY3VzdG9tVmFyaWFibGVzPSExLGNvbmZpZ0N1c3RvbVJlcXVlc3RDb250ZW50UHJvY2Vzc2luZyxjdXN0b21WYXJpYWJsZXNQYWdlPXt9LGN1c3RvbVZhcmlhYmxlc0V2ZW50PXt9LGN1c3RvbVZhcmlhYmxlTWF4aW11bUxlbmd0aD0yMDAsZWNvbW1lcmNlSXRlbXM9e30sYnJvd3NlckZlYXR1cmVzPXt9LHRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnM9W10saXNUcmFja09ubHlWaXNpYmxlQ29udGVudEVuYWJsZWQ9ITEsdGltZU5leHRUcmFja2luZ1JlcXVlc3RDYW5CZUV4ZWN1dGVkSW1tZWRpYXRlbHk9ITEsbGlua1RyYWNraW5nSW5zdGFsbGVkPSExLGxpbmtUcmFja2luZ0VuYWJsZWQ9ITEsaGVhcnRCZWF0U2V0VXA9ITEsbGFzdFRyYWNrZXJSZXF1ZXN0VGltZT1udWxsLGhlYXJ0QmVhdFRpbWVvdXQsbGFzdEJ1dHRvbixsYXN0VGFyZ2V0LGhhc2g9c2hhMSxkb21haW5IYXNoO3JldHVybiBoZWFydEJlYXRQaW5nSWZBY3Rpdml0eUFsaWFzPWZ1bmN0aW9uKCl7dmFyIGI9bmV3IERhdGU7aWYobGFzdFRyYWNrZXJSZXF1ZXN0VGltZStjb25maWdIZWFydEJlYXREZWxheTw9Yi5nZXRUaW1lKCkpe3ZhciBjPWdldFJlcXVlc3QoXCJwaW5nPTFcIixudWxsLFwicGluZ1wiKTtyZXR1cm4gc2VuZFJlcXVlc3QoYyxjb25maWdUcmFja2VyUGF1c2UpLCEwfXJldHVybiExfSxkZXRlY3RCcm93c2VyRmVhdHVyZXMoKSx1cGRhdGVEb21haW5IYXNoKCksc2V0VmlzaXRvcklkQ29va2llKCksZXhlY3V0ZVBsdWdpbk1ldGhvZChcInJ1blwiLHJlZ2lzdGVySG9vaykse2hvb2s6cmVnaXN0ZXJlZEhvb2tzLGdldEhvb2s6ZnVuY3Rpb24oYSl7cmV0dXJuIHJlZ2lzdGVyZWRIb29rc1thXX0sZ2V0UXVlcnk6ZnVuY3Rpb24oKXtyZXR1cm4gcXVlcnl9LGdldENvbnRlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29udGVudH0sYnVpbGRDb250ZW50SW1wcmVzc2lvblJlcXVlc3Q6YnVpbGRDb250ZW50SW1wcmVzc2lvblJlcXVlc3QsYnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0OmJ1aWxkQ29udGVudEludGVyYWN0aW9uUmVxdWVzdCxidWlsZENvbnRlbnRJbnRlcmFjdGlvblJlcXVlc3ROb2RlOmJ1aWxkQ29udGVudEludGVyYWN0aW9uUmVxdWVzdE5vZGUsYnVpbGRDb250ZW50SW50ZXJhY3Rpb25UcmFja2luZ1JlZGlyZWN0VXJsOmJ1aWxkQ29udGVudEludGVyYWN0aW9uVHJhY2tpbmdSZWRpcmVjdFVybCxnZXRDb250ZW50SW1wcmVzc2lvbnNSZXF1ZXN0c0Zyb21Ob2RlczpnZXRDb250ZW50SW1wcmVzc2lvbnNSZXF1ZXN0c0Zyb21Ob2RlcyxnZXRDdXJyZW50bHlWaXNpYmxlQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHNJZk5vdFRyYWNrZWRZZXQ6Z2V0Q3VycmVudGx5VmlzaWJsZUNvbnRlbnRJbXByZXNzaW9uc1JlcXVlc3RzSWZOb3RUcmFja2VkWWV0LHRyYWNrQ2FsbGJhY2tPbkxvYWQ6dHJhY2tDYWxsYmFja09uTG9hZCx0cmFja0NhbGxiYWNrT25SZWFkeTp0cmFja0NhbGxiYWNrT25SZWFkeSxidWlsZENvbnRlbnRJbXByZXNzaW9uc1JlcXVlc3RzOmJ1aWxkQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHMsd2FzQ29udGVudEltcHJlc3Npb25BbHJlYWR5VHJhY2tlZDp3YXNDb250ZW50SW1wcmVzc2lvbkFscmVhZHlUcmFja2VkLGFwcGVuZENvbnRlbnRJbnRlcmFjdGlvblRvUmVxdWVzdElmUG9zc2libGU6Z2V0Q29udGVudEludGVyYWN0aW9uVG9SZXF1ZXN0SWZQb3NzaWJsZSxzZXR1cEludGVyYWN0aW9uc1RyYWNraW5nOnNldHVwSW50ZXJhY3Rpb25zVHJhY2tpbmcsdHJhY2tDb250ZW50SW1wcmVzc2lvbkNsaWNrSW50ZXJhY3Rpb246dHJhY2tDb250ZW50SW1wcmVzc2lvbkNsaWNrSW50ZXJhY3Rpb24saW50ZXJuYWxJc05vZGVWaXNpYmxlOmlzVmlzaWJsZSxpc05vZGVBdXRob3JpemVkVG9UcmlnZ2VySW50ZXJhY3Rpb246aXNOb2RlQXV0aG9yaXplZFRvVHJpZ2dlckludGVyYWN0aW9uLHJlcGxhY2VIcmVmSWZJbnRlcm5hbExpbms6cmVwbGFjZUhyZWZJZkludGVybmFsTGluayxnZXRDb25maWdEb3dubG9hZEV4dGVuc2lvbnM6ZnVuY3Rpb24oKXtyZXR1cm4gY29uZmlnRG93bmxvYWRFeHRlbnNpb25zfSxlbmFibGVUcmFja09ubHlWaXNpYmxlQ29udGVudDpmdW5jdGlvbihhLGIpe3JldHVybiBlbmFibGVUcmFja09ubHlWaXNpYmxlQ29udGVudChhLGIsdGhpcyl9LGNsZWFyVHJhY2tlZENvbnRlbnRJbXByZXNzaW9uczpmdW5jdGlvbigpe3RyYWNrZWRDb250ZW50SW1wcmVzc2lvbnM9W119LGdldFRyYWNrZWRDb250ZW50SW1wcmVzc2lvbnM6ZnVuY3Rpb24oKXtyZXR1cm4gdHJhY2tlZENvbnRlbnRJbXByZXNzaW9uc30sY2xlYXJFbmFibGVUcmFja09ubHlWaXNpYmxlQ29udGVudDpmdW5jdGlvbigpe2lzVHJhY2tPbmx5VmlzaWJsZUNvbnRlbnRFbmFibGVkPSExfSxkaXNhYmxlTGlua1RyYWNraW5nOmZ1bmN0aW9uKCl7bGlua1RyYWNraW5nSW5zdGFsbGVkPSExLGxpbmtUcmFja2luZ0VuYWJsZWQ9ITF9LGdldENvbmZpZ1Zpc2l0b3JDb29raWVUaW1lb3V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbmZpZ1Zpc2l0b3JDb29raWVUaW1lb3V0fSxnZXRSZW1haW5pbmdWaXNpdG9yQ29va2llVGltZW91dDpnZXRSZW1haW5pbmdWaXNpdG9yQ29va2llVGltZW91dCxnZXRWaXNpdG9ySWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZ2V0VmFsdWVzRnJvbVZpc2l0b3JJZENvb2tpZSgpLnV1aWR9LGdldFZpc2l0b3JJbmZvOmZ1bmN0aW9uKCl7cmV0dXJuIGxvYWRWaXNpdG9ySWRDb29raWUoKX0sZ2V0QXR0cmlidXRpb25JbmZvOmZ1bmN0aW9uKCl7cmV0dXJuIGxvYWRSZWZlcnJlckF0dHJpYnV0aW9uQ29va2llKCl9LGdldEF0dHJpYnV0aW9uQ2FtcGFpZ25OYW1lOmZ1bmN0aW9uKCl7cmV0dXJuIGxvYWRSZWZlcnJlckF0dHJpYnV0aW9uQ29va2llKClbMF19LGdldEF0dHJpYnV0aW9uQ2FtcGFpZ25LZXl3b3JkOmZ1bmN0aW9uKCl7cmV0dXJuIGxvYWRSZWZlcnJlckF0dHJpYnV0aW9uQ29va2llKClbMV19LGdldEF0dHJpYnV0aW9uUmVmZXJyZXJUaW1lc3RhbXA6ZnVuY3Rpb24oKXtyZXR1cm4gbG9hZFJlZmVycmVyQXR0cmlidXRpb25Db29raWUoKVsyXX0sZ2V0QXR0cmlidXRpb25SZWZlcnJlclVybDpmdW5jdGlvbigpe3JldHVybiBsb2FkUmVmZXJyZXJBdHRyaWJ1dGlvbkNvb2tpZSgpWzNdfSxzZXRUcmFja2VyVXJsOmZ1bmN0aW9uKGEpe2NvbmZpZ1RyYWNrZXJVcmw9YX0sZ2V0VHJhY2tlclVybDpmdW5jdGlvbigpe3JldHVybiBjb25maWdUcmFja2VyVXJsfSxnZXRTaXRlSWQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uZmlnVHJhY2tlclNpdGVJZH0sc2V0U2l0ZUlkOmZ1bmN0aW9uKGEpe3NldFNpdGVJZChhKX0sc2V0VXNlcklkOmZ1bmN0aW9uKGEpe2lzRGVmaW5lZChhKSYmYS5sZW5ndGgmJihjb25maWdVc2VySWQ9YSx2aXNpdG9yVVVJRD1oYXNoKGNvbmZpZ1VzZXJJZCkuc3Vic3RyKDAsMTYpKX0sZ2V0VXNlcklkOmZ1bmN0aW9uKCl7cmV0dXJuIGNvbmZpZ1VzZXJJZH0sc2V0Q3VzdG9tRGF0YTpmdW5jdGlvbihhLGIpe2lzT2JqZWN0KGEpP2NvbmZpZ0N1c3RvbURhdGE9YTooY29uZmlnQ3VzdG9tRGF0YXx8KGNvbmZpZ0N1c3RvbURhdGE9e30pLGNvbmZpZ0N1c3RvbURhdGFbYV09Yil9LGdldEN1c3RvbURhdGE6ZnVuY3Rpb24oKXtyZXR1cm4gY29uZmlnQ3VzdG9tRGF0YX0sc2V0Q3VzdG9tUmVxdWVzdFByb2Nlc3Npbmc6ZnVuY3Rpb24oYSl7Y29uZmlnQ3VzdG9tUmVxdWVzdENvbnRlbnRQcm9jZXNzaW5nPWF9LGFwcGVuZFRvVHJhY2tpbmdVcmw6ZnVuY3Rpb24oYSl7Y29uZmlnQXBwZW5kVG9UcmFja2luZ1VybD1hfSxnZXRSZXF1ZXN0OmZ1bmN0aW9uKGEpe3JldHVybiBnZXRSZXF1ZXN0KGEpfSxhZGRQbHVnaW46ZnVuY3Rpb24oYSxiKXtwbHVnaW5zW2FdPWJ9LHNldEN1c3RvbVZhcmlhYmxlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lzRGVmaW5lZChkKXx8KGQ9XCJ2aXNpdFwiKSxpc0RlZmluZWQoYikmJihpc0RlZmluZWQoYyl8fChjPVwiXCIpLGE+MCYmKGI9aXNTdHJpbmcoYik/YjpTdHJpbmcoYiksYz1pc1N0cmluZyhjKT9jOlN0cmluZyhjKSxlPVtiLnNsaWNlKDAsY3VzdG9tVmFyaWFibGVNYXhpbXVtTGVuZ3RoKSxjLnNsaWNlKDAsY3VzdG9tVmFyaWFibGVNYXhpbXVtTGVuZ3RoKV0sXCJ2aXNpdFwiPT09ZHx8Mj09PWQ/KGxvYWRDdXN0b21WYXJpYWJsZXMoKSxjdXN0b21WYXJpYWJsZXNbYV09ZSk6XCJwYWdlXCI9PT1kfHwzPT09ZD9jdXN0b21WYXJpYWJsZXNQYWdlW2FdPWU6XCJldmVudFwiPT09ZCYmKGN1c3RvbVZhcmlhYmxlc0V2ZW50W2FdPWUpKSl9LGdldEN1c3RvbVZhcmlhYmxlOmZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuIGlzRGVmaW5lZChiKXx8KGI9XCJ2aXNpdFwiKSxcInBhZ2VcIj09PWJ8fDM9PT1iP2M9Y3VzdG9tVmFyaWFibGVzUGFnZVthXTpcImV2ZW50XCI9PT1iP2M9Y3VzdG9tVmFyaWFibGVzRXZlbnRbYV06XCJ2aXNpdFwiIT09YiYmMiE9PWJ8fChsb2FkQ3VzdG9tVmFyaWFibGVzKCksYz1jdXN0b21WYXJpYWJsZXNbYV0pLCEoIWlzRGVmaW5lZChjKXx8YyYmXCJcIj09PWNbMF0pJiZjfSxkZWxldGVDdXN0b21WYXJpYWJsZTpmdW5jdGlvbihhLGIpe3RoaXMuZ2V0Q3VzdG9tVmFyaWFibGUoYSxiKSYmdGhpcy5zZXRDdXN0b21WYXJpYWJsZShhLFwiXCIsXCJcIixiKX0sc3RvcmVDdXN0b21WYXJpYWJsZXNJbkNvb2tpZTpmdW5jdGlvbigpe2NvbmZpZ1N0b3JlQ3VzdG9tVmFyaWFibGVzSW5Db29raWU9ITB9LHNldExpbmtUcmFja2luZ1RpbWVyOmZ1bmN0aW9uKGEpe2NvbmZpZ1RyYWNrZXJQYXVzZT1hfSxzZXREb3dubG9hZEV4dGVuc2lvbnM6ZnVuY3Rpb24oYSl7aXNTdHJpbmcoYSkmJihhPWEuc3BsaXQoXCJ8XCIpKSxjb25maWdEb3dubG9hZEV4dGVuc2lvbnM9YX0sYWRkRG93bmxvYWRFeHRlbnNpb25zOmZ1bmN0aW9uKGEpe3ZhciBiO2Zvcihpc1N0cmluZyhhKSYmKGE9YS5zcGxpdChcInxcIikpLGI9MDtiPGEubGVuZ3RoO2IrKyljb25maWdEb3dubG9hZEV4dGVuc2lvbnMucHVzaChhW2JdKX0scmVtb3ZlRG93bmxvYWRFeHRlbnNpb25zOmZ1bmN0aW9uKGEpe3ZhciBiLGM9W107Zm9yKGlzU3RyaW5nKGEpJiYoYT1hLnNwbGl0KFwifFwiKSksYj0wO2I8Y29uZmlnRG93bmxvYWRFeHRlbnNpb25zLmxlbmd0aDtiKyspaW5kZXhPZkFycmF5KGEsY29uZmlnRG93bmxvYWRFeHRlbnNpb25zW2JdKT09PS0xJiZjLnB1c2goY29uZmlnRG93bmxvYWRFeHRlbnNpb25zW2JdKTtjb25maWdEb3dubG9hZEV4dGVuc2lvbnM9Y30sc2V0RG9tYWluczpmdW5jdGlvbihhKXtjb25maWdIb3N0c0FsaWFzPWlzU3RyaW5nKGEpP1thXTphLGNvbmZpZ0hvc3RzQWxpYXMucHVzaChkb21haW5BbGlhcyl9LHNldElnbm9yZUNsYXNzZXM6ZnVuY3Rpb24oYSl7Y29uZmlnSWdub3JlQ2xhc3Nlcz1pc1N0cmluZyhhKT9bYV06YX0sc2V0UmVxdWVzdE1ldGhvZDpmdW5jdGlvbihhKXtjb25maWdSZXF1ZXN0TWV0aG9kPWF8fGRlZmF1bHRSZXF1ZXN0TWV0aG9kfSxzZXRSZXF1ZXN0Q29udGVudFR5cGU6ZnVuY3Rpb24oYSl7Y29uZmlnUmVxdWVzdENvbnRlbnRUeXBlPWF8fGRlZmF1bHRSZXF1ZXN0Q29udGVudFR5cGV9LHNldFJlZmVycmVyVXJsOmZ1bmN0aW9uKGEpe2NvbmZpZ1JlZmVycmVyVXJsPWF9LHNldEN1c3RvbVVybDpmdW5jdGlvbihhKXtjb25maWdDdXN0b21Vcmw9cmVzb2x2ZVJlbGF0aXZlUmVmZXJlbmNlKGxvY2F0aW9uSHJlZkFsaWFzLGEpfSxzZXREb2N1bWVudFRpdGxlOmZ1bmN0aW9uKGEpe2NvbmZpZ1RpdGxlPWF9LHNldEFQSVVybDpmdW5jdGlvbihhKXtjb25maWdBcGlVcmw9YX0sc2V0RG93bmxvYWRDbGFzc2VzOmZ1bmN0aW9uKGEpe2NvbmZpZ0Rvd25sb2FkQ2xhc3Nlcz1pc1N0cmluZyhhKT9bYV06YX0sc2V0TGlua0NsYXNzZXM6ZnVuY3Rpb24oYSl7Y29uZmlnTGlua0NsYXNzZXM9aXNTdHJpbmcoYSk/W2FdOmF9LHNldENhbXBhaWduTmFtZUtleTpmdW5jdGlvbihhKXtjb25maWdDYW1wYWlnbk5hbWVQYXJhbWV0ZXJzPWlzU3RyaW5nKGEpP1thXTphfSxzZXRDYW1wYWlnbktleXdvcmRLZXk6ZnVuY3Rpb24oYSl7Y29uZmlnQ2FtcGFpZ25LZXl3b3JkUGFyYW1ldGVycz1pc1N0cmluZyhhKT9bYV06YX0sZGlzY2FyZEhhc2hUYWc6ZnVuY3Rpb24oYSl7Y29uZmlnRGlzY2FyZEhhc2hUYWc9YX0sc2V0Q29va2llTmFtZVByZWZpeDpmdW5jdGlvbihhKXtjb25maWdDb29raWVOYW1lUHJlZml4PWEsY3VzdG9tVmFyaWFibGVzPWdldEN1c3RvbVZhcmlhYmxlc0Zyb21Db29raWUoKX0sc2V0Q29va2llRG9tYWluOmZ1bmN0aW9uKGEpe3ZhciBiPWRvbWFpbkZpeHVwKGEpO2lzUG9zc2libGVUb1NldENvb2tpZU9uRG9tYWluKGIpJiYoY29uZmlnQ29va2llRG9tYWluPWIsdXBkYXRlRG9tYWluSGFzaCgpKX0sc2V0Q29va2llUGF0aDpmdW5jdGlvbihhKXtjb25maWdDb29raWVQYXRoPWEsdXBkYXRlRG9tYWluSGFzaCgpfSxzZXRWaXNpdG9yQ29va2llVGltZW91dDpmdW5jdGlvbihhKXtjb25maWdWaXNpdG9yQ29va2llVGltZW91dD0xZTMqYX0sc2V0U2Vzc2lvbkNvb2tpZVRpbWVvdXQ6ZnVuY3Rpb24oYSl7Y29uZmlnU2Vzc2lvbkNvb2tpZVRpbWVvdXQ9MWUzKmF9LHNldFJlZmVycmFsQ29va2llVGltZW91dDpmdW5jdGlvbihhKXtjb25maWdSZWZlcnJhbENvb2tpZVRpbWVvdXQ9MWUzKmF9LHNldENvbnZlcnNpb25BdHRyaWJ1dGlvbkZpcnN0UmVmZXJyZXI6ZnVuY3Rpb24oYSl7Y29uZmlnQ29udmVyc2lvbkF0dHJpYnV0aW9uRmlyc3RSZWZlcnJlcj1hfSxkaXNhYmxlQ29va2llczpmdW5jdGlvbigpe2NvbmZpZ0Nvb2tpZXNEaXNhYmxlZD0hMCxicm93c2VyRmVhdHVyZXMuY29va2llPVwiMFwiLGNvbmZpZ1RyYWNrZXJTaXRlSWQmJmRlbGV0ZUNvb2tpZXMoKX0sZGVsZXRlQ29va2llczpmdW5jdGlvbigpe2RlbGV0ZUNvb2tpZXMoKX0sc2V0RG9Ob3RUcmFjazpmdW5jdGlvbihhKXt2YXIgYj1uYXZpZ2F0b3JBbGlhcy5kb05vdFRyYWNrfHxuYXZpZ2F0b3JBbGlhcy5tc0RvTm90VHJhY2s7Y29uZmlnRG9Ob3RUcmFjaz1hJiYoXCJ5ZXNcIj09PWJ8fFwiMVwiPT09YiksY29uZmlnRG9Ob3RUcmFjayYmdGhpcy5kaXNhYmxlQ29va2llcygpfSxhZGRMaXN0ZW5lcjpmdW5jdGlvbihhLGIpe2FkZENsaWNrTGlzdGVuZXIoYSxiKX0sZW5hYmxlTGlua1RyYWNraW5nOmZ1bmN0aW9uKGEpe2xpbmtUcmFja2luZ0VuYWJsZWQ9ITAsaGFzTG9hZGVkP2FkZENsaWNrTGlzdGVuZXJzKGEpOnJlZ2lzdGVyZWRPbkxvYWRIYW5kbGVycy5wdXNoKGZ1bmN0aW9uKCl7YWRkQ2xpY2tMaXN0ZW5lcnMoYSl9KX0sZW5hYmxlSlNFcnJvclRyYWNraW5nOmZ1bmN0aW9uKCl7aWYoIWVuYWJsZUpTRXJyb3JUcmFja2luZyl7ZW5hYmxlSlNFcnJvclRyYWNraW5nPSEwO3ZhciBhPXdpbmRvd0FsaWFzLm9uZXJyb3I7d2luZG93QWxpYXMub25lcnJvcj1mdW5jdGlvbihiLGMsZCxlLGYpe3JldHVybiB0cmFja0NhbGxiYWNrKGZ1bmN0aW9uKCl7dmFyIGE9XCJKYXZhU2NyaXB0IEVycm9yc1wiLGY9YytcIjpcIitkO2UmJihmKz1cIjpcIitlKSxsb2dFdmVudChhLGYsYil9KSwhIWEmJmEoYixjLGQsZSxmKX19fSxkaXNhYmxlUGVyZm9ybWFuY2VUcmFja2luZzpmdW5jdGlvbigpe2NvbmZpZ1BlcmZvcm1hbmNlVHJhY2tpbmdFbmFibGVkPSExfSxzZXRHZW5lcmF0aW9uVGltZU1zOmZ1bmN0aW9uKGEpe2NvbmZpZ1BlcmZvcm1hbmNlR2VuZXJhdGlvblRpbWU9cGFyc2VJbnQoYSwxMCl9LGVuYWJsZUhlYXJ0QmVhdFRpbWVyOmZ1bmN0aW9uKGEpe2E9TWF0aC5tYXgoYSwxKSxjb25maWdIZWFydEJlYXREZWxheT0xZTMqKGF8fDE1KSxudWxsIT09bGFzdFRyYWNrZXJSZXF1ZXN0VGltZSYmc2V0VXBIZWFydEJlYXQoKX0sZGlzYWJsZUhlYXJ0QmVhdFRpbWVyOmZ1bmN0aW9uKCl7aGVhcnRCZWF0RG93bigpLGNvbmZpZ0hlYXJ0QmVhdERlbGF5PW51bGwsd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLGhlYXJ0QmVhdE9uRm9jdXMpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiYmx1clwiLGhlYXJ0QmVhdE9uQmx1cil9LGtpbGxGcmFtZTpmdW5jdGlvbigpe3dpbmRvd0FsaWFzLmxvY2F0aW9uIT09d2luZG93QWxpYXMudG9wLmxvY2F0aW9uJiYod2luZG93QWxpYXMudG9wLmxvY2F0aW9uPXdpbmRvd0FsaWFzLmxvY2F0aW9uKX0scmVkaXJlY3RGaWxlOmZ1bmN0aW9uKGEpe1wiZmlsZTpcIj09PXdpbmRvd0FsaWFzLmxvY2F0aW9uLnByb3RvY29sJiYod2luZG93QWxpYXMubG9jYXRpb249YSl9LHNldENvdW50UHJlUmVuZGVyZWQ6ZnVuY3Rpb24oYSl7Y29uZmlnQ291bnRQcmVSZW5kZXJlZD1hfSx0cmFja0dvYWw6ZnVuY3Rpb24oYSxiLGMpe3RyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXtsb2dHb2FsKGEsYixjKX0pfSx0cmFja0xpbms6ZnVuY3Rpb24oYSxiLGMsZCl7dHJhY2tDYWxsYmFjayhmdW5jdGlvbigpe2xvZ0xpbmsoYSxiLGMsZCl9KX0sdHJhY2tQYWdlVmlldzpmdW5jdGlvbihhLGIpe3RyYWNrZWRDb250ZW50SW1wcmVzc2lvbnM9W10sdHJhY2tDYWxsYmFjayhpc092ZXJsYXlTZXNzaW9uKGNvbmZpZ1RyYWNrZXJTaXRlSWQpP2Z1bmN0aW9uKCl7aW5qZWN0T3ZlcmxheVNjcmlwdHMoY29uZmlnVHJhY2tlclVybCxjb25maWdBcGlVcmwsY29uZmlnVHJhY2tlclNpdGVJZCl9OmZ1bmN0aW9uKCl7bG9nUGFnZVZpZXcoYSxiKX0pfSx0cmFja0FsbENvbnRlbnRJbXByZXNzaW9uczpmdW5jdGlvbigpe2lzT3ZlcmxheVNlc3Npb24oY29uZmlnVHJhY2tlclNpdGVJZCl8fHRyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXt0cmFja0NhbGxiYWNrT25SZWFkeShmdW5jdGlvbigpe3ZhciBhPWNvbnRlbnQuZmluZENvbnRlbnROb2RlcygpLGI9Z2V0Q29udGVudEltcHJlc3Npb25zUmVxdWVzdHNGcm9tTm9kZXMoYSk7c2VuZEJ1bGtSZXF1ZXN0KGIsY29uZmlnVHJhY2tlclBhdXNlKX0pfSl9LHRyYWNrVmlzaWJsZUNvbnRlbnRJbXByZXNzaW9uczpmdW5jdGlvbihhLGIpe2lzT3ZlcmxheVNlc3Npb24oY29uZmlnVHJhY2tlclNpdGVJZCl8fChpc0RlZmluZWQoYSl8fChhPSEwKSxpc0RlZmluZWQoYil8fChiPTc1MCksZW5hYmxlVHJhY2tPbmx5VmlzaWJsZUNvbnRlbnQoYSxiLHRoaXMpLHRyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXt0cmFja0NhbGxiYWNrT25Mb2FkKGZ1bmN0aW9uKCl7dmFyIGE9Y29udGVudC5maW5kQ29udGVudE5vZGVzKCksYj1nZXRDdXJyZW50bHlWaXNpYmxlQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHNJZk5vdFRyYWNrZWRZZXQoYSk7c2VuZEJ1bGtSZXF1ZXN0KGIsY29uZmlnVHJhY2tlclBhdXNlKX0pfSkpfSx0cmFja0NvbnRlbnRJbXByZXNzaW9uOmZ1bmN0aW9uKGEsYixjKXtpc092ZXJsYXlTZXNzaW9uKGNvbmZpZ1RyYWNrZXJTaXRlSWQpfHxhJiYoYj1ifHxcIlVua25vd25cIix0cmFja0NhbGxiYWNrKGZ1bmN0aW9uKCl7dmFyIGQ9YnVpbGRDb250ZW50SW1wcmVzc2lvblJlcXVlc3QoYSxiLGMpO3NlbmRSZXF1ZXN0KGQsY29uZmlnVHJhY2tlclBhdXNlKX0pKX0sdHJhY2tDb250ZW50SW1wcmVzc2lvbnNXaXRoaW5Ob2RlOmZ1bmN0aW9uKGEpeyFpc092ZXJsYXlTZXNzaW9uKGNvbmZpZ1RyYWNrZXJTaXRlSWQpJiZhJiZ0cmFja0NhbGxiYWNrKGZ1bmN0aW9uKCl7aXNUcmFja09ubHlWaXNpYmxlQ29udGVudEVuYWJsZWQ/dHJhY2tDYWxsYmFja09uTG9hZChmdW5jdGlvbigpe3ZhciBiPWNvbnRlbnQuZmluZENvbnRlbnROb2Rlc1dpdGhpbk5vZGUoYSksYz1nZXRDdXJyZW50bHlWaXNpYmxlQ29udGVudEltcHJlc3Npb25zUmVxdWVzdHNJZk5vdFRyYWNrZWRZZXQoYik7c2VuZEJ1bGtSZXF1ZXN0KGMsY29uZmlnVHJhY2tlclBhdXNlKX0pOnRyYWNrQ2FsbGJhY2tPblJlYWR5KGZ1bmN0aW9uKCl7dmFyIGI9Y29udGVudC5maW5kQ29udGVudE5vZGVzV2l0aGluTm9kZShhKSxjPWdldENvbnRlbnRJbXByZXNzaW9uc1JlcXVlc3RzRnJvbU5vZGVzKGIpO3NlbmRCdWxrUmVxdWVzdChjLGNvbmZpZ1RyYWNrZXJQYXVzZSl9KX0pfSx0cmFja0NvbnRlbnRJbnRlcmFjdGlvbjpmdW5jdGlvbihhLGIsYyxkKXtpc092ZXJsYXlTZXNzaW9uKGNvbmZpZ1RyYWNrZXJTaXRlSWQpfHxhJiZiJiYoYz1jfHxcIlVua25vd25cIix0cmFja0NhbGxiYWNrKGZ1bmN0aW9uKCl7dmFyIGU9YnVpbGRDb250ZW50SW50ZXJhY3Rpb25SZXF1ZXN0KGEsYixjLGQpO3NlbmRSZXF1ZXN0KGUsY29uZmlnVHJhY2tlclBhdXNlKX0pKX0sdHJhY2tDb250ZW50SW50ZXJhY3Rpb25Ob2RlOmZ1bmN0aW9uKGEsYil7IWlzT3ZlcmxheVNlc3Npb24oY29uZmlnVHJhY2tlclNpdGVJZCkmJmEmJnRyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXt2YXIgYz1idWlsZENvbnRlbnRJbnRlcmFjdGlvblJlcXVlc3ROb2RlKGEsYik7c2VuZFJlcXVlc3QoYyxjb25maWdUcmFja2VyUGF1c2UpfSl9LGxvZ0FsbENvbnRlbnRCbG9ja3NPblBhZ2U6ZnVuY3Rpb24oKXt2YXIgYT1jb250ZW50LmZpbmRDb250ZW50Tm9kZXMoKSxiPWNvbnRlbnQuY29sbGVjdENvbnRlbnQoYSk7dm9pZCAwIT09Y29uc29sZSYmY29uc29sZSYmY29uc29sZS5sb2cmJmNvbnNvbGUubG9nKGIpfSx0cmFja0V2ZW50OmZ1bmN0aW9uKGEsYixjLGQpe3RyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXtsb2dFdmVudChhLGIsYyxkKX0pfSx0cmFja1NpdGVTZWFyY2g6ZnVuY3Rpb24oYSxiLGMpe3RyYWNrQ2FsbGJhY2soZnVuY3Rpb24oKXtsb2dTaXRlU2VhcmNoKGEsYixjKX0pfSxzZXRFY29tbWVyY2VWaWV3OmZ1bmN0aW9uKGEsYixjLGQpe2lzRGVmaW5lZChjKSYmYy5sZW5ndGg/YyBpbnN0YW5jZW9mIEFycmF5JiYoYz1KU09OMi5zdHJpbmdpZnkoYykpOmM9XCJcIixjdXN0b21WYXJpYWJsZXNQYWdlWzVdPVtcIl9wa2NcIixjXSxpc0RlZmluZWQoZCkmJlN0cmluZyhkKS5sZW5ndGgmJihjdXN0b21WYXJpYWJsZXNQYWdlWzJdPVtcIl9wa3BcIixkXSksKGlzRGVmaW5lZChhKSYmYS5sZW5ndGh8fGlzRGVmaW5lZChiKSYmYi5sZW5ndGgpJiYoaXNEZWZpbmVkKGEpJiZhLmxlbmd0aCYmKGN1c3RvbVZhcmlhYmxlc1BhZ2VbM109W1wiX3Brc1wiLGFdKSxpc0RlZmluZWQoYikmJmIubGVuZ3RofHwoYj1cIlwiKSxjdXN0b21WYXJpYWJsZXNQYWdlWzRdPVtcIl9wa25cIixiXSl9LGFkZEVjb21tZXJjZUl0ZW06ZnVuY3Rpb24oYSxiLGMsZCxlKXthLmxlbmd0aCYmKGVjb21tZXJjZUl0ZW1zW2FdPVthLGIsYyxkLGVdKX0sdHJhY2tFY29tbWVyY2VPcmRlcjpmdW5jdGlvbihhLGIsYyxkLGUsZil7bG9nRWNvbW1lcmNlT3JkZXIoYSxiLGMsZCxlLGYpfSx0cmFja0Vjb21tZXJjZUNhcnRVcGRhdGU6ZnVuY3Rpb24oYSl7bG9nRWNvbW1lcmNlQ2FydFVwZGF0ZShhKX19fWZ1bmN0aW9uIFRyYWNrZXJQcm94eSgpe3JldHVybntwdXNoOmFwcGx5fX1mdW5jdGlvbiBhcHBseU1ldGhvZHNJbk9yZGVyKGEsYil7dmFyIGQsZSxjPXt9O2ZvcihkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBmPWJbZF07Zm9yKGNbZl09MSxlPTA7ZTxhLmxlbmd0aDtlKyspaWYoYVtlXSYmYVtlXVswXSl7dmFyIGc9YVtlXVswXTtmPT09ZyYmKGFwcGx5KGFbZV0pLGRlbGV0ZSBhW2VdLGNbZ10+MSYmdm9pZCAwIT09Y29uc29sZSYmY29uc29sZSYmY29uc29sZS5lcnJvciYmY29uc29sZS5lcnJvcihcIlRoZSBtZXRob2QgXCIrZysnIGlzIHJlZ2lzdGVyZWQgbW9yZSB0aGFuIG9uY2UgaW4gXCJwYXFcIiB2YXJpYWJsZS4gT25seSB0aGUgbGFzdCBjYWxsIGhhcyBhbiBlZmZlY3QuIFBsZWFzZSBoYXZlIGEgbG9vayBhdCB0aGUgbXVsdGlwbGUgUGl3aWsgdHJhY2tlcnMgZG9jdW1lbnRhdGlvbjogaHR0cDovL2RldmVsb3Blci5waXdpay5vcmcvZ3VpZGVzL3RyYWNraW5nLWphdmFzY3JpcHQtZ3VpZGUjbXVsdGlwbGUtcGl3aWstdHJhY2tlcnMnKSxjW2ddKyspfX1yZXR1cm4gYX12YXIgZXhwaXJlRGF0ZVRpbWUscGx1Z2lucz17fSxkb2N1bWVudEFsaWFzPWRvY3VtZW50LG5hdmlnYXRvckFsaWFzPW5hdmlnYXRvcixzY3JlZW5BbGlhcz1zY3JlZW4sd2luZG93QWxpYXM9d2luZG93LHBlcmZvcm1hbmNlQWxpYXM9d2luZG93QWxpYXMucGVyZm9ybWFuY2V8fHdpbmRvd0FsaWFzLm1velBlcmZvcm1hbmNlfHx3aW5kb3dBbGlhcy5tc1BlcmZvcm1hbmNlfHx3aW5kb3dBbGlhcy53ZWJraXRQZXJmb3JtYW5jZSxoYXNMb2FkZWQ9ITEscmVnaXN0ZXJlZE9uTG9hZEhhbmRsZXJzPVtdLGVuY29kZVdyYXBwZXI9d2luZG93QWxpYXMuZW5jb2RlVVJJQ29tcG9uZW50LGRlY29kZVdyYXBwZXI9d2luZG93QWxpYXMuZGVjb2RlVVJJQ29tcG9uZW50LHVybGRlY29kZT11bmVzY2FwZSxhc3luY1RyYWNrZXIsaXRlcmF0b3IsUGl3aWsscXVlcnk9e2h0bWxDb2xsZWN0aW9uVG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYyxiPVtdO2lmKCFhfHwhYS5sZW5ndGgpcmV0dXJuIGI7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyliLnB1c2goYVtjXSk7cmV0dXJuIGJ9LGZpbmQ6ZnVuY3Rpb24oYSl7aWYoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGx8fCFhKXJldHVybltdO3ZhciBiPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYSk7cmV0dXJuIHRoaXMuaHRtbENvbGxlY3Rpb25Ub0FycmF5KGIpfSxmaW5kTXVsdGlwbGU6ZnVuY3Rpb24oYSl7aWYoIWF8fCFhLmxlbmd0aClyZXR1cm5bXTt2YXIgYixjLGQ9W107Zm9yKGI9MDtiPGEubGVuZ3RoO2IrKyljPXRoaXMuZmluZChhW2JdKSxkPWQuY29uY2F0KGMpO3JldHVybiBkPXRoaXMubWFrZU5vZGVzVW5pcXVlKGQpfSxmaW5kTm9kZXNCeVRhZ05hbWU6ZnVuY3Rpb24oYSxiKXtpZighYXx8IWJ8fCFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKXJldHVybltdO3ZhciBjPWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYik7cmV0dXJuIHRoaXMuaHRtbENvbGxlY3Rpb25Ub0FycmF5KGMpfSxtYWtlTm9kZXNVbmlxdWU6ZnVuY3Rpb24oYSl7dmFyIGI9W10uY29uY2F0KGEpO2lmKGEuc29ydChmdW5jdGlvbihhLGMpe2lmKGE9PT1jKXJldHVybiAwO3ZhciBkPWluZGV4T2ZBcnJheShiLGEpLGU9aW5kZXhPZkFycmF5KGIsYyk7cmV0dXJuIGQ9PT1lPzA6ZD5lPy0xOjF9KSxhLmxlbmd0aDw9MSlyZXR1cm4gYTt2YXIgZixjPTAsZD0wLGU9W107Zm9yKGY9YVtjKytdO2Y7KWY9PT1hW2NdJiYoZD1lLnB1c2goYykpLGY9YVtjKytdfHxudWxsO2Zvcig7ZC0tOylhLnNwbGljZShlW2RdLDEpO3JldHVybiBhfSxnZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlOmZ1bmN0aW9uKGEsYil7aWYodGhpcy5oYXNOb2RlQXR0cmlidXRlKGEsYikpe2lmKGEmJmEuZ2V0QXR0cmlidXRlKXJldHVybiBhLmdldEF0dHJpYnV0ZShiKTtpZihhJiZhLmF0dHJpYnV0ZXMpe3ZhciBjPXR5cGVvZiBhLmF0dHJpYnV0ZXNbYl07aWYoXCJ1bmRlZmluZWRcIiE9PWMpe2lmKGEuYXR0cmlidXRlc1tiXS52YWx1ZSlyZXR1cm4gYS5hdHRyaWJ1dGVzW2JdLnZhbHVlO2lmKGEuYXR0cmlidXRlc1tiXS5ub2RlVmFsdWUpcmV0dXJuIGEuYXR0cmlidXRlc1tiXS5ub2RlVmFsdWU7dmFyIGQsZT1hLmF0dHJpYnV0ZXM7aWYoZSl7Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKylpZihlW2RdLm5vZGVOYW1lPT09YilyZXR1cm4gZVtkXS5ub2RlVmFsdWU7cmV0dXJuIG51bGx9fX19fSxoYXNOb2RlQXR0cmlidXRlV2l0aFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGEsYik7cmV0dXJuISFjfSxoYXNOb2RlQXR0cmlidXRlOmZ1bmN0aW9uKGEsYil7aWYoYSYmYS5oYXNBdHRyaWJ1dGUpcmV0dXJuIGEuaGFzQXR0cmlidXRlKGIpO2lmKGEmJmEuYXR0cmlidXRlcyl7dmFyIGM9dHlwZW9mIGEuYXR0cmlidXRlc1tiXTtyZXR1cm5cInVuZGVmaW5lZFwiIT09Y31yZXR1cm4hMX0saGFzTm9kZUNzc0NsYXNzOmZ1bmN0aW9uKGEsYil7aWYoYSYmYiYmYS5jbGFzc05hbWUpe3ZhciBjPVwic3RyaW5nXCI9PXR5cGVvZiBhLmNsYXNzTmFtZT9hLmNsYXNzTmFtZS5zcGxpdChcIiBcIik6W107aWYoLTEhPT1pbmRleE9mQXJyYXkoYyxiKSlyZXR1cm4hMH1yZXR1cm4hMX0sZmluZE5vZGVzSGF2aW5nQXR0cmlidXRlOmZ1bmN0aW9uKGEsYixjKXtpZihjfHwoYz1bXSksIWF8fCFiKXJldHVybiBjO3ZhciBkPWdldENoaWxkcmVuRnJvbU5vZGUoYSk7aWYoIWR8fCFkLmxlbmd0aClyZXR1cm4gYzt2YXIgZSxmO2ZvcihlPTA7ZTxkLmxlbmd0aDtlKyspZj1kW2VdLHRoaXMuaGFzTm9kZUF0dHJpYnV0ZShmLGIpJiZjLnB1c2goZiksYz10aGlzLmZpbmROb2Rlc0hhdmluZ0F0dHJpYnV0ZShmLGIsYyk7cmV0dXJuIGN9LGZpbmRGaXJzdE5vZGVIYXZpbmdBdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiKXtpZihhJiZiKXtpZih0aGlzLmhhc05vZGVBdHRyaWJ1dGUoYSxiKSlyZXR1cm4gYTt2YXIgYz10aGlzLmZpbmROb2Rlc0hhdmluZ0F0dHJpYnV0ZShhLGIpO3JldHVybiBjJiZjLmxlbmd0aD9jWzBdOnZvaWQgMH19LGZpbmRGaXJzdE5vZGVIYXZpbmdBdHRyaWJ1dGVXaXRoVmFsdWU6ZnVuY3Rpb24oYSxiKXtpZihhJiZiKXtpZih0aGlzLmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoYSxiKSlyZXR1cm4gYTt2YXIgYz10aGlzLmZpbmROb2Rlc0hhdmluZ0F0dHJpYnV0ZShhLGIpO2lmKGMmJmMubGVuZ3RoKXt2YXIgZDtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKHRoaXMuZ2V0QXR0cmlidXRlVmFsdWVGcm9tTm9kZShjW2RdLGIpKXJldHVybiBjW2RdfX19LGZpbmROb2Rlc0hhdmluZ0Nzc0NsYXNzOmZ1bmN0aW9uKGEsYixjKXtpZihjfHwoYz1bXSksIWF8fCFiKXJldHVybiBjO2lmKGEuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSl7dmFyIGQ9YS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGIpO3JldHVybiB0aGlzLmh0bWxDb2xsZWN0aW9uVG9BcnJheShkKX12YXIgZT1nZXRDaGlsZHJlbkZyb21Ob2RlKGEpO2lmKCFlfHwhZS5sZW5ndGgpcmV0dXJuW107dmFyIGYsZztmb3IoZj0wO2Y8ZS5sZW5ndGg7ZisrKWc9ZVtmXSx0aGlzLmhhc05vZGVDc3NDbGFzcyhnLGIpJiZjLnB1c2goZyksYz10aGlzLmZpbmROb2Rlc0hhdmluZ0Nzc0NsYXNzKGcsYixjKTtyZXR1cm4gY30sZmluZEZpcnN0Tm9kZUhhdmluZ0NsYXNzOmZ1bmN0aW9uKGEsYil7aWYoYSYmYil7aWYodGhpcy5oYXNOb2RlQ3NzQ2xhc3MoYSxiKSlyZXR1cm4gYTt2YXIgYz10aGlzLmZpbmROb2Rlc0hhdmluZ0Nzc0NsYXNzKGEsYik7cmV0dXJuIGMmJmMubGVuZ3RoP2NbMF06dm9pZCAwfX0saXNMaW5rRWxlbWVudDpmdW5jdGlvbihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1TdHJpbmcoYS5ub2RlTmFtZSkudG9Mb3dlckNhc2UoKSxjPVtcImFcIixcImFyZWFcIl0sZD1pbmRleE9mQXJyYXkoYyxiKTtyZXR1cm4gZCE9PS0xfSxzZXRBbnlBdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiLGMpe2EmJmImJihhLnNldEF0dHJpYnV0ZT9hLnNldEF0dHJpYnV0ZShiLGMpOmFbYl09Yyl9fSxjb250ZW50PXtDT05URU5UX0FUVFI6XCJkYXRhLXRyYWNrLWNvbnRlbnRcIixDT05URU5UX0NMQVNTOlwicGl3aWtUcmFja0NvbnRlbnRcIixDT05URU5UX05BTUVfQVRUUjpcImRhdGEtY29udGVudC1uYW1lXCIsQ09OVEVOVF9QSUVDRV9BVFRSOlwiZGF0YS1jb250ZW50LXBpZWNlXCIsQ09OVEVOVF9QSUVDRV9DTEFTUzpcInBpd2lrQ29udGVudFBpZWNlXCIsQ09OVEVOVF9UQVJHRVRfQVRUUjpcImRhdGEtY29udGVudC10YXJnZXRcIixDT05URU5UX1RBUkdFVF9DTEFTUzpcInBpd2lrQ29udGVudFRhcmdldFwiLENPTlRFTlRfSUdOT1JFSU5URVJBQ1RJT05fQVRUUjpcImRhdGEtY29udGVudC1pZ25vcmVpbnRlcmFjdGlvblwiLENPTlRFTlRfSUdOT1JFSU5URVJBQ1RJT05fQ0xBU1M6XCJwaXdpa0NvbnRlbnRJZ25vcmVJbnRlcmFjdGlvblwiLGxvY2F0aW9uOnZvaWQgMCxmaW5kQ29udGVudE5vZGVzOmZ1bmN0aW9uKCl7dmFyIGE9XCIuXCIrdGhpcy5DT05URU5UX0NMQVNTLGI9XCJbXCIrdGhpcy5DT05URU5UX0FUVFIrXCJdXCIsYz1xdWVyeS5maW5kTXVsdGlwbGUoW2EsYl0pO3JldHVybiBjfSxmaW5kQ29udGVudE5vZGVzV2l0aGluTm9kZTpmdW5jdGlvbihhKXtpZighYSlyZXR1cm5bXTt2YXIgYj1xdWVyeS5maW5kTm9kZXNIYXZpbmdDc3NDbGFzcyhhLHRoaXMuQ09OVEVOVF9DTEFTUyksYz1xdWVyeS5maW5kTm9kZXNIYXZpbmdBdHRyaWJ1dGUoYSx0aGlzLkNPTlRFTlRfQVRUUik7aWYoYyYmYy5sZW5ndGgpe3ZhciBkO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspYi5wdXNoKGNbZF0pfXJldHVybiBxdWVyeS5oYXNOb2RlQXR0cmlidXRlKGEsdGhpcy5DT05URU5UX0FUVFIpP2IucHVzaChhKTpxdWVyeS5oYXNOb2RlQ3NzQ2xhc3MoYSx0aGlzLkNPTlRFTlRfQ0xBU1MpJiZiLnB1c2goYSksYj1xdWVyeS5tYWtlTm9kZXNVbmlxdWUoYil9LGZpbmRQYXJlbnRDb250ZW50Tm9kZTpmdW5jdGlvbihhKXtpZihhKWZvcih2YXIgYj1hLGM9MDtiJiZiIT09ZG9jdW1lbnRBbGlhcyYmYi5wYXJlbnROb2RlOyl7aWYocXVlcnkuaGFzTm9kZUF0dHJpYnV0ZShiLHRoaXMuQ09OVEVOVF9BVFRSKSlyZXR1cm4gYjtpZihxdWVyeS5oYXNOb2RlQ3NzQ2xhc3MoYix0aGlzLkNPTlRFTlRfQ0xBU1MpKXJldHVybiBiO2lmKGI9Yi5wYXJlbnROb2RlLGM+MWUzKWJyZWFrO2MrK319LGZpbmRQaWVjZU5vZGU6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIGI9cXVlcnkuZmluZEZpcnN0Tm9kZUhhdmluZ0F0dHJpYnV0ZShhLHRoaXMuQ09OVEVOVF9QSUVDRV9BVFRSKSxifHwoYj1xdWVyeS5maW5kRmlyc3ROb2RlSGF2aW5nQ2xhc3MoYSx0aGlzLkNPTlRFTlRfUElFQ0VfQ0xBU1MpKSxiP2I6YX0sZmluZFRhcmdldE5vZGVOb0RlZmF1bHQ6ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9cXVlcnkuZmluZEZpcnN0Tm9kZUhhdmluZ0F0dHJpYnV0ZVdpdGhWYWx1ZShhLHRoaXMuQ09OVEVOVF9UQVJHRVRfQVRUUik7cmV0dXJuIGI/YjooYj1xdWVyeS5maW5kRmlyc3ROb2RlSGF2aW5nQXR0cmlidXRlKGEsdGhpcy5DT05URU5UX1RBUkdFVF9BVFRSKSk/YjooYj1xdWVyeS5maW5kRmlyc3ROb2RlSGF2aW5nQ2xhc3MoYSx0aGlzLkNPTlRFTlRfVEFSR0VUX0NMQVNTKSxiP2I6dm9pZCAwKX19LGZpbmRUYXJnZXROb2RlOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZmluZFRhcmdldE5vZGVOb0RlZmF1bHQoYSk7cmV0dXJuIGI/YjphfSxmaW5kQ29udGVudE5hbWU6ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9cXVlcnkuZmluZEZpcnN0Tm9kZUhhdmluZ0F0dHJpYnV0ZVdpdGhWYWx1ZShhLHRoaXMuQ09OVEVOVF9OQU1FX0FUVFIpO2lmKGIpcmV0dXJuIHF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoYix0aGlzLkNPTlRFTlRfTkFNRV9BVFRSKTt2YXIgYz10aGlzLmZpbmRDb250ZW50UGllY2UoYSk7aWYoYylyZXR1cm4gdGhpcy5yZW1vdmVEb21haW5JZklzSW5MaW5rKGMpO2lmKHF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoYSxcInRpdGxlXCIpKXJldHVybiBxdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGEsXCJ0aXRsZVwiKTt2YXIgZD10aGlzLmZpbmRQaWVjZU5vZGUoYSk7aWYocXVlcnkuaGFzTm9kZUF0dHJpYnV0ZVdpdGhWYWx1ZShkLFwidGl0bGVcIikpcmV0dXJuIHF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoZCxcInRpdGxlXCIpO3ZhciBlPXRoaXMuZmluZFRhcmdldE5vZGUoYSk7cmV0dXJuIHF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoZSxcInRpdGxlXCIpP3F1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoZSxcInRpdGxlXCIpOnZvaWQgMH19LGZpbmRDb250ZW50UGllY2U6ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9cXVlcnkuZmluZEZpcnN0Tm9kZUhhdmluZ0F0dHJpYnV0ZVdpdGhWYWx1ZShhLHRoaXMuQ09OVEVOVF9QSUVDRV9BVFRSKTtpZihiKXJldHVybiBxdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGIsdGhpcy5DT05URU5UX1BJRUNFX0FUVFIpO3ZhciBjPXRoaXMuZmluZFBpZWNlTm9kZShhKSxkPXRoaXMuZmluZE1lZGlhVXJsSW5Ob2RlKGMpO3JldHVybiBkP3RoaXMudG9BYnNvbHV0ZVVybChkKTp2b2lkIDB9fSxmaW5kQ29udGVudFRhcmdldDpmdW5jdGlvbihhKXtpZihhKXt2YXIgYj10aGlzLmZpbmRUYXJnZXROb2RlKGEpO2lmKHF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoYix0aGlzLkNPTlRFTlRfVEFSR0VUX0FUVFIpKXJldHVybiBxdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGIsdGhpcy5DT05URU5UX1RBUkdFVF9BVFRSKTt2YXIgYztpZihxdWVyeS5oYXNOb2RlQXR0cmlidXRlV2l0aFZhbHVlKGIsXCJocmVmXCIpKXJldHVybiBjPXF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoYixcImhyZWZcIiksdGhpcy50b0Fic29sdXRlVXJsKGMpO3ZhciBkPXRoaXMuZmluZFBpZWNlTm9kZShhKTtyZXR1cm4gcXVlcnkuaGFzTm9kZUF0dHJpYnV0ZVdpdGhWYWx1ZShkLFwiaHJlZlwiKT8oYz1xdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGQsXCJocmVmXCIpLHRoaXMudG9BYnNvbHV0ZVVybChjKSk6dm9pZCAwfX0saXNTYW1lRG9tYWluOmZ1bmN0aW9uKGEpe2lmKCFhfHwhYS5pbmRleE9mKXJldHVybiExO2lmKDA9PT1hLmluZGV4T2YodGhpcy5nZXRMb2NhdGlvbigpLm9yaWdpbikpcmV0dXJuITA7dmFyIGI9YS5pbmRleE9mKHRoaXMuZ2V0TG9jYXRpb24oKS5ob3N0KTtyZXR1cm4gOD49YiYmMDw9Yn0scmVtb3ZlRG9tYWluSWZJc0luTGluazpmdW5jdGlvbihhKXt2YXIgYj1cIl5odHRwcz86Ly9bXi9dK1wiLGM9XCJeLiovL1teL10rXCI7cmV0dXJuIGEmJmEuc2VhcmNoJiYtMSE9PWEuc2VhcmNoKG5ldyBSZWdFeHAoYikpJiZ0aGlzLmlzU2FtZURvbWFpbihhKSYmKGE9YS5yZXBsYWNlKG5ldyBSZWdFeHAoYyksXCJcIiksYXx8KGE9XCIvXCIpKSxhfSxmaW5kTWVkaWFVcmxJbk5vZGU6ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9W1wiaW1nXCIsXCJlbWJlZFwiLFwidmlkZW9cIixcImF1ZGlvXCJdLGM9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKC0xIT09aW5kZXhPZkFycmF5KGIsYykmJnF1ZXJ5LmZpbmRGaXJzdE5vZGVIYXZpbmdBdHRyaWJ1dGVXaXRoVmFsdWUoYSxcInNyY1wiKSl7dmFyIGQ9cXVlcnkuZmluZEZpcnN0Tm9kZUhhdmluZ0F0dHJpYnV0ZVdpdGhWYWx1ZShhLFwic3JjXCIpO3JldHVybiBxdWVyeS5nZXRBdHRyaWJ1dGVWYWx1ZUZyb21Ob2RlKGQsXCJzcmNcIil9aWYoXCJvYmplY3RcIj09PWMmJnF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGVXaXRoVmFsdWUoYSxcImRhdGFcIikpcmV0dXJuIHF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoYSxcImRhdGFcIik7aWYoXCJvYmplY3RcIj09PWMpe3ZhciBlPXF1ZXJ5LmZpbmROb2Rlc0J5VGFnTmFtZShhLFwicGFyYW1cIik7aWYoZSYmZS5sZW5ndGgpe3ZhciBmO2ZvcihmPTA7ZjxlLmxlbmd0aDtmKyspaWYoXCJtb3ZpZVwiPT09cXVlcnkuZ2V0QXR0cmlidXRlVmFsdWVGcm9tTm9kZShlW2ZdLFwibmFtZVwiKSYmcXVlcnkuaGFzTm9kZUF0dHJpYnV0ZVdpdGhWYWx1ZShlW2ZdLFwidmFsdWVcIikpcmV0dXJuIHF1ZXJ5LmdldEF0dHJpYnV0ZVZhbHVlRnJvbU5vZGUoZVtmXSxcInZhbHVlXCIpfXZhciBnPXF1ZXJ5LmZpbmROb2Rlc0J5VGFnTmFtZShhLFwiZW1iZWRcIik7aWYoZyYmZy5sZW5ndGgpcmV0dXJuIHRoaXMuZmluZE1lZGlhVXJsSW5Ob2RlKGdbMF0pfX19LHRyaW06ZnVuY3Rpb24oYSl7cmV0dXJuIGEmJlN0cmluZyhhKT09PWE/YS5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLFwiXCIpOmF9LGlzT3JXYXNOb2RlSW5WaWV3cG9ydDpmdW5jdGlvbihhKXtpZighYXx8IWEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0fHwxIT09YS5ub2RlVHlwZSlyZXR1cm4hMDt2YXIgYj1hLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGM9ZG9jdW1lbnRBbGlhcy5kb2N1bWVudEVsZW1lbnR8fHt9LGQ9Yi50b3A8MDtkJiZhLm9mZnNldFRvcCYmKGQ9YS5vZmZzZXRUb3ArYi5oZWlnaHQ+MCk7dmFyIGU9Yy5jbGllbnRXaWR0aDt3aW5kb3dBbGlhcy5pbm5lcldpZHRoJiZlPndpbmRvd0FsaWFzLmlubmVyV2lkdGgmJihlPXdpbmRvd0FsaWFzLmlubmVyV2lkdGgpO3ZhciBmPWMuY2xpZW50SGVpZ2h0O3JldHVybiB3aW5kb3dBbGlhcy5pbm5lckhlaWdodCYmZj53aW5kb3dBbGlhcy5pbm5lckhlaWdodCYmKGY9d2luZG93QWxpYXMuaW5uZXJIZWlnaHQpLChiLmJvdHRvbT4wfHxkKSYmYi5yaWdodD4wJiZiLmxlZnQ8ZSYmKGIudG9wPGZ8fGQpfSxpc05vZGVWaXNpYmxlOmZ1bmN0aW9uKGEpe3ZhciBiPWlzVmlzaWJsZShhKSxjPXRoaXMuaXNPcldhc05vZGVJblZpZXdwb3J0KGEpO3JldHVybiBiJiZjfSxidWlsZEludGVyYWN0aW9uUmVxdWVzdFBhcmFtczpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIlwiO3JldHVybiBhJiYoZSs9XCJjX2k9XCIrZW5jb2RlV3JhcHBlcihhKSksYiYmKGUmJihlKz1cIiZcIiksZSs9XCJjX249XCIrZW5jb2RlV3JhcHBlcihiKSksYyYmKGUmJihlKz1cIiZcIiksZSs9XCJjX3A9XCIrZW5jb2RlV3JhcHBlcihjKSksZCYmKGUmJihlKz1cIiZcIiksZSs9XCJjX3Q9XCIrZW5jb2RlV3JhcHBlcihkKSksZX0sYnVpbGRJbXByZXNzaW9uUmVxdWVzdFBhcmFtczpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9XCJjX249XCIrZW5jb2RlV3JhcHBlcihhKStcIiZjX3A9XCIrZW5jb2RlV3JhcHBlcihiKTtyZXR1cm4gYyYmKGQrPVwiJmNfdD1cIitlbmNvZGVXcmFwcGVyKGMpKSxkfSxidWlsZENvbnRlbnRCbG9jazpmdW5jdGlvbihhKXtpZihhKXt2YXIgYj10aGlzLmZpbmRDb250ZW50TmFtZShhKSxjPXRoaXMuZmluZENvbnRlbnRQaWVjZShhKSxkPXRoaXMuZmluZENvbnRlbnRUYXJnZXQoYSk7cmV0dXJuIGI9dGhpcy50cmltKGIpLGM9dGhpcy50cmltKGMpLGQ9dGhpcy50cmltKGQpLHtuYW1lOmJ8fFwiVW5rbm93blwiLHBpZWNlOmN8fFwiVW5rbm93blwiLHRhcmdldDpkfHxcIlwifX19LGNvbGxlY3RDb250ZW50OmZ1bmN0aW9uKGEpe2lmKCFhfHwhYS5sZW5ndGgpcmV0dXJuW107dmFyIGMsZCxiPVtdO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZD10aGlzLmJ1aWxkQ29udGVudEJsb2NrKGFbY10pLGlzRGVmaW5lZChkKSYmYi5wdXNoKGQpO3JldHVybiBifSxzZXRMb2NhdGlvbjpmdW5jdGlvbihhKXt0aGlzLmxvY2F0aW9uPWF9LGdldExvY2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5sb2NhdGlvbnx8d2luZG93QWxpYXMubG9jYXRpb247cmV0dXJuIGEub3JpZ2lufHwoYS5vcmlnaW49YS5wcm90b2NvbCtcIi8vXCIrYS5ob3N0bmFtZSsoYS5wb3J0P1wiOlwiK2EucG9ydDpcIlwiKSksYX0sdG9BYnNvbHV0ZVVybDpmdW5jdGlvbihhKXtpZigoIWF8fFN0cmluZyhhKSE9PWEpJiZcIlwiIT09YSlyZXR1cm4gYTtpZihcIlwiPT09YSlyZXR1cm4gdGhpcy5nZXRMb2NhdGlvbigpLmhyZWY7aWYoYS5zZWFyY2goL15cXC9cXC8vKSE9PS0xKXJldHVybiB0aGlzLmdldExvY2F0aW9uKCkucHJvdG9jb2wrYTtpZihhLnNlYXJjaCgvOlxcL1xcLy8pIT09LTEpcmV0dXJuIGE7aWYoMD09PWEuaW5kZXhPZihcIiNcIikpcmV0dXJuIHRoaXMuZ2V0TG9jYXRpb24oKS5vcmlnaW4rdGhpcy5nZXRMb2NhdGlvbigpLnBhdGhuYW1lK2E7aWYoMD09PWEuaW5kZXhPZihcIj9cIikpcmV0dXJuIHRoaXMuZ2V0TG9jYXRpb24oKS5vcmlnaW4rdGhpcy5nZXRMb2NhdGlvbigpLnBhdGhuYW1lK2E7aWYoMD09PWEuc2VhcmNoKFwiXlthLXpBLVpdezIsMTF9OlwiKSlyZXR1cm4gYTtpZihhLnNlYXJjaCgvXlxcLy8pIT09LTEpcmV0dXJuIHRoaXMuZ2V0TG9jYXRpb24oKS5vcmlnaW4rYTt2YXIgYj1cIiguKi8pXCIsYz10aGlzLmdldExvY2F0aW9uKCkub3JpZ2luK3RoaXMuZ2V0TG9jYXRpb24oKS5wYXRobmFtZS5tYXRjaChuZXcgUmVnRXhwKGIpKVswXTtyZXR1cm4gYythfSxpc1VybFRvQ3VycmVudERvbWFpbjpmdW5jdGlvbihhKXt2YXIgYj10aGlzLnRvQWJzb2x1dGVVcmwoYSk7aWYoIWIpcmV0dXJuITE7dmFyIGM9dGhpcy5nZXRMb2NhdGlvbigpLm9yaWdpbjtyZXR1cm4gYz09PWJ8fDA9PT1TdHJpbmcoYikuaW5kZXhPZihjKSYmXCI6XCIhPT1TdHJpbmcoYikuc3Vic3RyKGMubGVuZ3RoLDEpfSxzZXRIcmVmQXR0cmlidXRlOmZ1bmN0aW9uKGEsYil7YSYmYiYmcXVlcnkuc2V0QW55QXR0cmlidXRlKGEsXCJocmVmXCIsYil9LHNob3VsZElnbm9yZUludGVyYWN0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXF1ZXJ5Lmhhc05vZGVBdHRyaWJ1dGUoYSx0aGlzLkNPTlRFTlRfSUdOT1JFSU5URVJBQ1RJT05fQVRUUiksYz1xdWVyeS5oYXNOb2RlQ3NzQ2xhc3MoYSx0aGlzLkNPTlRFTlRfSUdOT1JFSU5URVJBQ1RJT05fQ0xBU1MpO3JldHVybiBifHxjfX07YWRkRXZlbnRMaXN0ZW5lcih3aW5kb3dBbGlhcyxcImJlZm9yZXVubG9hZFwiLGJlZm9yZVVubG9hZEhhbmRsZXIsITEpLGFkZFJlYWR5TGlzdGVuZXIoKSxEYXRlLnByb3RvdHlwZS5nZXRUaW1lQWxpYXM9RGF0ZS5wcm90b3R5cGUuZ2V0VGltZSxhc3luY1RyYWNrZXI9bmV3IFRyYWNrZXI7dmFyIGFwcGx5Rmlyc3Q9W1wiZGlzYWJsZUNvb2tpZXNcIixcInNldFRyYWNrZXJVcmxcIixcInNldEFQSVVybFwiLFwic2V0Q29va2llUGF0aFwiLFwic2V0Q29va2llRG9tYWluXCIsXCJzZXRVc2VySWRcIixcInNldFNpdGVJZFwiLFwiZW5hYmxlTGlua1RyYWNraW5nXCJdO2ZvcihfcGFxPWFwcGx5TWV0aG9kc0luT3JkZXIoX3BhcSxhcHBseUZpcnN0KSxpdGVyYXRvcj0wO2l0ZXJhdG9yPF9wYXEubGVuZ3RoO2l0ZXJhdG9yKyspX3BhcVtpdGVyYXRvcl0mJmFwcGx5KF9wYXFbaXRlcmF0b3JdKTtyZXR1cm4gX3BhcT1uZXcgVHJhY2tlclByb3h5LFBpd2lrPXthZGRQbHVnaW46ZnVuY3Rpb24oYSxiKXtwbHVnaW5zW2FdPWJ9LGdldFRyYWNrZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gaXNEZWZpbmVkKGIpfHwoYj10aGlzLmdldEFzeW5jVHJhY2tlcigpLmdldFNpdGVJZCgpKSxpc0RlZmluZWQoYSl8fChhPXRoaXMuZ2V0QXN5bmNUcmFja2VyKCkuZ2V0VHJhY2tlclVybCgpKSxuZXcgVHJhY2tlcihhLGIpfSxnZXRBc3luY1RyYWNrZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYXN5bmNUcmFja2VyfX0sXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoXCJwaXdpa1wiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIFBpd2lrfSksUGl3aWt9KCkpLHdpbmRvdyYmd2luZG93LnBpd2lrQXN5bmNJbml0JiZ3aW5kb3cucGl3aWtBc3luY0luaXQoKSxmdW5jdGlvbigpe3ZhciBhPXR5cGVvZiBBbmFseXRpY3NUcmFja2VyO1widW5kZWZpbmVkXCI9PT1hJiYoQW5hbHl0aWNzVHJhY2tlcj1QaXdpayl9KCksXCJmdW5jdGlvblwiIT10eXBlb2YgcGl3aWtfbG9nJiYocGl3aWtfbG9nPWZ1bmN0aW9uKGEsYixjLGQpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGUoYSl7dHJ5e2lmKHdpbmRvd1tcInBpd2lrX1wiK2FdKXJldHVybiB3aW5kb3dbXCJwaXdpa19cIithXX1jYXRjaChhKXt9fXZhciBmLGc9UGl3aWsuZ2V0VHJhY2tlcihjLGIpO2cuc2V0RG9jdW1lbnRUaXRsZShhKSxnLnNldEN1c3RvbURhdGEoZCksZj1lKFwidHJhY2tlcl9wYXVzZVwiKSxmJiZnLnNldExpbmtUcmFja2luZ1RpbWVyKGYpLGY9ZShcImRvd25sb2FkX2V4dGVuc2lvbnNcIiksZiYmZy5zZXREb3dubG9hZEV4dGVuc2lvbnMoZiksZj1lKFwiaG9zdHNfYWxpYXNcIiksZiYmZy5zZXREb21haW5zKGYpLGY9ZShcImlnbm9yZV9jbGFzc2VzXCIpLGYmJmcuc2V0SWdub3JlQ2xhc3NlcyhmKSxnLnRyYWNrUGFnZVZpZXcoKSxlKFwiaW5zdGFsbF90cmFja2VyXCIpJiYocGl3aWtfdHJhY2s9ZnVuY3Rpb24oYSxiLGMsZCl7Zy5zZXRTaXRlSWQoYiksZy5zZXRUcmFja2VyVXJsKGMpLGcudHJhY2tMaW5rKGEsZCl9LGcuZW5hYmxlTGlua1RyYWNraW5nKCkpfSk7IiwiZGVmaW5lKFtcImpxdWVyeVwiLCBcInVuZGVyc2NvcmVcIiwgXCJiYWNrYm9uZVwiLCBcImJvb3RzdHJhcC1kYXRlcGlja2VyXCIsIFwiZ292aW5mb1wiLCBcImNvbW1vbi92aWV3cy9OZXdEYXRlUmFuZ2VWaWV3XCIsIFwic2VhcmNoL3ZpZXdzL25ld1NlYXJjaENvbnN0cmFpbnRNb2RlbFwiXSwgZnVuY3Rpb24oJCwgXywgQmFja2JvbmUsIGRhdGVwaWNrZXIsIEdvdkluZm8sIE5ld0RhdGVSYW5nZVZpZXcsIFNlYXJjaENvbnN0cmFpbnRNb2RlbCkge1xuICAgIEFkdmFuY2VkU2VhcmNoVmlldyA9IEdvdkluZm8uQmFzZVZpZXcuZXh0ZW5kKC8qKiBAbGVuZHMgQWR2YW5jZWRTZWFyY2hWaWV3LnByb3RvdHlwZSAqL1xuICAgIHtcbiAgICAgICAgbG9hZGluZ1RlbXBsYXRlOiAnLi9jb21tb24vdGVtcGxhdGVzL3NlYXJjaHdpZGdldC9Mb2FkaW5nLmh0bWwnLFxuICAgICAgICB0ZW1wbGF0ZTogJy4vY29tbW9uL3RlbXBsYXRlcy9zZWFyY2h3aWRnZXQvQWR2YW5jZWRTZWFyY2hWaWV3Lmh0bWwnLFxuICAgICAgICBkb05vdGxlYXZlSGlzdG9yeVRyYWlsOiB0cnVlLFxuICAgICAgICBkb05vdEtpbGxEaXYgOiB0cnVlLFxuICAgICAgICB1c2VIYXNoIDogdHJ1ZSxcbiAgICAgICAgdXNlU3RhdGUgOiBmYWxzZSxcbiAgICAgICAgc3RhdGVQYXRoIDogWydhZHZhbmNlZCddLFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICdjaGFuZ2UgLmFzd3Ytc2VhcmNoLWluLXNlbGVjdCc6ICdvblNlYXJjaEluU2VsZWN0JyxcbiAgICAgICAgICAgICdjaGFuZ2UgLmFzd3YtY29sbGVjdGlvbi1jYic6ICdwb3B1bGF0ZUJ5Q29sbGVjdGlvbicsXG4gICAgICAgICAgICAnY2hhbmdlICNzZWxlY3RBbGxDb2xsZWN0aW9ucyc6ICdvblNlbGVjdEFsbENvbGxlY3Rpb25zJyxcbiAgICAgICAgICAgIFwiY2xpY2sgICNzZWFyY2hCdXR0b25cIjogXCJzZWFyY2hcIixcbiAgICAgICAgICAgICdjbGljayAjYWRkY3JpdGVyaWFidXR0b25zJzogJ29uQWRkQ3JpdGVyaWEnLFxuICAgICAgICAgICAgJ2NsaWNrIC5hc3d2b2MtY3JpdGVyaWEtcmVtb3ZlJzogJ29uUmVtb3ZlQ3JpdGVyaWEnLFxuICAgICAgICAgICAgJ2NsaWNrICNzaG93SGlzdG9yeVVybCc6ICdzaG93SGlzdG9yeVVybCcsXG4gICAgICAgICAgICAnY2xpY2sgLmNvcHlCdG4nOiAnY29weVNoYXJlVXJsJ1xuICAgICAgICB9LFxuICAgICAgICBfZ2V0Q29sbGVjdGlvbnM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGNvbGxlY3Rpb25zID0gW107XG4gICAgICAgICAgICB2YXIgJGFycmF5ID0gdGhpcy4kKCcuYXN3di1jb2xsZWN0aW9uLWNiOmNoZWNrZWQnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gJGFycmF5Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25zLnB1c2goJCgkYXJyYXlbaV0pLmRhdGEoJ3ZhbHVlJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb25zO1xuICAgICAgICB9LFxuICAgICAgICBnZXRIaXN0b3J5VXJsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoaXN0b3J5ID0ge307XG4gICAgICAgICAgICB2YXIgY29sbGVjdGlvbnMgPSB0aGlzLl9nZXRDb2xsZWN0aW9ucygpO1xuICAgICAgICAgICAgaGlzdG9yeS5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zO1xuICAgICAgICAgICAgdmFyIHQgPSB0aGlzLiQoJyNkYXRlUmFuZ2VTZWxlY3QnKS52YWwoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLiQoJyNkYXRlUmFuZ2VTZWxlY3QnKS52YWwoKSAhPSBcIkFEXCIpIHtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LmRhdGUgPSB0aGlzLnNlbGVjdERhdGVSYW5nZVZpZXcuZ2V0RGF0ZVJhbmdlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgJGhvbGRlcnMgPSB0aGlzLiQoJy5hc3d2b2MtY3JpdGVyaWEtaG9sZGVyOnZpc2libGUnKTtcbiAgICAgICAgICAgIHZhciBmaWVsZHMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gJGhvbGRlcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyICRoID0gJCgkaG9sZGVyc1tpXSk7XG4gICAgICAgICAgICAgICAgdmFyIGZpZWxkID0ge307XG4gICAgICAgICAgICAgICAgZmllbGQuZiA9ICRoLmZpbmQoJy5hc3d2LXNlYXJjaC1pbi1zZWxlY3QnKS52YWwoKTtcbiAgICAgICAgICAgICAgICBmaWVsZC52ID0gJGguZmluZCgnLmFzd3ZvYy1jcml0ZXJpYS1pbnB1dCcpLnZhbCgpO1xuICAgICAgICAgICAgICAgIGZpZWxkLnAgPSAkaC5kYXRhKCdyb3cnKTtcbiAgICAgICAgICAgICAgICBmaWVsZHMucHVzaChmaWVsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoaXN0b3J5LmZpZWxkcyA9IGZpZWxkcztcbiAgICAgICAgICAgIHZhciBzdHIgPSBKU09OLnN0cmluZ2lmeShoaXN0b3J5KTtcbiAgICAgICAgICAgIHN0ciA9IGVuY29kZVVSSShzdHIpO1xuICAgICAgICAgICAgcmV0dXJuIHN0cjtcbiAgICAgICAgfSxcbiAgICAgICAgX3Nob3dIaXN0b3J5VXJsOiB0cnVlLFxuICAgICAgICBwdXRGb3JtOiBmdW5jdGlvbihoaXN0b3J5KSB7XG4gICAgICAgICAgICB0aGlzLl9zdG9wSGlzdG9yeSA9IHRydWU7XG4gICAgICAgICAgICBpZiAoaGlzdG9yeSAmJiBoaXN0b3J5LmNvbGxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBoaXN0b3J5LmNvbGxlY3Rpb25zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IGhpc3RvcnkuY29sbGVjdGlvbnNbaV07XG4gICAgICAgICAgICAgICAgICAgIHZhciAkZWwgPSB0aGlzLiQoJy5hc3d2LWNvbGxlY3Rpb24taXRlbSBbZGF0YS12YWx1ZT1cIicgKyBjICsgJ1wiXScpO1xuICAgICAgICAgICAgICAgICAgICAkZWwucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucG9wdWxhdGVCeUNvbGxlY3Rpb24oKTtcbiAgICAgICAgICAgIGlmIChoaXN0b3J5ICYmIGhpc3RvcnkuZGF0ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0RGF0ZVJhbmdlVmlldy5zZXREYXRlUmFuZ2UoaGlzdG9yeS5kYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChoaXN0b3J5ICYmIGhpc3RvcnkuZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBoaXN0b3J5LmZpZWxkcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGYgPSBoaXN0b3J5LmZpZWxkc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRoID0gdGhpcy4kKCcjaG9sZGVySWQnICsgZi5wKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRzID0gJGguZmluZCgnLmFzd3Ytc2VhcmNoLWluLXNlbGVjdCcpO1xuICAgICAgICAgICAgICAgICAgICAkcy52YWwoZi5mKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb25TZWFyY2hJblNlbGVjdCgkcywgZnVuY3Rpb24oJGRhdGEsIGZ2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgJGkgPSAkZGF0YS5maW5kKCcuYXN3dm9jLWNyaXRlcmlhLWlucHV0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaS52YWwoZnYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGguc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB9LCAkaCwgZi52KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gcGlnZ3kgYmFjayAkaCBhbmQgZi52ICAtLSAgaGFjayBmb3IgY2xvc3VyZSwgbXVzdCBiZSBiZXR0ZXIgd2F5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc3RvcEhpc3RvcnkgPSBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0SGlzdG9yeTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgc3RyID0gdGhpcy5nZXRQYXJhbWV0ZXIoJ2FzaCcpO1xuICAgICAgICAgICAgaWYgKHN0cikge1xuICAgICAgICAgICAgICAgIHN0ciA9IGRlY29kZVVSSUNvbXBvbmVudChzdHIpO1xuICAgICAgICAgICAgICAgIHZhciBoaXN0b3J5ID0gSlNPTi5wYXJzZShzdHIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBoaXN0b3J5O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbCA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIF9nZXRGaWVsZHM6IGZ1bmN0aW9uKGNvbGxlY3Rpb25zLCBmaWVsZE5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0gJy93c3NlYXJjaC9zZWFyY2gvZmllbGR2YWx1ZXMvJyArIGZpZWxkTmFtZTtcbiAgICAgICAgICAgIGlmICghZmllbGROYW1lIHx8IGZpZWxkTmFtZSA9PSBudWxsICkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKFtdKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShjb2xsZWN0aW9ucyksXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgaGFwcGVuZCBkdXJpbmcgZmV0Y2ggaW4gX2dldEZpZWxkcycpO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhbXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIF9vblNlYXJjaEluU2VsZWN0OiBmdW5jdGlvbigkZWwsIGNiLCAkaCwgZnYpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9ICRlbC52YWwoKTtcbiAgICAgICAgICAgIHZhciBhc0ZpZWxkID0gdGhpcy5fbWFwRmllbGRzW3ZhbHVlXTtcbiAgICAgICAgICAgIHZhciAkZGl2ID0gdGhpcy4kKCcjJyArICRlbC5kYXRhKCdob2xkZXInKSk7XG4gICAgICAgICAgICAvLyB0b2RvIC0tIGdyYWIgaG9sZGVyIGJ5IGlkO1xuICAgICAgICAgICAgdmFyICRyaWdodCA9ICQoJGRpdi5maW5kKCcuYXN3dm9jLWNyaXRlcmlhLWRpdi1yaWdodCcpKTtcbiAgICAgICAgICAgICRyaWdodC5lbXB0eSgpO1xuICAgICAgICAgICAgJHJpZ2h0Lmh0bWwoJzxpIGNsYXNzPVwiZmEgZmEtc3Bpbm5lciBmYS1zcGluXCI+PGk+Jyk7XG4gICAgICAgICAgICB2YXIgY29sbGVjdGlvbnMgPSB0aGlzLl9nZXRDb2xsZWN0aW9ucygpO1xuICAgICAgICAgICAgdmFyIGZpZWxkTmFtZSA9IGFzRmllbGQgPyBhc0ZpZWxkLnZhbHVlIDogbnVsbCA7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQoJzxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiYXN3dm9jLWNyaXRlcmlhLWlucHV0IGZvcm0tY29udHJvbFwiPicpO1xuICAgICAgICAgICAgICAgICAgICAkcmlnaHQuaHRtbCgkaW5wdXQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkc2VsZWN0ID0gJCgnPHNlbGVjdCBjbGFzcz1cImFzd3ZvYy1jcml0ZXJpYS1pbnB1dCBmb3JtLWNvbnRyb2xcIj4nKTtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGVjdC5hcHBlbmQoXCI8b3B0aW9uIHZhbHVlPScnPkNob29zZSBWYWx1ZTwvb3B0aW9uPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBkYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGVjdC5hcHBlbmQoXCI8b3B0aW9uIHZhbHVlPSdcIiArIGRhdGFbaV0udmFsdWUgKyBcIic+XCIgKyBkYXRhW2ldLmRpc3BsYXkgKyBcIjwvb3B0aW9uPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgJGRpdjIgPSAkKCc8ZGl2IHN0eWxlPVwicG9zaXRpb246cmVsYXRpdmVcIj4nKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRkaXYgPSAkKCc8ZGl2IGNsYXNzPVwic3R5bGVkLXNlbGVjdFwiPicpO1xuICAgICAgICAgICAgICAgICAgICAkZGl2LmFwcGVuZCgkc2VsZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgJGRpdjIuYXBwZW5kKCRkaXYpO1xuICAgICAgICAgICAgICAgICAgICAkcmlnaHQuaHRtbCgkZGl2Mik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgICAgICAgICBjYigkaCwgZnYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2dldEZpZWxkcyhjb2xsZWN0aW9ucywgZmllbGROYW1lLCBjYWxsYmFjayk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmlhRmFjZXRzIDogZmFsc2UsXG5cbiAgICAgICAgcHJlbG9hZERhdGFBc3luYzogZnVuY3Rpb24oY2FsbGJhY2ssIGVycm9yKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0gJy93c3NlYXJjaC9zZWFyY2gvY29sbGVjdGlvbnMnO1xuICAgICAgICAgICAgdmFyIGFsbEZpZWxkcyA9ICcvd3NzZWFyY2gvc2VhcmNoL2FsbGZpZWxkcyc7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgICAgICB2YXIgY2IgPSBmdW5jdGlvbihkYXRhLCBpc0NvbGxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc0NvbGxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSBfLnNvcnRCeShkYXRhLCBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdi5kaXNwbGF5VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5maWVsZHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hbGxGaWVsZHMgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXBGaWVsZHMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IGRhdGEubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX21hcEZpZWxkc1tkYXRhW2ldLnZhbHVlXSA9IGRhdGFbaV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gXy5zb3J0QnkoZGF0YSwgJ2Rpc3BsYXknKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmNvbGxlY3Rpb25zID0gZGF0YTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5maWVsZHMgJiYgcmVzdWx0LmNvbGxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmJpbmQodGhpcyk7XG4gICAgICAgICAgICB0aGlzLmdldEpTT04odXJsLCBmdW5jdGlvbihkKSB7IGNiKGQsIHRydWUpIH0sIGVycm9yKTtcbiAgICAgICAgICAgIHRoaXMuZ2V0SlNPTihhbGxGaWVsZHMsIGZ1bmN0aW9uKGQpIHsgY2IoZCwgZmFsc2UpIH0sIGVycm9yKTtcbiAgICAgICAgfSxcbiAgICAgICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICAgICAgR292SW5mby5CYXNlVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3REYXRlUmFuZ2VWaWV3ID0gdGhpcy5pbnN0YW50aWF0ZShOZXdEYXRlUmFuZ2VWaWV3KTtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5nZXRQYXJlbnQoKSwgJ3NpbXBsZXNlYXJjaCcsIHRoaXMub25TaW1wbGVTZWFyY2guYmluZCh0aGlzKSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uU2ltcGxlU2VhcmNoIDogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB9LFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3REYXRlUmFuZ2VWaWV3LnNldEVsZW1lbnQoJyNuZXdEYXRlUmFuZ2VWaWV3JykucmVuZGVyVmlldyhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgaGlzdG9yeSA9IHRoaXMuZ2V0SGlzdG9yeSgpO1xuICAgICAgICAgICAgICAgIGlmIChoaXN0b3J5KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHV0Rm9ybShoaXN0b3J5KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcHVsYXRlQnlDb2xsZWN0aW9uKG51bGwgLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuYmluZCh0aGlzKSk7XG4gICAgICAgIH0sXG4gICAgICAgIHB1dEluSG9sZGVycyA6IGZ1bmN0aW9uKCRhcnJheSl7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwLCBsID0gJGFycmF5Lmxlbmd0aDsgaSA8IGw7IGkrKyl7XG4gICAgICAgICAgICAgICAgdmFyICRlbCA9ICQoJGFycmF5W2ldKTtcbiAgICAgICAgICAgICAgICBpZighdGhpcy50ZW1wSG9sZGVycyl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGVtcEhvbGRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYoIXRoaXMudGVtcEhvbGRlcnNbJGVsLmRhdGEoJ2hvbGRlcicpXSl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGVtcEhvbGRlcnNbJGVsLmRhdGEoJ2hvbGRlcicpXSA9ICQoJzxzZWxlY3Qgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+Jyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJGVsLmFwcGVuZCh0aGlzLnRlbXBIb2xkZXJzWyRlbC5kYXRhKCdob2xkZXInKV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnRlbXBIb2xkZXJzWyRlbC5kYXRhKCdob2xkZXInKV0uYXBwZW5kKCRlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1dEluRmllbGRzIDogZnVuY3Rpb24oJGFycmF5KXtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDAsIGwgPSAkYXJyYXkubGVuZ3RoOyBpIDwgbDsgaSsrKXtcbiAgICAgICAgICAgICAgICB2YXIgJGVsID0gJCgkYXJyYXlbaV0pO1xuICAgICAgICAgICAgICAgIHRoaXMuJCgnc2VsZWN0W2RhdGEtaG9sZGVyPVwiJyArICRlbC5kYXRhKCdob2xkZXInKSArICdcIl0nKS5hcHBlbmQoJGVsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzaG93SGlzdG9yeVVybDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyICRib29rbWFya19wbGFjZWhvbGRlciA9IHRoaXMuJCgnI2FkdkJvb2ttYXJrX3BsYWNlaG9sZGVyJyk7XG4gICAgICAgICAgICAkYm9va21hcmtfcGxhY2Vob2xkZXIuaGlkZSgpO1xuICAgICAgICAgICAgdmFyIHN0ciA9IHRoaXMuZ2V0SGlzdG9yeVVybCgpO1xuICAgICAgICAgICAgdmFyIHVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnLyNhZHZhbmNlZD9hc2g9JyArIHN0cjtcbiAgICAgICAgICAgIHZhciBjb3B5Qm94ID0gJzxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1pbmZvXCI+Q29weSBhbmQgc2F2ZSB0aGlzIGxpbms6IDxhIGhyZWY9XCIjXCIgY2xhc3M9XCJjbG9zZVwiIGRhdGEtZGlzbWlzcz1cImFsZXJ0XCIgYXJpYS1sYWJlbD1cImNsb3NlXCI+JnRpbWVzOzwvYT4gJyArICc8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj48aW5wdXQgaWQ9XCJhZHZVcmxJbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiB2YWx1ZT1cIicgKyB1cmwgKyAnXCI+PHNwYW4gY2xhc3M9XCJpbnB1dC1ncm91cC1idG5cIj48YnV0dG9uIGNsYXNzPVwiY29weUJ0biBidG4gYnRuLWRlZmF1bHRcIiB0eXBlPVwiYnV0dG9uXCI+Q29weTwvYnV0dG9uPjwvc3Bhbj48L2Rpdj48L2Rpdj4nO1xuICAgICAgICAgICAgJGJvb2ttYXJrX3BsYWNlaG9sZGVyLmh0bWwoY29weUJveCk7XG4gICAgICAgICAgICAkYm9va21hcmtfcGxhY2Vob2xkZXIuZmFkZUluKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvcHlTaGFyZVVybDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyIGJvb2ttYXJrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZHZVcmxJbnB1dFwiKS52YWx1ZTtcbiAgICAgICAgICAgIEdvdkluZm8uQmFzZVZpZXcucHJvdG90eXBlLmNvcHlTaGFyZVVybChlLCBib29rbWFyayk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgLypldmVudHMqL1xuICAgIEFkdmFuY2VkU2VhcmNoVmlldy5wcm90b3R5cGVbJ29uU2VhcmNoSW5TZWxlY3QnXSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyICRlbCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgdGhpcy5fb25TZWFyY2hJblNlbGVjdCgkZWwsIGZ1bmN0aW9uKCkge31cbiAgICAgICAgLmJpbmQodGhpcykpO1xuICAgIH1cbiAgICBBZHZhbmNlZFNlYXJjaFZpZXcucHJvdG90eXBlWydwb3B1bGF0ZUJ5Q29sbGVjdGlvbiddID0gZnVuY3Rpb24oZXZlbnQsIG5vSGlzdG9yeSkge1xuICAgICAgICB2YXIgY29sbGVjdGlvbkFycmF5ID0gdGhpcy5fZ2V0Q29sbGVjdGlvbnMoKTtcbiAgICAgICAgdGhpcy4kKCcuYXN3dm9jLWNyaXRlcmlhLWRpdi1yaWdodCcpLmVtcHR5KCk7XG4gICAgICAgIGlmIChjb2xsZWN0aW9uQXJyYXkgPT0gMCkge1xuICAgICAgICAgICAgdmFyICRoYXphYSA9IHRoaXMuJCgnLmFzd3YtY29sbGVjdGlvbi1jYicpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSAkaGF6YWEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbkFycmF5LnB1c2goJCgkaGF6YWFbaV0pLmRhdGEoJ3ZhbHVlJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBjbGFzc1N0ciA9ICcuYXN3dm9jLScgKyBjb2xsZWN0aW9uQXJyYXkuam9pbignLmFzd3ZvYy0nKTtcbiAgICAgICAgdmFyICRhcnJheSA9IHRoaXMuJChjbGFzc1N0cik7XG4gICAgICAgIHRoaXMucHV0SW5Ib2xkZXJzKHRoaXMuJCgnLmFzd3Ytc2VhcmNoLWluLW9wdGlvbicpKTtcbiAgICAgICAgdGhpcy5wdXRJbkZpZWxkcygkYXJyYXkpO1xuICAgICAgICB0aGlzLiQoJy5hc3d2LXNlYXJjaC1pbi1zZWxlY3QnKS52YWwoXCJjb250ZW50XCIpO1xuICAgICAgICB0aGlzLiQoJy5hc3d2LXNlYXJjaC1pbi1zZWxlY3QnKS5jaGFuZ2UoKTtcbiAgICAgICAgdGhpcy4kKCcuYXN3dm9jLWNyaXRlcmlhLWhvbGRlcicpLmhpZGUoKTtcbiAgICAgICAgJCh0aGlzLiQoJy5hc3d2b2MtY3JpdGVyaWEtaG9sZGVyJylbMF0pLnNob3coKTtcbiAgICAgICAgdGhpcy4kKCcjYWRkY3JpdGVyaWFidXR0b25zJykuc2hvdygpO1xuICAgIH1cbiAgICBBZHZhbmNlZFNlYXJjaFZpZXcucHJvdG90eXBlWydvblNlbGVjdEFsbENvbGxlY3Rpb25zJ10gPSBmdW5jdGlvbihlKSB7XG4gICAgICAgIHZhciAkZWwgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgICAgIHZhciBjaGVja2VkID0gJGVsLnByb3AoJ2NoZWNrZWQnKTtcbiAgICAgICAgdmFyICRhcnJheSA9IHRoaXMuJCgnLmFzd3YtY29sbGVjdGlvbi1jYicpO1xuICAgICAgICAkYXJyYXkucHJvcCgnY2hlY2tlZCcsIGNoZWNrZWQpO1xuICAgICAgICB0aGlzLnBvcHVsYXRlQnlDb2xsZWN0aW9uKCk7XG4gICAgfVxuICAgIEFkdmFuY2VkU2VhcmNoVmlldy5wcm90b3R5cGVbJ19nZXRTZWFyY2hJblN0ciddID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciAkYXJyYXkgPSB0aGlzLiQoJy5hc3d2b2MtY3JpdGVyaWEtaG9sZGVyOnZpc2libGUnKTtcbiAgICAgICAgLy8gICAgIHZhciBfaW5kZXggPSAwO1xuICAgICAgICB2YXIgc3RyID0gXCJcIjtcbiAgICAgICAgdmFyIGZpZWxkcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9ICRhcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIHZhciAkZWwgPSAkKCRhcnJheVtpXSk7XG4gICAgICAgICAgICB2YXIgY3IgPSAkKCRlbC5maW5kKCcuYXN3di1zZWFyY2gtaW4tc2VsZWN0JykpLnZhbCgpO1xuICAgICAgICAgICAgaWYgKGNyICYmIGNyICE9IFwiTm9uZVwiKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNyVmFsdWUgPSAkKCRlbC5maW5kKCcuYXN3dm9jLWNyaXRlcmlhLWlucHV0JykpLnZhbCgpO1xuICAgICAgICAgICAgICAgIGlmIChjclZhbHVlICYmIGNyVmFsdWUgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZHMucHVzaChjciArIFwiOihcIiArIGNyVmFsdWUgKyBcIilcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgc3RyID0gZmllbGRzLmpvaW4oXCIgQU5EIFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH0sXG4gICAgQWR2YW5jZWRTZWFyY2hWaWV3LnByb3RvdHlwZVsnX2dldENvbGxlY3Rpb25zU3RyJ10gPSBmdW5jdGlvbigpIHsgXG4gICAgICAgIHZhciBjb2xsZWN0aW9ucyA9IHRoaXMuX2dldENvbGxlY3Rpb25zKCk7XG4gICAgICAgIGlmKGNvbGxlY3Rpb25zICYmIGNvbGxlY3Rpb25zLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgcmV0dXJuIFwiY29sbGVjdGlvbjooXCIgKyBjb2xsZWN0aW9ucy5qb2luKCcgT1IgJykgKyBcIilcIjtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgQWR2YW5jZWRTZWFyY2hWaWV3LnByb3RvdHlwZVsnc2VhcmNoJ10gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGNvbnN0cmFpbnRNb2RlbCA9IG5ldyBTZWFyY2hDb25zdHJhaW50TW9kZWwoKTtcbiAgICAgICAgdmFyIHNlbGVjdGVkQ29sbGVjdGlvbnMgPSB0aGlzLl9nZXRDb2xsZWN0aW9ucygpO1xuICAgICAgICBjb25zdHJhaW50TW9kZWwuc2V0UGFnZU51bWJlcihudWxsKTtcbiAgICAgICAgdmFyIHF1ZXJ5UGFyYW1zID0gW107XG4gICAgICAgIGlmKCF0aGlzLnZpYUZhY2V0cyl7XG4gICAgICAgICAgICB2YXIgY29sbGVjdGlvblN0ciA9IHRoaXMuX2dldENvbGxlY3Rpb25zU3RyKCk7XG4gICAgICAgICAgICBpZihjb2xsZWN0aW9uU3RyKXtcbiAgICAgICAgICAgICAgICBxdWVyeVBhcmFtcy5wdXNoKGNvbGxlY3Rpb25TdHIpO1xuICAgICAgICAgICAgfSAgICAgICAgICAgIFxuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICB2YXIgY29sbGVjdGlvbnMgPSB0aGlzLl9nZXRDb2xsZWN0aW9ucygpO1xuICAgICAgICAgICAgaWYoY29sbGVjdGlvbnMgJiYgY29sbGVjdGlvbnMubGVuZ3RoID4gMCl7XG4gICAgICAgICAgICAgICAgY29uc3RyYWludE1vZGVsLmNvbnN0cmFpbnRzLmZhY2V0cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgXCJhY2NvZGVuYXZcIiA6IGNvbGxlY3Rpb25zXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRNb2RlbC5jb25zdHJhaW50cy5maWx0ZXJPcmRlciA9IFtcImFjY29kZW5hdlwiXTtcbiAgICAgICAgICAgIH0gICAgICAgICAgICBcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkYXRlUmFuZ2VTdHIgPSB0aGlzLnNlbGVjdERhdGVSYW5nZVZpZXcuZ2V0UXVlcnlTdHJpbmcoKTtcbiAgICAgICAgaWYoZGF0ZVJhbmdlU3RyKXtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zLnB1c2goZGF0ZVJhbmdlU3RyKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIHZhciBzZWFyY2hJblN0ciA9IHRoaXMuX2dldFNlYXJjaEluU3RyKCk7XG4gICAgICAgIFxuICAgICAgICBpZihzZWFyY2hJblN0cil7XG4gICAgICAgICAgICBxdWVyeVBhcmFtcy5wdXNoKHNlYXJjaEluU3RyKTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgLy9wdWJsaXNoZGF0ZTpyYW5nZSgyMDE2LTAyLTAyLCkgQU5EIGdvdmVybm1lbnRhdXRob3I6KENhbmFsIFpvbmUgR292ZXJubWVudCkgQU5EIGNvbnRlbnQ6dGVzdCBBTkQgY29sbGVjdGlvbjooQlVER0VUIE9SIEdPVlBVQiBPUiBDWklDKVxuXG4gICAgICAgIGNvbnN0cmFpbnRNb2RlbC5jb25zdHJhaW50cy5xdWVyeSA9IHF1ZXJ5UGFyYW1zLmpvaW4oXCIgQU5EIFwiKTtcbiAgICAgICAgY29uc3RyYWludE1vZGVsLmNvbnN0cmFpbnRzLmhpc3RvcmljYWwgPSB0cnVlO1xuXG4gICAgICAgIHZhciBjb25zdHJhaW50U3RyID0gZW5jb2RlVVJJQ29tcG9uZW50KGNvbnN0cmFpbnRNb2RlbC5nZXRKU09OU3RyaW5nKCkpO1xuICAgICAgICBpZihjb25zdHJhaW50U3RyKXtcbiAgICAgICAgICBjb25zdHJhaW50U3RyID0gY29uc3RyYWludFN0ci5yZXBsYWNlKC8lMkYvZywgR292SW5mby5hcGFjaGVFc2NhcGUpOyAvLyBpc3N1ZSAjNDY5XG4gICAgICAgIH1cbiAgICAgIFxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvYXBwL3NlYXJjaC8nICsgY29uc3RyYWludFN0cjtcbiAgICAgIFxuICAgIH1cbiAgICBBZHZhbmNlZFNlYXJjaFZpZXcucHJvdG90eXBlWydvbkFkZENyaXRlcmlhJ10gPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgJGVsID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgdmFyICRhcnJheSA9IHRoaXMuJCgnLmFzd3ZvYy1jcml0ZXJpYS1ob2xkZXI6aGlkZGVuJyk7XG4gICAgICAgIGlmICgkYXJyYXkubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgICAgICRlbC5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyICRzID0gJCgkYXJyYXlbMF0pO1xuICAgICAgICAkcy5zaG93KCk7XG4gICAgICAgIHZhciAkc2VsID0gJCgkcy5maW5kKCcuYXN3di1zZWFyY2gtaW4tc2VsZWN0JylbMF0pO1xuICAgICAgICAkc2VsLnZhbChcImNvbnRlbnRcIik7XG4gICAgICAgICRzZWwuY2hhbmdlKCk7XG4gICAgICAgICRzLnBhcmVudCgpLmFwcGVuZCgkcyk7XG4gICAgICAgIHRoaXMuJCgnI2FkZGNyaXRlcmlhYnV0dG9ucycpLnBhcmVudCgpLmFwcGVuZCh0aGlzLiQoJyNhZGRjcml0ZXJpYWJ1dHRvbnMnKSk7XG4gICAgfVxuICAgIEFkdmFuY2VkU2VhcmNoVmlldy5wcm90b3R5cGVbJ29uUmVtb3ZlQ3JpdGVyaWEnXSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyICRlbCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgJCgnIycgKyAkZWwuZGF0YSgnaG9sZGVyJykpLmhpZGUoKTtcbiAgICAgICAgdGhpcy4kKCcjYWRkY3JpdGVyaWFidXR0b25zJykuc2hvdygpO1xuICAgIH1cbiAgICByZXR1cm4gQWR2YW5jZWRTZWFyY2hWaWV3O1xufSk7XG4iLCJkZWZpbmUoW1xuXCJqcXVlcnlcIixcblwidW5kZXJzY29yZVwiLCBcblwiZ292aW5mb1wiXG5dLCBcbmZ1bmN0aW9uKCQsIF8sIEdvdkluZm8pIHtcbiAgICBcbiAgICBcbiAgICB2YXIgQ2l0YXRpb25TZWFyY2hXaWRnZXRWaWV3ID0gR292SW5mby5CYXNlVmlldy5leHRlbmQoe1xuICAgICAgICB0ZW1wbGF0ZTogJy4vY29tbW9uL3RlbXBsYXRlcy9zZWFyY2h3aWRnZXQvQ2l0YXRpb25TZWFyY2hWaWV3Lmh0bWwnLFxuICAgICAgICBsb2FkaW5nVGVtcGxhdGU6ICcuL2NvbW1vbi90ZW1wbGF0ZXMvc2VhcmNod2lkZ2V0L0xvYWRpbmcuaHRtbCcsXG4gICAgICAgIHVzZUhhc2ggOiB0cnVlLFxuICAgICAgICB1c2VTdGF0ZSA6IGZhbHNlLFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICdjaGFuZ2UgI2NpdGF0aW9ucHVibGlzdCc6ICdvbkNvbGxlY3Rpb25DaGFuZ2UnLFxuICAgICAgICAgICAgJ2NoYW5nZSAuZm9ybS1jb250cm9sJzogJ29uRm9ybUNvbnRyb2xDaGFuZ2UnLFxuICAgICAgICAgICAgJ2NsaWNrICNzZWFyY2hCdXR0b24nOiAnb25TZWFyY2gnLFxuICAgICAgICAgICAgJ2NsaWNrIC5jcy1jbG9zZS1hbGVydCc6ICdvbkNsb3NlQWxlcnQnLFxuICAgICAgICAgICAgJ2NsaWNrICNzaG93SGlzdG9yeVVybCc6ICdzaG93SGlzdG9yeVVybCcsXG4gICAgICAgICAgICAnY2xpY2sgLmNvcHlCdG4nOiAnY29weVNoYXJlVXJsJyxcbiAgICAgICAgICAgICAnY2xpY2sgLmRpc3BsYXlTaGFyZSc6ICdzaGFyZU1vZGFsJyxcbiAgICAgICAgICAgICAnY2xpY2sgI2Nsb3NlTW9kYWwnIDogJ3JlbW92ZU1vZGFsJyxcbiAgICAgICAgICAgICAnY2xpY2sgI3NoYXJlLW1vZGFsX19pbm5lci0tY29weSc6ICdjb3B5TGlua1VybCdcblxuICAgICAgICB9LFxuICAgICAgICBzbmlwcGV0czoge1xuICAgICAgICAgICAnc2hhcmUtbW9kYWwnOiAnYnJvd3NlL3RlbXBsYXRlcy9zaGFyZW1vZGFsLmh0bWwnXG4gICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgc2hvd0hpc3RvcnlVcmw6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciAkYm9va21hcmtfcGxhY2Vob2xkZXIgPSB0aGlzLiQoJyNjaXRhdGlvbkJvb2ttYXJrX3BsYWNlaG9sZGVyJyk7XG4gICAgICAgICAgICAkYm9va21hcmtfcGxhY2Vob2xkZXIuaGlkZSgpO1xuICAgICAgICAgICAgdmFyIHN0ciA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeSh0aGlzLl9nZXRTZWFyY2hKc29uKHRydWUpKSk7XG4gICAgICAgICAgICB2YXIgdXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvI2NpdGF0aW9uP2NzaD0nICsgc3RyO1xuICAgICAgICAgICAgdmFyIGNvcHlCb3ggPSAnPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LWluZm9cIj5Db3B5IGFuZCBzYXZlIHRoaXMgbGluazogPGEgaHJlZj1cIiNcIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwiYWxlcnRcIiBhcmlhLWxhYmVsPVwiY2xvc2VcIj4mdGltZXM7PC9hPiAnICsgXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+PGlucHV0IGlkPVwiY2l0YXRpb25VcmxJbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiB2YWx1ZT1cIicgKyB1cmwgKyBcbiAgICAgICAgICAgICdcIj48c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWJ0blwiPjxidXR0b24gY2xhc3M9XCJjb3B5QnRuIGJ0biBidG4tZGVmYXVsdFwiIHR5cGU9XCJidXR0b25cIj5Db3B5PC9idXR0b24+PC9zcGFuPjwvZGl2PjwvZGl2Pic7XG4gICAgICAgICAgICAkYm9va21hcmtfcGxhY2Vob2xkZXIuaHRtbChjb3B5Qm94KTtcbiAgICAgICAgICAgICRib29rbWFya19wbGFjZWhvbGRlci5mYWRlSW4oKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29weVNoYXJlVXJsOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgYm9va21hcmsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNpdGF0aW9uVXJsSW5wdXRcIikudmFsdWU7XG4gICAgICAgICAgICBHb3ZJbmZvLkJhc2VWaWV3LnByb3RvdHlwZS5jb3B5U2hhcmVVcmwoZSwgYm9va21hcmspO1xuICAgICAgICB9LFxuICAgICAgICAgc2hhcmVNb2RhbDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAkY3VycmVudFRhcmdldCA9ICQoZS50YXJnZXQpO1xuICAgICAgICAgICAgICBpZiAofiQuaW5BcnJheShcImRpc3BsYXlTaGFyZVwiLCAkY3VycmVudFRhcmdldFswXS5jbGFzc0xpc3QpKSB7XG4gICAgICAgICAgICAgICAgLy8gdGFrZXMgdGhlIHNoYXJlIG1vZGFsIG1hcmt1cCBhbmQgaW5zZXJ0cyBpdCBhZnRlciB0aGUgY3VycmVudCBwYW5lbCwgaGVscHMgd2l0aCBrZXlib2FyZCBuYXZpZ2F0aW9uLiBIYWQgdG8gd3JhcCAkY3VycmVudFRhcmdldFswXSBpbiBhIGpRdWVyeSBzZWxlY3RvciBmb3IgSUUxMVxuICAgICAgICAgICAgICAgICQoJGN1cnJlbnRUYXJnZXRbMF0uY2xvc2VzdChcIi5jb3B5LWNvbnRhaW5lclwiKSkuYWZ0ZXIodGhpcy5zbmlwcGV0KCdzaGFyZS1tb2RhbCcpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBHb3ZJbmZvLkJhc2VWaWV3LnByb3RvdHlwZS5zaGFyZU1vZGFsRGF0YSgpO1xuICAgICAgICB9LFxuICAgICAgICAgcmVtb3ZlTW9kYWw6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgJChcIi5pbWdQcmV2aWV3X19pbm5lclwiKS5hZGRDbGFzcyhcIm1vZGFsRmFkZU91dC0tc2xvd2VyXCIpO1xuICAgICAgICAgICAgICAgICAgICAkKCcuZGwtbW9kYWxfX2lubmVyJykuYWRkQ2xhc3MoXCJtb2RhbEZhZGVPdXQtLXNsb3dlclwiKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnNoYXJlLW1vZGFsX19pbm5lcicpLmFkZENsYXNzKFwibW9kYWxGYWRlT3V0LS1zbG93ZXJcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9kYWxJdGVtcyA9IFtcIiNpbWdNb2RhbC1jb250YWluXCIsIFwiI2RsLWNvbnRhaW5cIiwgXCIjc2hhcmUtY29udGFpblwiXTtcbiAgICAgICAgICAgICAgICAgICAgbW9kYWxJdGVtcy5mb3JFYWNoKHggPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICQoeCkuZmFkZU91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoeCkucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC8vIGFkZHMgYmFjayBzY3JvbGxpbmdcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nO1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnNjcm9sbCA9IFwieWVzXCI7IC8vZm9yIElFXG4gICAgICAgIH0sXG4gICAgICAgIGNvcHlMaW5rVXJsOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAvLyBzZXBhcmF0ZSBldmVudCBmb3IgY29weWluZyB1cmxzIGluc2lkZSBtb2RhbCwgc2VwYXJhdGUgYmVjYXVzZSBpdCdzIGEgZGlmZmVyZW50IGNsaWNrIGV2ZW50XG4gICAgICAgICAgICBHb3ZJbmZvLkJhc2VWaWV3LnByb3RvdHlwZS5jb3B5U2hhcmVVcmwoZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb25Gb3JtQ29udHJvbENoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyICRlbCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICAgIGlmICghJGVsLmhhc0NsYXNzKCdldmVudC1jaXRhdGlvbi1keW5hbWljLWNvbnRyb2wnKSkge1xuICAgICAgICAgICAgICAgIHZhciBqc29uID0gbnVsbCA7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAganNvbiA9IHRoaXMuX2dldFNlYXJjaEpzb24oKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHt9XG4gICAgICAgICAgICAgICAgaWYgKGpzb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRkeW5hbWljID0gdGhpcy4kKCcuZXZlbnQtY2l0YXRpb24tZHluYW1pYy1jb250cm9sW2RhdGEtY29sbGVjdGlvbj1cIicgKyBqc29uLmNvbGxlY3Rpb24gKyAnXCJdJyk7XG4gICAgICAgICAgICAgICAgICAgICRkeW5hbWljLnByb3AoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHZhciBzdWNjZXNzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJGR5bmFtaWMuZW1wdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvcHRpb25zQXJyID0gZGF0YS5zZWxlY3RPcHRpb25zO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbnNBcnIgJiYgb3B0aW9uc0Fyci5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGR5bmFtaWMucHJvcChcImRpc2FibGVkXCIsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF8uZWFjaChvcHRpb25zQXJyLCBmdW5jdGlvbihmaWVsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkeW5hbWljLmFwcGVuZChcIjxvcHRpb24gdmFsdWU9J1wiICsgZmllbGQudmFsdWUgKyBcIic+XCIgKyBmaWVsZC5kaXNwbGF5VmFsdWUgKyBcIjwvb3B0aW9uPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkICE9PSAndW5kZWZpbmVkJyl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGZpZWxkOyBmaWVsZCA9IHRoaXMuaGlzdG9yeS5zZWFyY2hDcml0ZXJpYVtpXTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGZpZWxkLnZhbHVlID09PSAkZHluYW1pYy5hdHRyKFwiZGF0YS1uYW1lXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkeW5hbWljLnZhbChmaWVsZC5kaXNwbGF5VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy93c3NlYXJjaC9zZWFyY2gvY2l0YXRpb25zZWFyY2gvdXBkYXRlJztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3N0SlNPTih1cmwsIHN1Y2Nlc3MuYmluZCh0aGlzKSwgc3VjY2Vzcy5iaW5kKHRoaXMpLCBqc29uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2xvc2VBbGVydDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIHRoaXMuJCgnI2FsZXJ0ZGl2JykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICAgcHJlbG9hZERhdGFBc3luYzogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciB1cmwgPSAnL3dzc2VhcmNoL3NlYXJjaC9jaXRhdGlvbnNlYXJjaCc7XG4gICAgICAgICAgICB0aGlzLmdldEpTT04odXJsLCBjYWxsYmFjayk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ29sbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdGhpcy4kKCcuY3YtY29sbGVjdGlvbi1jb250ZW50JykuaGlkZSgpO1xuICAgICAgICAgICAgdGhpcy4kKCcjYWxlcnRkaXYnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgJGVsID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuICAgICAgICAgICAgICAgIHZhciAkY29udGVudCA9IHRoaXMuJCgnI2NvbGxlY3Rpb25fJyArICRlbC52YWwoKSk7XG4gICAgICAgICAgICAgICAgJGNvbnRlbnQuc2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfZ2V0U2VhcmNoSnNvbjogZnVuY3Rpb24obm9Wb2xhZGl0aW9uKSB7XG4gICAgICAgICAgICB2YXIgJGlucHV0cyA9IHRoaXMuJCgnc2VsZWN0OnZpc2libGUsaW5wdXQ6dmlzaWJsZScpO1xuICAgICAgICAgICAgdmFyIGNvbGxlY3Rpb24gPSBudWxsIDtcbiAgICAgICAgICAgIHZhciBzZWFyY2hDcml0ZXJpYSA9IFtdO1xuICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICAgICAgICB2YXIgZHluYW1pYyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSAkaW5wdXRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciAkZWwgPSAkKCRpbnB1dHNbaV0pO1xuICAgICAgICAgICAgICAgIHZhciByZXF1aXJlZCA9ICRlbC5kYXRhKCdyZXF1aXJlZCcpO1xuICAgICAgICAgICAgICAgIGlmICgkZWxbMF0uaWQgPT0gJ2NpdGF0aW9ucHVibGlzdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbiA9ICRlbC52YWwoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmllbGQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInZhbHVlXCI6ICRlbC5kYXRhKCduYW1lJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpc3BsYXlWYWx1ZVwiOiAkZWwudmFsKClcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFub1ZvbGFkaXRpb24gJiYgKHJlcXVpcmVkICYmICghJGVsLnZhbCgpIHx8ICRlbC52YWwoKSA9PSBcIi0xXCIpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgcmVxdWlyZWQ7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGVsLnZhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hDcml0ZXJpYS5wdXNoKGZpZWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoJGVsLmhhc0NsYXNzKCdldmVudC1jaXRhdGlvbi1keW5hbWljLWNvbnRyb2wnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZHluYW1pYy5wdXNoKGZpZWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbjogY29sbGVjdGlvbixcbiAgICAgICAgICAgICAgICBzZWFyY2hDcml0ZXJpYTogc2VhcmNoQ3JpdGVyaWEsXG4gICAgICAgICAgICAgICAgc2VsZWN0T3B0aW9uczogZHluYW1pYyxcbiAgICAgICAgICAgICAgICAvL3Jlc3VsdDogcmVzdWx0XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uU2VhcmNoOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBqc29uID0gbnVsbCA7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGpzb24gPSB0aGlzLl9nZXRTZWFyY2hKc29uKCk7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIm9uc2VhcmNoIGpzb24gOlwiK0pTT04uc3RyaW5naWZ5KCkpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kKCcjZG9jdGV4dCcpLmh0bWwoZXJyKTtcbiAgICAgICAgICAgICAgICB0aGlzLiQoJyNhbGVydGRpdicpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvKnZhciBvblJlZGlyZWN0ID0gZnVuY3Rpb24odXJsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvcHJlcyA9IHdpbmRvdy5vcGVuKHVybCk7XG4gICAgICAgICAgICAgICAgaWYgKHBvcHJlcyA9PSBudWxsICkge1xuICAgICAgICAgICAgICAgICAgICBtc2cgPSAnPGEgc3R5bGU9XCJjb2xvcjpibHVlO1wiIGhyZWY9XCInICsgdXJsICsgJ1wiIHRhcmdldD1cXCdfYmxhbmtcXCcgPkNsaWNrIGhlcmU8L2E+IGlmIGNvbnRlbnQgZG9lcyBub3Qgb3Blbi4gVGhpcyBjb3VsZCBoYXBwZW4gYmVjYXVzZSBvZiBhIHBvcC11cCBibG9ja2VyLic7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RvY3RleHQnKS5odG1sKG1zZyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnI2FsZXJ0ZGl2JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LmJpbmQodGhpcyk7XG4gICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmFyIHNob3dQYW5lbCA9IGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwicmVzdWx0Lmxlbmd0aFwiICtyZXN1bHQubGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgaWYgKHJlc3VsdHMgJiYgcmVzdWx0cy5sZW5ndGggPjAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnI2RvY3RleHQnKS5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5mb3JFYWNoKCByZXN1bHQgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5sZW5ndGg+MCAmJiByZXN1bHRbMF0hPW51bGwgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBtc2cgPSAnPHRhYmxlIGNsYXNzPVxcXCJ0YWJsZVxcXCI+PHRib2R5Pic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnID1tc2cgKyc8dHIgY2xhc3M9XFxcIlxcXCI+PHRkIGNsYXNzPVxcXCJcXFwiPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0WzRdICE9bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1zZz1tc2crJzxwPjxiPicrcmVzdWx0WzRdKyc8L2I+PC9wPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFs1XSAhPW51bGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPHAgY2xhc3M9XFxcInNtYWxsXFxcIj48ZW0+JytyZXN1bHRbNV0rJzwvZW0+PC9wPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1zZz1tc2crJzxkaXYgY2xhc3M9XFxcImJ0bi1ncm91cC1ob3Jpem9udGFsXFxcIj4nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0WzBdICE9bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1zZz1tc2crJzxhIGNsYXNzPVxcXCJidG4gYnRuLXNtIGJ0bi1mb3JtYXRcXFwiIGlkID1cXFwicGRmbGlua1xcXCIgaHJlZj1cIi9jb250ZW50L3BrZy8nK3Jlc3VsdFswXSsnXCIgdGFyZ2V0PVxcXCJfYmxhbmtcXFwiPlBERjwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXN1bHRbMl0gIT1udWxsKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbGZpbGU9cmVzdWx0WzZdK1wiL1wiK3Jlc3VsdFsyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWZvcm1hdFxcXCIgaWQgPVxcXCJ0eHRsaW5rXFxcIiBocmVmPVwiL2NvbnRlbnQvcGtnLycraHRtbGZpbGUrJ1wiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5UZXh0PC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFs4XSAhPW51bGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdGRvdCA9cmVzdWx0WzhdLmxhc3RJbmRleE9mKFwiLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG90aGVyMWZpbGUgPSByZXN1bHRbOF0uc3Vic3RyaW5nKGxhc3Rkb3QrMSkudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWZvcm1hdFxcXCIgaWQgPVxcXCJ4bWxsaW5rXFxcIiBocmVmPVwiL2NvbnRlbnQvcGtnLycrcmVzdWx0WzZdKycvJytyZXN1bHRbOF0rJ1wiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj4nK290aGVyMWZpbGUrJzwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFs5XSAhPW51bGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3Rkb3QgPXJlc3VsdFs5XS5sYXN0SW5kZXhPZihcIi5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgb3RoZXIyZmlsZSA9IHJlc3VsdFs5XS5zdWJzdHJpbmcobGFzdGRvdCsxKS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWZvcm1hdFxcXCIgIGhyZWY9XCIvY29udGVudC9wa2cvJytyZXN1bHRbNl0rJy8nK3Jlc3VsdFs5XSsnXCIgdGFyZ2V0PVxcXCJfYmxhbmtcXFwiPicrb3RoZXIyZmlsZSsnPC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0WzEwXSAhPW51bGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsxMF0uaW5kZXhPZigndXNsbScpICE9IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWZvcm1hdFxcXCIgIGhyZWY9XCIvY29udGVudC9wa2cvJytyZXN1bHRbNl0rJy8nK3Jlc3VsdFsxMF0rJ1wiICB0YXJnZXQ9XCJfYmxhbmtcIj5VU0xNPC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XCJidG4gYnRuLXNtIGJ0bi1mb3JtYXRcIiAgaHJlZj1cIi9jb250ZW50L3BrZy8nK3Jlc3VsdFs2XSsnLycrcmVzdWx0WzEwXSsnXCIgIHRhcmdldD1cIl9ibGFua1wiPlhNTDwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRldGFpbHN1cmwgPScvYXBwL2RldGFpbHMvJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXN1bHRbNl0gIT1udWxsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxzdXJsPWRldGFpbHN1cmwrcmVzdWx0WzZdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFs3XSAhPW51bGwpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHN1cmw9ZGV0YWlsc3VybCtcIi9cIityZXN1bHRbN107XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihkZXRhaWxzdXJsIT0nL2FwcC9kZXRhaWxzLycpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNnPW1zZysnPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWZvcm1hdCBcXFwiICBpZCA9XFxcImRldGFpbHNsaW5rXFxcIiBocmVmPScrZGV0YWlsc3VybCsnIHRhcmdldD1cXFwiX2JsYW5rXFxcIj5EZXRhaWxzPC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtc2c9bXNnKyc8YSBjbGFzcz1cXFwiYnRuIGJ0bi1zbSBidG4tZGVmYXVsdCBkaXNwbGF5U2hhcmVcXFwiIGFkZHRoaXM6dGl0bGU9XCInK3Jlc3VsdFs0XSsnXCIgYWRkdGhpczp1cmw9XCInK2RldGFpbHN1cmwrJ1wiIGhyZWY9XFxcImphdmFzY3JpcHQ6O1xcXCI+U2hhcmU8L2E+JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1zZz1tc2crJyA8L2Rpdj4gPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4nO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNkb2N0ZXh0JykuYXBwZW5kKG1zZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjYWxlcnRkaXYnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIH0pXG5cblxuICAgICAgICAgICAgICAgfSBcblxuXG5cblxuICAgICAgICAgICAgfS5iaW5kKHRoaXMpO1xuXG4gICAgICAgICAgICB2YXIgc3VjY2VzcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVzdWx0IGluIHNjcmlwdCBcIitkYXRhLnJlZGlyZWN0VXJsKTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZU92ZXJsYXkoKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLnJlc3VsdCAmJiBkYXRhLnJlc3VsdFswXSE9bnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICBzaG93UGFuZWwoZGF0YS5yZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgLyogaWYgKGRhdGEgJiYgZGF0YS5yZWRpcmVjdFVybCkge1xuICAgICAgICAgICAgICAgICAgICBvblJlZGlyZWN0KGRhdGEucmVkaXJlY3RVcmwpO1xuXG4gICAgICAgICAgICAgICAgfSovXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA7XG4gICAgICAgICAgICB2YXIgZXJyb3IgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVPdmVybGF5KCk7XG4gICAgICAgICAgICAgICAgLyppZiAoZGF0YSAmJiBkYXRhLnJlZGlyZWN0VXJsKSB7XG4gICAgICAgICAgICAgICAgICAgIG9uUmVkaXJlY3QoZGF0YS5yZWRpcmVjdFVybCk7XG4gICAgICAgICAgICAgICAgfSAqL1xuICAgICAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEucmVzdWx0ICYmIGRhdGEucmVzdWx0WzBdIT1udWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dQYW5lbChkYXRhLnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvL3ZhciBlcnJvciA9IChkYXRhICYmIGRhdGEuc3RhdHVzKSB8fCBcIkVycm9yIG9jY3VycmVkIHdoaWxlIHNlYXJjaGluZyBmb3IgY2l0YXRpb24uXCI7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlcnJvciA9IChkYXRhICYmIGRhdGEuc3RhdHVzKSB8fCBcIkVycm9yIG9jY3VycmVkIHdoaWxlIHNlYXJjaGluZyBmb3IgY2l0YXRpb24uXCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjZG9jdGV4dCcpLmh0bWwoZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNhbGVydGRpdicpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgO1xuICAgICAgICAgICAgdGhpcy5zZXRPdmVybGF5KCk7XG4gICAgICAgICAgICB2YXIgdXJsID0gJy93c3NlYXJjaC9zZWFyY2gvY2l0YXRpb25zZWFyY2gnO1xuICAgICAgICAgICAgdGhpcy5wb3N0SlNPTih1cmwsIGVycm9yLmJpbmQodGhpcyksIHN1Y2Nlc3MuYmluZCh0aGlzKSwganNvbik7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uKCkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMub25Db2xsZWN0aW9uQ2hhbmdlKCk7XG4gICAgICAgICAgICB2YXIgaGlzdG9yeSA9IHRoaXMuZ2V0UGFyYW1ldGVyKCdjc2gnKTtcbiAgICAgICAgICAgIGlmIChoaXN0b3J5KSB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeSA9IGRlY29kZVVSSUNvbXBvbmVudChoaXN0b3J5KTtcbiAgICAgICAgICAgICAgICBoaXN0b3J5ID0gSlNPTi5wYXJzZShoaXN0b3J5KTtcbiAgICAgICAgICAgICAgICB0aGlzLmhpc3Rvcnk9aGlzdG9yeTtcbiAgICAgICAgICAgICAgICB0aGlzLnB1dEZvcm0oaGlzdG9yeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBwdXRGb3JtOiBmdW5jdGlvbihoaXN0b3J5KSB7XG4gICAgICAgICAgICB0aGlzLiQoJyNjaXRhdGlvbnB1Ymxpc3QnKS52YWwoaGlzdG9yeS5jb2xsZWN0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuJCgnI2NpdGF0aW9ucHVibGlzdCcpLnRyaWdnZXIoJ2NoYW5nZScpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGZpZWxkOyBmaWVsZCA9IGhpc3Rvcnkuc2VhcmNoQ3JpdGVyaWFbaV07IGkrKykge1xuICAgICAgICAgICAgICAgIC8vIGNhY2hlIHRoZSBzZWxlY3RvciBiZWZvcmUgYXNzaWduaW5nIHZhbHVlXG4gICAgICAgICAgICAgICAgdmFyIHNlbGVjdEZpZWxkPXRoaXMuJChcIiNzZWNvbmRjcml0ZXJpYSBbZGF0YS1jb2xsZWN0aW9uPSdcIiArIGhpc3RvcnkuY29sbGVjdGlvbiArIFwiJ11bZGF0YS1uYW1lPSdcIiArIGZpZWxkLnZhbHVlICsgXCInXVwiKTtcbiAgICAgICAgICAgICAgICBzZWxlY3RGaWVsZC52YWwoZmllbGQuZGlzcGxheVZhbHVlKTtcbiAgICAgICAgICAgICAgICBzZWxlY3RGaWVsZC50cmlnZ2VyKCdjaGFuZ2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBDaXRhdGlvblNlYXJjaFdpZGdldFZpZXc7XG59XG4pO1xuXG4iLCJkZWZpbmUoW1wianF1ZXJ5XCIsIFwidW5kZXJzY29yZVwiLCBcImJhY2tib25lXCIsIFwiZ292aW5mb1wiXSwgZnVuY3Rpb24oJCwgXywgQmFja2JvbmUsIEdvdkluZm8pIHtcbiAgICBTZWFyY2hDb25zdHJhaW50TW9kZWwgPSBHb3ZJbmZvLlBvc3RDb25zdHJhaW50TW9kZWwuZXh0ZW5kKHtcblxuICAgICAgICBhZGROYXZpZ2F0b3I6IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuY29uc3RyYWludHMubmF2aWdhdG9yKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25zdHJhaW50cy5uYXZpZ2F0b3IgPSB7fTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cmFpbnRzLm5hdmlnYXRvci5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cmFpbnRzLm5hdmlnYXRvci52YWx1ZXMgPSBbdmFsdWVdO1xuICAgICAgICAgICAgICAgIHRoaXMuY29uc3RyYWludHMubmF2aWdhdG9yLm5leHQgPSBudWxsIDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHRlbXAgPSB0aGlzLmNvbnN0cmFpbnRzLm5hdmlnYXRvcjtcbiAgICAgICAgICAgICAgICB2YXIgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB3aGlsZSAodGVtcCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGVtcC5uYW1lID09IG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAudmFsdWVzLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0ZW1wLm5leHQgJiYgIWZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wLm5leHQgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAubmV4dC5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAubmV4dC52YWx1ZXMgPSBbdmFsdWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcC5uZXh0Lm5leHQgPSBudWxsIDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRlbXAgPSB0ZW1wLm5leHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RyYWludHMubmF2aWdhdG9yO1xuICAgICAgICB9LFxuICAgICAgICBzZXRQYWdlTnVtYmVyIDogZnVuY3Rpb24ocGFnZU51bWJlcil7XG4gICAgICAgICAgICBpZihwYWdlTnVtYmVyKXtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cmFpbnRzLm9mZnNldCA9IHBhZ2VOdW1iZXI7XG4gICAgICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25zdHJhaW50cy5vZmZzZXQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0sXG4gICAgICAgIGdldFBhZ2VOdW1iZXIgOiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RyYWludHMub2Zmc2V0ID8gdGhpcy5jb25zdHJhaW50cy5vZmZzZXQgOiAwXG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0UGFnZVNpemUgOiBmdW5jdGlvbihwYWdlU2l6ZSl7XG4gICAgICAgICAgICBpZihwYWdlU2l6ZSl7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25zdHJhaW50cy5wYWdlU2l6ZSA9IHBhZ2VTaXplO1xuICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY29uc3RyYWludHMucGFnZVNpemUgPSAxMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICB9LFxuICAgICAgICBnZXRQYWdlU2l6ZSA6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb25zdHJhaW50cy5wYWdlU2l6ZSA/IHRoaXMuY29uc3RyYWludHMucGFnZVNpemUgOiAxMFxuICAgICAgICB9LFxuICAgICAgICBfZ2V0TmF2aWdhdG9yU3RyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBzdHIgPSBcIiZuYT1cIjtcbiAgICAgICAgICAgIHZhciBmaWVsZEFycmF5ID0gW107XG4gICAgICAgICAgICB2YXIgdmFsdWVBcnJheSA9IFtdO1xuICAgICAgICAgICAgdmFyIHRlbXAgPSB0aGlzLmNvbnN0cmFpbnRzLm5hdmlnYXRvcjtcbiAgICAgICAgICAgIHdoaWxlICh0ZW1wKSB7XG4gICAgICAgICAgICAgICAgZmllbGRBcnJheS5wdXNoKHRlbXAubmFtZSk7XG4gICAgICAgICAgICAgICAgdmFyIGFycmF5ID0gdGVtcC52YWx1ZXM7XG4gICAgICAgICAgICAgICAgdmFyIHZhbCA9IGFycmF5LmpvaW4oXCIhXCIpO1xuICAgICAgICAgICAgICAgIGlmIChhcnJheS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbCA9IFwiIVwiICsgdmFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZUFycmF5LnB1c2godmFsKTtcbiAgICAgICAgICAgICAgICB0ZW1wID0gdGVtcC5uZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RyICs9IGZpZWxkQXJyYXkuam9pbihcIl9cIik7XG4gICAgICAgICAgICBzdHIgKz0gXCImc2U9XCI7XG4gICAgICAgICAgICBzdHIgKz0gdmFsdWVBcnJheS5qb2luKFwiX1wiKTtcbiAgICAgICAgICAgIHJldHVybiBzdHI7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEJvZHk6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb25zdHJhaW50cztcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0VXJsOiBmdW5jdGlvbihvcHRpb25zKSB7XG4vLyAgICAgICAgICAgICBvcHRpb25zID0gb3B0aW9ucyA/IG9wdGlvbnMgOiB7fTtcbi8vICAgICAgICAgICAgIHN0ciA9ICdzYj0nO1xuLy8gICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RyYWludHMuc29ydEJ5KSB7XG4vLyAgICAgICAgICAgICAgICAgc3RyICs9IHRoaXMuY29uc3RyYWludHMuc29ydEJ5O1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RyYWludHMuYmRmKSB7XG4vLyAgICAgICAgICAgICAgICAgc3RyICs9ICcmYnJvd3NlZGF0ZWZsYWc9JyArIHRoaXMuY29uc3RyYWludHMuYmRmO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RyYWludHMuaGlzdG9yaWNhbCkge1xuLy8gICAgICAgICAgICAgICAgIHN0ciArPSAnJmlzSGlzdG9yaWNhbD0nICsgdGhpcy5jb25zdHJhaW50cy5oaXN0b3JpY2FsO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgc3RyICs9ICcmcHM9JyArIHRoaXMuZ2V0UGFnZVNpemUoKSArICcmc3I9JyArICh0aGlzLmdldFBhZ2VOdW1iZXIoKSArIDEpO1xuLy8gICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RyYWludHMucXVlcnkpIHtcbi8vICAgICAgICAgICAgICAgICBzdHIgKz0gXCImc3Q9XCIgKyB0aGlzLmNvbnN0cmFpbnRzLnF1ZXJ5O1xuLy8gICAgICAgICAgICAgICAgIGlmICghb3B0aW9ucy5ub1NlYXJjaFdpdGhpbiAmJiB0aGlzLmNvbnN0cmFpbnRzLnNlYXJjaFdpdGhpbikge1xuLy8gICAgICAgICAgICAgICAgICAgICBzdHIgKz0gXCIgYW5kIFwiICsgdGhpcy5jb25zdHJhaW50cy5zZWFyY2hXaXRoaW47XG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgaWYgKHRoaXMuY29uc3RyYWludHMubmF2aWdhdG9yICYmICFfLmlzRW1wdHkodGhpcy5jb25zdHJhaW50cy5uYXZpZ2F0b3IpKSB7XG4vLyAgICAgICAgICAgICAgICAgc3RyICs9IHRoaXMuX2dldE5hdmlnYXRvclN0cigpO1xuLy8gICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuY29uc3RyYWludHMpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIFNlYXJjaENvbnN0cmFpbnRNb2RlbDtcbn0pO1xuIiwiZGVmaW5lKFtcImpxdWVyeVwiLCBcInVuZGVyc2NvcmVcIiwgXCJjb21tb24vY29uc3RhbnRzL3VpcHJvcHNcIiwgXCJiYWNrYm9uZVwiLCBcImdvdmluZm9cIiwgXCJ1dGlsc1wiLCBcInNlYXJjaC92aWV3cy9uZXdTZWFyY2hDb25zdHJhaW50TW9kZWxcIl0sIGZ1bmN0aW9uKCQsIF8sIHVpcHJvcHMsIEJhY2tib25lLCBHb3ZJbmZvLCB1dGlscywgU2VhcmNoQ29uc3RyYWludE1vZGVsKSB7XG4gICAgdmFyIFNpbXBsZVNlYXJjaFZpZXcgPSBHb3ZJbmZvLkJhc2VWaWV3LmV4dGVuZCh7XG4gICAgICAgIHRlbXBsYXRlOiAnLi9jb21tb24vdGVtcGxhdGVzL3NlYXJjaHdpZGdldC9TaW1wbGVTZWFyY2hWaWV3Lmh0bWwnLFxuICAgICAgICB1c2VTdGF0ZTogdHJ1ZSxcbiAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAnY2xpY2sgI3NlYXJjaEJ1dHRvbic6ICdvblNlYXJjaCcsXG4gICAgICAgICAgICAna2V5dXAgI3NlYXJjaFN0cmluZyc6ICdvbktleXVwJyxcbiAgICAgICAgICAgICdjaGFuZ2UgI3NlYXJjaFdpdGhpbic6ICdvblNlYXJjaFdpdGhpbkNoYW5nZScsXG4gICAgICAgICAgICAnZm9jdXMgI3NlYXJjaFN0cmluZyc6ICdvbkZvY3VzJ1xuICAgICAgICB9LFxuICAgICAgICBzbmlwcGV0czoge1xuICAgICAgICAgICAgJ2Vycm9ybm90aWZpY2F0aW9uJzogJ2NvbW1vbi90ZW1wbGF0ZXMvZXJyb3Jub3RpZmljYXRpb24uaHRtbCdcbiAgICAgICAgfSxcbiAgICAgICAgb25TZWFyY2hXaXRoaW5DaGFuZ2U6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmICgkKGUuY3VycmVudFRhcmdldCkucHJvcCgnY2hlY2tlZCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy53aXRoaW5UZW1wID0gdGhpcy4kKCcjc2VhcmNoU3RyaW5nJykudmFsKCk7XG4gICAgICAgICAgICAgICAgdGhpcy4kKCcjc2VhcmNoU3RyaW5nJykudmFsKFwiXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiQoJyNzZWFyY2hTdHJpbmcnKS52YWwodGhpcy53aXRoaW5UZW1wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25Gb2N1czogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyICRlbCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICAgICRlbC5zZWxlY3QoKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25IYXNoQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByb290ID0gdGhpcy5nZXRQYXJhbWV0ZXIoMSk7XG5cbiAgICAgICAgICAgIGlmIChyb290ICE9ICdzZWFyY2gnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kKCcjc2VhcmNoU3RyaW5nJykudmFsKFwiXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMuJCgnLnNlYXJjaC13aXRoaW4td3JhcCcpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBjb25zdHJhaW50cyA9IHRoaXMuZ2V0UGFyYW1ldGVyKDIpO1xuICAgICAgICAgICAgICAgIHZhciBlcnJvclRleHQgPSB1aXByb3BzLm1lc3NhZ2VzLmVycm9yWydHRU5FUkFMJ107XG4gICAgICAgICAgICAgICAgaWYgKGNvbnN0cmFpbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50cyA9IEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGNvbnN0cmFpbnRzKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnZGl2W2RhdGEtaWQ9XCJzZWFyY2hcIl0nKS5odG1sKHRoaXMuc25pcHBldCgnZXJyb3Jub3RpZmljYXRpb24nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JUZXh0OiBlcnJvclRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY29uc3RyYWludHMgJiYgY29uc3RyYWludHMucXVlcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcuc2VhcmNoLXdpdGhpbi13cmFwJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjc2VhcmNoU3RyaW5nJykudmFsKGNvbnN0cmFpbnRzLnF1ZXJ5KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiQoJyNzZWFyY2hTdHJpbmcnKS52YWwoXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCgnLnNlYXJjaC13aXRoaW4td3JhcCcpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvbktleXVwOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLmtleUNvZGUgPT0gMTMgJiYgdGhpcy5vblNlYXJjaCgpO1xuICAgICAgICB9LFxuICAgICAgICBvblNlYXJjaDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgY29uc3RyYWludE1vZGVsID0gbmV3IFNlYXJjaENvbnN0cmFpbnRNb2RlbCgpO1xuICAgICAgICAgICAgdmFyIGNvbnN0cmFpbnRzID0gbnVsbDtcbiAgICAgICAgICAgIGlmKHRoaXMuZ2V0UGFyYW1ldGVyKDEpID09ICdzZWFyY2gnKXtcbiAgICAgICAgICAgICAgICBjb25zdHJhaW50cyA9IHRoaXMuZ2V0UGFyYW1ldGVyKDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvbnN0cmFpbnRzKSB7XG4gICAgICAgICAgICAgICAgLy8gUHJlc2VydmUgY3VycmVudCBzZWFyY2ggY3JpdGVyaWFcbiAgICAgICAgICAgICAgICBjb25zdHJhaW50TW9kZWwuY29uc3RyYWludHMgPSBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudChjb25zdHJhaW50cykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHNlYXJjaFN0cmluZyA9IHRoaXMuJCgnI3NlYXJjaFN0cmluZycpLnZhbCgpO1xuICAgICAgICAgICAgdmFyIGFsZXJ0SWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFsZXJ0ZGl2XCIpO1xuICAgICAgICAgICAgaWYgKCQudHJpbShzZWFyY2hTdHJpbmcpICE9PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuJCgnI3NlYXJjaFdpdGhpbicpLnByb3AoJ2NoZWNrZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICAvL1JlZ0V4OiBpZiBsYXN0IHN0cmluZyBpcyBOT1QgZW1wdHkgQU5EIE5PVCBhbGwgd2hpdGVzcGFjZSwgdGhlbiB1bmlvbiwgb3RoZXJ3aXNlIGp1c3QgdXNlIG5ldyBzdHJpbmc7IC1BXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRNb2RlbC5jb25zdHJhaW50cy5xdWVyeSA9IC9cXFMvLnRlc3QodGhpcy53aXRoaW5UZW1wKSA/IHRoaXMud2l0aGluVGVtcCArIFwiIGFuZCBcIiArIHNlYXJjaFN0cmluZyA6IHNlYXJjaFN0cmluZztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kKCcjc2VhcmNoV2l0aGluJykucmVtb3ZlQXR0cignY2hlY2tlZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRNb2RlbCA9IG5ldyBTZWFyY2hDb25zdHJhaW50TW9kZWwoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludE1vZGVsLmNvbnN0cmFpbnRzLnF1ZXJ5ID0gc2VhcmNoU3RyaW5nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdHJhaW50TW9kZWwuc2V0UGFnZU51bWJlcihudWxsICk7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQYXJlbnQoKS50cmlnZ2VyKCdzaW1wbGVzZWFyY2gnKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy5zZXRQYXJhbWV0ZXJzKHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIDEgOiBcInNlYXJjaFwiLFxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgMiA6IGVuY29kZVVSSUNvbXBvbmVudChjb25zdHJhaW50TW9kZWwuZ2V0SlNPTlN0cmluZygpKVxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB2YXIgY29uc3RyYWludFN0ciA9IGVuY29kZVVSSUNvbXBvbmVudChjb25zdHJhaW50TW9kZWwuZ2V0SlNPTlN0cmluZygpKTtcbiAgICAgICAgICAgICAgICBpZihjb25zdHJhaW50U3RyKXtcbiAgICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRTdHIgPSBjb25zdHJhaW50U3RyLnJlcGxhY2UoLyUyRi9nLCBHb3ZJbmZvLmFwYWNoZUVzY2FwZSk7IC8vIGlzc3VlICM0NjlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGxvY2F0aW9uLmhyZWYuaW5kZXhPZignL2FwcCcpID49IDAgJiYgIWxvY2F0aW9uLmhyZWYuaW5kZXhPZihcIi9hcHByb3ByaWF0aW9uc1wiKSkge1xuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2hTdGF0ZSh7fSwgJycsIGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3RuYW1lICsgJy9hcHAvc2VhcmNoLycgKyBjb25zdHJhaW50U3RyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvYXBwL3NlYXJjaC8nICsgY29uc3RyYWludFN0cjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy93aW5kb3cubG9jYXRpb24uaHJlZiA9IDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKCQudHJpbShzZWFyY2hTdHJpbmcpID09PSBcIlwiICYmIGFsZXJ0SWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5zaG93YWxlcnQoXCIjZm9ybUVycm9yc1wiLCBcIlBsZWFzZSBlbnRlciBpbiBhIHZhbGlkIHNlYXJjaCB0ZXJtLlwiLCBcImFsZXJ0LWluZm9cIiwgNTAwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5vbkhhc2hDaGFuZ2UoKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gU2ltcGxlU2VhcmNoVmlldztcbn0pO1xuIiwiLy9leHBvcnQgZ2xvYmFsIF9wYXEgYXJyYXkgdXBvbiB3aGljaCBjaGFuZ2VzIHdpbGwgYmUgdHJhY2tlZC5cbmRlZmluZShbJ3Bpd2lrJyAsICdqcXVlcnknXSwgZnVuY3Rpb24gKHBpd2lrICwgJCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIFxuICAgICBcbiAgICBcbi8qICAgIGlmICh0eXBlb2YgSlNPTjIgPT0gJ29iamVjdCcgJiYgdHlwZW9mIEpTT04yLnN0cmluZ2lmeSA9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LkpTT04gPT09ICdvYmplY3QnICYmIHdpbmRvdy5KU09OLnN0cmluZ2lmeSAmJiB3aW5kb3cuSlNPTi5wYXJzZSkge1xuICAgIFx0d2luZG93LkpTT04yID0gd2luZG93LkpTT047XG4gICAgfSovXG4gICAgX3BhcS5wdXNoKFtcInNldFRyYWNrZXJVcmxcIiwgdHJhY2tpbmdfc2VydmVyXSk7XG4gICAgX3BhcS5wdXNoKFtcInNldFNpdGVJZFwiLCBcIidcIit0cmFja2luZ19pZF9zaXRlK1wiJ1wiXSk7XG4gICAgX3BhcS5wdXNoKFsnZGlzYWJsZUNvb2tpZXMnXSk7XG4gICAgX3BhcS5wdXNoKFtcInRyYWNrUGFnZVZpZXdcIl0pO1xuXG5cbiAgLy8gIF9wYXEucHVzaChbXCJlbmFibGVMaW5rVHJhY2tpbmdcIl0pO1xuICAgICQoZnVuY3Rpb24oKXtcblxuXG4gICAgICAgIC8vIHRoaXMgaXMgdG8gdHJhY2sgc2l0ZSBzZWFyY2guXG4gICAgICAgICQoJ2JvZHknKS5vbignY2xpY2snICwnI3NlYXJjaEJ1dHRvbicsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpZigkKCcjc2VhcmNoU3RyaW5nJykudmFsKCkpe1xuICAgICAgICAgICAgICAgIF9wYXEucHVzaChbJ3RyYWNrU2l0ZVNlYXJjaCcgLCQoJyNzZWFyY2hTdHJpbmcnKS52YWwoKV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGFic29sdXRlUGF0aCA9IGZ1bmN0aW9uKGhyZWYpIHtcbiAgICAgICAgICAgIHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG4gICAgICAgICAgICBsaW5rLmhyZWYgPSBocmVmO1xuICAgICAgICAgICAgLy8gd29ya2luZyBpbiBjaHJvbWUsICBJRTExIGFuZCBJRTEwXG4gICAgICAgICAgICByZXR1cm4gbGluay5ocmVmO1xuICAgICAgICB9XG4gICAgICAgdmFyIGRsX3JleCA9IG5ldyBSZWdFeHAoXCIocGRmfHhsc3x0eHR8emlwfHhtbCkkXCIpO1xuXG4gICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICdhJyAsZnVuY3Rpb24oJGV2ZW50KXtcblxuICAgICAgICAgICBpZigkKHRoaXMpLmF0dHIoJ2hyZWYnKSl7IC8vIGhzIGhyZWYgYXR0cmlidXRlXG4gICAgICAgICAgICAgICBpZihkbF9yZXgudGVzdCggJCh0aGlzKS5hdHRyKCdocmVmJykpKXtcbiAgICAgICAgICAgICAgICBfcGFxLnB1c2goWyd0cmFja0xpbmsnICwgYWJzb2x1dGVQYXRoKCQodGhpcykuYXR0cignaHJlZicpKSAsICdkb3dubG9hZCddKTtcbiAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIF9wYXEucHVzaChbJ3RyYWNrTGluaycgLCBhYnNvbHV0ZVBhdGgoJCh0aGlzKS5hdHRyKCdocmVmJykpICwgJ2xpbmsnXSk7XG4gICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAvLyB0cmFjayBhcyBldmVudCAsIGV4YW1wbGUgZm9yIHNoYXJlIGxpbmtzLlxuICAgICAgICAgICAgfVxuICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiBfcGFxO1xufSk7XG4iLCJkZWZpbmUoe1xuXG5cblxucGFyc2VRdWVyeVBhcmFtZXRlcnNCeU5hbWU6IGZ1bmN0aW9uIChxdWVyeSxwYXJhbWV0ZXJuYW1lKSB7IFxuXHRcdFx0XHR2YXIgbWF0Y2ggPSBSZWdFeHAocGFyYW1ldGVybmFtZSArICc9KFteJl0qKScpXG4gICAgICAgICAgICAgICAgICAgIC5leGVjKHF1ZXJ5KTtcblx0XHRcdFx0cmV0dXJuIG1hdGNoICYmIGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFsxXS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG5cdFxuXHRcdFxufSxcblxudXBkYXRlUXVlcnlTdHJpbmdQYXJhbWV0ZXI6IGZ1bmN0aW9uICAodXJpLCBrZXksIHZhbHVlKSB7XG4gIHZhciByZSA9IG5ldyBSZWdFeHAoXCIoWz98Jl0pXCIgKyBrZXkgKyBcIj0uKj8oJnwjfCQpXCIsIFwiaVwiKTtcblx0ICBpZiAodXJpLm1hdGNoKHJlKSkge1xuXHRcdHJldHVybiB1cmkucmVwbGFjZShyZSwgJyQxJyArIGtleSArIFwiPVwiICsgdmFsdWUgKyAnJDInKTtcblx0ICB9IGVsc2Uge1xuXHRcdHZhciBoYXNoID0gICcnO1xuXHRcdHZhciBzZXBhcmF0b3IgPSB1cmkuaW5kZXhPZignPycpICE9PSAtMSA/IFwiJlwiIDogXCI/XCI7ICAgIFxuXHRcdGlmKCB1cmkuaW5kZXhPZignIycpICE9PSAtMSApe1xuXHRcdFx0aGFzaCA9IHVyaS5yZXBsYWNlKC8uKiMvLCAnIycpO1xuXHRcdFx0dXJpID0gdXJpLnJlcGxhY2UoLyMuKi8sICcnKTtcblx0XHR9XG5cdFx0cmV0dXJuIHVyaSArIHNlcGFyYXRvciArIGtleSArIFwiPVwiICsgdmFsdWUgKyBoYXNoO1xuXHQgIH1cbn0sXG5cbmdldEJyb3dzZVBhdGhBbmRDb2xsZWN0aW9uQ29kZUZyb21IYXNoOmZ1bmN0aW9uKGhhc2gpe1xuXHR2YXIgYnJvd3NlVmFsdWVzID0ge307XG5cdGJyb3dzZVZhbHVlc1snaGFzaCddICA9IGhhc2ggPyBoYXNoIDogd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdGJyb3dzZVZhbHVlc1snaHJlZiddICA9IGJyb3dzZVZhbHVlc1snaGFzaCddIC5zdWJzdHJpbmcoYnJvd3NlVmFsdWVzWydoYXNoJ10uaW5kZXhPZignLycpKTtcblx0YnJvd3NlVmFsdWVzWydwYXRoJ10gPSBicm93c2VWYWx1ZXNbJ2hyZWYnXS5zdWJzdHJpbmcoMSk7XG5cdGJyb3dzZVZhbHVlc1snY29sbGVjdGlvbkNvZGUnXSA9IChicm93c2VWYWx1ZXNbJ3BhdGgnXS5pbmRleE9mKFwiL1wiKSA9PSAtMSkgPyAgYnJvd3NlVmFsdWVzWydwYXRoJ10udG9Mb3dlckNhc2UoKSA6IGJyb3dzZVZhbHVlc1sncGF0aCddLnN1YnN0cigwLGJyb3dzZVZhbHVlc1sncGF0aCddLmluZGV4T2YoXCIvXCIpKS50b0xvd2VyQ2FzZSgpO1xuXHRicm93c2VWYWx1ZXNbJ2Jyb3dzZVBhdGgnXSAgPSBicm93c2VWYWx1ZXNbJ3BhdGgnXS5zdWJzdHIoYnJvd3NlVmFsdWVzWydwYXRoJ10uaW5kZXhPZihcIi9cIikgKyAxKTtcblxuXHRyZXR1cm4gIGJyb3dzZVZhbHVlcztcblx0fSxcblxuXG5cbnJldHVyblJlZmluZWRVUkw6ZnVuY3Rpb24gIChrZXksIHF1ZXJ5c3RyaW5nKSB7ICAgICAgIFxuICAgICAgICB2YXIga2V5VmFsdWVzID0gcXVlcnlzdHJpbmcuc3BsaXQoJyYnKSxcbiAgICAgICAgLy8gZmlsdGVyaW5nIHRoYXQgYXJyYXk6XG4gICAgICAgICAgICByZWZpbmVkS2V5VmFsdWVzID0ga2V5VmFsdWVzLmZpbHRlcihmdW5jdGlvbiAoa2V5VmFsdWVQYWlyKSB7XG4gICAgICAgICAgICAgICAgLy8ga2VlcGluZyBvbmx5IHRob3NlIGFycmF5IGVsZW1lbnRzIHRoYXQgZG9uJ3QgL3N0YXJ0IHdpdGgvXG4gICAgICAgICAgICAgICAgLy8gdGhlIGtleSB0byBiZSByZW1vdmVkOlxuICAgICAgICAgICAgICAgIHJldHVybiBrZXlWYWx1ZVBhaXIuaW5kZXhPZihrZXkpICE9PSAwO1xuICAgICAgICAgICAgLy8gam9pbmluZyB0aGUga2V5PXZhbHVlIHBhaXJzIGJhY2sgaW50byBhIHN0cmluZzpcbiAgICAgICAgICAgIH0pLmpvaW4oJyYnKTtcbiAgICAvLyByZXR1cm5pbmcgdGhlIHJlZmluZWQgVVJMOlxuICAgIHJldHVybiAgJyYnLmNvbmNhdChyZWZpbmVkS2V5VmFsdWVzKTtcbn0sXG4vKmZvcm1hdFN0cmluZzogZnVuY3Rpb24oc3RyaW5nVG9Gb3JtYXQsYXJndW1lbnRzKSB7XG5cdHZhciBmb3JtYXR0ZWRTdHJpbmcgPSBzdHJpbmdUb0Zvcm1hdDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnXFxcXHsnK2krJ1xcXFx9JywgJ2dpJyk7XG4gICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IGZvcm1hdHRlZFN0cmluZy5yZXBsYWNlKHJlZ2V4cCwgYXJndW1lbnRzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZFN0cmluZztcbn0sKi9cblxuU3RyaW5nVXRpbHNFeGlzdHM6ZnVuY3Rpb24oZWxlbWVudCkge1xuXG5cdFxuXHRcdFx0aWYgKHR5cGVvZiBlbGVtZW50ID09IFwidW5kZWZpbmVkXCIpXG5cdFx0XHR7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoZWxlbWVudCA9PSBcIk5VTExcIiApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSBlbHNlIGlmIChlbGVtZW50ID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fSBcblx0XHRcdFxuXHRcbn0sXG5cbnNwaW5uZXI6IGZ1bmN0aW9uIHBhZ2VMb2FkaW5nR3JhcGhpYyhlbGVtZW50KSB7XG5cdFx0XHQkKGVsZW1lbnQpLmFmdGVyKFwiPGltZyBzcmM9Jy9mZHN5c25ldy9jc3MvaW1hZ2VzL2ltYWdlX3dvcm1zX2JsYWNrLmdpZicgYWx0PSdsb2FkaW5nJyAvPlwiKS5mYWRlSW4oKTtcblx0XHRcblxufSxcblxuXG5cbnNob3dhbGVydDogZnVuY3Rpb24gKGFsZXJ0ZGl2LG1lc3NhZ2UsYWxlcnR0eXBlLHNlY29uZHMpIHtcblx0JChhbGVydGRpdikuYXBwZW5kKCc8ZGl2IGlkPVwiYWxlcnRkaXZcIiBjbGFzcz1cImFsZXJ0ICcgKyAgYWxlcnR0eXBlICsgJ1wiPjxzcGFuPicrIG1lc3NhZ2UgKyc8L3NwYW4+PC9kaXY+Jylcblx0c2V0VGltZW91dChmdW5jdGlvbigpIHsgJChcIiNhbGVydGRpdlwiKS5yZW1vdmUoKTsgfSwgc2Vjb25kcyk7XG59LFxuXG5cbmNvbnZlcnREYXNoWVlZWU1NRERUb1NsYXNoTU1ERFlZWTogZnVuY3Rpb24gY29udmVydChkYXRlKSB7XG5cdFx0dmFyIHdya2RhdGUgPSBkYXRlLnNwbGl0KFwiLVwiKTtcblx0XHRyZXR1cm4gd3JrZGF0ZVsxXSArIFwiL1wiICsgd3JrZGF0ZVsyXSArIFwiL1wiICsgd3JrZGF0ZVswXTtcblx0XG59LFxuXG5lbmRzV2l0aCA6IGZ1bmN0aW9uKHBhdHRlcm5zdHJpbmcscGF0dGVybikge1xuICAgIHZhciBkID0gcGF0dGVybnN0cmluZy5sZW5ndGggLSBwYXR0ZXJuLmxlbmd0aDtcbiAgICByZXR1cm4gZCA+PSAwICYmIHBhdHRlcm5zdHJpbmcubGFzdEluZGV4T2YocGF0dGVybikgPT09IGQ7XG59LFxuXG5cdFxuY29udmVydFNsYXNoTU1ERFlZWVRvRGFzaFlZWVlNTUREIDogZnVuY3Rpb24gY29udmVydChkYXRlKSB7XG5cdFx0dmFyIHdya2RhdGUgPSBkYXRlLnNwbGl0KFwiL1wiKTtcblx0XHRyZXR1cm4gd3JrZGF0ZVsyXSArIFwiL1wiICsgd3JrZGF0ZVswXSArIFwiL1wiICsgd3JrZGF0ZVsxXTtcblx0XG59LFxuXG5zdWJzdHJpbmdTZWFyY2hVUkw6ZnVuY3Rpb24ocXVlcnlTdHJpbmcscGFyYW1OYW1lKXtcblx0XHRcdHZhciBzZWFyY2hVcmxBcnJheSA9IHF1ZXJ5U3RyaW5nLnNwbGl0KHBhcmFtTmFtZStcIj1cIik7XG5cdFx0XHRyZXR1cm4gc2VhcmNoVXJsQXJyYXlbMV07XG59LFxuXG5cblxuaXNEZXZpY2VNb2JpbGU6ZnVuY3Rpb24oKXtcbiB2YXIgaXNNb2JpbGUgPSB7XG4gIEFuZHJvaWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSkgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvbW9iaWxlfE1vYmlsZS9pKTtcbiAgfSxcbiAgQmxhY2tCZXJyeTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQmxhY2tCZXJyeS9pKXx8IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0JCMTA7IFRvdWNoLyk7XG4gIH0sXG4gIGlPUzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBob25lfGlQb2QvaSk7XG4gIH0sXG4gIE9wZXJhOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9PcGVyYSBNaW5pL2kpO1xuICB9LFxuICBXaW5kb3dzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9JRU1vYmlsZS9pKSB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC93ZWJPUy9pKSA7XG4gIH0sXG4gIGFueTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gKGlzTW9iaWxlLkFuZHJvaWQoKSB8fCBpc01vYmlsZS5CbGFja0JlcnJ5KCkgfHwgaXNNb2JpbGUuaU9TKCkgfHwgaXNNb2JpbGUuT3BlcmEoKSB8fCBpc01vYmlsZS5XaW5kb3dzKCkpO1xuICB9XG59OyAgICAgIFxuIHJldHVybiBpc01vYmlsZS5hbnkoKTtcbn1cblxuXG5cblxuXG5cbn0pO1xuXG4iXSwic291cmNlUm9vdCI6IiJ9