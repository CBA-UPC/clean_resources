import{j as l,r as N}from"./e5833d38.js";import{T as d,Y as _,bY as T,bZ as k,G as v,z as b,bX as w,b_ as A,R as h}from"./48a35c56.js";const F=({tag:s})=>{const{translate:n}=_();if(!(s!=null&&s.value))return null;const c="translate.base.session.viewing-options.tag-text",f=T(n(s.name)),u=s.type==="viewingOptions"?n(`${c}-${k(s.value).toLowerCase()}`):n(s.value),p=`${f}:#${u}`;return l.jsxs("div",{className:"tags__field",children:[l.jsx(d,{className:"tags__field-title",textKey:`${s.name}`}),s.link?l.jsx(v,{className:"tags__field-value",href:s.link,telemetryIdentifier:"telemetry.session.tag",ariaLabel:`${f}-${u} tag`,analyticsTag:`{"aN": "Session tags", "cN": "${p}", "id": "Session tags_${p}"}`,children:l.jsx(d,{textKey:u})}):l.jsx(d,{textKey:u})]})},M=({tags:s,title:n})=>s?l.jsxs("div",{className:"tags",children:[n&&l.jsx("h2",{className:"tags__title",children:l.jsx(d,{textKey:n})}),l.jsx("div",{className:"tags__chip-container",children:s.map(c=>l.jsx(F,{tag:c},c.name+c.value))})]}):null,m=({filterLogicalName:s,facetLogicalName:n,pathName:c})=>`/${c}?${w({facetLogicalName:`${n}/logicalValue`,filterLogicalName:s})}`,C=({metaKey:s,metaDto:n,linkKey:c,metaTagSectionTitle:f})=>{const[u,p]=N.useState([]),{metadataService:x}=b(),$=e=>e.indexOf(h.FacetDelimiter)===-1?e:e.replace(h.FacetDelimiter," | "),L=e=>!e||!Array.isArray(e)||!e[0]?[]:e.reduce((t,i)=>{const o=t.filter(r=>i.logicalValue.indexOf(r.fullName)===0);return o&&o.length>0&&(t=t.filter(),t.push({fullName:i.logicalValue,displayName:$(i.displayValue)}),t},[]),g=(e,a)=>{const t=e.replace(A,"");let i=n[t];return a==="leafNodeFilters"&&(i=L(i)),e==="durationInMinutes"?[{logicalValue:`${i} mins`,displayValue:`${i} mins`}]:Array.isArray(i)?i:[i]},S=e=>{let a=g(e.subtype,e.listings);return e.subtype&&(a!=null&&a[0])?!0:(e.subMetadata&&e.subMetadata.length>0&&Array.isArray(e.subMetadata)&&e.subMetadata.forEach(t=>{if(a=g(t.subtype,t.listings),a&&a[0])return!0}),!1)},V=async()=>{const e=await x.getSideBarMetaData(s),a=[];return e==null||e.forEach(t=>{if(S(t)){const o=g(t.subtype,t.listings).map(r=>{let y="";switch(t.listings){case"filters":return y=m({filterLogicalName:r.logicalValue,facetLogicalName:t.subtype,pathName:c}),{name:t.title,value:r.displayValue,link:y,type:t.subtype};case"leafNodeFilters":return y=m({filterLogicalName:r.fullName,facetLogicalName:t.subtype,pathName:c}),{name:t.title,value:r.displayName,link:y,type:t.subtype};case"link":return{name:t.title,value:r,link:r,type:t.subtype};case"text":default:return{name:t.title,value:r,link:"",type:t.subtype}}});a.push(...o)}}),a};return N.useEffect(()=>{(()},[]),l.jsx(M,{title:f,tags:u})};export{C as M};
