
// Copyright 2012 Google Inc. All rights reserved.
 
(function(){

var data = {
"resource": {
  "version":"1",
  
  "macros":[{"function":"__e"},{"function":"__cid"}],
  "tags":[{"function":"__rep","once_per_event":true,"vtp_containerId":["macro",1],"tag_id":1}],
  "predicates":[{"function":"_eq","arg0":["macro",0],"arg1":"gtm.js"}],
  "rules":[[["if",0],["add",0]]]
},
"runtime":[ [50,"__cid",[46,"a"],[36,[17,[13,[41,"$0"],[3,"$0",["require","getContainerVersion"]],["$0"]],"containerId"]]]
 
]
,"entities":{
"__cid":{"4":true,"3":true}


}
,"permissions":{
"__cid":{"read_container_data":{}}


}



,"security_groups":{
"google":[
"__cid"

]


}



};


var aa,ba=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}},ca=function(a){return a.raw=a},da=function(a,b){a.raw=b;return a},ea=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];if(b)return b.call(a);if("number"==typeof a.length)return{next:ba(a)};throw Error(String(a)+" is not an iterable or ArrayLike");},ha=function(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c},ia=function(a){return a instanceof Array?a:
ha(ea(a))},ja="function"==typeof Object.create?Object.create:function(a){var b=function(){};b.prototype=a;return new b},ma;if("function"==typeof Object.setPrototypeOf)ma=Object.setPrototypeOf;else{var na;a:{var oa={a:!0},qa={};try{qa.__proto__=oa;na=qa.a;break a}catch(a){}na=!1}ma=na?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}
var ra=ma,sa=function(a,b){a.prototype=ja(b.prototype);a.prototype.constructor=a;if(ra)ra(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.Zn=b.prototype},ta=function(){for(var a=Number(this),b=[],c=a;c<arguments.length;c++)b[c-a]=arguments[c];return b};/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var ua=this||self,va=function(a){return a};var wa=function(a,b){this.h=a;this.s=b};var xa=function(){this.h={};this.C={}};aa=xa.prototype;aa.get=function(a){return this.h["dust."+a]};aa.set=function(a,b){a="dust."+a;this.C.hasOwnProperty(a)||(this.h[a]=b)};aa.Uh=function(a,b){this.set(a,b);this.C["dust."+a]=!0};aa.has=function(a){return this.h.hasOwnProperty("dust."+a)};aa.remove=function(a){a="dust."+a;this.C.hasOwnProperty(a)||delete this.h[a]};var ya=function(){this.quota={}};ya.prototype.reset=function(){this.quota={}};var za=function(a,b){this.X=a;this.M=function(c,d,e){return c.apply(d,e)};this.C=b;this.s=new xa;this.h=this.F=void 0};za.prototype.add=function(a,b){Aa(this,a,b,!1)};var Aa=function(a,b,c,d){d?a.s.Uh(b,c):a.s.set(b,c)};za.prototype.set=function(a,b){!this.s.has(a)&&this.C&&this.C.has(a)?this.C.set(a,b):this.s.set(a,b)};za.prototype.get=function(a){return this.s.has(a)?this.s.get(a):this.C?this.C.get(a):void 0};za.prototype.has=function(a){return!!this.s.has(a)||!(!this.C||!this.C.has(a))};
var Ba=function(a){var b=new za(a.X,a);a.F&&(b.F=a.F);b.M=a.M;b.h=a.h;return b};var Ca=function(){},Fa=function(a){return"function"===typeof a},k=function(a){return"string"===typeof a},Ga=function(a){return"number"===typeof a&&!isNaN(a)},Ha=Array.isArray,Ia=function(a,b){if(a&&Ha(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]},Ja=function(a,b){if(!Ga(a)||!Ga(b)||a>b)a=0,b=2147483647;return Math.floor(Math.random()*(b-a+1)+a)},La=function(a,b){for(var c=new Ka,d=0;d<a.length;d++)c.set(a[d],!0);for(var e=0;e<b.length;e++)if(c.get(b[e]))return!0;return!1},l=function(a,
b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])},Ma=function(a){return!!a&&("[object Arguments]"===Object.prototype.toString.call(a)||Object.prototype.hasOwnProperty.call(a,"callee"))},Na=function(a){return Math.round(Number(a))||0},Oa=function(a){return"false"===String(a).toLowerCase()?!1:!!a},Pa=function(a){var b=[];if(Ha(a))for(var c=0;c<a.length;c++)b.push(String(a[c]));return b},Qa=function(a){return a?a.replace(/^\s+|\s+$/g,""):""},Ra=function(){return new Date(Date.now())},
Sa=function(){return Ra().getTime()},Ka=function(){this.prefix="gtm.";this.values={}};Ka.prototype.set=function(a,b){this.values[this.prefix+a]=b};Ka.prototype.get=function(a){return this.values[this.prefix+a]};
var Ta=function(a,b,c){return a&&a.hasOwnProperty(b)?a[b]:c},Va=function(a){var b=a;return function(){if(b){var c=b;b=void 0;try{c()}catch(d){}}}},Wa=function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])},Xa=function(a,b){for(var c=[],d=0;d<a.length;d++)c.push(a[d]),c.push.apply(c,b[a[d]]||[]);return c},Ya=function(a,b){return a.substring(0,b.length)===b},Za=function(a,b){var c=z;b=b||[];for(var d=c,e=0;e<a.length-1;e++){if(!d.hasOwnProperty(a[e]))return;d=d[a[e]];if(0<=b.indexOf(d))return}return d},
$a=function(a,b){for(var c={},d=c,e=a.split("."),f=0;f<e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]]=b;return c},ab=/^\w{1,9}$/,bb=function(a,b){a=a||{};b=b||",";var c=[];l(a,function(d,e){ab.test(d)&&e&&c.push(d)});return c.join(b)},cb=function(a,b){function c(){++d===b&&(e(),e=null,c.done=!0)}var d=0,e=a;c.done=!1;return c};function db(a,b){for(var c,d=0;d<b.length&&!(c=eb(a,b[d]),c instanceof wa);d++);return c}function eb(a,b){try{var c=a.get(String(b[0]));if(!c||"function"!==typeof c.invoke)throw Error("Attempting to execute non-function "+b[0]+".");return c.invoke.apply(c,[a].concat(b.slice(1)))}catch(e){var d=a.F;d&&d(e,b.context?{id:b[0],line:b.context.line}:null);throw e;}};var fb=function(){this.C=new ya;this.h=new za(this.C)};fb.prototype.execute=function(a,b){var c=Array.prototype.slice.call(arguments,0);return this.s(c)};fb.prototype.s=function(a){for(var b,c=0;c<arguments.length;c++)b=eb(this.h,arguments[c]);return b};fb.prototype.F=function(a,b){var c=Ba(this.h);c.h=a;for(var d,e=1;e<arguments.length;e++)d=eb(c,arguments[e]);return d};var gb=function(){xa.call(this);this.s=!1};sa(gb,xa);var hb=function(a,b){var c=[],d;for(d in a.h)if(a.h.hasOwnProperty(d))switch(d=d.substr(5),b){case 1:c.push(d);break;case 2:c.push(a.get(d));break;case 3:c.push([d,a.get(d)])}return c};aa=gb.prototype;aa.set=function(a,b){this.s||xa.prototype.set.call(this,a,b)};aa.Uh=function(a,b){this.s||xa.prototype.Uh.call(this,a,b)};aa.remove=function(a){this.s||xa.prototype.remove.call(this,a)};aa.Eb=function(){this.s=!0};aa.Hj=function(){return this.s};/*
 jQuery (c) 2005, 2012 jQuery Foundation, Inc. jquery.org/license. */
var ib=/\[object (Boolean|Number|String|Function|Array|Date|RegExp)\]/,jb=function(a){if(null==a)return String(a);var b=ib.exec(Object.prototype.toString.call(Object(a)));return b?b[1].toLowerCase():"object"},kb=function(a,b){return Object.prototype.hasOwnProperty.call(Object(a),b)},mb=function(a){if(!a||"object"!=jb(a)||a.nodeType||a==a.window)return!1;try{if(a.constructor&&!kb(a,"constructor")&&!kb(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}for(var b in a);return void 0===
b||kb(a,b)},nb=function(a,b){var c=b||("array"==jb(a)?[]:{}),d;for(d in a)if(kb(a,d)){var e=a[d];"array"==jb(e)?("array"!=jb(c[d])&&(c[d]=[]),c[d]=nb(e,c[d])):mb(e)?(mb(c[d])||(c[d]={}),c[d]=nb(e,c[d])):c[d]=e}return c};var ob=function(a){for(var b=[],c=0;c<a.length();c++)a.has(c)&&(b[c]=a.get(c));return b},pb=function(a){if(void 0==a||Ha(a)||mb(a))return!0;switch(typeof a){case "boolean":case "number":case "string":case "function":return!0}return!1},qb=function(a){return"number"===typeof a&&0<=a&&isFinite(a)&&0===a%1||"string"===typeof a&&"-"!==a[0]&&a===""+parseInt(a,10)};var rb=function(a){this.s=new gb;this.h=[];this.C=!1;a=a||[];for(var b in a)a.hasOwnProperty(b)&&(qb(b)?this.h[Number(b)]=a[Number(b)]:this.s.set(b,a[b]))};aa=rb.prototype;aa.toString=function(a){if(a&&0<=a.indexOf(this))return"";for(var b=[],c=0;c<this.h.length;c++){var d=this.h[c];null===d||void 0===d?b.push(""):d instanceof rb?(a=a||[],a.push(this),b.push(d.toString(a)),a.pop()):b.push(String(d))}return b.join(",")};
aa.set=function(a,b){if(!this.C)if("length"===a){if(!qb(b))throw Error("RangeError: Length property must be a valid integer.");this.h.length=Number(b)}else qb(a)?this.h[Number(a)]=b:this.s.set(a,b)};aa.get=function(a){return"length"===a?this.length():qb(a)?this.h[Number(a)]:this.s.get(a)};aa.length=function(){return this.h.length};aa.Tb=function(){for(var a=hb(this.s,1),b=0;b<this.h.length;b++)a.push(b+"");return new rb(a)};aa.remove=function(a){qb(a)?delete this.h[Number(a)]:this.s.remove(a)};
aa.pop=function(){return this.h.pop()};aa.push=function(a){return this.h.push.apply(this.h,Array.prototype.slice.call(arguments))};aa.shift=function(){return this.h.shift()};aa.splice=function(a,b,c){return new rb(this.h.splice.apply(this.h,arguments))};aa.unshift=function(a){return this.h.unshift.apply(this.h,Array.prototype.slice.call(arguments))};aa.has=function(a){return qb(a)&&this.h.hasOwnProperty(a)||this.s.has(a)};aa.Eb=function(){this.C=!0;Object.freeze(this.h);this.s.Eb()};aa.Hj=function(){return this.C};var sb=function(){gb.call(this)};sa(sb,gb);sb.prototype.Tb=function(){return new rb(hb(this,1))};function tb(){for(var a=ub,b={},c=0;c<a.length;++c)b[a[c]]=c;return b}function vb(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZ";a+=a.toLowerCase()+"0123456789-_";return a+"."}var ub,wb;function xb(a){ub=ub||vb();wb=wb||tb();for(var b=[],c=0;c<a.length;c+=3){var d=c+1<a.length,e=c+2<a.length,f=a.charCodeAt(c),g=d?a.charCodeAt(c+1):0,h=e?a.charCodeAt(c+2):0,m=f>>2,n=(f&3)<<4|g>>4,p=(g&15)<<2|h>>6,q=h&63;e||(q=64,d||(p=64));b.push(ub[m],ub[n],ub[p],ub[q])}return b.join("")}
function yb(a){function b(m){for(;d<a.length;){var n=a.charAt(d++),p=wb[n];if(null!=p)return p;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n);}return m}ub=ub||vb();wb=wb||tb();for(var c="",d=0;;){var e=b(-1),f=b(0),g=b(64),h=b(64);if(64===h&&-1===e)return c;c+=String.fromCharCode(e<<2|f>>4);64!=g&&(c+=String.fromCharCode(f<<4&240|g>>2),64!=h&&(c+=String.fromCharCode(g<<6&192|h)))}};var zb={},Ab=function(a,b){zb[a]=zb[a]||[];zb[a][b]=!0},Bb=function(){delete zb.GA4_EVENT},Cb=function(a){var b=zb[a];if(!b||0===b.length)return"";for(var c=[],d=0,e=0;e<b.length;e++)0===e%8&&0<e&&(c.push(String.fromCharCode(d)),d=0),b[e]&&(d|=1<<e%8);0<d&&c.push(String.fromCharCode(d));return xb(c.join("")).replace(/\.+$/,"")};var Db=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};var Eb,Fb=function(){if(void 0===Eb){var a=null,b=ua.trustedTypes;if(b&&b.createPolicy){try{a=b.createPolicy("goog#html",{createHTML:va,createScript:va,createScriptURL:va})}catch(c){ua.console&&ua.console.error(c.message)}Eb=a}else Eb=a}return Eb};var Gb=function(a){this.h=a};Gb.prototype.toString=function(){return this.h+""};var Hb=function(a){return a instanceof Gb&&a.constructor===Gb?a.h:"type_error:TrustedResourceUrl"},Jb={},Kb=function(a){var b=a,c=Fb(),d=c?c.createScriptURL(b):b;return new Gb(d,Jb)};var Lb=function(a){this.h=a};Lb.prototype.toString=function(){return this.h.toString()};var Mb=function(a){return a instanceof Lb&&a.constructor===Lb?a.h:"type_error:SafeUrl"},Nb={},Ob=new Lb("about:invalid#zClosurez",Nb);var Pb,Qb;a:{for(var Rb=["CLOSURE_FLAGS"],Sb=ua,Tb=0;Tb<Rb.length;Tb++)if(Sb=Sb[Rb[Tb]],null==Sb){Qb=null;break a}Qb=Sb}var Ub=Qb&&Qb[610401301];Pb=null!=Ub?Ub:!1;function Vb(){var a=ua.navigator;if(a){var b=a.userAgent;if(b)return b}return""}var Wb,Xb=ua.navigator;Wb=Xb?Xb.userAgentData||null:null;function Yb(a){return Pb?Wb?Wb.brands.some(function(b){var c=b.brand;return c&&-1!=c.indexOf(a)}):!1:!1}function Zb(a){return-1!=Vb().indexOf(a)};function $b(){return Pb?!!Wb&&0<Wb.brands.length:!1}function ac(){return $b()?!1:Zb("Opera")}function bc(){return Zb("Firefox")||Zb("FxiOS")}function cc(){return $b()?Yb("Chromium"):(Zb("Chrome")||Zb("CriOS"))&&!($b()?0:Zb("Edge"))||Zb("Silk")};var dc={},ec=function(a){this.h=a};ec.prototype.toString=function(){return this.h.toString()};var fc=function(a){return a instanceof ec&&a.constructor===ec?a.h:"type_error:SafeHtml"};/*

 SPDX-License-Identifier: Apache-2.0
*/
var gc=ca([""]),hc=da(["\x00"],["\\0"]),ic=da(["\n"],["\\n"]),jc=da(["\x00"],["\\u0000"]);function kc(a){return-1===a.toString().indexOf("`")}kc(function(a){return a(gc)})||kc(function(a){return a(hc)})||kc(function(a){return a(ic)})||kc(function(a){return a(jc)});var lc=function(a){this.om=a};function mc(a){return new lc(function(b){return b.substr(0,a.length+1).toLowerCase()===a+":"})}var nc=[mc("data"),mc("http"),mc("https"),mc("mailto"),mc("ftp"),new lc(function(a){return/^[^:]*([/?#]|$)/.test(a)})];function oc(a,b){b=void 0===b?nc:b;if(a instanceof Lb)return a;for(var c=0;c<b.length;++c){var d=b[c];if(d instanceof lc&&d.om(a))return new Lb(a,Nb)}}function pc(a){var b;b=void 0===b?nc:b;return oc(a,b)||Ob}var qc="function"===typeof URL;
function rc(a){var b;a:if(qc){var c;try{c=new URL(a)}catch(g){b="https:";break a}b=c.protocol}else{var d;b:{var e=document.createElement("a");try{e.href=a}catch(g){d=void 0;break b}var f=e.protocol;d=":"===f||""===f?"https:":f}b=d}if("javascript:"!==b)return a}var sc=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;var tc={};var uc=function(){},vc=function(a){this.h=a};sa(vc,uc);vc.prototype.toString=function(){return this.h};function wc(a,b){var c=[new vc(xc[0].toLowerCase(),tc)];if(0===c.length)throw Error("");var d=c.map(function(f){var g;if(f instanceof vc)g=f.h;else throw Error("");return g}),e=b.toLowerCase();if(d.every(function(f){return 0!==e.indexOf(f)}))throw Error('Attribute "'+b+'" does not match any of the allowed prefixes.');a.setAttribute(b,"true")}function yc(a){var b=a.tagName;if("SCRIPT"===b||"STYLE"===b)throw Error("");};function zc(a,b){var c=b instanceof Lb?Mb(b):rc(b);void 0!==c&&(a.action=c)};function Ac(a){var b=a=Bc(a),c=Fb(),d=c?c.createHTML(b):b;return new ec(d,dc)}function Bc(a){return null===a?"null":void 0===a?"undefined":a};var z=window,C=document,Cc=navigator,Dc=C.currentScript&&C.currentScript.src,Ec=function(a,b){var c=z[a];z[a]=void 0===c?b:c;return z[a]},Fc=function(a,b){b&&(a.addEventListener?a.onload=b:a.onreadystatechange=function(){a.readyState in{loaded:1,complete:1}&&(a.onreadystatechange=null,b())})},Gc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},Hc={onload:1,src:1,width:1,height:1,style:1};function Ic(a,b,c){b&&l(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}
var Jc=function(a,b,c,d,e){var f=C.createElement("script");Ic(f,d,Gc);f.type="text/javascript";f.async=d&&!1===d.async?!1:!0;var g;g=Kb(Bc(a));f.src=Hb(g);var h,m,n,p=null==(n=(m=(f.ownerDocument&&f.ownerDocument.defaultView||window).document).querySelector)?void 0:n.call(m,"script[nonce]");(h=p?p.nonce||p.getAttribute("nonce")||"":"")&&f.setAttribute("nonce",h);Fc(f,b);c&&(f.onerror=c);if(e)e.appendChild(f);else{var q=C.getElementsByTagName("script")[0]||C.body||C.head;q.parentNode.insertBefore(f,
q)}return f},Lc=function(){if(Dc){var a=Dc.toLowerCase();if(0===a.indexOf("https://"))return 2;if(0===a.indexOf("http://"))return 3}return 1},Mc=function(a,b,c,d,e){var f;f=void 0===f?!0:f;var g=e,h=!1;g||(g=C.createElement("iframe"),h=!0);Ic(g,c,Hc);d&&l(d,function(n,p){g.dataset[n]=p});f&&(g.height="0",g.width="0",g.style.display="none",g.style.visibility="hidden");if(h){var m=C.body&&C.body.lastChild||C.body||C.head;m.parentNode.insertBefore(g,m)}Fc(g,b);void 0!==a&&(g.src=a);return g},Nc=function(a,
b,c,d){var e=new Image(1,1);Ic(e,d,{});e.onload=function(){e.onload=null;b&&b()};e.onerror=function(){e.onerror=null;c&&c()};e.src=a},Oc=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,!!d):a.attachEvent&&a.attachEvent("on"+b,c)},Pc=function(a,b,c){a.removeEventListener?a.removeEventListener(b,c,!1):a.detachEvent&&a.detachEvent("on"+b,c)},F=function(a){z.setTimeout(a,0)},Qc=function(a,b){return a&&b&&a.attributes&&a.attributes[b]?a.attributes[b].value:null},Rc=function(a){var b=a.innerText||
a.textContent||"";b&&" "!=b&&(b=b.replace(/^[\s\xa0]+|[\s\xa0]+$/g,""));b&&(b=b.replace(/(\xa0+|\s{2,}|\n|\r\t)/g," "));return b},Sc=function(a){var b=C.createElement("div"),c=b,d=Ac("A<div>"+a+"</div>");1===c.nodeType&&yc(c);c.innerHTML=fc(d);b=b.lastChild;for(var e=[];b.firstChild;)e.push(b.removeChild(b.firstChild));return e},Tc=function(a,b,c){c=c||100;for(var d={},e=0;e<b.length;e++)d[b[e]]=!0;for(var f=a,g=0;f&&g<=c;g++){if(d[String(f.tagName).toLowerCase()])return f;f=f.parentElement}return null},
Uc=function(a){var b;try{b=Cc.sendBeacon&&Cc.sendBeacon(a)}catch(c){Ab("TAGGING",15)}b||Nc(a)},Vc=function(a,b){var c=a[b];c&&"string"===typeof c.animVal&&(c=c.animVal);return c},Wc=function(a){var b={headers:{"Attribution-Reporting-Eligible":"trigger"},keepalive:!0,attributionReporting:{eventSourceEligible:!0,triggerEligible:!0}};try{z.fetch(a,b)}catch(c){}},Xc=function(){var a=z.performance;if(a&&Fa(a.now))return a.now()},Yc=function(){return z.performance||void 0};var Zc=function(a,b){return H(this,a)&&H(this,b)},$c=function(a,b){return H(this,a)===H(this,b)},ad=function(a,b){return H(this,a)||H(this,b)},bd=function(a,b){a=H(this,a);b=H(this,b);return-1<String(a).indexOf(String(b))},cd=function(a,b){a=String(H(this,a));b=String(H(this,b));return a.substring(0,b.length)===b},dd=function(a,b){a=H(this,a);b=H(this,b);switch(a){case "pageLocation":var c=z.location.href;b instanceof sb&&b.get("stripProtocol")&&(c=c.replace(/^https?:\/\//,""));return c}};var ed=function(a,b){gb.call(this);this.F=a;this.M=b};sa(ed,gb);ed.prototype.toString=function(){return this.F};ed.prototype.Tb=function(){return new rb(hb(this,1))};ed.prototype.invoke=function(a,b){return this.M.apply(new fd(this,a),Array.prototype.slice.call(arguments,1))};ed.prototype.ab=function(a,b){try{return this.invoke.apply(this,Array.prototype.slice.call(arguments,0))}catch(c){}};var fd=function(a,b){this.s=a;this.h=b},H=function(a,b){var c=a.h;return Ha(b)?eb(c,b):b},I=function(a){return a.s.F};var gd=function(){this.map=new Map};gd.prototype.set=function(a,b){this.map.set(a,b)};gd.prototype.get=function(a){return this.map.get(a)};var hd=function(){this.keys=[];this.values=[]};hd.prototype.set=function(a,b){this.keys.push(a);this.values.push(b)};hd.prototype.get=function(a){var b=this.keys.indexOf(a);if(-1<b)return this.values[b]};function id(){try{return Map?new gd:new hd}catch(a){return new hd}};var jd=function(a){if(a instanceof jd)return a;if(pb(a))throw Error("Type of given value has an equivalent Pixie type.");this.h=a};jd.prototype.toString=function(){return String(this.h)};var ld=function(a){gb.call(this);this.F=a;this.set("then",kd(this));this.set("catch",kd(this,!0));this.set("finally",kd(this,!1,!0))};sa(ld,sb);var kd=function(a,b,c){b=void 0===b?!1:b;c=void 0===c?!1:c;return new ed("",function(d,e){b&&(e=d,d=void 0);c&&(e=d);d instanceof ed||(d=void 0);e instanceof ed||(e=void 0);var f=Ba(this.h),g=function(m){return function(n){return c?(m.invoke(f),a.F):m.invoke(f,n)}},h=a.F.then(d&&g(d),e&&g(e));return new ld(h)})};var nd=function(a,b,c){var d=id(),e=function(g,h){for(var m=hb(g,1),n=0;n<m.length;n++)h[m[n]]=f(g.get(m[n]))},f=function(g){var h=d.get(g);if(h)return h;if(g instanceof rb){var m=[];d.set(g,m);for(var n=g.Tb(),p=0;p<n.length();p++)m[n.get(p)]=f(g.get(n.get(p)));return m}if(g instanceof ld)return g.F;if(g instanceof sb){var q={};d.set(g,q);e(g,q);return q}if(g instanceof ed){var r=function(){for(var u=Array.prototype.slice.call(arguments,0),v=0;v<u.length;v++)u[v]=md(u[v],b,c);var w=new za(b?b.X:
new ya);b&&(w.h=b.h);return f(g.invoke.apply(g,[w].concat(u)))};d.set(g,r);e(g,r);return r}var t=!1;switch(c){case 1:t=!0;break;case 2:t=!1;break;case 3:t=!1;break;default:}if(g instanceof jd&&t)return g.h;switch(typeof g){case "boolean":case "number":case "string":case "undefined":return g;case "object":if(null===g)return null}};return f(a)},md=function(a,b,c){var d=id(),e=function(g,
h){for(var m in g)g.hasOwnProperty(m)&&h.set(m,f(g[m]))},f=function(g){var h=d.get(g);if(h)return h;if(Ha(g)||Ma(g)){var m=new rb([]);d.set(g,m);for(var n in g)g.hasOwnProperty(n)&&m.set(n,f(g[n]));return m}if(mb(g)){var p=new sb;d.set(g,p);e(g,p);return p}if("function"===typeof g){var q=new ed("",function(x){for(var y=Array.prototype.slice.call(arguments,0),A=0;A<y.length;A++)y[A]=nd(H(this,y[A]),b,c);return f((0,this.h.M)(g,g,y))});d.set(g,q);e(g,q);return q}var v=typeof g;if(null===g||"string"===v||"number"===v||"boolean"===v)return g;var w=!1;switch(c){case 1:w=!0;break;case 2:w=!1;break;default:}if(void 0!==g&&w)return new jd(g)};return f(a)};var od=function(){var a=!1;return a};var pd={supportedMethods:"concat every filter forEach hasOwnProperty indexOf join lastIndexOf map pop push reduce reduceRight reverse shift slice some sort splice unshift toString".split(" "),concat:function(a,b){for(var c=[],d=0;d<this.length();d++)c.push(this.get(d));for(var e=1;e<arguments.length;e++)if(arguments[e]instanceof rb)for(var f=arguments[e],g=0;g<f.length();g++)c.push(f.get(g));else c.push(arguments[e]);return new rb(c)},every:function(a,b){for(var c=this.length(),d=0;d<this.length()&&
d<c;d++)if(this.has(d)&&!b.invoke(a,this.get(d),d,this))return!1;return!0},filter:function(a,b){for(var c=this.length(),d=[],e=0;e<this.length()&&e<c;e++)this.has(e)&&b.invoke(a,this.get(e),e,this)&&d.push(this.get(e));return new rb(d)},forEach:function(a,b){for(var c=this.length(),d=0;d<this.length()&&d<c;d++)this.has(d)&&b.invoke(a,this.get(d),d,this)},hasOwnProperty:function(a,b){return this.has(b)},indexOf:function(a,b,c){var d=this.length(),e=void 0===c?0:Number(c);0>e&&(e=Math.max(d+e,0));for(var f=
e;f<d;f++)if(this.has(f)&&this.get(f)===b)return f;return-1},join:function(a,b){for(var c=[],d=0;d<this.length();d++)c.push(this.get(d));return c.join(b)},lastIndexOf:function(a,b,c){var d=this.length(),e=d-1;void 0!==c&&(e=0>c?d+c:Math.min(c,e));for(var f=e;0<=f;f--)if(this.has(f)&&this.get(f)===b)return f;return-1},map:function(a,b){for(var c=this.length(),d=[],e=0;e<this.length()&&e<c;e++)this.has(e)&&(d[e]=b.invoke(a,this.get(e),e,this));return new rb(d)},pop:function(){return this.pop()},push:function(a,
b){return this.push.apply(this,Array.prototype.slice.call(arguments,1))},reduce:function(a,b,c){var d=this.length(),e,f=0;if(void 0!==c)e=c;else{if(0===d)throw Error("TypeError: Reduce on List with no elements.");for(var g=0;g<d;g++)if(this.has(g)){e=this.get(g);f=g+1;break}if(g===d)throw Error("TypeError: Reduce on List with no elements.");}for(var h=f;h<d;h++)this.has(h)&&(e=b.invoke(a,e,this.get(h),h,this));return e},reduceRight:function(a,b,c){var d=this.length(),e,f=d-1;if(void 0!==c)e=c;else{if(0===
d)throw Error("TypeError: ReduceRight on List with no elements.");for(var g=1;g<=d;g++)if(this.has(d-g)){e=this.get(d-g);f=d-(g+1);break}if(g>d)throw Error("TypeError: ReduceRight on List with no elements.");}for(var h=f;0<=h;h--)this.has(h)&&(e=b.invoke(a,e,this.get(h),h,this));return e},reverse:function(){for(var a=ob(this),b=a.length-1,c=0;0<=b;b--,c++)a.hasOwnProperty(b)?this.set(c,a[b]):this.remove(c);return this},shift:function(){return this.shift()},slice:function(a,b,c){var d=this.length();
void 0===b&&(b=0);b=0>b?Math.max(d+b,0):Math.min(b,d);c=void 0===c?d:0>c?Math.max(d+c,0):Math.min(c,d);c=Math.max(b,c);for(var e=[],f=b;f<c;f++)e.push(this.get(f));return new rb(e)},some:function(a,b){for(var c=this.length(),d=0;d<this.length()&&d<c;d++)if(this.has(d)&&b.invoke(a,this.get(d),d,this))return!0;return!1},sort:function(a,b){var c=ob(this);void 0===b?c.sort():c.sort(function(e,f){return Number(b.invoke(a,e,f))});for(var d=0;d<c.length;d++)c.hasOwnProperty(d)?this.set(d,c[d]):this.remove(d);
return this},splice:function(a,b,c,d){return this.splice.apply(this,Array.prototype.splice.call(arguments,1,arguments.length-1))},toString:function(){return this.toString()},unshift:function(a,b){return this.unshift.apply(this,Array.prototype.slice.call(arguments,1))}};var qd=function(a){var b;b=Error.call(this,a);this.message=b.message;"stack"in b&&(this.stack=b.stack)};sa(qd,Error);var rd={charAt:1,concat:1,indexOf:1,lastIndexOf:1,match:1,replace:1,search:1,slice:1,split:1,substring:1,toLowerCase:1,toLocaleLowerCase:1,toString:1,toUpperCase:1,toLocaleUpperCase:1,trim:1},sd=new wa("break"),td=new wa("continue"),ud=function(a,b){return H(this,a)+H(this,b)},vd=function(a,b){return H(this,a)&&H(this,b)},wd=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);if(!(c instanceof rb))throw Error("Error: Non-List argument given to Apply instruction.");if(null===a||void 0===a){var d="TypeError: Can't read property "+
b+" of "+a+".";if(od())throw new qd(d);throw Error(d);}var e="number"===typeof a;if("boolean"===typeof a||e){if("toString"===b){if(e&&c.length()){var f=nd(c.get(0));try{return a.toString(f)}catch(y){}}return a.toString()}var g="TypeError: "+a+"."+b+" is not a function.";if(od())throw new qd(g);throw Error(g);}if("string"===typeof a){if(rd.hasOwnProperty(b)){var h=2;h=1;
var m=nd(c,void 0,h);return md(a[b].apply(a,m),this.h)}var n="TypeError: "+b+" is not a function";if(od())throw new qd(n);throw Error(n);}if(a instanceof rb){if(a.has(b)){var p=a.get(b);if(p instanceof ed){var q=ob(c);q.unshift(this.h);return p.invoke.apply(p,q)}var r="TypeError: "+b+" is not a function";if(od())throw new qd(r);throw Error(r);}if(0<=pd.supportedMethods.indexOf(b)){var t=ob(c);t.unshift(this.h);return pd[b].apply(a,t)}}if(a instanceof ed||a instanceof sb){if(a.has(b)){var u=a.get(b);
if(u instanceof ed){var v=ob(c);v.unshift(this.h);return u.invoke.apply(u,v)}var w="TypeError: "+b+" is not a function";if(od())throw new qd(w);throw Error(w);}if("toString"===b)return a instanceof ed?a.F:a.toString();if("hasOwnProperty"===b)return a.has.apply(a,ob(c))}if(a instanceof jd&&"toString"===b)return a.toString();var x="TypeError: Object has no '"+b+"' property.";if(od())throw new qd(x);throw Error(x);},xd=function(a,b){a=H(this,a);if("string"!==typeof a)throw Error("Invalid key name given for assignment.");
var c=this.h;if(!c.has(a))throw Error("Attempting to assign to undefined value "+b);var d=H(this,b);c.set(a,d);return d},yd=function(a){var b=Ba(this.h),c=db(b,Array.prototype.slice.apply(arguments));if(c instanceof wa)return c},zd=function(){return sd},Ad=function(a){for(var b=H(this,a),c=0;c<b.length;c++){var d=H(this,b[c]);if(d instanceof wa)return d}},Bd=function(a){for(var b=this.h,c=0;c<arguments.length-1;c+=2){var d=arguments[c];if("string"===typeof d){var e=H(this,arguments[c+1]);Aa(b,d,e,
!0)}}},Cd=function(){return td},Dd=function(a,b){return new wa(a,H(this,b))},Ed=function(a,b,c){var d=new rb;b=H(this,b);for(var e=0;e<b.length;e++)d.push(b[e]);var f=[51,a,d].concat(Array.prototype.splice.call(arguments,2,arguments.length-2));this.h.add(a,H(this,f))},Fd=function(a,b){return H(this,a)/H(this,b)},Gd=function(a,b){a=H(this,a);b=H(this,b);var c=a instanceof jd,d=b instanceof jd;return c||d?c&&d?a.h==b.h:!1:a==b},Hd=function(a){for(var b,c=0;c<arguments.length;c++)b=H(this,arguments[c]);
return b};function Id(a,b,c,d){for(var e=0;e<b();e++){var f=a(c(e)),g=db(f,d);if(g instanceof wa){if("break"===g.h)break;if("return"===g.h)return g}}}function Jd(a,b,c){if("string"===typeof b)return Id(a,function(){return b.length},function(f){return f},c);if(b instanceof sb||b instanceof rb||b instanceof ed){var d=b.Tb(),e=d.length();return Id(a,function(){return e},function(f){return d.get(f)},c)}}
var Kd=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Jd(function(e){d.set(a,e);return d},b,c)},Ld=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Jd(function(e){var f=Ba(d);Aa(f,a,e,!0);return f},b,c)},Md=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Jd(function(e){var f=Ba(d);f.add(a,e);return f},b,c)},Od=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Nd(function(e){d.set(a,e);return d},b,c)},Pd=
function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Nd(function(e){var f=Ba(d);Aa(f,a,e,!0);return f},b,c)},Qd=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);var d=this.h;return Nd(function(e){var f=Ba(d);f.add(a,e);return f},b,c)};
function Nd(a,b,c){if("string"===typeof b)return Id(a,function(){return b.length},function(d){return b[d]},c);if(b instanceof rb)return Id(a,function(){return b.length()},function(d){return b.get(d)},c);if(od())throw new qd("The value is not iterable.");throw new TypeError("The value is not iterable.");}
var Rd=function(a,b,c,d){function e(p,q){for(var r=0;r<f.length();r++){var t=f.get(r);q.add(t,p.get(t))}}var f=H(this,a);if(!(f instanceof rb))throw Error("TypeError: Non-List argument given to ForLet instruction.");var g=this.h;d=H(this,d);var h=Ba(g);for(e(g,h);eb(h,b);){var m=db(h,d);if(m instanceof wa){if("break"===m.h)break;if("return"===m.h)return m}var n=Ba(g);e(h,n);eb(n,c);h=n}},Sd=function(a,b,c){var d=this.h,e=H(this,b);if(!(e instanceof rb))throw Error("Error: non-List value given for Fn argument names.");
var f=Array.prototype.slice.call(arguments,2);return new ed(a,function(){return function(g){var h=Ba(d);void 0===h.h&&(h.h=this.h.h);for(var m=Array.prototype.slice.call(arguments,0),n=0;n<m.length;n++)if(m[n]=H(this,m[n]),m[n]instanceof wa)return m[n];for(var p=e.get("length"),q=0;q<p;q++)q<m.length?h.add(e.get(q),m[q]):h.add(e.get(q),void 0);h.add("arguments",new rb(m));var r=db(h,f);if(r instanceof wa)return"return"===r.h?r.s:r}}())},Td=function(a){a=H(this,a);var b=this.h,c=!1;if(c&&!b.has(a))throw new ReferenceError(a+" is not defined.");return b.get(a)},Ud=function(a,b){var c;a=H(this,a);b=H(this,b);if(void 0===a||null===a){var d="TypeError: Cannot read properties of "+a+" (reading '"+b+"')";if(od())throw new qd(d);throw Error(d);}if(a instanceof sb||a instanceof rb||a instanceof ed)c=a.get(b);else if("string"===typeof a)"length"===b?c=a.length:qb(b)&&(c=a[b]);else if(a instanceof jd)return;
return c},Vd=function(a,b){return H(this,a)>H(this,b)},Wd=function(a,b){return H(this,a)>=H(this,b)},Xd=function(a,b){a=H(this,a);b=H(this,b);a instanceof jd&&(a=a.h);b instanceof jd&&(b=b.h);return a===b},Yd=function(a,b){return!Xd.call(this,a,b)},Zd=function(a,b,c){var d=[];H(this,a)?d=H(this,b):c&&(d=H(this,c));var e=db(this.h,d);if(e instanceof wa)return e},$d=function(a,b){return H(this,a)<H(this,b)},be=function(a,b){return H(this,a)<=H(this,b)},ce=function(a){for(var b=new rb,c=0;c<arguments.length;c++){var d=
H(this,arguments[c]);b.push(d)}return b},de=function(a){for(var b=new sb,c=0;c<arguments.length-1;c+=2){var d=H(this,arguments[c])+"",e=H(this,arguments[c+1]);b.set(d,e)}return b},ee=function(a,b){return H(this,a)%H(this,b)},fe=function(a,b){return H(this,a)*H(this,b)},ge=function(a){return-H(this,a)},he=function(a){return!H(this,a)},ie=function(a,b){return!Gd.call(this,a,b)},je=function(){return null},ke=function(a,b){return H(this,a)||H(this,b)},le=function(a,b){var c=H(this,a);H(this,b);return c},
me=function(a){return H(this,a)},ne=function(a){return Array.prototype.slice.apply(arguments)},oe=function(a){return new wa("return",H(this,a))},pe=function(a,b,c){a=H(this,a);b=H(this,b);c=H(this,c);if(null===a||void 0===a){var d="TypeError: Can't set property "+b+" of "+a+".";if(od())throw new qd(d);throw Error(d);}(a instanceof ed||a instanceof rb||a instanceof sb)&&a.set(b,c);return c},qe=function(a,b){return H(this,a)-H(this,b)},re=function(a,b,c){a=H(this,a);var d=H(this,b),e=H(this,c);if(!Ha(d)||
!Ha(e))throw Error("Error: Malformed switch instruction.");for(var f,g=!1,h=0;h<d.length;h++)if(g||a===H(this,d[h]))if(f=H(this,e[h]),f instanceof wa){var m=f.h;if("break"===m)return;if("return"===m||"continue"===m)return f}else g=!0;if(e.length===d.length+1&&(f=H(this,e[e.length-1]),f instanceof wa&&("return"===f.h||"continue"===f.h)))return f},se=function(a,b,c){return H(this,a)?H(this,b):H(this,c)},te=function(a){a=H(this,a);return a instanceof ed?"function":typeof a},ue=function(a){for(var b=
this.h,c=0;c<arguments.length;c++){var d=arguments[c];"string"!==typeof d||b.add(d,void 0)}},ve=function(a,b,c,d){var e=H(this,d);if(H(this,c)){var f=db(this.h,e);if(f instanceof wa){if("break"===f.h)return;if("return"===f.h)return f}}for(;H(this,a);){var g=db(this.h,e);if(g instanceof wa){if("break"===g.h)break;if("return"===g.h)return g}H(this,b)}},we=function(a){return~Number(H(this,a))},xe=function(a,b){return Number(H(this,a))<<Number(H(this,b))},ye=function(a,b){return Number(H(this,a))>>Number(H(this,
b))},ze=function(a,b){return Number(H(this,a))>>>Number(H(this,b))},Ae=function(a,b){return Number(H(this,a))&Number(H(this,b))},Be=function(a,b){return Number(H(this,a))^Number(H(this,b))},Ce=function(a,b){return Number(H(this,a))|Number(H(this,b))},De=function(){},Ee=function(a,b,c,d,e){var f=!0;try{var g=H(this,c);if(g instanceof wa)return g}catch(r){if(!(r instanceof qd&&a))throw f=r instanceof qd,r;var h=Ba(this.h),m=new jd(r);h.add(b,m);var n=H(this,d),p=db(h,n);if(p instanceof wa)return p}finally{if(f&&
void 0!==e){var q=H(this,e);if(q instanceof wa)return q}}};var Ge=function(){this.h=new fb;Fe(this)};Ge.prototype.execute=function(a){return this.h.s(a)};var Fe=function(a){var b=function(c,d){var e=new ed(String(c),d);e.Eb();a.h.h.set(String(c),e)};b("map",de);b("and",Zc);b("contains",bd);b("equals",$c);b("or",ad);b("startsWith",cd);b("variable",dd)};var Ie=function(){this.h=new fb;He(this)};Ie.prototype.execute=function(a){return Je(this.h.s(a))};
var Ke=function(a,b,c){return Je(a.h.F(b,c))},He=function(a){var b=function(c,d){var e=String(c),f=new ed(e,d);f.Eb();a.h.h.set(e,f)};b(0,ud);b(1,vd);b(2,wd);b(3,xd);b(56,Ae);b(57,xe);b(58,we);b(59,Ce);b(60,ye);b(61,ze);b(62,Be);b(53,yd);b(4,zd);b(5,Ad);b(52,Bd);b(6,Cd);b(49,Dd);b(7,ce);b(8,de);b(9,Ad);b(50,Ed);b(10,Fd);b(12,Gd);b(13,Hd);b(51,Sd);b(47,Kd);b(54,Ld);b(55,Md);b(63,Rd);b(64,Od);b(65,Pd);b(66,Qd);b(15,Td);b(16,Ud);b(17,Ud);b(18,Vd);b(19,Wd);b(20,Xd);b(21,Yd);b(22,Zd);b(23,$d);b(24,be);
b(25,ee);b(26,fe);b(27,ge);b(28,he);b(29,ie);b(45,je);b(30,ke);b(32,le);b(33,le);b(34,me);b(35,me);b(46,ne);b(36,oe);b(43,pe);b(37,qe);b(38,re);b(39,se);b(67,Ee);b(40,te);b(44,De);b(41,ue);b(42,ve)};function Je(a){if(a instanceof wa||a instanceof ed||a instanceof rb||a instanceof sb||a instanceof jd||null===a||void 0===a||"string"===typeof a||"number"===typeof a||"boolean"===typeof a)return a};function Le(a){switch(a){case 1:return"1";case 2:case 4:return"0";default:return"-"}}function Me(a){switch(a){case 1:return"G";case 3:return"g";case 2:return"D";case 4:return"d";case 0:return"g";default:return"g"}}function Ne(a,b){var c=a[1]||0,d=a[2]||0;switch(b){case 0:return"G1"+Le(c)+Le(d);case 1:return"G2"+Me(c)+Me(d);default:return"g1--"}};var Oe=function(){var a=function(b){return{toString:function(){return b}}};return{kk:a("consent"),fi:a("convert_case_to"),gi:a("convert_false_to"),hi:a("convert_null_to"),ii:a("convert_true_to"),ji:a("convert_undefined_to"),un:a("debug_mode_metadata"),na:a("function"),Tg:a("instance_name"),Sk:a("live_only"),Tk:a("malware_disabled"),Uk:a("metadata"),Xk:a("original_activity_id"),Jn:a("original_vendor_template_id"),In:a("once_on_load"),Wk:a("once_per_event"),ej:a("once_per_load"),Nn:a("priority_override"),
On:a("respected_consent_types"),kj:a("setup_tags"),oe:a("tag_id"),pj:a("teardown_tags")}}();var kf;
var lf=[],mf=[],nf=[],of=[],pf=[],qf={},rf,sf,tf=function(a){sf=sf||a},uf=function(a){},vf,wf=[],xf=function(a,b){var c={};c[Oe.na]="__"+a;for(var d in b)b.hasOwnProperty(d)&&(c["vtp_"+d]=b[d]);return c},yf=function(a,
b){var c=a[Oe.na],d=b&&b.event;if(!c)throw Error("Error: No function name given for function call.");var e=qf[c],f=b&&2===b.type&&d.reportMacroDiscrepancy&&e&&-1!==wf.indexOf(c),g={},h={},m;for(m in a)a.hasOwnProperty(m)&&0===m.indexOf("vtp_")&&(e&&d&&d.checkPixieIncompatibility&&d.checkPixieIncompatibility(a[m]),e&&(g[m]=a[m]),!e||f)&&(h[m.substr(4)]=a[m]);e&&d&&d.cachedModelValues&&(g.vtp_gtmCachedValues=d.cachedModelValues);if(b){if(null==b.name){var n;a:{var p=b.type,q=b.index;if(null==q)n="";
else{var r;switch(p){case 2:r=lf[q];break;case 1:r=of[q];break;default:n="";break a}var t=r&&r[Oe.Tg];n=t?String(t):""}}b.name=n}e&&(g.vtp_gtmEntityIndex=b.index,g.vtp_gtmEntityName=b.name)}var u,v;e&&(u=e(g));if(!e||f)v=kf(c,h,b);f&&d&&(pb(u)?typeof u!==typeof v&&d.reportMacroDiscrepancy(d.id,c):u!==v&&d.reportMacroDiscrepancy(d.id,c));return e?u:v},Af=function(a,b,c){c=c||[];var d={},e;for(e in a)a.hasOwnProperty(e)&&(d[e]=zf(a[e],b,c));return d},zf=function(a,b,c){if(Ha(a)){var d;switch(a[0]){case "function_id":return a[1];
case "list":d=[];for(var e=1;e<a.length;e++)d.push(zf(a[e],b,c));return d;case "macro":var f=a[1];if(c[f])return;var g=lf[f];if(!g||b.isBlocked(g))return;c[f]=!0;var h=String(g[Oe.Tg]);try{var m=Af(g,b,c);m.vtp_gtmEventId=b.id;b.priorityId&&(m.vtp_gtmPriorityId=b.priorityId);d=yf(m,{event:b,index:f,type:2,name:h});vf&&(d=vf.xl(d,m))}catch(y){b.logMacroError&&b.logMacroError(y,Number(f),h),d=!1}c[f]=!1;return d;case "map":d={};for(var n=1;n<a.length;n+=2)d[zf(a[n],b,c)]=zf(a[n+1],b,c);return d;case "template":d=
[];for(var p=!1,q=1;q<a.length;q++){var r=zf(a[q],b,c);sf&&(p=p||sf.km(r));d.push(r)}return sf&&p?sf.zl(d):d.join("");case "escape":d=zf(a[1],b,c);if(sf&&Ha(a[1])&&"macro"===a[1][0]&&sf.lm(a))return sf.Pm(d);d=String(d);for(var t=2;t<a.length;t++)Pe[a[t]]&&(d=Pe[a[t]](d));return d;case "tag":var u=a[1];if(!of[u])throw Error("Unable to resolve tag reference "+u+".");return d={Aj:a[2],index:u};case "zb":var v={arg0:a[2],arg1:a[3],ignore_case:a[5]};v[Oe.na]=a[1];var w=Bf(v,b,c),x=!!a[4];return x||2!==
w?x!==(1===w):null;default:throw Error("Attempting to expand unknown Value type: "+a[0]+".");}}return a},Bf=function(a,b,c){try{return rf(Af(a,b,c))}catch(d){JSON.stringify(a)}return 2},Cf=function(a){var b=a[Oe.na];if(!b)throw Error("Error: No function name given for function call.");return!!qf[b]};var Df=function(a,b,c){var d;d=Error.call(this,c);this.message=d.message;"stack"in d&&(this.stack=d.stack);this.h=a};sa(Df,Error);function Ef(a,b){if(Ha(a)){Object.defineProperty(a,"context",{value:{line:b[0]}});for(var c=1;c<a.length;c++)Ef(a[c],b[c])}};var Ff=function(a,b){var c;c=Error.call(this);this.message=c.message;"stack"in c&&(this.stack=c.stack);this.Km=a;this.s=b;this.h=[]};sa(Ff,Error);var Hf=function(){return function(a,b){a instanceof Ff||(a=new Ff(a,Gf));b&&a.h.push(b);throw a;}};function Gf(a){if(!a.length)return a;a.push({id:"main",line:0});for(var b=a.length-1;0<b;b--)Ga(a[b].id)&&a.splice(b++,1);for(var c=a.length-1;0<c;c--)a[c].line=a[c-1].line;a.splice(0,1);return a};var Kf=function(a){function b(r){for(var t=0;t<r.length;t++)d[r[t]]=!0}for(var c=[],d=[],e=If(a),f=0;f<mf.length;f++){var g=mf[f],h=Jf(g,e);if(h){for(var m=g.add||[],n=0;n<m.length;n++)c[m[n]]=!0;b(g.block||[])}else null===h&&b(g.block||[]);}for(var p=[],q=0;q<of.length;q++)c[q]&&!d[q]&&(p[q]=!0);return p},Jf=function(a,b){for(var c=a["if"]||[],d=0;d<c.length;d++){var e=b(c[d]);if(0===e)return!1;
if(2===e)return null}for(var f=a.unless||[],g=0;g<f.length;g++){var h=b(f[g]);if(2===h)return null;if(1===h)return!1}return!0},If=function(a){var b=[];return function(c){void 0===b[c]&&(b[c]=Bf(nf[c],a));return b[c]}};var Lf={xl:function(a,b){b[Oe.fi]&&"string"===typeof a&&(a=1==b[Oe.fi]?a.toLowerCase():a.toUpperCase());b.hasOwnProperty(Oe.hi)&&null===a&&(a=b[Oe.hi]);b.hasOwnProperty(Oe.ji)&&void 0===a&&(a=b[Oe.ji]);b.hasOwnProperty(Oe.ii)&&!0===a&&(a=b[Oe.ii]);b.hasOwnProperty(Oe.gi)&&!1===a&&(a=b[Oe.gi]);return a}};var Mf=function(){this.h={}},Of=function(a,b){var c=Nf.s,d;null!=(d=c.h)[a]||(d[a]=[]);c.h[a].push(function(){return b.apply(null,ia(ta.apply(0,arguments)))})};function Pf(a,b,c,d){if(a)for(var e=0;e<a.length;e++){var f=void 0,g="A policy function denied the permission request";try{f=a[e](b,c,d),g+="."}catch(h){g="string"===typeof h?g+(": "+h):h instanceof Error?g+(": "+h.message):g+"."}if(!f)throw new Df(c,d,g);}}
function Qf(a,b,c){return function(){var d=arguments[0];if(d){var e=a.h[d],f=a.h.all;if(e||f){var g=c.apply(void 0,Array.prototype.slice.call(arguments,0));Pf(e,b,d,g);Pf(f,b,d,g)}}}};var Rf=[],Sf=function(a){return void 0==Rf[a]?!1:Rf[a]};var Wf=function(){var a=data.permissions||{},b=Tf.ctid,c=this;this.s=new Mf;this.h={};var d=Sf(15),e={},f={},g=Qf(this.s,b,function(){var h=arguments[0];return h&&e[h]?e[h].apply(void 0,Array.prototype.slice.call(arguments,0)):{}});l(a,function(h,m){var n={};l(m,function(q,r){var t=Uf(q,r);n[q]=t.assert;e[q]||(e[q]=t.K);d&&t.sj&&!f[q]&&(f[q]=t.sj)});var p;d&&(p=function(q){var r=ta.apply(1,arguments);if(!n[q])throw Vf(q,{},"The requested additional permission "+q+" is not configured.");g.apply(null,
[q].concat(ia(r)))});c.h[h]=function(q,r){var t=n[q];if(!t)throw Vf(q,{},"The requested permission "+q+" is not configured.");var u=Array.prototype.slice.call(arguments,0);t.apply(void 0,u);g.apply(void 0,u);if(d){var v=f[q];v&&v.apply(null,[p].concat(ia(u.slice(1))))}}})},Xf=function(a){return Nf.h[a]||function(){}};
function Uf(a,b){var c=xf(a,b);c.vtp_permissionName=a;c.vtp_createPermissionError=Vf;try{return yf(c)}catch(d){return{assert:function(e){throw new Df(e,{},"Permission "+e+" is unknown.");},K:function(){if(Sf(15))throw new Df(a,{},"Permission "+a+" is unknown.");for(var e={},f=0;f<arguments.length;++f)e["arg"+(f+1)]=arguments[f];return e}}}}function Vf(a,b,c){return new Df(a,b,c)};var Yf=!1;var Zf={};Zf.qn=Oa('');Zf.Bl=Oa('');var $f=Yf,ag=Zf.Bl,bg=Zf.qn;var pg=["matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector"];function qg(a,b){a=String(a);b=String(b);var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)===c}var rg=new Ka;function sg(a,b,c){var d=c?"i":void 0;try{var e=String(b)+d,f=rg.get(e);f||(f=new RegExp(b,d),rg.set(e,f));return f.test(a)}catch(g){return!1}}function tg(a,b){return 0<=String(a).indexOf(String(b))}function ug(a,b){return String(a)===String(b)}
function vg(a,b){return Number(a)>=Number(b)}function wg(a,b){return Number(a)<=Number(b)}function xg(a,b){return Number(a)>Number(b)}function yg(a,b){return Number(a)<Number(b)}function zg(a,b){return 0===String(a).indexOf(String(b))};var Gg=/^[1-9a-zA-Z_-][1-9a-c][1-9a-v]\d$/;function Hg(a,b){for(var c="",d=!0;7<a;){var e=a&31;a>>=5;d?d=!1:e|=32;c="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[e]+c}a<<=2;d||(a|=32);return c="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[a|b]+c};var Ig=/^([a-z][a-z0-9]*):(!|\?)(\*|string|boolean|number|Fn|PixieMap|List|OpaqueValue)$/i,Jg={Fn:"function",PixieMap:"Object",List:"Array"},J=function(a,b,c){for(var d=0;d<b.length;d++){var e=Ig.exec(b[d]);if(!e)throw Error("Internal Error in "+a);var f=e[1],g="!"===e[2],h=e[3],m=c[d];if(null==m){if(g)throw Error("Error in "+a+". Required argument "+f+" not supplied.");}else if("*"!==h){var n=typeof m;m instanceof ed?n="Fn":m instanceof rb?n="List":m instanceof sb?n="PixieMap":m instanceof jd&&(n=
"OpaqueValue");if(n!=h)throw Error("Error in "+a+". Argument "+f+" has type "+(Jg[n]||n)+", which does not match required type "+(Jg[h]||h)+".");}}};function Kg(a){return""+a}
function Lg(a,b){var c=[];return c};var Mg=function(a,b){var c=new ed(a,function(){for(var d=Array.prototype.slice.call(arguments,0),e=0;e<d.length;e++)d[e]=H(this,d[e]);try{return b.apply(this,d)}catch(g){if(od())throw new qd(g.message);throw g;}});c.Eb();return c},Ng=function(a,b){var c=new sb,d;for(d in b)if(b.hasOwnProperty(d)){var e=b[d];Fa(e)?c.set(d,Mg(a+"_"+d,e)):mb(e)?c.set(d,Ng(a+"_"+d,
e)):(Ga(e)||k(e)||"boolean"===typeof e)&&c.set(d,e)}c.Eb();return c};var Og=function(a,b){J(I(this),["apiName:!string","message:?string"],arguments);var c={},d=new sb;return d=Ng("AssertApiSubject",c)};var Pg=function(a,b){J(I(this),["actual:?*","message:?string"],arguments);if(a instanceof ld)throw Error("Argument actual cannot have type Promise. Assertions on asynchronous code aren't supported.");var c={},d=new sb;return d=Ng("AssertThatSubject",c)};function Qg(a){return function(){for(var b=[],c=this.h,d=0;d<arguments.length;++d)b.push(nd(arguments[d],c));return md(a.apply(null,b))}}var Sg=function(){for(var a=Math,b=Rg,c={},d=0;d<b.length;d++){var e=b[d];a.hasOwnProperty(e)&&(c[e]=Qg(a[e].bind(a)))}return c};var Tg=function(a){var b;return b};var Ug=function(a){var b;return b};var Vg=function(a){try{return encodeURI(a)}catch(b){}};var Wg=function(a){try{return encodeURIComponent(a)}catch(b){}};function Xg(a,b){var c=!1;return c}
Xg.D="internal.evaluateBooleanExpression";var bh=function(a){J(I(this),["message:?string"],arguments);};var ch=function(a,b){J(I(this),["min:!number","max:!number"],arguments);return Ja(a,b)};var dh=function(){return(new Date).getTime()};var jh=function(a){if(null===a)return"null";if(a instanceof rb)return"array";if(a instanceof ed)return"function";if(a instanceof jd){a=a.h;if(void 0===a.constructor||void 0===a.constructor.name){var b=String(a);return b.substring(8,b.length-1)}return String(a.constructor.name)}return typeof a};var kh=function(a){function b(c){return function(d){try{return c(d)}catch(e){($f||bg)&&a.call(this,e.message)}}}return{parse:b(function(c){return md(JSON.parse(c))}),stringify:b(function(c){return JSON.stringify(nd(c))})}};var lh=function(a){return Na(nd(a,this.h))};var mh=function(a){return Number(nd(a,this.h))};var nh=function(a){return null===a?"null":void 0===a?"undefined":a.toString()};var oh=function(a,b,c){var d=null,e=!1;return e?d:null};var Rg="floor ceil round max min abs pow sqrt".split(" ");var ph=function(){var a={};return{Ol:function(b){return a.hasOwnProperty(b)?a[b]:void 0},hn:function(b,c){a[b]=c},reset:function(){a={}}}},qh=function(a,b){return function(){var c=Array.prototype.slice.call(arguments,0);c.unshift(b);return ed.prototype.invoke.apply(a,c)}},rh=function(a,b){J(I(this),["apiName:!string","mock:?*"],arguments);};var sh={};
sh.keys=function(a){return new rb};
sh.values=function(a){return new rb};
sh.entries=function(a){return new rb};
sh.freeze=function(a){return a};sh.delete=function(a,b){return!1};var K=function(a,b,c){var d=a.h.h;if(!d)throw Error("Missing program state.");if(d.Wm){try{d.uj.apply(null,Array.prototype.slice.call(arguments,1))}catch(e){throw Ab("TAGGING",21),e;}return}d.uj.apply(null,Array.prototype.slice.call(arguments,1))};var uh=function(){this.h={};this.s={};};uh.prototype.get=function(a,b){var c=this.h.hasOwnProperty(a)?this.h[a]:void 0;return c};
uh.prototype.add=function(a,b,c){if(this.h.hasOwnProperty(a))throw"Attempting to add a function which already exists: "+a+".";if(this.s.hasOwnProperty(a))throw"Attempting to add an API with an existing private API name: "+a+".";this.h[a]=c?void 0:Fa(b)?Mg(a,b):Ng(a,b)};function vh(a,b){var c=void 0;return c};function wh(){var a={};
return a};var yh=function(a){return xh?C.querySelectorAll(a):null},zh=function(a,b){if(!xh)return null;if(Element.prototype.closest)try{return a.closest(b)}catch(e){return null}var c=Element.prototype.matches||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector,d=a;if(!C.documentElement.contains(d))return null;do{try{if(c.call(d,b))return d}catch(e){break}d=d.parentElement||d.parentNode}while(null!==d&&1===d.nodeType);
return null},Ah=!1;if(C.querySelectorAll)try{var Bh=C.querySelectorAll(":root");Bh&&1==Bh.length&&Bh[0]==C.documentElement&&(Ah=!0)}catch(a){}var xh=Ah;var L=function(a){Ab("GTM",a)};var N={g:{Ea:"ad_personalization",J:"ad_storage",N:"ad_user_data",R:"analytics_storage",Va:"region",ud:"consent_updated",We:"wait_for_update",pk:"ads",ag:"all",qk:"maps",rk:"playstore",sk:"search",tk:"shopping",uk:"youtube",ki:"app_remove",li:"app_store_refund",mi:"app_store_subscription_cancel",ni:"app_store_subscription_convert",oi:"app_store_subscription_renew",dg:"add_payment_info",eg:"add_shipping_info",ac:"add_to_cart",bc:"remove_from_cart",fg:"view_cart",Hb:"begin_checkout",fc:"select_item",
fb:"view_item_list",sb:"select_promotion",hb:"view_promotion",ra:"purchase",hc:"refund",Fa:"view_item",gg:"add_to_wishlist",wk:"exception",ri:"first_open",si:"first_visit",sa:"gtag.config",Pa:"gtag.get",ui:"in_app_purchase",ic:"page_view",xk:"screen_view",vi:"session_start",yk:"timing_complete",zk:"track_social",xd:"user_engagement",tb:"gclid",wa:"ads_data_redaction",ja:"allow_ad_personalization_signals",Xe:"allow_custom_scripts",Ye:"allow_display_features",yd:"allow_enhanced_conversions",ib:"allow_google_signals",
Ga:"allow_interest_groups",Ak:"app_id",Bk:"app_installer_id",Ck:"app_name",Dk:"app_version",jc:"auid",wi:"auto_detection_enabled",Ib:"aw_remarketing",Ze:"aw_remarketing_only",zd:"discount",Ad:"aw_feed_country",Bd:"aw_feed_language",Z:"items",Cd:"aw_merchant_id",hg:"aw_basket_type",Ic:"campaign_content",Jc:"campaign_id",Kc:"campaign_medium",Lc:"campaign_name",Mc:"campaign",Nc:"campaign_source",Oc:"campaign_term",ub:"client_id",xi:"content_group",yi:"content_type",Qa:"conversion_cookie_prefix",Pc:"conversion_id",
Ha:"conversion_linker",Jb:"conversion_api",af:"cookie_deprecation",Wa:"cookie_domain",Ka:"cookie_expires",Xa:"cookie_flags",kc:"cookie_name",Qc:"cookie_path",Ra:"cookie_prefix",mc:"cookie_update",nc:"country",xa:"currency",Dd:"customer_lifetime_value",Rc:"custom_map",zi:"gcldc",Ai:"debug_mode",ba:"developer_id",Bi:"disable_merchant_reported_purchases",Sc:"dc_custom_params",Ci:"dc_natural_search",ig:"dynamic_event_settings",jg:"affiliation",Ed:"checkout_option",bf:"checkout_step",kg:"coupon",Tc:"item_list_name",
cf:"list_name",Di:"promotions",Uc:"shipping",df:"tax",Fd:"engagement_time_msec",Gd:"enhanced_client_id",Hd:"enhanced_conversions",lg:"enhanced_conversions_automatic_settings",Id:"estimated_delivery_date",ef:"euid_logged_in_state",Vc:"event_callback",Ek:"event_category",vb:"event_developer_id_string",Fk:"event_label",mg:"event",Jd:"event_settings",Kd:"event_timeout",Gk:"description",Hk:"fatal",Ei:"experiments",ff:"firebase_id",Ld:"first_party_collection",Md:"_x_20",kb:"_x_19",ng:"fledge",og:"flight_error_code",
pg:"flight_error_message",Fi:"fl_activity_category",Gi:"fl_activity_group",qg:"fl_advertiser_id",Hi:"fl_ar_dedupe",rg:"match_id",Ii:"fl_random_number",Ji:"tran",Ki:"u",Nd:"gac_gclid",oc:"gac_wbraid",sg:"gac_wbraid_multiple_conversions",ug:"ga_restrict_domain",vg:"ga_temp_client_id",Od:"gdpr_applies",wg:"geo_granularity",wb:"value_callback",lb:"value_key",Ik:"google_ono",Kb:"google_signals",xg:"google_tld",Pd:"groups",yg:"gsa_experiment_id",zg:"iframe_state",Wc:"ignore_referrer",hf:"internal_traffic_results",
Lb:"is_legacy_converted",yb:"is_legacy_loaded",Qd:"is_passthrough",jf:"_lps",La:"language",kf:"legacy_developer_id_string",Ma:"linker",qc:"accept_incoming",zb:"decorate_forms",W:"domains",Mb:"url_position",Ag:"method",Jk:"name",Xc:"new_customer",Bg:"non_interaction",Li:"optimize_id",Mi:"page_hostname",Yc:"page_path",Na:"page_referrer",Ab:"page_title",Cg:"passengers",Dg:"phone_conversion_callback",Ni:"phone_conversion_country_code",Eg:"phone_conversion_css_class",Oi:"phone_conversion_ids",Fg:"phone_conversion_number",
Gg:"phone_conversion_options",Hg:"_protected_audience_enabled",Zc:"quantity",Rd:"redact_device_info",lf:"referral_exclusion_definition",Nb:"restricted_data_processing",Pi:"retoken",Kk:"sample_rate",nf:"screen_name",Bb:"screen_resolution",Qi:"search_term",Sa:"send_page_view",Ob:"send_to",Sd:"server_container_url",ad:"session_duration",Td:"session_engaged",pf:"session_engaged_time",Cb:"session_id",Ud:"session_number",bd:"delivery_postal_code",Lk:"temporary_client_id",qf:"topmost_url",Ri:"tracking_id",
rf:"traffic_type",ya:"transaction_id",Pb:"transport_url",Ig:"trip_type",Qb:"update",Db:"url_passthrough",Wd:"_user_agent_architecture",Xd:"_user_agent_bitness",Yd:"_user_agent_full_version_list",Zd:"_user_agent_mobile",ae:"_user_agent_model",be:"_user_agent_platform",ce:"_user_agent_platform_version",de:"_user_agent_wow64",Ba:"user_data",Jg:"user_data_auto_latency",Kg:"user_data_auto_meta",Lg:"user_data_auto_multi",Mg:"user_data_auto_selectors",Ng:"user_data_auto_status",ee:"user_data_mode",fe:"user_data_settings",
Ta:"user_id",Ya:"user_properties",Si:"_user_region",Og:"us_privacy_string",ia:"value",sc:"wbraid",Pg:"wbraid_multiple_conversions",Yi:"_host_name",Zi:"_in_page_command",aj:"_is_passthrough_cid",fd:"non_personalized_ads",ne:"_sst_parameters",jb:"conversion_label",Aa:"page_location",xb:"global_developer_id_string",Vd:"tc_privacy_string"}},ai={},bi=Object.freeze((ai[N.g.ja]=1,ai[N.g.Ye]=1,ai[N.g.yd]=1,ai[N.g.ib]=1,ai[N.g.Z]=1,ai[N.g.Wa]=1,ai[N.g.Ka]=1,ai[N.g.Xa]=1,ai[N.g.kc]=1,ai[N.g.Qc]=1,ai[N.g.Ra]=
1,ai[N.g.mc]=1,ai[N.g.Rc]=1,ai[N.g.ba]=1,ai[N.g.ig]=1,ai[N.g.Vc]=1,ai[N.g.Jd]=1,ai[N.g.Kd]=1,ai[N.g.Ld]=1,ai[N.g.ug]=1,ai[N.g.Kb]=1,ai[N.g.xg]=1,ai[N.g.Pd]=1,ai[N.g.hf]=1,ai[N.g.Lb]=1,ai[N.g.yb]=1,ai[N.g.Ma]=1,ai[N.g.lf]=1,ai[N.g.Nb]=1,ai[N.g.Sa]=1,ai[N.g.Ob]=1,ai[N.g.Sd]=1,ai[N.g.ad]=1,ai[N.g.pf]=1,ai[N.g.bd]=1,ai[N.g.Pb]=1,ai[N.g.Qb]=1,ai[N.g.fe]=1,ai[N.g.Ya]=1,ai[N.g.ne]=1,ai));Object.freeze([N.g.Aa,N.g.Na,N.g.Ab,N.g.La,N.g.nf,N.g.Ta,N.g.ff,N.g.xi]);
var ci={},di=Object.freeze((ci[N.g.ki]=1,ci[N.g.li]=1,ci[N.g.mi]=1,ci[N.g.ni]=1,ci[N.g.oi]=1,ci[N.g.ri]=1,ci[N.g.si]=1,ci[N.g.ui]=1,ci[N.g.vi]=1,ci[N.g.xd]=1,ci)),ei={},fi=Object.freeze((ei[N.g.dg]=1,ei[N.g.eg]=1,ei[N.g.ac]=1,ei[N.g.bc]=1,ei[N.g.fg]=1,ei[N.g.Hb]=1,ei[N.g.fc]=1,ei[N.g.fb]=1,ei[N.g.sb]=1,ei[N.g.hb]=1,ei[N.g.ra]=1,ei[N.g.hc]=1,ei[N.g.Fa]=1,ei[N.g.gg]=1,ei)),gi=Object.freeze([N.g.ja,N.g.ib,N.g.mc,N.g.Wc,N.g.Qb]),hi=Object.freeze([].concat(gi)),ii=Object.freeze([N.g.Ka,N.g.Kd,N.g.ad,N.g.pf,
N.g.Fd]),ji=Object.freeze([].concat(ii)),ki={},li=(ki[N.g.J]="1",ki[N.g.R]="2",ki[N.g.N]="3",ki[N.g.Ea]="4",ki),mi={},ni=Object.freeze((mi[N.g.ja]=1,mi[N.g.yd]=1,mi[N.g.Ga]=1,mi[N.g.Ib]=1,mi[N.g.Ze]=1,mi[N.g.zd]=1,mi[N.g.Ad]=1,mi[N.g.Bd]=1,mi[N.g.Z]=1,mi[N.g.Cd]=1,mi[N.g.Qa]=1,mi[N.g.Ha]=1,mi[N.g.Wa]=1,mi[N.g.Ka]=1,mi[N.g.Xa]=1,mi[N.g.Ra]=1,mi[N.g.xa]=1,mi[N.g.Dd]=1,mi[N.g.ba]=1,mi[N.g.Bi]=1,mi[N.g.Hd]=1,mi[N.g.Id]=1,mi[N.g.ff]=1,mi[N.g.Ld]=1,mi[N.g.Lb]=1,mi[N.g.yb]=1,mi[N.g.La]=1,mi[N.g.Xc]=1,mi[N.g.Aa]=
1,mi[N.g.Na]=1,mi[N.g.Dg]=1,mi[N.g.Eg]=1,mi[N.g.Fg]=1,mi[N.g.Gg]=1,mi[N.g.Nb]=1,mi[N.g.Sa]=1,mi[N.g.Ob]=1,mi[N.g.Sd]=1,mi[N.g.bd]=1,mi[N.g.ya]=1,mi[N.g.Pb]=1,mi[N.g.Qb]=1,mi[N.g.Db]=1,mi[N.g.Ba]=1,mi[N.g.Ta]=1,mi[N.g.ia]=1,mi)),oi={},pi=Object.freeze((oi[N.g.sk]="s",oi[N.g.uk]="y",oi[N.g.rk]="p",oi[N.g.tk]="h",oi[N.g.pk]="a",oi[N.g.qk]="m",oi));Object.freeze(N.g);var qi={},ri=z.google_tag_manager=z.google_tag_manager||{},si=Math.random();qi.Ug="41a0";qi.me=Number("0")||0;qi.fa="dataLayer";qi.mk="ChAIgLWjrQYQgoHTjb2J8tFOEicA1yOXraRUC5wQwmPTRMx7M2SI1MH/hXtpIcRYwfekZM04vxdTUAkaApTR";var ti={__cl:1,__ecl:1,__ehl:1,__evl:1,__fal:1,__fil:1,__fsl:1,__hl:1,__jel:1,__lcl:1,__sdl:1,__tl:1,__ytl:1},ui={__paused:1,__tg:1},vi;for(vi in ti)ti.hasOwnProperty(vi)&&(ui[vi]=1);var wi=Oa(""),xi,yi=!1;yi=!0;
xi=yi;var zi,Ai=!1;zi=Ai;var Bi,Ci=!1;Bi=Ci;var Di,Ei=!1;Di=Ei;qi.wd="www.googletagmanager.com";
var Fi=""+qi.wd+(xi?"/gtag/js":"/gtm.js"),Gi=null,Hi=null,Ii={},Ji={},Ki={},Li=function(){var a=ri.sequence||1;ri.sequence=a+1;return a};qi.lk="";var Mi="";qi.zf=Mi;var Ni=function(){return""};var Oi=new Ka,Pi={},Qi={},Ti={name:qi.fa,set:function(a,b){nb($a(a,b),Pi);Ri()},get:function(a){return Si(a,2)},reset:function(){Oi=new Ka;Pi={};Ri()}},Si=function(a,b){return 2!=b?Oi.get(a):Ui(a)},Ui=function(a,b){var c=a.split(".");b=b||[];for(var d=Pi,e=0;e<c.length;e++){if(null===d)return!1;if(void 0===d)break;d=d[c[e]];if(-1!==b.indexOf(d))return}return d},Vi=function(a,b){Qi.hasOwnProperty(a)||(Oi.set(a,b),nb($a(a,b),Pi),Ri())},Wi=function(){for(var a=["gtm.allowlist","gtm.blocklist","gtm.whitelist",
"gtm.blacklist","tagTypeBlacklist"],b=0;b<a.length;b++){var c=a[b],d=Si(c,1);if(Ha(d)||mb(d))d=nb(d);Qi[c]=d}},Ri=function(a){l(Qi,function(b,c){Oi.set(b,c);nb($a(b),Pi);nb($a(b,c),Pi);a&&delete Qi[b]})},Xi=function(a,b){var c,d=1!==(void 0===b?2:b)?Ui(a):Oi.get(a);"array"===jb(d)||"object"===jb(d)?c=nb(d):c=d;return c};var dj=[];function ej(a){switch(a){case 25:return 3;case 48:return 14;case 59:return 11;case 60:return 12;case 63:return 10;case 65:return 13;case 61:return 15;case 102:return 16;case 105:return 17}}function Q(a){dj[a]=!0;var b=ej(a);b&&(Rf[b]=!0)}
Q(5);Q(6);Q(7);Q(9);Q(10);
Q(14);Q(11);
Q(15);Q(18);
Q(19);Q(20);Q(21);
Q(23);Q(24);Q(31);Q(32);Q(33);Q(35);Q(36);
Q(40);Q(42);Q(45);Q(46);Q(47);
Q(49);Q(50);Q(51);
Q(53);Q(54);Q(55);Q(56);
Q(61);
Q(63);Q(64);
Q(67);Q(68);Q(69);

Q(74);
Q(87);Q(91);
function R(a){return!!dj[a]}var ij=function(a){Ab("HEALTH",a)};var pj;try{pj=JSON.parse(yb("eyIwIjoiRVMiLCIxIjoiRVMtQ1QiLCIyIjpmYWxzZSwiMyI6Imdvb2dsZS5lcyIsIjQiOiJyZWdpb24xIiwiNSI6ZmFsc2UsIjYiOnRydWUsIjciOiJhZF9zdG9yYWdlfGFuYWx5dGljc19zdG9yYWdlfGFkX3VzZXJfZGF0YXxhZF9wZXJzb25hbGl6YXRpb24ifQ"))}catch(a){L(123),ij(2),pj={}}
var qj=function(){return pj["0"]||""},rj=function(){return pj["1"]||""},sj=function(){var a=!1;return a},tj=function(){var a="";return a},uj=function(){var a=!1;return a},vj=function(){var a="";
return a};var wj=new function(a,b){this.h=a;this.defaultValue=void 0===b?!1:b}(1933);var xj=function(a){xj[" "](a);return a};xj[" "]=function(){};var zj=function(){var a=yj,b="th";if(a.th&&a.hasOwnProperty(b))return a.th;var c=new a;return a.th=c};var yj=function(){var a={};this.h=function(){var b=wj.h,c=wj.defaultValue;return null!=a[b]?a[b]:c};this.s=function(){a[wj.h]=!0}};var Aj=!1,Bj=!1,Cj={},Dj={},Ej=!1,Fj={ad_storage:!1,ad_user_data:!1,ad_personalization:!1};function Gj(){var a=Ec("google_tag_data",{});return a.ics=a.ics||new Hj}var Hj=function(){this.entries={};this.cps={};this.waitPeriodTimedOut=this.wasSetLate=this.accessedAny=this.accessedDefault=this.usedSetCps=this.usedImplicit=this.usedUpdate=this.usedDefault=this.usedDeclare=this.active=!1;this.h=[]};
Hj.prototype.default=function(a,b,c,d,e,f){this.usedDefault||this.usedDeclare||!this.accessedDefault&&!this.accessedAny||(this.wasSetLate=!0);this.usedDefault=this.active=!0;Ab("TAGGING",19);void 0==b?Ab("TAGGING",18):Ij(this,a,"granted"===b,c,d,e,f)};Hj.prototype.waitForUpdate=function(a,b){for(var c=0;c<a.length;c++)Ij(this,a[c],void 0,void 0,"","",b)};
var Ij=function(a,b,c,d,e,f,g){var h=a.entries,m=h[b]||{},n=m.region,p=d&&k(d)?d.toUpperCase():void 0;e=e.toUpperCase();f=f.toUpperCase();if(Jj(p,n,e,f)){var q=!!(g&&0<g&&void 0===m.update),r={region:p,declare_region:m.declare_region,implicit:m.implicit,default:void 0!==c?c:m.default,declare:m.declare,update:m.update,quiet:q};if(""!==e||!1!==m.default)h[b]=r;q&&z.setTimeout(function(){h[b]===r&&r.quiet&&(Ab("TAGGING",2),a.waitPeriodTimedOut=!0,a.clearTimeout(b,void 0),a.notifyListeners())},g)}};
aa=Hj.prototype;aa.clearTimeout=function(a,b){var c=[a],d;for(d in Cj)Cj.hasOwnProperty(d)&&Cj[d]===a&&c.push(d);var e=this.entries[a]||{},f=this.getConsentState(a);if(e.quiet){e.quiet=!1;for(var g=ea(c),h=g.next();!h.done;h=g.next())Kj(this,h.value)}else if(void 0!==b&&f!==b){var m=ea(c);for(h=m.next();!h.done;h=m.next())Kj(this,h.value)}};
aa.update=function(a,b){this.usedDefault||this.usedDeclare||this.usedUpdate||!this.accessedAny||(this.wasSetLate=!0);this.usedUpdate=this.active=!0;if(void 0!=b){var c=this.getConsentState(a),d=this.entries;(d[a]=d[a]||{}).update="granted"===b;this.clearTimeout(a,c)}};
aa.declare=function(a,b,c,d,e){this.usedDeclare=this.active=!0;var f=this.entries,g=f[a]||{},h=g.declare_region,m=c&&k(c)?c.toUpperCase():void 0;d=d.toUpperCase();e=e.toUpperCase();if(Jj(m,h,d,e)){var n={region:g.region,declare_region:m,declare:"granted"===b,implicit:g.implicit,default:g.default,update:g.update,quiet:g.quiet};if(""!==d||!1!==g.declare)f[a]=n}};aa.implicit=function(a,b){this.usedImplicit=!0;var c=this.entries,d=c[a]=c[a]||{};!1!==d.implicit&&(d.implicit="granted"===b)};
aa.getConsentState=function(a){var b=this.entries,c=b[a]||{},d=c.update;if(void 0!==d)return d?1:2;d=c.default;if(void 0!==d)return d?1:2;if(Cj.hasOwnProperty(a)){var e=b[Cj[a]]||{};d=e.update;if(void 0!==d)return d?1:2;d=e.default;if(void 0!==d)return d?1:2}d=c.declare;if(void 0!==d)return d?1:2;if(Sf(3)){d=c.implicit;if(void 0!==d)return d?3:4;if(Fj.hasOwnProperty(a))return Fj[a]?3:4}return 0};aa.setCps=function(a,b,c,d,e){Lj(this.cps,a,b,c,d,e)&&(this.usedSetCps=!0)};
aa.addListener=function(a,b){this.h.push({consentTypes:a,Gl:b})};var Kj=function(a,b){for(var c=0;c<a.h.length;++c){var d=a.h[c];Ha(d.consentTypes)&&-1!==d.consentTypes.indexOf(b)&&(d.Nj=!0)}};Hj.prototype.notifyListeners=function(a,b){for(var c=0;c<this.h.length;++c){var d=this.h[c];if(d.Nj){d.Nj=!1;try{d.Gl({consentEventId:a,consentPriorityId:b})}catch(e){}}}};function Jj(a,b,c,d){return""===c||a===d?!0:a===c?b!==d:!a&&!b}
function Lj(a,b,c,d,e,f){var g=a[b]||{},h=g.region,m=d&&k(d)?d.toUpperCase():void 0;e=e.toUpperCase();f=f.toUpperCase();if(Jj(m,h,e,f)){var n={enabled:"granted"===c,region:m};if(""!==e||!1!==g.enabled)return a[b]=n,!0}return!1}
var Mj=function(a){var b=Gj();b.accessedAny=!0;return(k(a)?[a]:a).every(function(c){switch(b.getConsentState(c)){case 1:case 3:return!0;case 2:case 4:return!1;default:return!0}})},Nj=function(a){var b=Gj();b.accessedAny=!0;return b.getConsentState(a)},Oj=function(a){var b=Gj();b.accessedAny=!0;return!(b.entries[a]||{}).quiet},Pj=function(){if(!zj().h())return!1;var a=Gj();a.accessedAny=!0;return a.active},Qj=function(a,b){Gj().addListener(a,b)},Rj=function(a,b){Gj().notifyListeners(a,b)},Sj=function(a,
b){function c(){for(var e=0;e<b.length;e++)if(!Oj(b[e]))return!0;return!1}if(c()){var d=!1;Qj(b,function(e){d||c()||(d=!0,a(e))})}else a({})},Tj=function(a,b){function c(){for(var h=[],m=0;m<e.length;m++){var n=e[m];Mj(n)&&!f[n]&&h.push(n)}return h}function d(h){for(var m=0;m<h.length;m++)f[h[m]]=!0}var e=k(b)?[b]:b,f={},g=c();g.length!==e.length&&(d(g),Qj(e,function(h){function m(q){0!==q.length&&(d(q),h.consentTypes=q,a(h))}var n=c();if(0!==n.length){var p=Object.keys(f).length;n.length+p>=e.length?
m(n):z.setTimeout(function(){m(c())},500)}}))};function Uj(){}function Vj(){};var Wj=[N.g.J,N.g.R,N.g.N,N.g.Ea],Xj=function(a){for(var b=a[N.g.Va],c=Array.isArray(b)?b:[b],d={Ce:0};d.Ce<c.length;d={Ce:d.Ce},++d.Ce)l(a,function(e){return function(f,g){if(f!==N.g.Va){var h=c[e.Ce],m=qj(),n=rj();Bj=!0;Aj&&Ab("TAGGING",20);Gj().declare(f,g,h,m,n)}}}(d))},Yj=function(a){var b=a[N.g.Va];b&&L(40);var c=a[N.g.We];c&&L(41);for(var d=Ha(b)?b:[b],e={De:0};e.De<d.length;e={De:e.De},++e.De)l(a,function(f){return function(g,h){if(g!==N.g.Va&&g!==N.g.We){var m=d[f.De],n=Number(c),p=qj(),
q=rj();Aj=!0;Bj&&Ab("TAGGING",20);Gj().default(g,h,m,p,q,n)}}}(e))},Zj=function(a,b){l(a,function(c,d){Aj=!0;Bj&&Ab("TAGGING",20);Gj().update(c,d)});Rj(b.eventId,b.priorityId)},ak=function(a){for(var b=a[N.g.Va],c=Array.isArray(b)?b:[b],d={Ee:0};d.Ee<c.length;d={Ee:d.Ee},++d.Ee)l(a,function(e){return function(f,g){if(f!==N.g.Va){var h=c[e.Ee],m=qj(),n=rj();Gj().setCps(f,g,h,m,n)}}}(d))},bk=function(a){for(var b=a[N.g.Va],c=Array.isArray(b)?b:[b],d={kd:0};d.kd<c.length;d={kd:d.kd},++d.kd)a.hasOwnProperty(N.g.ag)&&
l(pi,function(e){return function(f){Lj(Dj,f,a[N.g.ag],c[e.kd],qj(),rj())&&(Ej=!0)}}(d)),l(a,function(e){return function(f,g){f!==N.g.Va&&f!==N.g.ag&&Lj(Dj,f,g,c[e.kd],qj(),rj())&&(Ej=!0)}}(d))},ck=function(a){Array.isArray(a)||(a=[a]);return a.every(function(b){return Mj(b)})},dk=function(a,b){Qj(a,b)},ek=function(a,b){Tj(a,b)},fk=function(a,b){Sj(a,b)},gk=function(){var a=[N.g.J,N.g.Ea,N.g.N];Gj().waitForUpdate(a,500)},hk=function(a){for(var b=ea(a),c=b.next();!c.done;c=b.next()){var d=c.value;Gj().clearTimeout(d,
void 0)}Rj()};var ik=function(a,b,c,d,e,f,g,h,m,n,p){this.eventId=a;this.priorityId=b;this.h=c;this.M=d;this.C=e;this.F=f;this.s=g;this.eventMetadata=h;this.onSuccess=m;this.onFailure=n;this.isGtmEvent=p},jk=function(a,b){var c=[];switch(b){case 3:c.push(a.h);c.push(a.M);c.push(a.C);c.push(a.F);c.push(a.s);break;case 2:c.push(a.h);break;case 1:c.push(a.M);c.push(a.C);c.push(a.F);c.push(a.s);break;case 4:c.push(a.h),c.push(a.M),c.push(a.C),c.push(a.F)}return c},S=function(a,b,c,d){for(var e=ea(jk(a,void 0===d?3:
d)),f=e.next();!f.done;f=e.next()){var g=f.value;if(void 0!==g[b])return g[b]}return c},kk=function(a){for(var b={},c=jk(a,4),d=ea(c),e=d.next();!e.done;e=d.next())for(var f=Object.keys(e.value),g=ea(f),h=g.next();!h.done;h=g.next())b[h.value]=1;return Object.keys(b)},lk=function(a,b,c){function d(n){mb(n)&&l(n,function(p,q){f=!0;e[p]=q})}var e={},f=!1,g=jk(a,void 0===c?3:c);g.reverse();for(var h=ea(g),m=h.next();!m.done;m=h.next())d(m.value[b]);return f?e:void 0},mk=function(a){for(var b=[N.g.Mc,
N.g.Ic,N.g.Jc,N.g.Kc,N.g.Lc,N.g.Nc,N.g.Oc],c=jk(a,3),d=ea(c),e=d.next();!e.done;e=d.next()){for(var f=e.value,g={},h=!1,m=ea(b),n=m.next();!n.done;n=m.next()){var p=n.value;void 0!==f[p]&&(g[p]=f[p],h=!0)}var q=h?g:void 0;if(q)return q}return{}},nk=function(a,b){this.uf=a;this.vf=b;this.C={};this.Sb={};this.h={};this.F={};this.ed={};this.Rb={};this.s={};this.Oa=function(){};this.X=function(){};this.M=!1},ok=function(a,b){a.C=b;return a},pk=function(a,b){a.Sb=b;return a},qk=function(a,b){a.h=b;return a},
rk=function(a,b){a.F=b;return a},sk=function(a,b){a.ed=b;return a},tk=function(a,b){a.Rb=b;return a},uk=function(a,b){a.s=b||{};return a},vk=function(a,b){a.Oa=b;return a},wk=function(a,b){a.X=b;return a},xk=function(a,b){a.M=b;return a},yk=function(a){return new ik(a.uf,a.vf,a.C,a.Sb,a.h,a.F,a.Rb,a.s,a.Oa,a.X,a.M)};function zk(a,b){if(""===a)return b;var c=Number(a);return isNaN(c)?b:c};var Ak=function(a,b){var c=function(){};c.prototype=a.prototype;var d=new c;a.apply(d,Array.prototype.slice.call(arguments,1));return d},Bk=function(a){var b=a;return function(){if(b){var c=b;b=null;c()}}};var Ck=function(a,b,c){a.addEventListener&&a.addEventListener(b,c,!1)};function Dk(){return Pb?!!Wb&&!!Wb.platform:!1}function Ek(){return Zb("iPhone")&&!Zb("iPod")&&!Zb("iPad")}function Fk(){Ek()||Zb("iPad")||Zb("iPod")};ac();$b()||Zb("Trident")||Zb("MSIE");Zb("Edge");!Zb("Gecko")||-1!=Vb().toLowerCase().indexOf("webkit")&&!Zb("Edge")||Zb("Trident")||Zb("MSIE")||Zb("Edge");-1!=Vb().toLowerCase().indexOf("webkit")&&!Zb("Edge")&&Zb("Mobile");Dk()||Zb("Macintosh");Dk()||Zb("Windows");(Dk()?"Linux"===Wb.platform:Zb("Linux"))||Dk()||Zb("CrOS");Dk()||Zb("Android");Ek();Zb("iPad");Zb("iPod");Fk();Vb().toLowerCase().indexOf("kaios");var Gk=function(a,b,c,d){for(var e=b,f=c.length;0<=(e=a.indexOf(c,e))&&e<d;){var g=a.charCodeAt(e-1);if(38==g||63==g){var h=a.charCodeAt(e+f);if(!h||61==h||38==h||35==h)return e}e+=f+1}return-1},Hk=/#|$/,Ik=function(a,b){var c=a.search(Hk),d=Gk(a,0,b,c);if(0>d)return null;var e=a.indexOf("&",d);if(0>e||e>c)e=c;d+=b.length+1;return decodeURIComponent(a.slice(d,-1!==e?e:0).replace(/\+/g," "))},Jk=/[?&]($|#)/,Kk=function(a,b,c){for(var d,e=a.search(Hk),f=0,g,h=[];0<=(g=Gk(a,f,b,e));)h.push(a.substring(f,
g)),f=Math.min(a.indexOf("&",g)+1||e,e);h.push(a.slice(f));d=h.join("").replace(Jk,"$1");var m,n=null!=c?"="+encodeURIComponent(String(c)):"";var p=b+n;if(p){var q,r=d.indexOf("#");0>r&&(r=d.length);var t=d.indexOf("?"),u;0>t||t>r?(t=r,u=""):u=d.substring(t+1,r);q=[d.slice(0,t),u,d.slice(r)];var v=q[1];q[1]=p?v?v+"&"+p:p:v;m=q[0]+(q[1]?"?"+q[1]:"")+q[2]}else m=d;return m};var Lk=function(a){try{var b;if(b=!!a&&null!=a.location.href)a:{try{xj(a.foo);b=!0;break a}catch(c){}b=!1}return b}catch(c){return!1}},Mk=function(a,b){if(a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(a[c],c,a)};function Nk(a){if(!a||!C.head)return null;var b=Ok("META");C.head.appendChild(b);b.httpEquiv="origin-trial";b.content=a;return b}
var Pk=function(a){if(z.top==z)return 0;if(void 0===a?0:a){var b=z.location.ancestorOrigins;if(b)return b[b.length-1]==z.location.origin?1:2}return Lk(z.top)?1:2},Ok=function(a,b){b=void 0===b?document:b;return b.createElement(String(a).toLowerCase())};function Qk(a,b,c,d){d=void 0===d?!1:d;a.google_image_requests||(a.google_image_requests=[]);var e=Ok("IMG",a.document);if(c){var f=function(){if(c){var g=a.google_image_requests,h=Db(g,e);0<=h&&Array.prototype.splice.call(g,h,1)}e.removeEventListener&&e.removeEventListener("load",f,!1);e.removeEventListener&&e.removeEventListener("error",f,!1)};Ck(e,"load",f);Ck(e,"error",f)}d&&(e.attributionSrc="");e.src=b;a.google_image_requests.push(e)}
var Sk=function(a){var b;b=void 0===b?!1:b;var c="https://pagead2.googlesyndication.com/pagead/gen_204?id=tcfe";Mk(a,function(d,e){if(d||0===d)c+="&"+e+"="+encodeURIComponent(""+d)});Rk(c,b)},Rk=function(a,b){var c=window,d;b=void 0===b?!1:b;d=void 0===d?!1:d;if(c.fetch){var e={keepalive:!0,credentials:"include",redirect:"follow",method:"get",mode:"no-cors"};d&&(e.mode="cors","setAttributionReporting"in XMLHttpRequest.prototype?e.attributionReporting={eventSourceEligible:"true",triggerEligible:"false"}:
e.headers={"Attribution-Reporting-Eligible":"event-source"});c.fetch(a,e)}else Qk(c,a,void 0===b?!1:b,void 0===d?!1:d)};var Tk=function(){};var Uk=function(a){void 0!==a.addtlConsent&&"string"!==typeof a.addtlConsent&&(a.addtlConsent=void 0);void 0!==a.gdprApplies&&"boolean"!==typeof a.gdprApplies&&(a.gdprApplies=void 0);return void 0!==a.tcString&&"string"!==typeof a.tcString||void 0!==a.listenerId&&"number"!==typeof a.listenerId?2:a.cmpStatus&&"error"!==a.cmpStatus?0:3},Vk=function(a,b){b=void 0===b?{}:b;this.s=a;this.h=null;this.M={};this.Oa=0;var c;this.X=null!=(c=b.mn)?c:500;var d;this.F=null!=(d=b.Un)?d:!1;this.C=null};sa(Vk,Tk);
var Xk=function(a){return"function"===typeof a.s.__tcfapi||null!=Wk(a)};
Vk.prototype.addEventListener=function(a){var b=this,c={internalBlockOnErrors:this.F},d=Bk(function(){return a(c)}),e=0;-1!==this.X&&(e=setTimeout(function(){c.tcString="tcunavailable";c.internalErrorState=1;d()},this.X));var f=function(g,h){clearTimeout(e);g?(c=g,c.internalErrorState=Uk(c),c.internalBlockOnErrors=b.F,h&&0===c.internalErrorState||(c.tcString="tcunavailable",h||(c.internalErrorState=3))):(c.tcString="tcunavailable",c.internalErrorState=3);a(c)};try{Yk(this,"addEventListener",f)}catch(g){c.tcString=
"tcunavailable",c.internalErrorState=3,e&&(clearTimeout(e),e=0),d()}};Vk.prototype.removeEventListener=function(a){a&&a.listenerId&&Yk(this,"removeEventListener",null,a.listenerId)};
var $k=function(a,b,c){var d;d=void 0===d?"755":d;var e;a:{if(a.publisher&&a.publisher.restrictions){var f=a.publisher.restrictions[b];if(void 0!==f){e=f[void 0===d?"755":d];break a}}e=void 0}var g=e;if(0===g)return!1;var h=c;2===c?(h=0,2===g&&(h=1)):3===c&&(h=1,1===g&&(h=0));var m;if(0===h)if(a.purpose&&a.vendor){var n=Zk(a.vendor.consents,void 0===d?"755":d);m=n&&"1"===b&&a.purposeOneTreatment&&"CH"===a.publisherCC?!0:n&&Zk(a.purpose.consents,b)}else m=!0;else m=1===h?a.purpose&&a.vendor?Zk(a.purpose.legitimateInterests,
b)&&Zk(a.vendor.legitimateInterests,void 0===d?"755":d):!0:!0;return m},Zk=function(a,b){return!(!a||!a[b])},Yk=function(a,b,c,d){c||(c=function(){});if("function"===typeof a.s.__tcfapi){var e=a.s.__tcfapi;e(b,2,c,d)}else if(Wk(a)){al(a);var f=++a.Oa;a.M[f]=c;if(a.h){var g={};a.h.postMessage((g.__tcfapiCall={command:b,version:2,callId:f,parameter:d},g),"*")}}else c({},!1)},Wk=function(a){if(a.h)return a.h;var b;a:{for(var c=a.s,d=0;50>d;++d){var e;try{e=!(!c.frames||!c.frames.__tcfapiLocator)}catch(h){e=
!1}if(e){b=c;break a}var f;b:{try{var g=c.parent;if(g&&g!=c){f=g;break b}}catch(h){}f=null}if(!(c=f))break}b=null}a.h=b;return a.h},al=function(a){a.C||(a.C=function(b){try{var c;c=("string"===typeof b.data?JSON.parse(b.data):b.data).__tcfapiReturn;a.M[c.callId](c.returnValue,c.success)}catch(d){}},Ck(a.s,"message",a.C))},bl=function(a){if(!1===a.gdprApplies)return!0;void 0===a.internalErrorState&&(a.internalErrorState=Uk(a));return"error"===a.cmpStatus||0!==a.internalErrorState?a.internalBlockOnErrors?
(Sk({e:String(a.internalErrorState)}),!1):!0:"loaded"!==a.cmpStatus||"tcloaded"!==a.eventStatus&&"useractioncomplete"!==a.eventStatus?!1:!0};var cl={1:0,3:0,4:0,7:3,9:3,10:3};function dl(){var a=ri.tcf||{};return ri.tcf=a}
var el=function(){return new Vk(z,{mn:-1})},kl=function(){var a=dl(),b=el();Xk(b)&&!fl()&&!gl()&&L(124);if(!a.active&&Xk(b)){fl()&&(a.active=!0,a.Xb={},a.cmpId=0,a.tcfPolicyVersion=0,Gj().active=!0,a.tcString="tcunavailable");gk();try{b.addEventListener(function(c){if(0!==c.internalErrorState)hl(a),hk([N.g.J,N.g.Ea,N.g.N]),Gj().active=!0;else if(a.gdprApplies=c.gdprApplies,a.cmpId=c.cmpId,a.enableAdvertiserConsentMode=c.enableAdvertiserConsentMode,gl()&&(a.active=!0),!il(c)||fl()||gl()){a.tcfPolicyVersion=
c.tcfPolicyVersion;var d;if(!1===c.gdprApplies){var e={},f;for(f in cl)cl.hasOwnProperty(f)&&(e[f]=!0);d=e;b.removeEventListener(c)}else if(il(c)){var g={},h;for(h in cl)if(cl.hasOwnProperty(h))if("1"===h){var m,n=c,p={Ll:!0};p=void 0===p?{}:p;m=bl(n)?!1===n.gdprApplies||"tcunavailable"===n.tcString||void 0===n.gdprApplies&&!p.Ll||"string"!==typeof n.tcString||!n.tcString.length?!0:$k(n,"1",0):!1;g["1"]=m}else g[h]=$k(c,h,cl[h]);d=g}if(d){a.tcString=c.tcString||"tcempty";a.Xb=d;var q={},r=(q[N.g.J]=
a.Xb["1"]?"granted":"denied",q);!0!==a.gdprApplies?(hk([N.g.J,N.g.Ea,N.g.N]),Gj().active=!0):(r[N.g.Ea]=a.Xb["3"]&&a.Xb["4"]?"granted":"denied","number"===typeof a.tcfPolicyVersion&&4<=a.tcfPolicyVersion?r[N.g.N]=a.Xb["1"]&&a.Xb["7"]?"granted":"denied":hk([N.g.N]),Zj(r,{eventId:0},{gdprApplies:a?a.gdprApplies:void 0,tcString:jl()||""}))}}else hk([N.g.J,N.g.Ea,N.g.N])})}catch(c){hl(a),hk([N.g.J,N.g.Ea,N.g.N]),Gj().active=!0}}};function hl(a){a.type="e";a.tcString="tcunavailable"}
function il(a){return"tcloaded"===a.eventStatus||"useractioncomplete"===a.eventStatus||"cmpuishown"===a.eventStatus}var fl=function(){return!0===z.gtag_enable_tcf_support};function gl(){return!0===dl().enableAdvertiserConsentMode}var jl=function(){var a=dl();if(a.active)return a.tcString},ll=function(){var a=dl();if(a.active&&void 0!==a.gdprApplies)return a.gdprApplies?"1":"0"},ml=function(a){if(!cl.hasOwnProperty(String(a)))return!0;var b=dl();return b.active&&b.Xb?!!b.Xb[String(a)]:!0};var nl=[N.g.J,N.g.R],ol=[N.g.J,N.g.R,N.g.N,N.g.Ea],pl={},ql=(pl[N.g.J]=1,pl[N.g.R]=2,pl);function rl(a){if(void 0===a)return 0;switch(S(a,N.g.ja)){case void 0:return 1;case !1:return 3;default:return 2}}
var sl=function(a){var b=rl(a);if(3===b)return!1;switch(Nj(N.g.Ea)){case 1:case 3:return!0;case 2:return!1;case 4:return 2===b;case 0:return!0;default:return!1}},tl=function(){return Pj()||!Mj(N.g.J)||!Mj(N.g.R)},ul=function(){var a={},b;for(b in ql)ql.hasOwnProperty(b)&&(a[ql[b]]=Nj(b));var c=R(28)&&nl.every(function(e){return Mj(e)}),d=R(26);return c||d?Ne(a,1):Ne(a,0)},vl={},wl=(vl[N.g.J]=0,vl[N.g.R]=1,vl[N.g.N]=2,vl[N.g.Ea]=3,vl);
function xl(a){switch(a){case void 0:return 1;case !0:return 3;case !1:return 2;default:return 0}}
var yl=function(a){for(var b="1",c=0;c<ol.length;c++){var d=b,e,f=ol[c],g=Cj[f];e=void 0===g?0:wl.hasOwnProperty(g)?12|wl[g]:8;var h=Gj();h.accessedAny=!0;var m=h.entries[f]||{};e=e<<2|xl(m.implicit);b=d+(""+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[e]+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[xl(m.declare)<<4|xl(m.default)<<2|xl(m.update)])}var n=b,p;p=""+(Pj()<<2|rl(a));return n+p},zl=function(){if(!Mj(N.g.N))return"-";var a=Gj(),b=Ej,c=a.cps,d=
a.usedSetCps,e={};if(b&&d)for(var f in Dj)Dj.hasOwnProperty(f)&&Dj[f].enabled&&c.hasOwnProperty(f)&&c[f].enabled?e[f]={enabled:!0,region:Dj[f].region}:e[f]={enabled:!1,region:Dj[f].region};else{var g=b?Dj:c,h;for(h in g)g.hasOwnProperty(h)&&(e[h]={enabled:g[h].enabled,region:g[h].region})}for(var m={},n=ea(Object.keys(e)),p=n.next();!p.done;p=n.next()){var q=p.value;m[q]=e[q].enabled}for(var r="",t=ea(Object.keys(pi)),u=t.next();!u.done;u=t.next()){var v=u.value;!1!==m[v]&&(r+=pi[v])}return""===r?
"-":r},Al=function(){return pj["6"]||(fl()||gl())&&"1"===ll()?"1":"0"},Bl=function(){return(pj["6"]?!0:!(!fl()&&!gl())&&"1"===ll())||Gj().usedSetCps||!Mj(N.g.N)},Cl=function(){var a="0",b="0",c;var d=dl();c=d.active?d.cmpId:void 0;"number"===typeof c&&0<=c&&4095>=c&&(a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[c>>6&63],b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[c&63]);var e="0",f;var g=dl();f=g.active?g.tcfPolicyVersion:void 0;"number"===typeof f&&
0<=f&&63>=f&&(e="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[f]);var h=0;pj["6"]&&(h|=1);"1"===ll()&&(h|=2);fl()&&(h|=4);var m;var n=dl();m=void 0!==n.enableAdvertiserConsentMode?n.enableAdvertiserConsentMode?"1":"0":void 0;"1"===m&&(h|=8);Gj().waitPeriodTimedOut&&(h|=16);return"1"+a+b+e+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[h]};var Dl=function(a){var b=1,c,d,e;if(a)for(b=0,d=a.length-1;0<=d;d--)e=a.charCodeAt(d),b=(b<<6&268435455)+e+(e<<14),c=b&266338304,b=0!==c?b^c>>21:b;return b};var El=function(a,b,c){for(var d=[],e=b.split(";"),f=0;f<e.length;f++){var g=e[f].split("="),h=g[0].replace(/^\s*|\s*$/g,"");if(h&&h==a){var m=g.slice(1).join("=").replace(/^\s*|\s*$/g,"");m&&c&&(m=decodeURIComponent(m));d.push(m)}}return d};var Hl=function(a,b,c,d){return Fl(d)?El(a,String(b||Gl()),c):[]},Kl=function(a,b,c,d,e){if(Fl(e)){var f=Il(a,d,e);if(1===f.length)return f[0].id;if(0!==f.length){f=Jl(f,function(g){return g.Gf},b);if(1===f.length)return f[0].id;f=Jl(f,function(g){return g.Ne},c);return f[0]?f[0].id:void 0}}};function Ll(a,b,c,d){var e=Gl(),f=window;"null"!==f.origin&&(f.document.cookie=a);var g=Gl();return e!=g||void 0!=c&&0<=Hl(b,g,!1,d).indexOf(c)}
var Pl=function(a,b,c,d){function e(w,x,y){if(null==y)return delete h[x],w;h[x]=y;return w+"; "+x+"="+y}function f(w,x){if(null==x)return delete h[x],w;h[x]=!0;return w+"; "+x}if(!Fl(c.Gb))return 2;var g;void 0==b?g=a+"=deleted; expires="+(new Date(0)).toUTCString():(c.encode&&(b=encodeURIComponent(b)),b=Ml(b),g=a+"="+b);var h={};g=e(g,"path",c.path);var m;c.expires instanceof Date?m=c.expires.toUTCString():null!=c.expires&&(m=""+c.expires);g=e(g,"expires",m);g=e(g,"max-age",c.Em);g=e(g,"samesite",
c.Ym);c.bn&&(g=f(g,"secure"));var n=c.domain;if(n&&"auto"===n.toLowerCase()){for(var p=Nl(),q=void 0,r=!1,t=0;t<p.length;++t){var u="none"!==p[t]?p[t]:void 0,v=e(g,"domain",u);v=f(v,c.flags);try{d&&d(a,h)}catch(w){q=w;continue}r=!0;if(!Ol(u,c.path)&&Ll(v,a,b,c.Gb))return 0}if(q&&!r)throw q;return 1}n&&"none"!==n.toLowerCase()&&(g=e(g,"domain",n));g=f(g,c.flags);d&&d(a,h);return Ol(n,c.path)?1:Ll(g,a,b,c.Gb)?0:1},Ql=function(a,b,c){null==c.path&&(c.path="/");c.domain||(c.domain="auto");return Pl(a,
b,c)};function Jl(a,b,c){for(var d=[],e=[],f,g=0;g<a.length;g++){var h=a[g],m=b(h);m===c?d.push(h):void 0===f||m<f?(e=[h],f=m):m===f&&e.push(h)}return 0<d.length?d:e}function Il(a,b,c){for(var d=[],e=Hl(a,void 0,void 0,c),f=0;f<e.length;f++){var g=e[f].split("."),h=g.shift();if(!b||-1!==b.indexOf(h)){var m=g.shift();m&&(m=m.split("-"),d.push({id:g.join("."),Gf:1*m[0]||1,Ne:1*m[1]||1}))}}return d}
var Ml=function(a){a&&1200<a.length&&(a=a.substring(0,1200));return a},Rl=/^(www\.)?google(\.com?)?(\.[a-z]{2})?$/,Sl=/(^|\.)doubleclick\.net$/i,Ol=function(a,b){return Sl.test(window.document.location.hostname)||"/"===b&&Rl.test(a)},Gl=function(){return"null"!==window.origin?window.document.cookie:""},Nl=function(){var a=[],b=window.document.location.hostname.split(".");if(4===b.length){var c=b[b.length-1];if(parseInt(c,10).toString()===c)return["none"]}for(var d=b.length-2;0<=d;d--)a.push(b.slice(d).join("."));
var e=window.document.location.hostname;Sl.test(e)||Rl.test(e)||a.push("none");return a},Fl=function(a){return a&&zj().h()?(k(a)?[a]:a).every(function(b){return Oj(b)&&Mj(b)}):!0},Tl=function(a){if(!a)return 1;a=0===a.indexOf(".")?a.substr(1):a;return a.split(".").length},Ul=function(a){if(!a||"/"===a)return 1;"/"!==a[0]&&(a="/"+a);"/"!==a[a.length-1]&&(a+="/");return a.split("/").length-1};var Vl=function(a){var b=Math.round(2147483647*Math.random());return a?String(b^Dl(a)&2147483647):String(b)},Wl=function(a){return[Vl(a),Math.round(Sa()/1E3)].join(".")},Xl=function(a,b,c,d,e){var f=Tl(b);return Kl(a,f,Ul(c),d,e)},Yl=function(a,b,c,d){var e=""+Tl(c),f=Ul(d);1<f&&(e+="-"+f);return[b,e,a].join(".")};var Zl=function(){ri.dedupe_gclid||(ri.dedupe_gclid=""+Wl());return ri.dedupe_gclid};var $l=function(){var a=!1;return a};var bm=function(a,b){var c=am();c.pending||(c.pending=[]);Ia(c.pending,function(d){return d.target.ctid===a.ctid&&d.target.isDestination===a.isDestination})||c.pending.push({target:a,onLoad:b})},cm=function(){this.container={};this.destination={};this.canonical={};this.pending=[];this.siloed=[]},am=function(){var a=Ec("google_tag_data",{}),b=a.tidr;b||(b=new cm,a.tidr=b);return b};var dm={},em=!1,Tf={ctid:"UA-19138737-19",Ef:"",Lj:"UA-19138737-19",Mj:"UA-19138737-19"};dm.ie=Oa("");
var hm=function(){var a=fm();return em?a.map(gm):a},jm=function(){var a=im();return em?a.map(gm):a},lm=function(){return km(Tf.ctid)},mm=function(){return km(Tf.Ef||"_"+Tf.ctid)},fm=function(){return Tf.Lj?Tf.Lj.split("|"):[Tf.ctid]},im=function(){return Tf.Mj?Tf.Mj.split("|"):[]},nm=function(a){var b=am();return a.isDestination?b.destination[a.ctid]:b.container[a.ctid]},km=function(a){return em?gm(a):a},gm=function(a){return"siloed_"+a},om=function(a){a=String(a);return em&&0===a.indexOf("siloed_")?
a.substring(7):a},pm=function(){var a=!1;a=!0;if(a){var b=am();if(b.siloed){for(var c=[],d=fm(),e=im(),f={},g=0;g<b.siloed.length;f={Ff:void 0},g++)f.Ff=b.siloed[g],!em&&Ia(f.Ff.isDestination?e:d,function(h){return function(m){return m===h.Ff.ctid}}(f))?em=!0:c.push(f.Ff);b.siloed=c}}};
function qm(){var a=am();if(a.pending){for(var b,c=[],d=!1,e=hm(),f=jm(),g={},h=0;h<a.pending.length;g={Oe:void 0},h++)g.Oe=a.pending[h],Ia(g.Oe.target.isDestination?f:e,function(m){return function(n){return n===m.Oe.target.ctid}}(g))?d||(b=g.Oe.onLoad,d=!0):c.push(g.Oe);a.pending=c;if(b)try{b(mm())}catch(m){}}}
var rm=function(){for(var a=am(),b=hm(),c=0;c<b.length;c++){var d=a.container[b[c]];d?(d.state=2,d.containers=hm(),d.destinations=jm()):a.container[b[c]]={state:2,containers:hm(),destinations:jm()}}for(var e=jm(),f=0;f<e.length;f++){var g=a.destination[e[f]];g&&0===g.state&&L(93);g?(g.state=2,g.containers=hm(),g.destinations=jm()):a.destination[e[f]]={state:2,containers:hm(),destinations:jm()}}a.canonical[mm()]={};qm()},sm=function(a){return!!am().container[a]},tm=function(a){var b=am().destination[a];
return!!b&&!!b.state},um=function(){return{ctid:lm(),isDestination:dm.ie}};function vm(a){var b=am();(b.siloed=b.siloed||[]).push(a)}var wm=function(){var a=am().container,b;for(b in a)if(a.hasOwnProperty(b)&&1===a[b].state)return!0;return!1},xm=function(){var a={};l(am().destination,function(b,c){0===c.state&&(a[b]=c)});return a},ym=function(a){return!!(a&&a.parent&&a.context&&1===a.context.source&&0!==a.parent.ctid.indexOf("GTM-"))};var zm={UA:1,AW:2,DC:3,G:4,GF:5,GT:12,GTM:14,HA:6,MC:7},Am=function(a,b){var c=Tf.ctid.split("-")[0].toUpperCase(),d={};d.ctid=Tf.ctid;d.Vm=qi.me;d.Xm=qi.Ug;d.Am=dm.ie?2:1;d.uc=Tf.Ef;d.uc!==a&&(d.Tf=a);R(75)?d.Xj=2:R(76)&&(d.Xj=1);xi?(d.Rf=zm[c],d.Rf||(d.Rf=0)):d.Rf=Di?13:10;Bi?d.Ch=1:$l()?d.Ch=2:d.Ch=3;var e;var f=d.Rf,g=d.Ch;void 0===f?e="":(g||(g=0),e=""+Hg(1,1)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[f<<2|g]);var h=d.Tn,m=4+e+(h?""+Hg(2,1)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[h]:
""),n,p=d.Xm;n=p&&Gg.test(p)?""+Hg(3,2)+p:"";var q,r=d.Vm;q=r?""+Hg(4,1)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[r]:"";var t;var u=d.ctid;if(u&&b){var v=u.split("-"),w=v[0].toUpperCase();if("GTM"!==w&&"OPT"!==w)t="";else{var x=v[1];t=""+Hg(5,3)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[1+x.length]+(d.Am||0)+x}}else t="";var y=d.Xj,A=d.uc,B=d.Tf,E=d.Yn;return m+n+q+t+(y?""+Hg(6,1)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[y]:
"")+(A?""+Hg(7,3)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[A.length]+A:"")+(B?""+Hg(8,3)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[B.length]+B:"")+(E?""+Hg(9,3)+"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_"[E.length]+E:"")};var Bm=/:[0-9]+$/,Cm=/^\d+\.fls\.doubleclick\.net$/,Dm=function(a,b,c,d){function e(r){return Sf(10)?decodeURIComponent(r.replace(/\+/g," ")):decodeURIComponent(r).replace(/\+/g," ")}for(var f=[],g=ea(a.split("&")),h=g.next();!h.done;h=g.next()){var m=ea(h.value.split("=")),n=m.next().value,p=ha(m);if(e(n)===b){var q=p.join("=");if(!c)return d?q:e(q);f.push(d?q:e(q))}}return c?f:void 0},Gm=function(a,b,c,d,e){b&&(b=String(b).toLowerCase());if("protocol"===b||"port"===b)a.protocol=Em(a.protocol)||
Em(z.location.protocol);"port"===b?a.port=String(Number(a.hostname?a.port:z.location.port)||("http"===a.protocol?80:"https"===a.protocol?443:"")):"host"===b&&(a.hostname=(a.hostname||z.location.hostname).replace(Bm,"").toLowerCase());return Fm(a,b,c,d,e)},Fm=function(a,b,c,d,e){var f,g=Em(a.protocol);b&&(b=String(b).toLowerCase());switch(b){case "url_no_fragment":f=Hm(a);break;case "protocol":f=g;break;case "host":f=a.hostname.replace(Bm,"").toLowerCase();if(c){var h=/^www\d*\./.exec(f);h&&h[0]&&
(f=f.substr(h[0].length))}break;case "port":f=String(Number(a.port)||("http"===g?80:"https"===g?443:""));break;case "path":a.pathname||a.hostname||Ab("TAGGING",1);f="/"===a.pathname.substr(0,1)?a.pathname:"/"+a.pathname;var m=f.split("/");0<=(d||[]).indexOf(m[m.length-1])&&(m[m.length-1]="");f=m.join("/");break;case "query":f=a.search.replace("?","");e&&(f=Dm(f,e,!1));break;case "extension":var n=a.pathname.split(".");f=1<n.length?n[n.length-1]:"";f=f.split("/")[0];break;case "fragment":f=a.hash.replace("#",
"");break;default:f=a&&a.href}return f},Em=function(a){return a?a.replace(":","").toLowerCase():""},Hm=function(a){var b="";if(a&&a.href){var c=a.href.indexOf("#");b=0>c?a.href:a.href.substr(0,c)}return b},Im={},Jm=0,Lm=function(a){if(Sf(17)){var b=Im[a];b||(b=Km(a),5>Jm&&(Im[a]=b,Jm++));return b}return Km(a)},Km=function(a){var b=C.createElement("a");a&&(b.href=a);var c=b.pathname;"/"!==c[0]&&(a||Ab("TAGGING",1),c="/"+c);var d=b.hostname.replace(Bm,"");return{href:b.href,protocol:b.protocol,host:b.host,
hostname:d,pathname:c,search:b.search,hash:b.hash,port:b.port}},Mm=function(a){function b(n){var p=n.split("=")[0];return 0>d.indexOf(p)?n:p+"=0"}function c(n){return n.split("&").map(b).filter(function(p){return void 0!==p}).join("&")}var d="gclid dclid gbraid wbraid gclaw gcldc gclha gclgf gclgb _gl".split(" "),e=Lm(a),f=a.split(/[?#]/)[0],g=e.search,h=e.hash;"?"===g[0]&&(g=g.substring(1));"#"===h[0]&&(h=h.substring(1));g=c(g);h=c(h);""!==g&&(g="?"+g);""!==h&&(h="#"+h);var m=""+f+g+h;"/"===m[m.length-
1]&&(m=m.substring(0,m.length-1));return m},Nm=function(a){var b=Lm(z.location.href),c=Gm(b,"host",!1);if(c&&c.match(Cm)){var d=Gm(b,"path").split(a+"=");if(1<d.length)return d[1].split(";")[0].split("?")[0]}};function Om(a,b,c,d){var e,f=Number(null!=a.Wb?a.Wb:void 0);0!==f&&(e=new Date((b||Sa())+1E3*(f||7776E3)));return{path:a.path,domain:a.domain,flags:a.flags,encode:!!c,expires:e,Gb:d}};var Pm;var Tm=function(){var a=Qm,b=Rm,c=Sm(),d=function(g){a(g.target||g.srcElement||{})},e=function(g){b(g.target||g.srcElement||{})};if(!c.init){Oc(C,"mousedown",d);Oc(C,"keyup",d);Oc(C,"submit",e);var f=HTMLFormElement.prototype.submit;HTMLFormElement.prototype.submit=function(){b(this);f.call(this)};c.init=!0}},Um=function(a,b,c,d,e){var f={callback:a,domains:b,fragment:2===c,placement:c,forms:d,sameHost:e};Sm().decorators.push(f)},Vm=function(a,b,c){for(var d=Sm().decorators,e={},f=0;f<d.length;++f){var g=
d[f],h;if(h=!c||g.forms)a:{var m=g.domains,n=a,p=!!g.sameHost;if(m&&(p||n!==C.location.hostname))for(var q=0;q<m.length;q++)if(m[q]instanceof RegExp){if(m[q].test(n)){h=!0;break a}}else if(0<=n.indexOf(m[q])||p&&0<=m[q].indexOf(n)){h=!0;break a}h=!1}if(h){var r=g.placement;void 0==r&&(r=g.fragment?2:1);r===b&&Wa(e,g.callback())}}return e};function Sm(){var a=Ec("google_tag_data",{}),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var Wm=/(.*?)\*(.*?)\*(.*)/,Xm=/^https?:\/\/([^\/]*?)\.?cdn\.ampproject\.org\/?(.*)/,Ym=/^(?:www\.|m\.|amp\.)+/,Zm=/([^?#]+)(\?[^#]*)?(#.*)?/;function $m(a){var b=Zm.exec(a);if(b)return{Ih:b[1],query:b[2],fragment:b[3]}}
function an(a,b){var c=[Cc.userAgent,(new Date).getTimezoneOffset(),Cc.userLanguage||Cc.language,Math.floor(Sa()/60/1E3)-(void 0===b?0:b),a].join("*"),d;if(!(d=Pm)){for(var e=Array(256),f=0;256>f;f++){for(var g=f,h=0;8>h;h++)g=g&1?g>>>1^3988292384:g>>>1;e[f]=g}d=e}Pm=d;for(var m=4294967295,n=0;n<c.length;n++)m=m>>>8^Pm[(m^c.charCodeAt(n))&255];return((m^-1)>>>0).toString(36)}
function bn(){return function(a){var b=Lm(z.location.href),c=b.search.replace("?",""),d=Dm(c,"_gl",!1,!0)||"";a.query=cn(d)||{};var e=Gm(b,"fragment"),f;var g=-1;if(Ya(e,"_gl="))g=4;else{var h=e.indexOf("&_gl=");0<h&&(g=h+3+2)}if(0>g)f=void 0;else{var m=e.indexOf("&",g);f=0>m?e.substring(g):e.substring(g,m)}a.fragment=cn(f||"")||{}}}
var dn=function(a){var b=bn(),c=Sm();c.data||(c.data={query:{},fragment:{}},b(c.data));var d={},e=c.data;e&&(Wa(d,e.query),a&&Wa(d,e.fragment));return d},cn=function(a){try{var b=on(a,3);if(void 0!==b){for(var c={},d=b?b.split("*"):[],e=0;e+1<d.length;e+=2){var f=d[e],g=yb(d[e+1]);c[f]=g}Ab("TAGGING",6);return c}}catch(h){Ab("TAGGING",8)}};
function on(a,b){if(a){var c;a:{for(var d=a,e=0;3>e;++e){var f=Wm.exec(d);if(f){c=f;break a}d=decodeURIComponent(d)}c=void 0}var g=c;if(g&&"1"===g[1]){var h=g[3],m;a:{for(var n=g[2],p=0;p<b;++p)if(n===an(h,p)){m=!0;break a}m=!1}if(m)return h;Ab("TAGGING",7)}}}
function pn(a,b,c,d,e){function f(p){var q=p,r=(new RegExp("(.*?)(^|&)"+a+"=([^&]*)&?(.*)")).exec(q),t=q;if(r){var u=r[2],v=r[4];t=r[1];v&&(t=t+u+v)}p=t;var w=p.charAt(p.length-1);p&&"&"!==w&&(p+="&");return p+n}d=void 0===d?!1:d;e=void 0===e?!1:e;var g=$m(c);if(!g)return"";var h=g.query||"",m=g.fragment||"",n=a+"="+b;d?0!==m.substring(1).length&&e||(m="#"+f(m.substring(1))):h="?"+f(h.substring(1));return""+g.Ih+h+m}
function qn(a,b){function c(n,p,q){var r;a:{for(var t in n)if(n.hasOwnProperty(t)){r=!0;break a}r=!1}if(r){var u,v=[],w;for(w in n)if(n.hasOwnProperty(w)){var x=n[w];void 0!==x&&x===x&&null!==x&&"[object Object]"!==x.toString()&&(v.push(w),v.push(xb(String(x))))}var y=v.join("*");u=["1",an(y),y].join("*");d?(Sf(13)||Sf(11)||!p)&&rn("_gl",u,a,p,q):sn("_gl",u,a,p,q)}}var d="FORM"===(a.tagName||"").toUpperCase(),e=Vm(b,1,d),f=Vm(b,2,d),g=Vm(b,4,d),h=Vm(b,3,d);c(e,!1,!1);c(f,!0,!1);Sf(11)&&c(g,!0,!0);
for(var m in h)h.hasOwnProperty(m)&&tn(m,h[m],a)}function tn(a,b,c){"a"===c.tagName.toLowerCase()?sn(a,b,c):"form"===c.tagName.toLowerCase()&&rn(a,b,c)}function sn(a,b,c,d,e){d=void 0===d?!1:d;e=void 0===e?!1:e;var f;if(f=c.href){var g;if(!(g=!Sf(16)||d)){var h=z.location.href,m=$m(c.href),n=$m(h);g=!(m&&n&&m.Ih===n.Ih&&m.query===n.query&&m.fragment)}f=g}if(f){var p=pn(a,b,c.href,d,e);sc.test(p)&&(c.href=p)}}
function rn(a,b,c,d,e){d=void 0===d?!1:d;e=void 0===e?!1:e;if(c&&c.action){var f=(c.method||"").toLowerCase();if("get"!==f||d){if("get"===f||"post"===f){var g=pn(a,b,c.action,d,e);sc.test(g)&&(c.action=g)}}else{for(var h=c.childNodes||[],m=!1,n=0;n<h.length;n++){var p=h[n];if(p.name===a){p.setAttribute("value",b);m=!0;break}}if(!m){var q=C.createElement("input");q.setAttribute("type","hidden");q.setAttribute("name",a);q.setAttribute("value",b);c.appendChild(q)}}}}
function Qm(a){try{var b;a:{for(var c=a,d=100;c&&0<d;){if(c.href&&c.nodeName.match(/^a(?:rea)?$/i)){b=c;break a}c=c.parentNode;d--}b=null}var e=b;if(e){var f=e.protocol;"http:"!==f&&"https:"!==f||qn(e,e.hostname)}}catch(g){}}function Rm(a){try{if(a.action){var b=Gm(Lm(a.action),"host");qn(a,b)}}catch(c){}}
var un=function(a,b,c,d){Tm();Um(a,b,"fragment"===c?2:1,!!d,!1)},vn=function(a,b){Tm();Um(a,[Fm(z.location,"host",!0)],b,!0,!0)},wn=function(){var a=C.location.hostname,b=Xm.exec(C.referrer);if(!b)return!1;var c=b[2],d=b[1],e="";if(c){var f=c.split("/"),g=f[1];e="s"===g?decodeURIComponent(f[2]):decodeURIComponent(g)}else if(d){if(0===d.indexOf("xn--"))return!1;e=d.replace(/-/g,".").replace(/\.\./g,"-")}var h=a.replace(Ym,""),m=e.replace(Ym,""),n;if(!(n=h===m)){var p="."+m;n=h.substring(h.length-p.length,
h.length)===p}return n},xn=function(a,b){return!1===a?!1:a||b||wn()};var yn=["1"],zn={},An={},Fn=function(a,b){b=void 0===b?!0:b;var c=Bn(a.prefix);if(!zn[c])if(Cn(c,a.path,a.domain)){var d=An[Bn(a.prefix)];Dn(a,d?d.id:void 0,d?d.Bh:void 0)}else{var e=Nm("auiddc");if(e)Ab("TAGGING",17),zn[c]=e;else if(b){var f=Bn(a.prefix),g=Wl();if(0===En(f,g,a)){var h=Ec("google_tag_data",{});h._gcl_au||(h._gcl_au=g)}Cn(c,a.path,a.domain)}}};
function Dn(a,b,c){var d=Bn(a.prefix),e=zn[d];if(e){var f=e.split(".");if(2===f.length){var g=Number(f[1])||0;if(g){var h=e;b&&(h=e+"."+b+"."+(c?c:Math.floor(Sa()/1E3)));En(d,h,a,1E3*g)}}}}function En(a,b,c,d){var e=Yl(b,"1",c.domain,c.path),f=Om(c,d);f.Gb=Gn();return Ql(a,e,f)}function Cn(a,b,c){var d=Xl(a,b,c,yn,Gn());if(!d)return!1;Hn(a,d);return!0}
function Hn(a,b){var c=b.split(".");5===c.length?(zn[a]=c.slice(0,2).join("."),An[a]={id:c.slice(2,4).join("."),Bh:Number(c[4])||0}):3===c.length?An[a]={id:c.slice(0,2).join("."),Bh:Number(c[2])||0}:zn[a]=b}function Bn(a){return(a||"_gcl")+"_au"}function In(a){function b(){Mj(c)&&a()}var c=Gn();Sj(function(){b();Mj(c)||Tj(b,c)},c)}
function Jn(a){var b=dn(!0),c=Bn(a.prefix);In(function(){var d=b[c];if(d){Hn(c,d);var e=1E3*Number(zn[c].split(".")[1]);if(e){Ab("TAGGING",16);var f=Om(a,e);f.Gb=Gn();var g=Yl(d,"1",a.domain,a.path);Ql(c,g,f)}}})}function Kn(a,b,c,d,e){e=e||{};var f=function(){var g={},h=Xl(a,e.path,e.domain,yn,Gn());h&&(g[a]=h);return g};In(function(){un(f,b,c,d)})}function Gn(){return Sf(14)?["ad_storage","ad_user_data"]:["ad_storage"]};var Ln=function(a){for(var b=[],c=C.cookie.split(";"),d=new RegExp("^\\s*"+(a||"_gac")+"_(UA-\\d+-\\d+)=\\s*(.+?)\\s*$"),e=0;e<c.length;e++){var f=c[e].match(d);f&&b.push({Wh:f[1],value:f[2],timestamp:Number(f[2].split(".")[1])||0})}b.sort(function(g,h){return h.timestamp-g.timestamp});return b};
function Mn(a,b){var c=Ln(a),d={};if(!c||!c.length)return d;for(var e=0;e<c.length;e++){var f=c[e].value.split(".");if(!("1"!==f[0]||b&&3>f.length||!b&&3!==f.length)&&Number(f[1])){d[c[e].Wh]||(d[c[e].Wh]=[]);var g={version:f[0],timestamp:1E3*Number(f[1]),aa:f[2]};b&&3<f.length&&(g.labels=f.slice(3));d[c[e].Wh].push(g)}}return d};var Nn=/^\w+$/,On=/^[\w-]+$/,Pn={aw:"_aw",dc:"_dc",gf:"_gf",ha:"_ha",gp:"_gp",gb:"_gb"};function Qn(){return Sf(14)?["ad_storage","ad_user_data"]:["ad_storage"]}
var Rn=function(a){return!zj().h()||Mj(a)},Sn=function(a){function b(){var d=Rn(c);d&&a();return d}var c=Qn();Sj(function(){b()||Tj(b,c)},c)},Un=function(a){return Tn(a).map(function(b){return b.aa})},Tn=function(a){var b=[],c=Hl(a,C.cookie,void 0,Qn());if(!c||0==c.length)return b;for(var d={},e=0;e<c.length;d={aa:void 0},e++){var f=Vn(c[e]);if(null!=f){var g=f,h=g.version;d.aa=g.aa;var m=g.timestamp,n=g.labels,p=Ia(b,function(q){return function(r){return r.aa===q.aa}}(d));p?(p.timestamp=Math.max(p.timestamp,
m),p.labels=Wn(p.labels,n||[])):b.push({version:h,aa:d.aa,timestamp:m,labels:n})}}b.sort(function(q,r){return r.timestamp-q.timestamp});return Xn(b)};function Wn(a,b){for(var c={},d=[],e=0;e<a.length;e++)c[a[e]]=!0,d.push(a[e]);for(var f=0;f<b.length;f++)c[b[f]]||d.push(b[f]);return d}function Yn(a){return a&&"string"==typeof a&&a.match(Nn)?a:"_gcl"}
var $n=function(){var a=Lm(z.location.href),b=Gm(a,"query",!1,void 0,"gclid"),c=Gm(a,"query",!1,void 0,"gclsrc"),d=Gm(a,"query",!1,void 0,"wbraid"),e=Gm(a,"query",!1,void 0,"dclid");if(!b||!c||!d){var f=a.hash.replace("#","");b=b||Dm(f,"gclid",!1);c=c||Dm(f,"gclsrc",!1);d=d||Dm(f,"wbraid",!1)}return Zn(b,c,e,d)},Zn=function(a,b,c,d){var e={},f=function(g,h){e[h]||(e[h]=[]);e[h].push(g)};e.gclid=a;e.gclsrc=b;e.dclid=c;void 0!==d&&On.test(d)&&(e.wbraid=d,f(d,"gb"));if(void 0!==a&&a.match(On))switch(b){case void 0:f(a,
"aw");break;case "aw.ds":f(a,"aw");f(a,"dc");break;case "ds":f(a,"dc");break;case "3p.ds":f(a,"dc");break;case "gf":f(a,"gf");break;case "ha":f(a,"ha")}c&&f(c,"dc");return e},bo=function(a){var b=$n();Sn(function(){ao(b,!1,a)})};
function ao(a,b,c,d,e){function f(w,x){var y=co(w,g);y&&(Ql(y,x,h),m=!0)}c=c||{};e=e||[];var g=Yn(c.prefix);d=d||Sa();var h=Om(c,d,!0);h.Gb=Qn();var m=!1,n=Math.round(d/1E3),p=function(w){var x=["GCL",n,w];0<e.length&&x.push(e.join("."));return x.join(".")};a.aw&&f("aw",p(a.aw[0]));a.dc&&f("dc",p(a.dc[0]));a.gf&&f("gf",p(a.gf[0]));a.ha&&f("ha",p(a.ha[0]));a.gp&&f("gp",p(a.gp[0]));if(!m&&a.gb){var q=a.gb[0],r=co("gb",g),t=!1;if(!b)for(var u=Tn(r),v=0;v<u.length;v++)u[v].aa===q&&u[v].labels&&0<u[v].labels.length&&
(t=!0);t||f("gb",p(q))}}
var fo=function(a,b){var c=dn(!0);Sn(function(){for(var d=Yn(b.prefix),e=0;e<a.length;++e){var f=a[e];if(void 0!==Pn[f]){var g=co(f,d),h=c[g];if(h){var m=Math.min(eo(h),Sa()),n;b:{for(var p=m,q=Hl(g,C.cookie,void 0,Qn()),r=0;r<q.length;++r)if(eo(q[r])>p){n=!0;break b}n=!1}if(!n){var t=Om(b,m,!0);t.Gb=Qn();Ql(g,h,t)}}}}ao(Zn(c.gclid,c.gclsrc),!1,b)})},co=function(a,b){var c=Pn[a];if(void 0!==c)return b+c},eo=function(a){return 0!==go(a.split(".")).length?1E3*(Number(a.split(".")[1])||0):0};
function Vn(a){var b=go(a.split("."));return 0===b.length?null:{version:b[0],aa:b[2],timestamp:1E3*(Number(b[1])||0),labels:b.slice(3)}}function go(a){return 3>a.length||"GCL"!==a[0]&&"1"!==a[0]||!/^\d+$/.test(a[1])||!On.test(a[2])?[]:a}
var ho=function(a,b,c,d,e){if(Ha(b)&&"null"!==z.origin){var f=Yn(e),g=function(){for(var h={},m=0;m<a.length;++m){var n=co(a[m],f);if(n){var p=Hl(n,C.cookie,void 0,Qn());p.length&&(h[n]=p.sort()[p.length-1])}}return h};Sn(function(){un(g,b,c,d)})}},Xn=function(a){return a.filter(function(b){return On.test(b.aa)})},io=function(a,b){if("null"!==z.origin){for(var c=Yn(b.prefix),d={},e=0;e<a.length;e++)Pn[a[e]]&&(d[a[e]]=Pn[a[e]]);Sn(function(){l(d,function(f,g){var h=Hl(c+g,C.cookie,void 0,Qn());h.sort(function(t,
u){return eo(u)-eo(t)});if(h.length){var m=h[0],n=eo(m),p=0!==go(m.split(".")).length?m.split(".").slice(3):[],q={},r;r=0!==go(m.split(".")).length?m.split(".")[2]:void 0;q[f]=[r];ao(q,!0,b,n,p)}})})}};function jo(a,b){for(var c=0;c<b.length;++c)if(a[b[c]])return!0;return!1}
var ko=function(a){function b(e,f,g){g&&(e[f]=g)}if(Pj()){var c=$n();if(jo(c,a)){var d={};b(d,"gclid",c.gclid);b(d,"dclid",c.dclid);b(d,"gclsrc",c.gclsrc);b(d,"wbraid",c.wbraid);vn(function(){return d},3);vn(function(){var e={};return e._up="1",e},1)}}},lo=function(a){if(!Sf(11))return null;var b=dn(!0).gad_source;if(null!=b)return z.location.hash="",b;if(Sf(12)){var c=Lm(z.location.href);b=Gm(c,"query",!1,void 0,"gad_source");if(null!=b)return b;var d=$n();if(jo(d,a))return"0"}return null},mo=function(a){var b=
lo(a);null!=b&&vn(function(){var c={};return c.gad_source=b,c},4)},no=function(a,b,c,d){var e=[];c=c||{};if(!Rn(Qn()))return e;var f=Tn(a);if(!f.length)return e;for(var g=0;g<f.length;g++)-1===(f[g].labels||[]).indexOf(b)?e.push(0):e.push(1);if(d)return e;if(1!==e[0]){var h=f[0],m=f[0].timestamp,n=[h.version,Math.round(m/1E3),h.aa].concat(h.labels||[],[b]).join("."),p=Om(c,m,!0);p.Gb=Qn();Ql(a,n,p)}return e};
function oo(a,b){var c=Yn(b),d=co(a,c);if(!d)return 0;for(var e=Tn(d),f=0,g=0;g<e.length;g++)f=Math.max(f,e[g].timestamp);return f}function po(a){var b=0,c;for(c in a)for(var d=a[c],e=0;e<d.length;e++)b=Math.max(b,Number(d[e].timestamp));return b}var qo=function(a){var b=Math.max(oo("aw",a),po(Rn(Qn())?Mn():{}));return Math.max(oo("gb",a),po(Rn(Qn())?Mn("_gac_gb",!0):{}))>b};var wo=/[A-Z]+/,xo=/\s/,yo=function(a,b){if(k(a)){a=Qa(a);var c=a.indexOf("-");if(!(0>c)){var d=a.substring(0,c);if(wo.test(d)){var e=a.substring(c+1),f;if(b){var g=function(n){var p=n.indexOf("/");return 0>p?[n]:[n.substring(0,p),n.substring(p+1)]};f=g(e);if("DC"===d&&2===f.length){var h=g(f[1]);2===h.length&&(f[1]=h[0],f.push(h[1]))}}else{f=e.split("/");for(var m=0;m<f.length;m++)if(!f[m]||xo.test(f[m])&&("AW"!==d||1!==m))return}return{id:a,prefix:d,da:d+"-"+f[0],P:f}}}}},Ao=function(a,b){for(var c=
{},d=0;d<a.length;++d){var e=yo(a[d],b);e&&(c[e.id]=e)}zo(c);var f=[];l(c,function(g,h){f.push(h)});return f};function zo(a){var b=[],c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];"AW"===d.prefix&&d.P[1]&&b.push(d.da)}for(var e=0;e<b.length;++e)delete a[b[e]]};var Bo=function(a,b,c,d){var e=Lc(),f;if(1===e)a:{var g=Fi;g=g.toLowerCase();for(var h="https://"+g,m="http://"+g,n=1,p=C.getElementsByTagName("script"),q=0;q<p.length&&100>q;q++){var r=p[q].src;if(r){r=r.toLowerCase();if(0===r.indexOf(m)){f=3;break a}1===n&&0===r.indexOf(h)&&(n=2)}}f=n}else f=e;return(2===f||d||"http:"!=z.location.protocol?a:b)+c};
var Do=function(a,b,c){if(z[a.functionName])return b.Gh&&F(b.Gh),z[a.functionName];var d=Co();z[a.functionName]=d;if(a.Cf)for(var e=0;e<a.Cf.length;e++)z[a.Cf[e]]=z[a.Cf[e]]||Co();a.Kf&&void 0===z[a.Kf]&&(z[a.Kf]=c);Jc(Bo("https://","http://",a.Sh),b.Gh,b.Jm);return d},Co=function(){var a=function(){a.q=a.q||[];a.q.push(arguments)};return a},Eo={functionName:"_googWcmImpl",Kf:"_googWcmAk",Sh:"www.gstatic.com/wcm/loader.js"},Fo={functionName:"_gaPhoneImpl",Kf:"ga_wpid",Sh:"www.gstatic.com/gaphone/loader.js"},
Go={jk:"",bl:"5"},Ho={functionName:"_googCallTrackingImpl",Cf:[Fo.functionName,Eo.functionName],Sh:"www.gstatic.com/call-tracking/call-tracking_"+(Go.jk||Go.bl)+".js"},Io={},Jo=function(a,b,c,d){L(22);if(c){d=d||{};var e=Do(Eo,d,a),f={ak:a,cl:b};void 0===d.Fb&&(f.autoreplace=c);e(2,d.Fb,f,c,0,Ra(),d.options)}},Ko=function(a,b,c,d){L(21);if(b&&c){d=d||{};for(var e={countryNameCode:c,destinationNumber:b,retrievalTime:Ra()},f=0;f<a.length;f++){var g=a[f];Io[g.id]||
(g&&"AW"===g.prefix&&!e.adData&&2<=g.P.length?(e.adData={ak:g.P[0],cl:g.P[1]},R(104)&&(e.adData.dma=Al(),Bl()&&(e.adData.dmaCps=zl())),Io[g.id]=!0):g&&"UA"===g.prefix&&!e.gaData&&(e.gaData={gaWpid:g.da},Io[g.id]=!0))}(e.gaData||e.adData)&&Do(Ho,d)(d.Fb,e,d.options)}},Lo=function(){var a=!1;return a},Mo=function(a,b){if(a)if($l()){}else{if(k(a)){var c=yo(a);if(!c)return;a=c}var d=void 0,e=!1,f=S(b,N.g.Oi);if(f&&Ha(f)){d=[];for(var g=0;g<f.length;g++){var h=yo(f[g]);h&&(d.push(h),(a.id===h.id||a.id===a.da&&a.da===h.da)&&(e=!0))}}if(!d||e){var m=S(b,N.g.Fg),n;if(m){Ha(m)?n=m:n=[m];var p=S(b,N.g.Dg),q=S(b,N.g.Eg),r=S(b,N.g.Gg),t=S(b,N.g.Ni),u=p||q,v=1;"UA"!==a.prefix||d||(v=5);for(var w=0;w<n.length;w++)if(w<v)if(d)Ko(d,n[w],t,{Fb:u,options:r});else if("AW"===a.prefix&&a.P[1])Lo()?Ko([a],
n[w],t||"US",{Fb:u,options:r}):Jo(a.P[0],a.P[1],n[w],{Fb:u,options:r});else if("UA"===a.prefix)if(Lo())Ko([a],n[w],t||"US",{Fb:u});else{var x=a.da,y=n[w],A={Fb:u};L(23);if(y){A=A||{};var B=Do(Fo,A,x),E={};void 0!==A.Fb?E.receiver=A.Fb:E.replace=y;E.ga_wpid=x;E.destination=y;B(2,Ra(),E)}}}}}};var No,Oo=!1;function Po(){Oo=!0;No=No||{}}var Qo=function(a){Oo||Po();return No[a]};var Ro=function(a,b,c){this.target=a;this.eventName=b;this.o=c;this.h={};this.metadata=nb(c.eventMetadata||{});this.isAborted=!1};Ro.prototype.copyToHitData=function(a,b,c){var d=S(this.o,a);void 0===d&&(d=b);if(void 0!==d&&void 0!==c&&k(d)&&R(53))try{d=c(d)}catch(e){}void 0!==d&&(this.h[a]=d)};var So=function(a){return a.metadata.source_canonical_id},To=function(a,b,c){var d=Qo(a.target.da);return d&&d.hasOwnProperty(b)?d[b]:c};function Uo(a){return{getDestinationId:function(){return a.target.da},getEventName:function(){return a.eventName},setEventName:function(b){a.eventName=b},getHitData:function(b){return a.h[b]},setHitData:function(b,c){a.h[b]=c},setHitDataIfNotDefined:function(b,c){void 0===a.h[b]&&(a.h[b]=c)},copyToHitData:function(b,c){a.copyToHitData(b,c)},getMetadata:function(b){return a.metadata[b]},setMetadata:function(b,c){a.metadata[b]=c},isAborted:function(){return a.isAborted},abort:function(){a.isAborted=
!0},getFromEventContext:function(b){return S(a.o,b)},Dj:function(){return a},getHitKeys:function(){return Object.keys(a.h)}}};function ap(a,b){if(a){var c=""+a;0!==c.indexOf("http://")&&0!==c.indexOf("https://")&&(c="https://"+c);"/"===c[c.length-1]&&(c=c.substring(0,c.length-1));return Lm(""+c+b).href}}function bp(){return!!qi.zf&&"SGTM_TOKEN"!==qi.zf.split("@@").join("")}function cp(a){for(var b=ea([N.g.Sd,N.g.Pb]),c=b.next();!c.done;c=b.next()){var d=S(a,c.value);if(d)return d}};var dp=function(a){var b=String(a[Oe.na]||"").replace(/_/g,"");0===b.indexOf("cvt")&&(b="cvt");return b},ep=0<=z.location.search.indexOf("?gtm_latency=")||0<=z.location.search.indexOf("&gtm_latency=");var fp={sampleRate:"0.005000",hk:"",gk:Number("5"),ao:Number("")},gp=[];function hp(a){gp.push(a)}var ip=!1,jp;if(!(jp=ep)){var kp=Math.random(),lp=fp.sampleRate;jp=kp<Number(lp)}
var mp=jp,np="https://www.googletagmanager.com/a?id="+Tf.ctid,op=void 0,pp={},qp=void 0,rp=new function(){var a=5;0<fp.gk&&(a=fp.gk);this.h=0;this.C=[];this.s=a},sp=1E3;function tp(a,b){var c=op;if(void 0===c)if(b)c=Li();else return"";for(var d=[np],e=0;e<gp.length;e++){var f=gp[e]({eventId:c,Zb:!!a,Vj:function(){ip=!0}});"&"===f[0]&&d.push(f)}d.push("&z=0");return d.join("")}
function up(){qp&&(z.clearTimeout(qp),qp=void 0);if(void 0!==op&&vp){var a;(a=pp[op])||(a=rp.h<rp.s?!1:1E3>Sa()-rp.C[rp.h%rp.s]);if(a||0>=sp--)L(1),pp[op]=!0;else{var b=rp.h++%rp.s;rp.C[b]=Sa();var c=tp(!0);Nc(c);if(ip){var d=c.replace("/a?","/td?");Nc(d)}vp=ip=!1}}}var vp=!1;function wp(a){pp[a]||(a!==op&&(up(),op=a),vp=!0,qp||(qp=z.setTimeout(up,500)),2022<=tp().length&&up())}var xp=Ja();function yp(){xp=Ja()}function zp(){return["&v=3&t=t","&pid="+xp].join("")};var Ap="",Bp=[];function Cp(a){var b="";Ap&&(b="&dl="+encodeURIComponent(Ap));0<Bp.length&&(b+="&tdp="+Bp.join("."));a.Zb&&(Ap="",Bp.length=0,b&&a.Vj());return b};var Dp=[];function Ep(a){if(!Dp.length)return"";var b="&tdc="+Dp.join("!");a.Zb&&(a.Vj(),Dp.length=0);return b};var Fp={initialized:11,complete:12,interactive:13},Gp={},Hp=Object.freeze((Gp[N.g.Sa]=!0,Gp)),Ip=0<=C.location.search.indexOf("?gtm_diagnostics=")||0<=C.location.search.indexOf("&gtm_diagnostics="),Kp=function(a,b,c){if(mp&&"config"===a&&!(1<yo(b).P.length)){var d,e=Ec("google_tag_data",{});e.td||(e.td={});d=e.td;var f=nb(c.F);nb(c.h,f);var g=[],h;for(h in d){var m=Jp(d[h],f);m.length&&(Ip&&console.log(m),g.push(h))}g.length&&(g.length&&mp&&Dp.push(b+"*"+g.join(".")),Ab("TAGGING",Fp[C.readyState]||
14));d[b]=f}};function Lp(a,b){var c={},d;for(d in b)b.hasOwnProperty(d)&&(c[d]=!0);for(var e in a)a.hasOwnProperty(e)&&(c[e]=!0);return c}function Jp(a,b,c,d){c=void 0===c?{}:c;d=void 0===d?"":d;if(a===b)return[];var e=function(q,r){var t=r[q];return void 0===t?Hp[q]:t},f;for(f in Lp(a,b)){var g=(d?d+".":"")+f,h=e(f,a),m=e(f,b),n="object"===jb(h)||"array"===jb(h),p="object"===jb(m)||"array"===jb(m);if(n&&p)Jp(h,m,c,g);else if(n||p||h!==m)c[g]=!0}return Object.keys(c)};var Mp={};function Np(a,b,c){mp&&void 0!==a&&(Mp[a]=Mp[a]||[],Mp[a].push(c+b),wp(a))}function Op(a){var b=a.eventId,c=a.Zb,d="",e=Mp[b]||[];e.length&&(d+="&epr="+e.join("."));c&&delete Mp[b];return d};var Qp=function(a,b){var c=yo(km(a),!0);c&&Pp.register(c,b)},Rp=function(a,b,c,d){var e=yo(c,d.isGtmEvent);e&&Pp.push("event",[b,a],e,d)},Sp=function(a,b,c,d){var e=yo(c,d.isGtmEvent);e&&Pp.push("get",[a,b],e,d)},Up=function(a){var b=yo(km(a),!0),c;b?c=Tp(Pp,b).h:c={};return c},Vp=function(a,b){var c=yo(km(a),!0);if(c){var d=Pp,e=nb(b);nb(Tp(d,c).h,e);Tp(d,c).h=e}},Wp=function(){this.status=1;this.M={};this.h={};this.s={};this.X=null;this.F={};this.C=!1},Xp=function(a,b,c,d){var e=Sa();this.type=
a;this.C=e;this.h=b;this.s=c;this.messageContext=d},Yp=function(){this.s={};this.C={};this.h=[]},Tp=function(a,b){var c=b.da;return a.s[c]=a.s[c]||new Wp},Zp=function(a,b,c,d){if(d.h){var e=Tp(a,d.h),f=e.X;if(f){var g=nb(c),h=nb(e.M[d.h.id]),m=nb(e.F),n=nb(e.h),p=nb(a.C),q={};if(mp)try{q=nb(Pi)}catch(v){L(72)}var r=d.h.prefix,t=function(v){Np(d.messageContext.eventId,r,v)},u=yk(xk(wk(vk(uk(sk(rk(tk(qk(pk(ok(new nk(d.messageContext.eventId,d.messageContext.priorityId),g),h),m),n),p),q),d.messageContext.eventMetadata),
function(){if(t){var v=t;t=void 0;v("2");if(d.messageContext.onSuccess)d.messageContext.onSuccess()}}),function(){if(t){var v=t;t=void 0;v("3");if(d.messageContext.onFailure)d.messageContext.onFailure()}}),!!d.messageContext.isGtmEvent));try{Np(d.messageContext.eventId,r,"1"),Kp(d.type,d.h.id,u),f(d.h.id,b,d.C,u)}catch(v){Np(d.messageContext.eventId,r,"4")}}}};Yp.prototype.register=function(a,b,c){var d=Tp(this,a);3!==d.status&&(d.X=b,d.status=3,c&&(nb(d.h,c),d.h=c),this.flush())};
Yp.prototype.push=function(a,b,c,d){void 0!==c&&(1===Tp(this,c).status&&(Tp(this,c).status=2,this.push("require",[{}],c,{})),Tp(this,c).C&&(d.deferrable=!1));this.h.push(new Xp(a,c,b,d));d.deferrable||this.flush()};
Yp.prototype.flush=function(a){for(var b=this,c=[],d=!1,e={};this.h.length;e={vc:void 0,lh:void 0}){var f=this.h[0],g=f.h;if(f.messageContext.deferrable)!g||Tp(this,g).C?(f.messageContext.deferrable=!1,this.h.push(f)):c.push(f),this.h.shift();else{switch(f.type){case "require":if(3!==Tp(this,g).status&&!a){this.h.push.apply(this.h,c);return}break;case "set":l(f.s[0],function(r,t){nb($a(r,t),b.C)});break;case "config":var h=Tp(this,g);e.vc={};l(f.s[0],function(r){return function(t,u){nb($a(t,u),r.vc)}}(e));
var m=!!e.vc[N.g.Qb];delete e.vc[N.g.Qb];var n=g.da===g.id;m||(n?h.F={}:h.M[g.id]={});h.C&&m||Zp(this,N.g.sa,e.vc,f);h.C=!0;n?nb(e.vc,h.F):(nb(e.vc,h.M[g.id]),L(70));d=!0;break;case "event":e.lh={};l(f.s[0],function(r){return function(t,u){nb($a(t,u),r.lh)}}(e));Zp(this,f.s[1],e.lh,f);break;case "get":var p={},q=(p[N.g.lb]=f.s[0],p[N.g.wb]=f.s[1],p);Zp(this,N.g.Pa,q,f)}this.h.shift();$p(this,f)}}this.h.push.apply(this.h,c);d&&this.flush()};
var $p=function(a,b){if("require"!==b.type)if(b.h)for(var c=Tp(a,b.h).s[b.type]||[],d=0;d<c.length;d++)c[d]();else for(var e in a.s)if(a.s.hasOwnProperty(e)){var f=a.s[e];if(f&&f.s)for(var g=f.s[b.type]||[],h=0;h<g.length;h++)g[h]()}},Pp=new Yp;var pq=function(){function a(b){ri.pscdl=b}if(void 0===ri.pscdl)try{"cookieDeprecationLabel"in Cc?(a("pending"),Cc.cookieDeprecationLabel.getValue().then(a)):a("noapi")}catch(b){a("error")}};function tq(a){var b=S(a.o,N.g.yb),c=S(a.o,N.g.Lb);b&&!c?(a.eventName!==N.g.sa&&a.eventName!==N.g.xd&&L(131),a.isAborted=!0):!b&&c&&(L(132),a.isAborted=!0)}function uq(a){var b=ck(N.g.J)?ri.pscdl:"denied";a.h[N.g.af]=b};var wq=/^(www\.)?google(\.com?)?(\.[a-z]{2}t?)?$/,xq=/^www.googleadservices.com$/,zq=function(a){a||(a=yq());return a.rn?!1:a.am||a.bm||a.dm||a.rh||a.If||a.Kl||a.Sl?!0:!1},yq=function(){var a={},b=dn(!0);a.rn=!!b._up;var c=$n();a.am=void 0!==c.aw;a.bm=void 0!==c.dc;a.dm=void 0!==c.wbraid;var d=Lm(z.location.href),e=Gm(d,"query",!1,void 0,"gad");a.rh=void 0!==e;if(!a.rh){var f=d.hash.replace("#",""),g=Dm(f,"gad",!1);a.rh=void 0!==g}a.If=void 0;if(R(61)){var h=Gm(d,"query",!1,void 0,"gad_source");a.If=
h;if(void 0===a.If){var m=d.hash.replace("#",""),n=Dm(m,"gad_source",!1);a.If=n}}var p=C.referrer?Gm(Lm(C.referrer),"host"):"";a.Sl=wq.test(p);a.Kl=xq.test(p);return a};var Aq=function(){var a=z.screen;return{width:a?a.width:0,height:a?a.height:0}},Bq=function(a){if(C.hidden)return!0;var b=a.getBoundingClientRect();if(b.top==b.bottom||b.left==b.right||!z.getComputedStyle)return!0;var c=z.getComputedStyle(a,null);if("hidden"===c.visibility)return!0;for(var d=a,e=c;d;){if("none"===e.display)return!0;var f=e.opacity,g=e.filter;if(g){var h=g.indexOf("opacity(");0<=h&&(g=g.substring(h+8,g.indexOf(")",h)),"%"==g.charAt(g.length-1)&&(g=g.substring(0,g.length-1)),f=Math.min(g,
f))}if(void 0!==f&&0>=f)return!0;(d=d.parentElement)&&(e=z.getComputedStyle(d,null))}return!1};var vr={jl:Number('')||500,Ok:Number('')||5E3,bj:Number('')||10,vk:Number('')||5E3};function wr(a){return a.performance&&a.performance.now()||Date.now()}
var xr=function(a,b){var c;return c};var yr="https://"+qi.wd,zr=yr+"/gtm/static/",Ar=Number('')||5,Br=Number('')||50,Cr=yr,Dr=zr,Er=!1,Fr=0,Gr=Ja();function Pr(){var a=!1;return a}
function Qr(a){}
function Sr(a,b,c){}
function Lr(a,b,c,d){}
function Rr(a,b,c,d,e){}
function Tr(a,b,c,d){}
function Ur(a,b,c,d){}
function Vr(a){var b={},c=["tv.1"],d=0;
var u=c.join("~");return{U:b,Nf:u}}var Wr=void 0;function Xr(a){var b="";return b};var Yr=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};bc();Ek()||Zb("iPod");Zb("iPad");!Zb("Android")||cc()||bc()||ac()||Zb("Silk");cc();!Zb("Safari")||cc()||($b()?0:Zb("Coast"))||ac()||($b()?0:Zb("Edge"))||($b()?Yb("Microsoft Edge"):Zb("Edg/"))||($b()?Yb("Opera"):Zb("OPR"))||bc()||Zb("Silk")||Zb("Android")||Fk();var Zr={},$r=null,as=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e}var f=4;void 0===f&&(f=0);if(!$r){$r={};for(var g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),h=["+/=","+/","-_=","-_.","-_"],m=0;5>m;m++){var n=g.concat(h[m].split(""));Zr[m]=n;for(var p=0;p<n.length;p++){var q=n[p];void 0===$r[q]&&($r[q]=p)}}}for(var r=Zr[f],t=Array(Math.floor(b.length/3)),u=r[64]||"",v=0,w=0;v<b.length-2;v+=3){var x=b[v],
y=b[v+1],A=b[v+2],B=r[x>>2],E=r[(x&3)<<4|y>>4],G=r[(y&15)<<2|A>>6],D=r[A&63];t[w++]=""+B+E+G+D}var M=0,P=u;switch(b.length-v){case 2:M=b[v+1],P=r[(M&15)<<2]||u;case 1:var O=b[v];t[w]=""+r[O>>2]+r[(O&3)<<4|M>>4]+P+u}return t.join("")};Object.freeze(new function(){});Object.freeze(new function(){});var bs="platform platformVersion architecture model uaFullVersion bitness fullVersionList wow64".split(" ");function cs(a){var b;return null!=(b=a.google_tag_data)?b:a.google_tag_data={}}function ds(){var a=z.google_tag_data,b;if(null!=a&&a.uach){var c=a.uach,d=Object.assign({},c);c.fullVersionList&&(d.fullVersionList=c.fullVersionList.slice(0));b=d}else b=null;return b}function es(){var a,b;return null!=(b=null==(a=z.google_tag_data)?void 0:a.uach_promise)?b:null}
function fs(a){var b,c;return"function"===typeof(null==(b=a.navigator)?void 0:null==(c=b.userAgentData)?void 0:c.getHighEntropyValues)}function gs(){var a=z;if(!fs(a))return null;var b=cs(a);if(b.uach_promise)return b.uach_promise;var c=a.navigator.userAgentData.getHighEntropyValues(bs).then(function(d){null!=b.uach||(b.uach=d);return d});return b.uach_promise=c};function ms(){return"attribution-reporting"}function ns(a){var b;b=void 0===b?document:b;var c;return!(null==(c=b.featurePolicy)||!c.allowedFeatures().includes(a))};var os=!1;function ps(){if(ns("join-ad-interest-group")&&Fa(Cc.joinAdInterestGroup))return!0;os||(Nk('AymqwRC7u88Y4JPvfIF2F37QKylC04248hLCdJAsh8xgOfe/dVJPV3XS3wLFca1ZMVOtnBfVjaCMTVudWM//5g4AAAB7eyJvcmlnaW4iOiJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjk1MTY3OTk5LCJpc1RoaXJkUGFydHkiOnRydWV9'),os=!0);return ns("join-ad-interest-group")&&Fa(Cc.joinAdInterestGroup)}
function qs(a,b){var c=void 0;try{c=C.querySelector('iframe[data-tagging-id="'+b+'"]')}catch(e){}if(c){var d=Number(c.dataset.loadTime);if(d&&6E4>Sa()-d){Ab("TAGGING",9);return}try{c.parentNode.removeChild(c)}catch(e){}c=void 0}else try{if(50<=C.querySelectorAll('iframe[allow="join-ad-interest-group"][data-tagging-id*="-"]').length){Ab("TAGGING",10);return}}catch(e){}Mc(a,void 0,{allow:"join-ad-interest-group"},{taggingId:b,loadTime:Sa()},c)}function rs(){return"https://td.doubleclick.net"};var ss=RegExp("^UA-\\d+-\\d+%3A[\\w-]+(?:%2C[\\w-]+)*(?:%3BUA-\\d+-\\d+%3A[\\w-]+(?:%2C[\\w-]+)*)*$"),ts=/^~?[\w-]+(?:\.~?[\w-]+)*$/,us=/^\d+\.fls\.doubleclick\.net$/,vs=/;gac=([^;?]+)/,ws=/;gacgb=([^;?]+)/,xs=/;gclaw=([^;?]+)/,ys=/;gclgb=([^;?]+)/;
function zs(a,b){if(us.test(C.location.host)){var c=C.location.href.match(b);return c&&2==c.length&&c[1].match(ss)?decodeURIComponent(c[1]):""}var d=[],e;for(e in a){for(var f=[],g=a[e],h=0;h<g.length;h++)f.push(g[h].aa);d.push(e+":"+f.join(","))}return 0<d.length?d.join(";"):""}
var As=function(a,b,c){var d=Rn(Qn())?Mn("_gac_gb",!0):{},e=[],f=!1,g;for(g in d){var h=no("_gac_gb_"+g,a,b,c);f=f||0!==h.length&&h.some(function(m){return 1===m});e.push(g+":"+h.join(","))}return{Jl:f?e.join(";"):"",Il:zs(d,ws)}};function Bs(a,b,c){if(us.test(C.location.host)){var d=C.location.href.match(c);if(d&&2==d.length&&d[1].match(ts))return[{aa:d[1]}]}else return Tn((a||"_gcl")+b);return[]}
var Cs=function(a){return Bs(a,"_aw",xs).map(function(b){return b.aa}).join(".")},Ds=function(a){return Bs(a,"_gb",ys).map(function(b){return b.aa}).join(".")},Es=function(a,b){var c=no((b&&b.prefix||"_gcl")+"_gb",a,b);return 0===c.length||c.every(function(d){return 0===d})?"":c.join(".")};var Fs=function(){if(Fa(z.__uspapi)){var a="";try{z.__uspapi("getUSPData",1,function(b,c){if(c&&b){var d=b.uspString;d&&RegExp("^[\\da-zA-Z-]{1,20}$").test(d)&&(a=d)}})}catch(b){}return a}};var tt={H:{Zh:"ads_conversion_hit",vd:"container_execute_start",di:"container_setup_end",Yf:"container_setup_start",ai:"container_blocking_end",bi:"container_execute_end",ei:"container_yield_end",Zf:"container_yield_start",Ui:"event_execute_end",Ti:"event_evaluation_end",Qg:"event_evaluation_start",Vi:"event_setup_end",he:"event_setup_start",Wi:"ga4_conversion_hit",je:"page_load",Kn:"pageview",Ub:"snippet_load",lj:"tag_callback_error",mj:"tag_callback_failure",nj:"tag_callback_success",oj:"tag_execute_end",
gd:"tag_execute_start"}};function ut(){function a(c,d){var e=Cb(d);e&&b.push(c+"="+e)}var b=[];a("&u","GTM");a("&ut","TAGGING");a("&h","HEALTH");return b.join("")};var vt=!1;
var du=function(a,b){},eu=function(a,b){},fu=function(a,b){},gu=function(a,b){},hu=function(){var a={};return a},Wt=function(a){a=void 0===a?!0:a;var b={};return b},iu=function(){},ju=function(a,b){},
ku=function(a,b,c){},lu=function(){};
var mu=function(a,b){var c=z,d,e=c.GooglebQhCsO;e||(e={},c.GooglebQhCsO=e);d=e;if(d[a])return!1;d[a]=[];d[a][0]=b;return!0};var nu=function(a,b,c){var d=Ik(a,"fmt");if(b){var e=Ik(a,"random"),f=Ik(a,"label")||"";if(!e)return!1;var g=as(decodeURIComponent(f.replace(/\+/g," "))+":"+decodeURIComponent(e.replace(/\+/g," ")));if(!mu(g,b))return!1}d&&4!=d&&(a=Kk(a,"rfmt",d));var h=Kk(a,"fmt",4);Jc(h,function(){z.google_noFurtherRedirects&&b&&b.call&&(z.google_noFurtherRedirects=null,b())},void 0,c,C.getElementsByTagName("script")[0].parentElement||void 0);return!0};var Eu=function(){this.h={}},Fu=function(a,b,c){null!=c&&(a.h[b]=c)},Gu=function(a){return Object.keys(a.h).map(function(b){return encodeURIComponent(b)+"="+encodeURIComponent(a.h[b])}).join("&")},Iu=function(a,b,c,d){};function Ku(a,b){if(data.entities&&data.entities[a])return data.entities[a][b]};var Mu=function(a,b,c){c=void 0===c?!1:c;var d=Lu(a);d.entity.push(b);d._entity||(d._entity={internal:[],external:[]});c?d._entity.external.push(b):d._entity.internal.push(b)},Nu=function(){var a=Lu(mm());if(R(97)){var b,c;return[].concat(ia((null==a?void 0:null==(b=a._entity)?void 0:b.internal)||[]),ia((null==a?void 0:null==(c=a._entity)?void 0:c.external)||[]))}return a.entity},Ou=function(a,b,c){c=void 0===c?!1:c;var d=Lu(a);d.event&&(d.event.push(b),d._event||(d._event={internal:[],external:[]}),
c?d._event.external.push(b):d._event.internal.push(b))},Pu=function(){var a=Lu(mm());if(R(97)){var b,c;return[].concat(ia((null==a?void 0:null==(b=a._event)?void 0:b.internal)||[]),ia((null==a?void 0:null==(c=a._event)?void 0:c.external)||[]))}return a.event||[]};function Lu(a){var b,c=ri.r;c||(c={container:{}},ri.r=c);b=c;var d=b.container[a];d||(d={entity:[],event:[],_entity:{internal:[],external:[]},_event:{internal:[],external:[]}},b.container[a]=d);return d};var Qu=new RegExp(/^(.*\.)?(google|youtube|blogger|withgoogle)(\.com?)?(\.[a-z]{2})?\.?$/),Ru={cl:["ecl"],customPixels:["nonGooglePixels"],ecl:["cl"],ehl:["hl"],gaawc:["googtag"],hl:["ehl"],html:["customScripts","customPixels","nonGooglePixels","nonGoogleScripts","nonGoogleIframes"],customScripts:["html","customPixels","nonGooglePixels","nonGoogleScripts","nonGoogleIframes"],nonGooglePixels:[],nonGoogleScripts:["nonGooglePixels"],nonGoogleIframes:["nonGooglePixels"]},Su={cl:["ecl"],customPixels:["customScripts",
"html"],ecl:["cl"],ehl:["hl"],gaawc:["googtag"],hl:["ehl"],html:["customScripts"],customScripts:["html"],nonGooglePixels:["customPixels","customScripts","html","nonGoogleScripts","nonGoogleIframes"],nonGoogleScripts:["customScripts","html"],nonGoogleIframes:["customScripts","html","nonGoogleScripts"]},Tu="google customPixels customScripts html nonGooglePixels nonGoogleScripts nonGoogleIframes".split(" "),Wu=function(a){var b=Si("gtm.allowlist")||Si("gtm.whitelist");b&&L(9);xi&&(b=["google","gtagfl",
"lcl","zone"]);Uu()&&(xi?L(116):(L(117),Vu&&(b=[],window.console&&window.console.log&&window.console.log("GTM blocked. See go/13687728."))));var c=b&&Xa(Pa(b),Ru),d=Si("gtm.blocklist")||Si("gtm.blacklist");d||(d=Si("tagTypeBlacklist"))&&L(3);d?L(8):d=[];Uu()&&(d=Pa(d),d.push("nonGooglePixels","nonGoogleScripts","sandboxedScripts"));0<=Pa(d).indexOf("google")&&L(2);var e=d&&Xa(Pa(d),Su),f={};return function(g){var h=g&&g[Oe.na];if(!h||"string"!=typeof h)return!0;h=h.replace(/^_*/,"");if(void 0!==f[h])return f[h];
var m=Ji[h]||[],n=a(h,m);if(!R(94))for(var p=Nu(),q=0;q<p.length;q++)try{n=n&&p[q](h,m)}catch(y){n=!1}if(b){var r;if(r=n)a:{if(0>c.indexOf(h))if(m&&0<m.length)for(var t=0;t<m.length;t++){if(0>c.indexOf(m[t])){L(11);r=!1;break a}}else{r=!1;break a}r=!0}n=r}var u=!1;if(d){var v=0<=e.indexOf(h);if(v)u=v;else{var w=La(e,m||[]);w&&L(10);u=w}}var x=!n||u;x||!(0<=m.indexOf("sandboxedScripts"))||c&&-1!==c.indexOf("sandboxedScripts")||(x=La(e,Tu));return f[h]=x}},Vu=!1;
Vu=!0;var Uu=function(){return Qu.test(z.location&&z.location.hostname)},Xu=function(){if(em){var a=function(b){var c=xf(b),d;if(Cf(c)){var e=c[Oe.na];if(!e)throw"Error: No function name given for function call.";var f=qf[e];d=!!f&&!!f.runInSiloedMode}else d=!!Ku(c[Oe.na],4);return d};R(93)?Mu(mm(),function(b){return a(b.entityId)}):Mu(mm(),a)}};var Zu=function(a,b,c,d,e){if(!Yu()&&!sm(a)){var f="?id="+encodeURIComponent(a)+"&l="+qi.fa,g=0===a.indexOf("GTM-");g||(f+="&cx=c");R(41)&&(f+="&gtm="+Am());var h=bp();h&&(f+="&sign="+qi.zf);var m=c?"/gtag/js":"/gtm.js",n=zi||Bi?ap(b,m+f):void 0;if(!n){var p=qi.wd+m;h&&Dc&&g&&(p=Dc.replace(/^(?:https?:\/\/)?/i,"").split(/[?#]/)[0]);n=Bo("https://","http://",p+f)}var q=a;d.siloed&&(vm({ctid:q,isDestination:!1}),q=gm(q));var r=q,t=um();am().container[r]={state:1,context:d,parent:t};bm({ctid:r,isDestination:!1},
e);Jc(n)}},$u=function(a,b,c,d){if(!Yu()&&!tm(a))if(wm())am().destination[a]={state:0,transportUrl:b,context:c,parent:um()},bm({ctid:a,isDestination:!0},d),L(91);else{var e="/gtag/destination?id="+encodeURIComponent(a)+"&l="+qi.fa+"&cx=c";R(41)&&(e+="&gtm="+Am());bp()&&(e+="&sign="+qi.zf);var f=zi||Bi?ap(b,e):void 0;f||(f=Bo("https://","http://",qi.wd+e));var g=a;c.siloed&&(vm({ctid:g,isDestination:!0}),g=gm(g));am().destination[g]={state:1,context:c,parent:um()};bm({ctid:g,isDestination:!0},d);Jc(f)}};
function Yu(){if($l()){return!0}return!1};var av=!1,bv=0,cv=[];function dv(a){if(!av){var b=C.createEventObject,c="complete"==C.readyState,d="interactive"==C.readyState;if(!a||"readystatechange"!=a.type||c||!b&&d){av=!0;for(var e=0;e<cv.length;e++)F(cv[e])}cv.push=function(){for(var f=0;f<arguments.length;f++)F(arguments[f]);return 0}}}function ev(){if(!av&&140>bv){bv++;try{C.documentElement.doScroll("left"),dv()}catch(a){z.setTimeout(ev,50)}}}var fv=function(a){av?a():cv.push(a)};var hv=function(a,b,c){return{entityType:a,indexInOriginContainer:b,nameInOriginContainer:c,originContainerId:lm()}};var jv=function(a,b){this.h=!1;this.F=[];this.M={tags:[]};this.X=!1;this.s=this.C=0;iv(this,a,b)},kv=function(a,b,c,d){if(ui.hasOwnProperty(b)||"__zone"===b)return-1;var e={};mb(d)&&(e=nb(d,e));e.id=c;e.status="timeout";return a.M.tags.push(e)-1},lv=function(a,b,c,d){var e=a.M.tags[b];e&&(e.status=c,e.executionTime=d)},mv=function(a){if(!a.h){for(var b=a.F,c=0;c<b.length;c++)b[c]();a.h=!0;a.F.length=0}},iv=function(a,b,c){void 0!==b&&a.Bf(b);c&&z.setTimeout(function(){return mv(a)},Number(c))};
jv.prototype.Bf=function(a){var b=this,c=Va(function(){return F(function(){a(lm(),b.M)})});this.h?c():this.F.push(c)};var nv=function(a){a.C++;return Va(function(){a.s++;a.X&&a.s>=a.C&&mv(a)})},ov=function(a){a.X=!0;a.s>=a.C&&mv(a)};var pv={},rv=function(){return z[qv()]},sv=!1;var tv=function(a){z.GoogleAnalyticsObject||(z.GoogleAnalyticsObject=a||"ga");var b=z.GoogleAnalyticsObject;if(z[b])z.hasOwnProperty(b);else{var c=function(){c.q=c.q||[];c.q.push(arguments)};c.l=Number(Ra());z[b]=c}return z[b]},uv=function(a){if(Pj()){var b=rv();b(a+"require","linker");b(a+"linker:passthrough",!0)}};
function qv(){return z.GoogleAnalyticsObject||"ga"}
var vv=function(a){},wv=function(a,b){return function(){var c=rv(),d=c&&c.getByName&&c.getByName(a);if(d){var e=d.get("sendHitTask");d.set("sendHitTask",function(f){var g=f.get("hitPayload"),h=f.get("hitCallback"),m=0>g.indexOf("&tid="+b);m&&(f.set("hitPayload",g.replace(/&tid=UA-[0-9]+-[0-9]+/,"&tid="+b),!0),f.set("hitCallback",void 0,!0));e(f);m&&(f.set("hitPayload",
g,!0),f.set("hitCallback",h,!0),f.set("_x_19",void 0,!0),e(f))})}}};var Bv={},Cv={};function Dv(a,b){if(mp){var c;c=b.match(/^(gtm|gtag)\./)?encodeURIComponent(b):"*";Bv[a]="&e="+c+"&eid="+a;wp(a)}}function Ev(a){var b=a.eventId,c=a.Zb;if(!Bv[b])return"";var d=Cv[b]?"":"&es=1";d+=Bv[b];c&&(Cv[b]=!0);return d};var Fv={};function Gv(a,b){mp&&(Fv[a]=Fv[a]||{},Fv[a][b]=(Fv[a][b]||0)+1)}function Hv(a){var b=a.eventId,c=a.Zb,d=Fv[b]||{},e=[],f;for(f in d)d.hasOwnProperty(f)&&e.push(""+f+d[f]);c&&delete Fv[b];return e.length?"&md="+e.join("."):""};var Iv={},Jv={aev:"1",c:"2",jsm:"3",v:"4",j:"5",smm:"6",rmm:"7",input:"8"};
function Kv(a,b,c){if(mp){Iv[a]=Iv[a]||[];var d=Jv[b]||"0",e;e=c instanceof z.Element?"1":c instanceof z.Event?"2":c instanceof z.RegExp?"3":c===z?"4":c===C?"5":c instanceof z.Promise?"6":c instanceof z.Storage?"7":c instanceof z.Date?"8":c instanceof z.History?"9":c instanceof z.Performance?"a":c===z.crypto?"b":c instanceof z.Location?"c":c instanceof z.Navigator?"d":"object"!==typeof c||mb(c)?"0":"e";Iv[a].push(""+d+e)}}
function Lv(a){var b=a.eventId,c=Iv[b]||[];if(!c.length)return"";a.Zb&&delete Iv[b];return"&pcr="+c.join(".")};var Mv={},Nv={};function Ov(a,b,c){if(mp&&b){var d=dp(b);Mv[a]=Mv[a]||[];Mv[a].push(c+d);var e=(Cf(b)?"1":"2")+d;Nv[a]=Nv[a]||[];Nv[a].push(e);wp(a)}}function Pv(a){var b=a.eventId,c=a.Zb,d="",e=Mv[b]||[];e.length&&(d+="&tr="+e.join("."));var f=Nv[b]||[];f.length&&(d+="&ti="+f.join("."));c&&(delete Mv[b],delete Nv[b]);return d};function Qv(a,b,c,d){var e=of[a],f=Rv(a,b,c,d);if(!f)return null;var g=zf(e[Oe.kj],c,[]);if(g&&g.length){var h=g[0];f=Qv(h.index,{onSuccess:f,onFailure:1===h.Aj?b.terminate:f,terminate:b.terminate},c,d)}return f}
function Rv(a,b,c,d){function e(){if(f[Oe.Tk])h();else{var w=Af(f,c,[]),x=w[Oe.kk];if(null!=x)for(var y=0;y<x.length;y++)if(!ck(x[y])){h();return}var A=kv(c.Vb,String(f[Oe.na]),Number(f[Oe.oe]),w[Oe.Uk]),B=!1;w.vtp_gtmOnSuccess=function(){if(!B){B=!0;var D=Sa()-G;Ov(c.id,of[a],"5");lv(c.Vb,A,"success",D);R(16)&&ku(c,f,tt.H.nj);g()}};w.vtp_gtmOnFailure=function(){if(!B){B=!0;var D=Sa()-G;Ov(c.id,of[a],"6");lv(c.Vb,A,"failure",D);R(16)&&ku(c,f,tt.H.mj);h()}};w.vtp_gtmTagId=f.tag_id;w.vtp_gtmEventId=
c.id;c.priorityId&&(w.vtp_gtmPriorityId=c.priorityId);Ov(c.id,f,"1");var E=function(){ij(3);var D=Sa()-G;Ov(c.id,f,"7");lv(c.Vb,A,"exception",D);R(16)&&ku(c,f,tt.H.lj);B||(B=!0,h())};R(16)&&ju(c,f);var G=Sa();try{yf(w,{event:c,index:a,type:1})}catch(D){E(D)}R(16)&&ku(c,f,tt.H.oj)}}var f=of[a],g=b.onSuccess,h=b.onFailure,m=b.terminate;if(c.isBlocked(f))return null;var n=zf(f[Oe.pj],c,[]);if(n&&n.length){var p=n[0],q=Qv(p.index,{onSuccess:g,onFailure:h,terminate:m},c,d);if(!q)return null;g=q;h=2===
p.Aj?m:q}if(f[Oe.ej]||f[Oe.Wk]){var r=f[Oe.ej]?pf:c.jn,t=g,u=h;if(!r[a]){e=Va(e);var v=Sv(a,r,e);g=v.onSuccess;h=v.onFailure}return function(){r[a](t,u)}}return e}function Sv(a,b,c){var d=[],e=[];b[a]=Tv(d,e,c);return{onSuccess:function(){b[a]=Uv;for(var f=0;f<d.length;f++)d[f]()},onFailure:function(){b[a]=Vv;for(var f=0;f<e.length;f++)e[f]()}}}function Tv(a,b,c){return function(d,e){a.push(d);b.push(e);c()}}function Uv(a){a()}function Vv(a,b){b()};var Xv=function(a,b){return 1===arguments.length?Wv("set",a):Wv("set",a,b)},Yv=function(a,b){return 1===arguments.length?Wv("config",a):Wv("config",a,b)},Zv=function(a,b,c){c=c||{};c[N.g.Ob]=a;return Wv("event",b,c)};function Wv(a){return arguments}var $v=function(){this.h=[];this.s=[]};$v.prototype.enqueue=function(a,b,c){var d=this.h.length+1;a["gtm.uniqueEventId"]=b;a["gtm.priorityId"]=d;c.eventId=b;c.fromContainerExecution=!0;c.priorityId=d;var e={message:a,notBeforeEventId:b,priorityId:d,messageContext:c};this.h.push(e);for(var f=0;f<this.s.length;f++)try{this.s[f](e)}catch(g){}};$v.prototype.listen=function(a){this.s.push(a)};
$v.prototype.get=function(){for(var a={},b=0;b<this.h.length;b++){var c=this.h[b],d=a[c.notBeforeEventId];d||(d=[],a[c.notBeforeEventId]=d);d.push(c)}return a};$v.prototype.prune=function(a){for(var b=[],c=[],d=0;d<this.h.length;d++){var e=this.h[d];e.notBeforeEventId===a?b.push(e):c.push(e)}this.h=c;return b};var bw=function(a,b,c){c.eventMetadata=c.eventMetadata||{};c.eventMetadata.source_canonical_id=Tf.Ef;aw().enqueue(a,b,c)},ww=function(){var a=cw;aw().listen(a)};
function aw(){var a=ri.mb;a||(a=new $v,ri.mb=a);return a}
var Jw=function(a){var b=ri.zones;return b?b.getIsAllowedFn(hm(),a):function(){return!0}},Kw=function(a){var b=ri.zones;return b?b.isActive(hm(),a):!0},Lw=function(){R(93)?Ou(mm(),function(a){return Kw(a.originalEventData["gtm.uniqueEventId"])}):Ou(mm(),function(a,b){return Kw(b)});R(94)&&R(95)&&Mu(mm(),function(a){var b=a.entityId,c=a.securityGroups;return Jw(a.originalEventData["gtm.uniqueEventId"])(b,c)})};var Ow=function(a,b){for(var c=[],d=0;d<of.length;d++)if(a[d]){var e=of[d];var f=nv(b.Vb);try{var g=Qv(d,{onSuccess:f,onFailure:f,terminate:f},b,d);if(g){var h=e[Oe.na];if(!h)throw"Error: No function name given for function call.";var m=qf[h];c.push({Yj:d,Oj:(m?m.priorityOverride||0:0)||Ku(e[Oe.na],1)||0,execute:g})}else Mw(d,b),f()}catch(p){f()}}c.sort(Nw);for(var n=0;n<c.length;n++)c[n].execute();return 0<c.length};
function Nw(a,b){var c,d=b.Oj,e=a.Oj;c=d>e?1:d<e?-1:0;var f;if(0!==c)f=c;else{var g=a.Yj,h=b.Yj;f=g>h?1:g<h?-1:0}return f}
function Mw(a,b){if(mp){var c=function(d){var e=b.isBlocked(of[d])?"3":"4",f=zf(of[d][Oe.kj],b,[]);f&&f.length&&c(f[0].index);Ov(b.id,of[d],e);var g=zf(of[d][Oe.pj],b,[]);g&&g.length&&c(g[0].index)};c(a)}}var Rw=!1,Pw;
var Yw=function(a){var b=a["gtm.uniqueEventId"],c=a["gtm.priorityId"],d=a.event;if(R(16)){}if("gtm.js"===d){if(Rw)return!1;Rw=!0}var e,f=!1,g=Pu(),h;if(R(93)){var m=nb(a);h=g.every(function(w){return w({originalEventData:m})})}else h=g.every(function(w){return w(d,b)});if(h)e=Jw(b);else{if("gtm.js"!==d&&"gtm.init"!==d&&"gtm.init_consent"!==
d)return!1;f=!0;e=Jw(Number.MAX_SAFE_INTEGER)}Dv(b,d);var n=a.eventCallback,p=a.eventTimeout,q=nb(a),r={id:b,priorityId:c,name:d,isBlocked:Tw(e,q),jn:[],logMacroError:function(){L(6);ij(0)},cachedModelValues:Uw(),checkPixieIncompatibility:Vw(b),Vb:new jv(function(){if(R(16)){}n&&n.apply(n,[].slice.call(arguments,0))},p),originalEventData:q};R(32)&&(r.reportMacroDiscrepancy=Gv);R(16)&&fu(r.id,r.name);var t=Kf(r);R(16)&&gu(r.id,r.name);f&&(t=Ww(t));if(R(16)){}var u=Ow(t,r),v=!1;ov(r.Vb);"gtm.js"!==d&&"gtm.sync"!==d||vv(lm());return Xw(t,u)||v};function Vw(a){return function(b){pb(b)||Kv(a,"input",b)}}
function Uw(){var a={};a.event=Xi("event",1);a.ecommerce=Xi("ecommerce",1);a.gtm=Xi("gtm");a.eventModel=Xi("eventModel");return a}function Tw(a,b){var c=Wu(a);return R(94)?function(d){if(c(d))return!0;var e=d&&d[Oe.na];if(!e||"string"!=typeof e)return!0;e=e.replace(/^_*/,"");for(var f=Nu(),g=Ji[e]||[],h=ea(f),m=h.next();!m.done;m=h.next()){var n=m.value;try{if(!n({entityId:e,securityGroups:g,originalEventData:b}))return!0}catch(p){return!0}}return!1}:c}
function Ww(a){for(var b=[],c=0;c<a.length;c++)if(a[c]){var d=String(of[c][Oe.na]);if(ti[d]||void 0!==of[c][Oe.Xk]||Ki[d]||Ku(d,2))b[c]=!0}return b}function Xw(a,b){if(!b)return b;for(var c=0;c<a.length;c++)if(a[c]&&of[c]&&!ui[String(of[c][Oe.na])])return!0;return!1}var Nf;var Zw={},$w={},ax=function(a,b){for(var c=[],d=[],e={},f=0;f<a.length;e={Kh:void 0,qh:void 0},f++){var g=a[f];if(0<=g.indexOf("-")){if(e.Kh=yo(g,b),e.Kh){var h=jm();Ia(h,function(r){return function(t){return r.Kh.da===t}}(e))?c.push(g):d.push(g)}}else{var m=Zw[g]||[];e.qh={};m.forEach(function(r){return function(t){return r.qh[t]=!0}}(e));for(var n=hm(),p=0;p<n.length;p++)if(e.qh[n[p]]){c=c.concat(jm());break}var q=$w[g]||[];q.length&&(c=c.concat(q))}}return{Cm:c,Fm:d}},bx=function(a){l(Zw,function(b,
c){var d=c.indexOf(a);0<=d&&c.splice(d,1)})},cx=function(a){l($w,function(b,c){var d=c.indexOf(a);0<=d&&c.splice(d,1)})};var dx="HA GF G UA AW DC MC".split(" "),ex=!1,fx=!1;function gx(a,b){a.hasOwnProperty("gtm.uniqueEventId")||Object.defineProperty(a,"gtm.uniqueEventId",{value:Li()});b.eventId=a["gtm.uniqueEventId"];b.priorityId=a["gtm.priorityId"];return{eventId:b.eventId,priorityId:b.priorityId}}var hx=void 0,ix=void 0;function jx(a,b,c){var d=nb(a);d.eventId=void 0;d.inheritParentConfig=void 0;Object.keys(b).some(function(f){return void 0!==b[f]})&&L(136);var e=nb(b);nb(c,e);bw(Yv(hm()[0],e),a.eventId,d)}
function kx(a){for(var b=ea([N.g.Sd,N.g.Pb]),c=b.next();!c.done;c=b.next()){var d=c.value,e=a&&a[d]||Pp.C[d];if(e)return e}}
var lx={config:function(a,b){var c=R(33),d=gx(a,b);if(!(2>a.length)&&k(a[1])){var e={};if(2<a.length){if(void 0!=a[2]&&!mb(a[2])||3<a.length)return;e=a[2]}var f=yo(a[1],b.isGtmEvent);if(f){var g,h,m;a:{if(!dm.ie){var n=nm(um());if(ym(n)){var p=n.parent,q=p.isDestination;m={Lm:nm(p),Bm:q};break a}}m=void 0}var r=m;r&&(g=r.Lm,h=r.Bm);Dv(d.eventId,"gtag.config");var t=f.da,u=f.id!==t;if(u?-1===jm().indexOf(t):-1===hm().indexOf(t)){if(!(c&&b.inheritParentConfig||e[N.g.yb])){var v=kx(e);if(u)$u(t,v,{source:2,
fromContainerExecution:b.fromContainerExecution});else if(c&&void 0!==g&&-1!==g.containers.indexOf(t)){var w=e;hx?jx(b,w,hx):ix||(ix=nb(w))}else Zu(t,v,!0,{source:2,fromContainerExecution:b.fromContainerExecution})}}else{if(g&&(L(128),h&&L(130),c&&b.inheritParentConfig)){var x;var y=e;ix?(jx(b,ix,y),x=!1):(!y[N.g.Qb]&&wi&&hx||(hx=nb(y)),x=!0);x&&g.containers&&g.containers.join(",");return}if(wi&&!u&&!e[N.g.Qb]){var A=fx;fx=!0;if(A)return}ex||L(43);if(!b.noTargetGroup)if(u){cx(f.id);var B=f.id,E=e[N.g.Pd]||
"default";E=String(E).split(",");for(var G=0;G<E.length;G++){var D=$w[E[G]]||[];$w[E[G]]=D;0>D.indexOf(B)&&D.push(B)}}else{bx(f.id);var M=f.id,P=e[N.g.Pd]||"default";P=P.toString().split(",");for(var O=0;O<P.length;O++){var T=Zw[P[O]]||[];Zw[P[O]]=T;0>T.indexOf(M)&&T.push(M)}}delete e[N.g.Pd];var Y=b.eventMetadata||{};Y.hasOwnProperty("is_external_event")||(Y.is_external_event=!b.fromContainerExecution);b.eventMetadata=Y;delete e[N.g.Vc];for(var W=u?[f.id]:jm(),X=0;X<W.length;X++){var la=e,ka=W[X],
fa=nb(b),Da=yo(ka,fa.isGtmEvent);Da&&Pp.push("config",[la],Da,fa)}}}}},consent:function(a,b){if(3===a.length){L(39);var c=gx(a,b),d=a[1],e=a[2];b.fromContainerExecution||(e[N.g.N]&&L(139),e[N.g.Ea]&&L(140));"default"===d?Yj(e):"update"===d?Zj(e,c):"declare"===d?b.fromContainerExecution&&Xj(e):R(66)&&"core_platform_services"===d&&ak(e)}},event:function(a,b){var c=a[1];if(!(2>a.length)&&k(c)){var d;if(2<a.length){if(!mb(a[2])&&void 0!=a[2]||3<a.length)return;d=a[2]}var e=d,f={},g=(f.event=c,f);e&&(g.eventModel=
nb(e),e[N.g.Vc]&&(g.eventCallback=e[N.g.Vc]),e[N.g.Kd]&&(g.eventTimeout=e[N.g.Kd]));var h=gx(a,b),m=h.eventId,n=h.priorityId;g["gtm.uniqueEventId"]=m;n&&(g["gtm.priorityId"]=n);if("optimize.callback"===c)return g.eventModel=g.eventModel||{},g;var p;var q=d,r=q&&q[N.g.Ob];void 0===r&&(r=Si(N.g.Ob,2),void 0===r&&(r="default"));if(k(r)||Ha(r)){var t;b.isGtmEvent?t=k(r)?[r]:r:t=r.toString().replace(/\s+/g,"").split(",");var u=ax(t,b.isGtmEvent),v=u.Cm,w=u.Fm;if(w.length)for(var x=kx(q),y=0;y<w.length;y++){var A=
yo(w[y],b.isGtmEvent);A&&$u(A.da,x,{source:3,fromContainerExecution:b.fromContainerExecution})}p=Ao(v,b.isGtmEvent)}else p=void 0;var B=p;if(B){Dv(m,c);for(var E=[],G=0;G<B.length;G++){var D=B[G],M=nb(b);if(-1!==dx.indexOf(om(D.prefix))){var P=nb(d),O=M.eventMetadata||{};O.hasOwnProperty("is_external_event")||(O.is_external_event=!M.fromContainerExecution);M.eventMetadata=O;delete P[N.g.Vc];Rp(c,P,D.id,M)}E.push(D.id)}g.eventModel=g.eventModel||{};0<B.length?g.eventModel[N.g.Ob]=E.join():delete g.eventModel[N.g.Ob];
ex||L(43);void 0===b.noGtmEvent&&b.eventMetadata&&b.eventMetadata.syn_or_mod&&(b.noGtmEvent=!0);g.eventModel[N.g.Lb]&&(b.noGtmEvent=!0);return b.noGtmEvent?void 0:g}}},get:function(a,b){L(53);if(4===a.length&&k(a[1])&&k(a[2])&&Fa(a[3])){var c=yo(a[1],b.isGtmEvent),d=String(a[2]),e=a[3];if(c){ex||L(43);var f=kx();if(!Ia(jm(),function(h){return c.da===h}))$u(c.da,f,{source:4,fromContainerExecution:b.fromContainerExecution});else if(-1!==dx.indexOf(om(c.prefix))){gx(a,b);var g={};Uj(nb((g[N.g.lb]=d,
g[N.g.wb]=e,g)));Sp(d,function(h){F(function(){return e(h)})},c.id,b)}}}},js:function(a,b){if(2==a.length&&a[1].getTime){ex=!0;var c=gx(a,b),d=c.eventId,e=c.priorityId,f={};return f.event="gtm.js",f["gtm.start"]=a[1].getTime(),f["gtm.uniqueEventId"]=d,f["gtm.priorityId"]=e,f}},policy:function(a){if(3===a.length&&k(a[1])&&Fa(a[2])){Of(a[1],a[2]);if(L(74),"all"===a[1]){L(75);var b=!1;try{b=a[2](lm(),"unknown",{})}catch(c){}b||L(76)}}else{
L(73);}},set:function(a,b){var c;2==a.length&&mb(a[1])?c=nb(a[1]):3==a.length&&k(a[1])&&(c={},mb(a[2])||Ha(a[2])?c[a[1]]=nb(a[2]):c[a[1]]=a[2]);if(c){var d=gx(a,b),e=d.eventId,f=d.priorityId;nb(c);var g=nb(c);Pp.push("set",[g],void 0,b);c["gtm.uniqueEventId"]=e;f&&(c["gtm.priorityId"]=f);R(9)&&delete c.event;b.overwriteModelFields=!0;return c}}},mx={policy:!0};var nx=function(a){var b=z[qi.fa].hide;if(b&&void 0!==b[a]&&b.end){b[a]=!1;var c=!0,d;for(d in b)if(b.hasOwnProperty(d)&&!0===b[d]){c=!1;break}c&&(b.end(),b.end=null)}},ox=function(a){var b=z[qi.fa],c=b&&b.hide;c&&c.end&&(c[a]=!0)};var px=!1,qx=[];function rx(){if(!px){px=!0;for(var a=0;a<qx.length;a++)F(qx[a])}}var sx=function(a){px?F(a):qx.push(a)};var Jx=function(a){if(Ix(a))return a;this.h=a};Jx.prototype.getUntrustedMessageValue=function(){return this.h};var Ix=function(a){return!a||"object"!==jb(a)||mb(a)?!1:"getUntrustedMessageValue"in a};Jx.prototype.getUntrustedMessageValue=Jx.prototype.getUntrustedMessageValue;var Kx=0,Lx={},Mx=[],Nx=[],Ox=!1,Px=!1;function Qx(a,b){return a.messageContext.eventId-b.messageContext.eventId||a.messageContext.priorityId-b.messageContext.priorityId}
var Rx=function(a){return z[qi.fa].push(a)},Sx=function(a,b,c){a.eventCallback=b;c&&(a.eventTimeout=c);return Rx(a)},Tx=function(a,b){if(!Ga(b)||0>b)b=0;var c=ri[qi.fa],d=0,e=!1,f=void 0;f=z.setTimeout(function(){e||(e=!0,a());f=void 0},b);return function(){var g=c?c.subscribers:1;++d===g&&(f&&(z.clearTimeout(f),f=void 0),e||(a(),e=!0))}};
function Ux(a,b){var c=a._clear||b.overwriteModelFields;l(a,function(e,f){"_clear"!==e&&(c&&Vi(e),Vi(e,f))});Gi||(Gi=a["gtm.start"]);var d=a["gtm.uniqueEventId"];if(!a.event)return!1;"number"!==typeof d&&(d=Li(),a["gtm.uniqueEventId"]=d,Vi("gtm.uniqueEventId",d));return Yw(a)}
function Vx(a){if(null==a||"object"!==typeof a)return!1;if(a.event)return!0;if(Ma(a)){var b=a[0];if("config"===b||"event"===b||"js"===b||"get"===b)return!0}return!1}
function Wx(){var a;if(Nx.length)a=Nx.shift();else if(Mx.length)a=Mx.shift();else return;var b;var c=a;if(Ox||!Vx(c.message))b=c;else{Ox=!0;var d=c.message["gtm.uniqueEventId"];"number"!==typeof d&&(d=c.message["gtm.uniqueEventId"]=Li());var e={},f={message:(e.event="gtm.init_consent",e["gtm.uniqueEventId"]=d-2,e),messageContext:{eventId:d-2}},g={},h={message:(g.event="gtm.init",g["gtm.uniqueEventId"]=d-1,g),messageContext:{eventId:d-1}};Mx.unshift(h,c);if(mp){var m=Tf.ctid;if(m){var n,p=nm(um());
n=p&&p.context;var q,r=Lm(z.location.href);q=r.hostname+r.pathname;var t=n&&n.fromContainerExecution,u=n&&n.source,v=Tf.Ef,w=dm.ie;mp&&(Ap||(Ap=q),Bp.push(m+";"+v+";"+(t?1:0)+";"+(u||0)+";"+(w?1:0)))}}b=f}return b}
function Xx(){for(var a=!1,b;!Px&&(b=Wx());){Px=!0;delete Pi.eventModel;Ri();var c=b,d=c.message,e=c.messageContext;if(null==d)Px=!1;else{e.fromContainerExecution&&Wi();try{if(Fa(d))try{d.call(Ti)}catch(x){}else if(Ha(d)){var f=d;if(k(f[0])){var g=f[0].split("."),h=g.pop(),m=f.slice(1),n=Si(g.join("."),2);if(null!=n)try{n[h].apply(n,m)}catch(x){}}}else{var p=void 0,q=!1;if(Ma(d)){a:{if(d.length&&k(d[0])){var r=lx[d[0]];if(r&&(!e.fromContainerExecution||!mx[d[0]])){p=r(d,e);break a}}p=void 0}(q=p&&
"set"===d[0]&&!!p.event)&&L(101)}else p=d;if(p){var t=Ux(p,e);a=t||a;q&&t&&L(113)}}}finally{e.fromContainerExecution&&Ri(!0);var u=d["gtm.uniqueEventId"];if("number"===typeof u){for(var v=Lx[String(u)]||[],w=0;w<v.length;w++)Nx.push(Yx(v[w]));v.length&&Nx.sort(Qx);delete Lx[String(u)];u>Kx&&(Kx=u)}Px=!1}}}return!a}
function Zx(){if(R(16)){var a=$x();}var b=Xx();if(R(16)){}try{nx(lm())}catch(c){}return b}
function cw(a){if(Kx<a.notBeforeEventId){var b=String(a.notBeforeEventId);Lx[b]=Lx[b]||[];Lx[b].push(a)}else Nx.push(Yx(a)),Nx.sort(Qx),F(function(){Px||Xx()})}function Yx(a){return{message:a.message,messageContext:a.messageContext}}
var ay=function(){function a(f){var g={};if(Ix(f)){var h=f;f=Ix(h)?h.getUntrustedMessageValue():void 0;g.fromContainerExecution=!0}return{message:f,messageContext:g}}var b=Ec(qi.fa,[]),c=ri[qi.fa]=ri[qi.fa]||{};!0===c.pruned&&L(83);Lx=aw().get();ww();fv(function(){if(!c.gtmDom){c.gtmDom=!0;var f={};b.push((f.event="gtm.dom",f))}});sx(function(){if(!c.gtmLoad){c.gtmLoad=!0;var f={};b.push((f.event="gtm.load",f))}});c.subscribers=(c.subscribers||0)+1;var d=b.push;b.push=function(){var f;if(0<ri.SANDBOXED_JS_SEMAPHORE){f=
[];for(var g=0;g<arguments.length;g++)f[g]=new Jx(arguments[g])}else f=[].slice.call(arguments,0);var h=f.map(function(q){return a(q)});Mx.push.apply(Mx,h);var m=d.apply(b,f),n=Math.max(100,Number("1000")||300);if(this.length>n)for(L(4),c.pruned=!0;this.length>n;)this.shift();var p="boolean"!==typeof m||m;return Xx()&&p};var e=b.slice(0).map(function(f){return a(f)});Mx.push.apply(Mx,e);if($x()){if(R(16)){}F(Zx)}},$x=function(){var a=!0;a=!1;return a};function by(a){if(null==a||0===a.length)return!1;var b=Number(a),c=Sa();return b<c+3E5&&b>c-9E5}function cy(a){return a&&0===a.indexOf("pending:")?by(a.substr(8)):!1};
var xy=function(){};var yy=function(){};yy.prototype.toString=function(){return"undefined"};var zy=new yy;var gz=z.clearTimeout,hz=z.setTimeout,iz=function(a,b,c,d){if($l()){b&&F(b)}else return Jc(a,b,c,d)},jz=function(){return new Date},kz=function(){return z.location.href},lz=function(a){return Gm(Lm(a),"fragment")},mz=function(a){return Hm(Lm(a))},nz=function(a,b){return Si(a,b||2)},oz=function(a,b,c){return b?Sx(a,b,c):Rx(a)},pz=function(a,b){z[a]=b},U=function(a,b,c){b&&(void 0===z[a]||c&&!z[a])&&(z[a]=b);return z[a]},
qz=function(a,b,c){return Hl(a,b,void 0===c?!0:!!c)},rz=function(a,b,c){return 0===Ql(a,b,c)},sz=function(a,b){if($l()){b&&F(b)}else Mc(a,b)},tz=function(a){return!!Ky(a,"init",!1)},uz=function(a){Iy(a,"init",!0)},vz=function(a,b,c){pb(a)||Kv(c,b,a)};

function Sz(a,b){function c(g){var h=Lm(g),m=Gm(h,"protocol"),n=Gm(h,"host",!0),p=Gm(h,"port"),q=Gm(h,"path").toLowerCase().replace(/\/$/,"");if(void 0===m||"http"===m&&"80"===p||"https"===m&&"443"===p)m="web",p="default";return[m,n,p,q]}for(var d=c(String(a)),e=c(String(b)),f=0;f<d.length;f++)if(d[f]!==e[f])return!1;return!0}
function Tz(a){return Uz(a)?1:0}
function Uz(a){var b=a.arg0,c=a.arg1;if(a.any_of&&Array.isArray(c)){for(var d=0;d<c.length;d++){var e=nb(a,{});nb({arg1:c[d],any_of:void 0},e);if(Tz(e))return!0}return!1}switch(a["function"]){case "_cn":return tg(b,c);case "_css":var f;a:{if(b)try{for(var g=0;g<pg.length;g++){var h=pg[g];if(b[h]){f=b[h](c);break a}}}catch(m){}f=!1}return f;case "_ew":return qg(b,c);case "_eq":return ug(b,c);case "_ge":return vg(b,c);case "_gt":return xg(b,c);case "_lc":return 0<=String(b).split(",").indexOf(String(c));
case "_le":return wg(b,c);case "_lt":return yg(b,c);case "_re":return sg(b,c,a.ignore_case);case "_sw":return zg(b,c);case "_um":return Sz(b,c)}return!1};function Vz(){var a=["&cv=1","&rv="+qi.Ug,"&tc="+of.filter(function(b){return b}).length];qi.me&&a.push("&x="+qi.me);Ni()&&a.push("&tag_exp="+Ni());return a.join("")};function Wz(){var a=qj();return a.length?"&exp_geo="+a:""}var Xz;function Yz(){try{null!=Xz||(Xz=(new Intl.DateTimeFormat).resolvedOptions().timeZone)}catch(b){}var a;return(null==(a=Xz)?0:a.length)?"&exp_tz="+Xz:""};var Zz=function(){return!1},$z=function(){var a={};return function(b,c,d){}};function aA(){var a=bA;return function(b,c,d){var e=d&&d.event;cA(c);var f=0===b.indexOf("__cvt_")?void 0:1,g=new sb;l(c,function(r,t){var u=md(t,void 0,f);void 0===u&&void 0!==t&&L(44);g.set(r,u)});a.h.h.F=Hf();var h={uj:Xf(b),eventId:void 0!==e?e.id:void 0,priorityId:void 0!==e?e.priorityId:void 0,Bf:void 0!==e?function(r){return e.Vb.Bf(r)}:void 0,wc:function(){return b},log:function(){},Fl:{index:d&&d.index,type:d&&d.type,name:d&&d.name},Wm:!!Ku(b,3),originalEventData:null==e?void 0:e.originalEventData};
e&&e.cachedModelValues&&(h.cachedModelValues={gtm:e.cachedModelValues.gtm,ecommerce:e.cachedModelValues.ecommerce});if(Zz()){var m=$z(),n=void 0,p=void 0;h.eb={Vh:[],pe:{},pb:function(r,t,u){1===t&&(n=r);7===t&&(p=u);m(r,t,u)},Dh:ph()};h.log=function(r,t){if(n){var u=Array.prototype.slice.call(arguments,1);m(n,4,{level:r,source:p,message:u})}}}var q=Ke(a,h,[b,g]);a.h.h.F=void 0;q instanceof wa&&"return"===q.h&&(q=q.s);return nd(q,void 0,f)}}
function cA(a){var b=a.gtmOnSuccess,c=a.gtmOnFailure;Fa(b)&&(a.gtmOnSuccess=function(){F(b)});Fa(c)&&(a.gtmOnFailure=function(){F(c)})};function dA(a,b){var c=this;}dA.O="addConsentListener";var eA;var fA=function(a){for(var b=0;b<a.length;++b)if(eA)try{a[b]()}catch(c){L(77)}else a[b]()};function gA(a,b,c){var d=this,e;return e}gA.D="internal.addDataLayerEventListener";function hA(a,b,c){}hA.O="addDocumentEventListener";function iA(a,b,c,d){}iA.O="addElementEventListener";function jA(a){}jA.O="addEventCallback";
function nA(a){}nA.D="internal.addFormAbandonmentListener";function oA(a,b,c,d){}oA.D="internal.addFormData";var pA={},qA=[],rA={},sA=0,tA=0;
function AA(a,b){}AA.D="internal.addFormInteractionListener";
function HA(a,b){}HA.D="internal.addFormSubmitListener";
function MA(a){}MA.D="internal.addGaSendListener";var NA=function(a,b){this.tagId=a;this.uc=b};
function OA(a,b,c){var d=this;}
OA.D="internal.loadGoogleTag";function PA(a){return new ed("",function(b){b=H(this,b);if(b instanceof ed)return new ed("",function(){var c=ta.apply(0,arguments),d=this,e=nb(this.h.h);e.eventId=a.eventId;e.priorityId=a.priorityId;e.originalEventData=a.originalEventData;var f=c.map(function(h){return H(d,h)}),g=Ba(this.h);g.h=e;return b.ab.apply(b,[g].concat(ia(f)))})})};function QA(a,b,c){var d=this;}
QA.D="internal.addGoogleTagRestriction";var RA={},SA=[];
var ZA=function(a,b){};
ZA.D="internal.addHistoryChangeListener";function $A(a,b,c){}$A.O="addWindowEventListener";function aB(a,b){return!0}aB.O="aliasInWindow";function bB(a,b,c){}bB.D="internal.appendRemoteConfigParameter";function cB(){var a=2;return a};function dB(a,b){var c;return c}dB.O="callInWindow";function eB(a){}eB.O="callLater";function fB(a){}fB.D="callOnDomReady";function gB(a){}gB.D="callOnWindowLoad";function hB(a,b){var c;return c}hB.D="internal.computeGtmParameter";function iB(a,b){var c;var d=md(c,this.h,cB());void 0===d&&void 0!==c&&L(45);return d}iB.O="copyFromDataLayer";
function jB(a){var b=void 0;return b}jB.D="internal.copyFromDataLayerCache";function kB(a){var b;return b}kB.O="copyFromWindow";function lB(a){var b=void 0;return md(b,this.h,cB())}lB.D="internal.copyKeyFromWindow";function mB(a,b){var c;return c}mB.D="internal.copyPreHit";function nB(a,b){var c=null,d=cB();return md(c,this.h,d)}nB.O="createArgumentsQueue";function oB(a){var b;return md(b,this.h,1)}oB.D="internal.createGaCommandQueue";function pB(a){var b;return md(b,this.h,
cB())}pB.O="createQueue";function qB(a,b){var c=null;return c}qB.D="internal.createRegex";function rB(a){if(!a)return{};var b=a.Fl;return hv(b.type,b.index,b.name)}function sB(a){return a?{originatingEntity:rB(a)}:{}};function tB(a){}tB.D="internal.declareConsentState";function uB(a){var b="";return b}uB.D="internal.decodeUrlHtmlEntities";function vB(a,b,c){var d;return d}vB.D="internal.decorateUrlWithGaCookies";function wB(a){var b;
return b}wB.D="internal.detectUserProvidedData";
function AB(a,b){return b}AB.D="internal.enableAutoEventOnClick";
function FB(a,b){return b}FB.D="internal.enableAutoEventOnElementVisibility";function GB(){}GB.D="internal.enableAutoEventOnError";var HB={},IB=[],JB={},KB=0,LB=0;
function RB(a,b){var c=this;return b}RB.D="internal.enableAutoEventOnFormInteraction";
function WB(a,b){var c=this;return b}WB.D="internal.enableAutoEventOnFormSubmit";
function aC(){var a=this;}aC.D="internal.enableAutoEventOnGaSend";var bC={},cC=[];
function jC(a,b){var c=this;return b}jC.D="internal.enableAutoEventOnHistoryChange";var kC=["http://","https://","javascript:","file://"];
function oC(a,b){var c=this;return b}oC.D="internal.enableAutoEventOnLinkClick";var pC,qC;
function BC(a,b){var c=this;
return b}BC.D="internal.enableAutoEventOnScroll";function CC(a){return function(){if(a.Ac&&a.Cc>=a.Ac)a.yc&&z.clearInterval(a.yc);else{a.Cc++;var b=Sa();Rx({event:a.eventName,"gtm.timerId":a.yc,"gtm.timerEventNumber":a.Cc,"gtm.timerInterval":a.interval,"gtm.timerLimit":a.Ac,"gtm.timerStartTime":a.Se,"gtm.timerCurrentTime":b,"gtm.timerElapsedTime":b-a.Se,"gtm.triggers":a.Xh})}}}
function DC(a,b){
return b}DC.D="internal.enableAutoEventOnTimer";var xc=ca(["data-gtm-yt-inspected-"]),EC=["www.youtube.com","www.youtube-nocookie.com"],FC,GC=!1;
function QC(a,b){var c=this;return b}QC.D="internal.enableAutoEventOnYouTubeActivity";var RC;function SC(a){var b=!1;return b}SC.D="internal.evaluateMatchingRules";var wD=function(){var a=!0;ml(7)&&ml(9)&&ml(10)||(a=!1);return a};
var AD=function(a,b){if(!b.isGtmEvent){var c=S(b,N.g.lb),d=S(b,N.g.wb),e=S(b,c);if(void 0===e){var f=void 0;xD.hasOwnProperty(c)?f=xD[c]:yD.hasOwnProperty(c)&&(f=yD[c]);1===f&&(f=zD(c));k(f)?rv()(function(){var g=rv().getByName(a).get(f);d(g)}):d(void 0)}else d(e)}},BD=function(a,b){var c=a[N.g.Mb],d=b+".",e=a[N.g.W]||"",f=void 0===c?!!a.use_anchor:"fragment"===c,g=!!a[N.g.zb];e=String(e).replace(/\s+/g,"").split(",");var h=rv();h(d+"require","linker");h(d+"linker:autoLink",e,f,g)},FD=function(a,
b,c){if(Pj()||R(25))if(!c.isGtmEvent||!CD[a]){var d=!ck(N.g.R),e=function(f){var g,h,m=rv(),n=DD(b,"",c),p,q=n.createOnlyFields._useUp;if(c.isGtmEvent||ED(b,n.createOnlyFields)){c.isGtmEvent&&(g="gtm"+Li(),h=n.createOnlyFields,n.gtmTrackerName&&(h.name=g));m(function(){var t=m.getByName(b);t&&(p=t.get("clientId"));c.isGtmEvent||m.remove(b)});m("create",a,c.isGtmEvent?h:n.createOnlyFields);d&&ck(N.g.R)&&(d=!1,m(function(){var t=rv().getByName(c.isGtmEvent?g:b);!t||t.get("clientId")==p&&q||(c.isGtmEvent?(n.fieldsToSet["&gcu"]="1",n.fieldsToSet["&sst.gcut"]=li[f]):(n.fieldsToSend["&gcu"]="1",n.fieldsToSend["&sst.gcut"]=li[f]),t.set(n.fieldsToSet),c.isGtmEvent?t.send("pageview"):t.send("pageview",n.fieldsToSend))}));c.isGtmEvent&&m(function(){m.remove(g)})}};ek(function(){return e(N.g.R)},N.g.R);ek(function(){return e(N.g.J)},
N.g.J);c.isGtmEvent&&(CD[a]=!0)}},GD=function(a,b){bp()&&b&&(a[N.g.kb]=b)},PD=function(a,b,c){function d(){var O=S(c,N.g.Rc);h(function(){if(!c.isGtmEvent&&mb(O)){var T=u.fieldsToSend,Y=m().getByName(n),W;for(W in O)if(O.hasOwnProperty(W)&&/^(dimension|metric)\d+$/.test(W)&&void 0!=O[W]){var X=Y.get(zD(O[W]));HD(T,W,X)}}})}function e(){if(u.displayfeatures){var O="_dc_gtm_"+f.replace(/[^A-Za-z0-9-]/g,"");p("require","displayfeatures",void 0,{cookieName:O})}}var f=a,g,h=c.isGtmEvent?tv(S(c,"gaFunctionName")):
tv();if(Fa(h)){var m=rv,n;c.isGtmEvent?n=S(c,"name")||S(c,"gtmTrackerName"):n="gtag_"+f.split("-").join("_");var p=function(O){var T=[].slice.call(arguments,0);T[0]=n?n+"."+T[0]:""+T[0];h.apply(window,T)},q=function(O){var T=function(fa,Da){for(var pa=0;Da&&pa<Da.length;pa++)p(fa,Da[pa])},Y=c.isGtmEvent,W=Y?ID(u):JD(b,c);if(W){var X={};GD(X,O);p("require","ec","ec.js",X);Y&&W.fh&&p("set","&cu",W.fh);var la=W.action;if(Y||"impressions"===la)if(T("ec:addImpression",W.Gj),!Y)return;if("promo_click"===
la||"promo_view"===la||Y&&W.Qe){var ka=W.Qe;T("ec:addPromo",ka);if(ka&&0<ka.length&&"promo_click"===la){Y?p("ec:setAction",la,W.nb):p("ec:setAction",la);return}if(!Y)return}"promo_view"!==la&&"impressions"!==la&&(T("ec:addProduct",W.Fc),p("ec:setAction",la,W.nb))}},r=function(O){if(O){var T={};if(mb(O))for(var Y in KD)KD.hasOwnProperty(Y)&&LD(KD[Y],Y,O[Y],T);GD(T,y);p("require","linkid",T)}},t=function(){if($l()){}else{var O=
S(c,N.g.Li);O&&(p("require",O,{dataLayer:qi.fa}),p("require","render"))}},u=DD(n,b,c),v=function(O,T,Y){Y&&(T=""+T);u.fieldsToSend[O]=T};!c.isGtmEvent&&ED(n,u.createOnlyFields)&&(h(function(){m()&&m().remove(n)}),MD[n]=!1);h("create",f,u.createOnlyFields);var w=c.isGtmEvent&&u.fieldsToSet[N.g.kb]&&R(92);if(!c.isGtmEvent&&u.createOnlyFields[N.g.kb]||w){var x=zi||Bi?ap(c.isGtmEvent?u.fieldsToSet[N.g.kb]:u.createOnlyFields[N.g.kb],"/analytics.js"):void 0;x&&(g=x)}var y=c.isGtmEvent?u.fieldsToSet[N.g.kb]:
u.createOnlyFields[N.g.kb];if(y){var A=c.isGtmEvent?u.fieldsToSet[N.g.Md]:u.createOnlyFields[N.g.Md];A&&!MD[n]&&(MD[n]=!0,h(wv(n,A)))}c.isGtmEvent?u.enableRecaptcha&&p("require","recaptcha","recaptcha.js"):(d(),r(u.linkAttribution));var B=u[N.g.Ma];B&&B[N.g.W]&&BD(B,n);p("set",u.fieldsToSet);if(c.isGtmEvent){if(u.enableLinkId){var E={};GD(E,y);p("require","linkid","linkid.js",E)}FD(f,n,c)}if(b===N.g.ic)if(c.isGtmEvent){e();if(u.remarketingLists){var G="_dc_gtm_"+f.replace(/[^A-Za-z0-9-]/g,"");p("require",
"adfeatures",{cookieName:G})}q(y);p("send","pageview");u.createOnlyFields._useUp&&uv(n+".")}else t(),p("send","pageview",u.fieldsToSend);else b===N.g.sa?(t(),Mo(f,c),S(c,N.g.Db)&&(ko(["aw","dc"]),uv(n+".")),mo(["aw","dc"]),0!=u.sendPageView&&p("send","pageview",u.fieldsToSend),FD(f,n,c)):b===N.g.Pa?AD(n,c):"screen_view"===b?p("send","screenview",u.fieldsToSend):"timing_complete"===b?(u.fieldsToSend.hitType="timing",v("timingCategory",u.eventCategory,!0),c.isGtmEvent?v("timingVar",u.timingVar,!0):
v("timingVar",u.name,!0),v("timingValue",Na(u.value)),void 0!==u.eventLabel&&v("timingLabel",u.eventLabel,!0),p("send",u.fieldsToSend)):"exception"===b?p("send","exception",u.fieldsToSend):""===b&&c.isGtmEvent||("track_social"===b&&c.isGtmEvent?(u.fieldsToSend.hitType="social",v("socialNetwork",u.socialNetwork,!0),v("socialAction",u.socialAction,!0),v("socialTarget",u.socialTarget,!0)):((c.isGtmEvent||ND[b])&&q(y),c.isGtmEvent&&e(),u.fieldsToSend.hitType="event",v("eventCategory",u.eventCategory,
!0),v("eventAction",u.eventAction||b,!0),void 0!==u.eventLabel&&v("eventLabel",u.eventLabel,!0),void 0!==u.value&&v("eventValue",Na(u.value))),p("send",u.fieldsToSend));var D=g&&R(92)&&!c.eventMetadata.suppress_script_load;if(!OD&&(!c.isGtmEvent||D)){g=g||"https://www.google-analytics.com/analytics.js";OD=!0;var M=function(){c.onFailure()},P=function(){m().loaded||M()};$l()?F(P):Jc(g,P,M)}}else F(c.onFailure)},QD=function(a,b,c,d){fk(function(){PD(a,b,d)},[N.g.R,N.g.J])},SD=function(a){function b(e){function f(h,
m){for(var n=0;n<m.length;n++){var p=m[n];if(e[p]){g[h]=e[p];break}}}var g=nb(e);f("id",["id","item_id","promotion_id"]);f("name",["name","item_name","promotion_name"]);f("brand",["brand","item_brand"]);f("variant",["variant","item_variant"]);f("list",["list_name","item_list_name"]);f("position",["list_position","creative_slot","index"]);(function(){if(e.category)g.category=e.category;else{for(var h="",m=0;m<RD.length;m++)void 0!==e[RD[m]]&&(h&&(h+="/"),h+=e[RD[m]]);h&&(g.category=h)}})();f("listPosition",
["list_position"]);f("creative",["creative_name"]);f("list",["list_name"]);f("position",["list_position","creative_slot"]);return g}for(var c=[],d=0;a&&d<a.length;d++)a[d]&&mb(a[d])&&c.push(b(a[d]));return c.length?c:void 0},TD=function(a){return ck(a)},UD=!1;var OD,MD={},CD={},VD={},WD=Object.freeze((VD.page_hostname=1,VD[N.g.ja]=1,VD[N.g.ib]=1,VD[N.g.Wa]=1,VD[N.g.Ka]=1,VD[N.g.Xa]=1,VD[N.g.kc]=
1,VD[N.g.Qc]=1,VD[N.g.Ra]=1,VD[N.g.mc]=1,VD[N.g.Aa]=1,VD[N.g.Yc]=1,VD[N.g.Na]=1,VD[N.g.Ab]=1,VD)),XD={},xD=Object.freeze((XD.client_storage="storage",XD.sample_rate=1,XD.site_speed_sample_rate=1,XD.store_gac=1,XD.use_amp_client_id=1,XD[N.g.ub]=1,XD[N.g.Ha]="storeGac",XD[N.g.Wa]=1,XD[N.g.Ka]=1,XD[N.g.Xa]=1,XD[N.g.kc]=1,XD[N.g.Qc]=1,XD[N.g.mc]=1,XD)),YD={},ZD=Object.freeze((YD._cs=1,YD._useUp=1,YD.allowAnchor=1,YD.allowLinker=1,YD.alwaysSendReferrer=1,YD.clientId=1,YD.cookieDomain=1,YD.cookieExpires=
1,YD.cookieFlags=1,YD.cookieName=1,YD.cookiePath=1,YD.cookieUpdate=1,YD.legacyCookieDomain=1,YD.legacyHistoryImport=1,YD.name=1,YD.sampleRate=1,YD.siteSpeedSampleRate=1,YD.storage=1,YD.storeGac=1,YD.useAmpClientId=1,YD._cd2l=1,YD)),$D=Object.freeze({anonymize_ip:1}),aE={},yD=Object.freeze((aE.campaign={content:"campaignContent",id:"campaignId",medium:"campaignMedium",name:"campaignName",source:"campaignSource",term:"campaignKeyword"},aE.app_id=1,aE.app_installer_id=1,aE.app_name=1,aE.app_version=
1,aE.description="exDescription",aE.fatal="exFatal",aE.language=1,aE.page_hostname="hostname",aE.transport_type="transport",aE[N.g.xa]="currencyCode",aE[N.g.Bg]=1,aE[N.g.Aa]="location",aE[N.g.Yc]="page",aE[N.g.Na]="referrer",aE[N.g.Ab]="title",aE[N.g.nf]=1,aE[N.g.Ta]=1,aE)),bE={},cE=Object.freeze((bE.content_id=1,bE.event_action=1,bE.event_category=1,bE.event_label=1,bE.link_attribution=1,bE.name=1,bE[N.g.Ma]=1,bE[N.g.Ag]=1,bE[N.g.Sa]=1,bE[N.g.ia]=1,bE)),dE=Object.freeze({displayfeatures:1,enableLinkId:1,
enableRecaptcha:1,eventAction:1,eventCategory:1,eventLabel:1,gaFunctionName:1,gtmEcommerceData:1,gtmTrackerName:1,linker:1,remarketingLists:1,socialAction:1,socialNetwork:1,socialTarget:1,timingVar:1,value:1}),RD=Object.freeze(["item_category","item_category2","item_category3","item_category4","item_category5"]),eE={},KD=Object.freeze((eE.levels=1,eE[N.g.Ka]="duration",eE[N.g.kc]=1,eE)),fE={},gE=Object.freeze((fE.anonymize_ip=1,fE.fatal=1,fE.send_page_view=1,fE.store_gac=1,fE.use_amp_client_id=1,
fE[N.g.Ha]=1,fE[N.g.Bg]=1,fE)),LD=function(a,b,c,d){if(void 0!==c)if(gE[b]&&(c=Oa(c)),"anonymize_ip"!==b||c||(c=void 0),1===a)d[zD(b)]=c;else if(k(a))d[a]=c;else for(var e in a)a.hasOwnProperty(e)&&void 0!==c[e]&&(d[a[e]]=c[e])},zD=function(a){return a&&k(a)?a.replace(/(_[a-z])/g,function(b){return b[1].toUpperCase()}):a},hE={},ND=Object.freeze((hE.checkout_progress=1,hE.select_content=1,hE.set_checkout_option=1,hE[N.g.ac]=1,hE[N.g.bc]=1,hE[N.g.Hb]=1,hE[N.g.fc]=1,hE[N.g.fb]=1,hE[N.g.sb]=1,hE[N.g.hb]=
1,hE[N.g.ra]=1,hE[N.g.hc]=1,hE[N.g.Fa]=1,hE)),iE={},jE=Object.freeze((iE.checkout_progress=1,iE.set_checkout_option=1,iE[N.g.dg]=1,iE[N.g.eg]=1,iE[N.g.ac]=1,iE[N.g.bc]=1,iE[N.g.fg]=1,iE[N.g.Hb]=1,iE[N.g.ra]=1,iE[N.g.hc]=1,iE[N.g.gg]=1,iE)),kE={},lE=Object.freeze((kE.generate_lead=1,kE.login=1,kE.search=1,kE.select_content=1,kE.share=1,kE.sign_up=1,kE.view_search_results=1,kE[N.g.fc]=1,kE[N.g.fb]=1,kE[N.g.sb]=1,kE[N.g.hb]=1,kE[N.g.Fa]=1,kE)),mE=function(a){var b="general";jE[a]?b="ecommerce":lE[a]?
b="engagement":"exception"===a&&(b="error");return b},nE={},oE=Object.freeze((nE.view_search_results=1,nE[N.g.fb]=1,nE[N.g.hb]=1,nE[N.g.Fa]=1,nE)),HD=function(a,b,c){a.hasOwnProperty(b)||(a[b]=c)},pE=function(a){if(Ha(a)){for(var b=[],c=0;c<a.length;c++){var d=a[c];if(void 0!=d){var e=d.id,f=d.variant;void 0!=e&&void 0!=f&&b.push(String(e)+"."+String(f))}}return 0<b.length?b.join("!"):void 0}},DD=function(a,b,c){var d=function(O){return S(c,O)},e={},f={},g={},h={},m=pE(d(N.g.Ei));!c.isGtmEvent&&m&&
HD(f,"exp",m);g["&gtm"]=Am(c.eventMetadata.source_canonical_id,!0);c.isGtmEvent||(g._no_slc=!0);Pj()&&(h._cs=TD);var n=d(N.g.Rc);if(!c.isGtmEvent&&mb(n))for(var p in n)if(n.hasOwnProperty(p)&&/^(dimension|metric)\d+$/.test(p)&&void 0!=n[p]){var q=d(String(n[p]));void 0!==q&&HD(f,p,q)}for(var r=!c.isGtmEvent,t=kk(c),u=0;u<t.length;++u){var v=t[u];if(c.isGtmEvent){var w=d(v);dE.hasOwnProperty(v)?e[v]=w:ZD.hasOwnProperty(v)?h[v]=w:g[v]=w}else{var x=void 0;x=v!==N.g.ba?d(v):lk(c,v);if(cE.hasOwnProperty(v))LD(cE[v],
v,x,e);else if($D.hasOwnProperty(v))LD($D[v],v,x,g);else if(yD.hasOwnProperty(v))LD(yD[v],v,x,f);else if(xD.hasOwnProperty(v))LD(xD[v],v,x,h);else if(/^(dimension|metric|content_group)\d+$/.test(v))LD(1,v,x,f);else if(v===N.g.ba){if(!UD){var y=bb(x);y&&(f["&did"]=y)}var A=void 0,B=void 0;b===N.g.sa?A=bb(lk(c,v),"."):(A=bb(lk(c,v,1),"."),B=bb(lk(c,v,2),"."));A&&(f["&gdid"]=A);B&&(f["&edid"]=B)}else v===N.g.Ra&&0>t.indexOf(N.g.kc)&&(h.cookieName=x+"_ga");R(23)&&WD[v]&&(c.C.hasOwnProperty(v)||b===N.g.sa&&
c.h.hasOwnProperty(v))&&(r=!1)}}R(23)&&r&&(f["&jsscut"]="1");!1!==d(N.g.Ye)&&!1!==d(N.g.ib)&&wD()||(g.allowAdFeatures=!1);sl(c)?R(29)&&(g.allowAdPersonalizationSignals=!0):g.allowAdPersonalizationSignals=!1;!c.isGtmEvent&&d(N.g.Db)&&(h._useUp=!0);if(c.isGtmEvent){h.name=h.name||e.gtmTrackerName;var E=g.hitCallback;g.hitCallback=function(){Fa(E)&&E();c.onSuccess()}}else{HD(h,"cookieDomain","auto");HD(g,"forceSSL",!0);HD(e,"eventCategory",mE(b));oE[b]&&HD(f,"nonInteraction",!0);"login"===b||"sign_up"===
b||"share"===b?HD(e,"eventLabel",d(N.g.Ag)):"search"===b||"view_search_results"===b?HD(e,"eventLabel",d(N.g.Qi)):"select_content"===b&&HD(e,"eventLabel",d(N.g.yi));var G=e[N.g.Ma]||{},D=G[N.g.qc];D||0!=D&&G[N.g.W]?h.allowLinker=!0:!1===D&&HD(h,"useAmpClientId",!1);f.hitCallback=c.onSuccess;h.name=a}tl()&&(g["&gcs"]=ul());g["&gcd"]=yl(c);Pj()&&(ck(N.g.R)||(h.storage="none"),ck(N.g.J)||(g.allowAdFeatures=!1,h.storeGac=!1));Bl()&&(g["&dma_cps"]=zl());g["&dma"]=Al();Xk(el())&&(g["&tcfd"]=Cl());Ni()&&
(g["&tag_exp"]=Ni());var M=cp(c)||d(N.g.kb),P=d(N.g.Md);M&&(c.isGtmEvent||(h[N.g.kb]=M),h._cd2l=!0);P&&!c.isGtmEvent&&(h[N.g.Md]=P);e.fieldsToSend=f;e.fieldsToSet=g;e.createOnlyFields=h;return e},ID=function(a){var b=a.gtmEcommerceData;if(!b)return null;var c={};b.currencyCode&&(c.fh=b.currencyCode);if(b.impressions){c.action="impressions";var d=b.impressions;c.Gj="impressions"===b.translateIfKeyEquals?SD(d):d}if(b.promoView){c.action="promo_view";var e=b.promoView.promotions;c.Qe="promoView"===b.translateIfKeyEquals?
SD(e):e}if(b.promoClick){c.action="promo_click";var f=b.promoClick.promotions;c.Qe="promoClick"===b.translateIfKeyEquals?SD(f):f;c.nb=b.promoClick.actionField;return c}for(var g in b)if(b.hasOwnProperty(g)&&"translateIfKeyEquals"!==g&&"impressions"!==g&&"promoView"!==g&&"promoClick"!==g&&"currencyCode"!==g){c.action=g;var h=b[g].products;c.Fc="products"===b.translateIfKeyEquals?SD(h):h;c.nb=b[g].actionField;break}return Object.keys(c).length?c:null},JD=function(a,b){function c(u){return{id:d(N.g.ya),
affiliation:d(N.g.jg),revenue:d(N.g.ia),tax:d(N.g.df),shipping:d(N.g.Uc),coupon:d(N.g.kg),list:d(N.g.cf)||d(N.g.Tc)||u}}for(var d=function(u){return S(b,u)},e=d(N.g.Z),f,g=0;e&&g<e.length&&!(f=e[g][N.g.cf]||e[g][N.g.Tc]);g++);var h=d(N.g.Rc);if(mb(h))for(var m=0;e&&m<e.length;++m){var n=e[m],p;for(p in h)h.hasOwnProperty(p)&&/^(dimension|metric)\d+$/.test(p)&&void 0!=h[p]&&HD(n,p,n[h[p]])}var q=null,r=d(N.g.Di);if(a===N.g.ra||a===N.g.hc)q={action:a,nb:c(),Fc:SD(e)};else if(a===N.g.ac)q={action:"add",
nb:c(),Fc:SD(e)};else if(a===N.g.bc)q={action:"remove",nb:c(),Fc:SD(e)};else if(a===N.g.Fa)q={action:"detail",nb:c(f),Fc:SD(e)};else if(a===N.g.fb)q={action:"impressions",Gj:SD(e)};else if(a===N.g.hb)q={action:"promo_view",Qe:SD(r)||SD(e)};else if("select_content"===a&&r&&0<r.length||a===N.g.sb)q={action:"promo_click",Qe:SD(r)||SD(e)};else if("select_content"===a||a===N.g.fc)q={action:"click",nb:{list:d(N.g.cf)||d(N.g.Tc)||f},Fc:SD(e)};else if(a===N.g.Hb||"checkout_progress"===a){var t={step:a===
N.g.Hb?1:d(N.g.bf),option:d(N.g.Ed)};q={action:"checkout",Fc:SD(e),nb:nb(c(),t)}}else"set_checkout_option"===a&&(q={action:"checkout_option",nb:{step:d(N.g.bf),option:d(N.g.Ed)}});q&&(q.fh=d(N.g.xa));return q},qE={},ED=function(a,b){var c=qE[a];qE[a]=nb(b);if(!c)return!1;for(var d in b)if(b.hasOwnProperty(d)&&b[d]!==c[d])return!0;for(var e in c)if(c.hasOwnProperty(e)&&c[e]!==b[e])return!0;return!1};function rE(a,b,c,d){}rE.D="internal.executeEventProcessor";function sE(a){var b=void 0;return md(b,this.h,1)}sE.D="internal.executeJavascriptString";var tE=function(a){var b;return b};function uE(){var a=new sb;K(this,"read_container_data"),a.set("containerId",'UA-19138737-19'),a.set("version",'1'),a.set("environmentName",''),a.set("debugMode",$f),a.set("previewMode",bg),a.set("environmentMode",ag),a.set("firstPartyServing",zi||Bi),a.set("containerUrl",Dc),a.Eb();return a}uE.O="getContainerVersion";function vE(a,b){b=void 0===b?!0:b;var c;return c}vE.O="getCookieValues";function wE(){return qj()}wE.D="internal.getCountryCode";function xE(){var a=[];return md(a)}xE.D="internal.getDestinationIds";function yE(a,b){var c="";return c}yE.D="internal.getElementAttribute";function zE(a){var b=null;return b}zE.D="internal.getElementById";function AE(a){var b="";return b}AE.D="internal.getElementInnerText";function BE(a,b){var c=null;return c}BE.D="internal.getElementProperty";function CE(a){var b;return b}CE.D="internal.getElementValue";function DE(a){var b=0;return b}DE.D="internal.getElementVisibilityRatio";function EE(a){var b=null;return b}EE.D="internal.getElementsByCssSelector";
function FE(a){var b=void 0;return b}FE.D="internal.getEventData";var GE={};GE.enableAWFledge=R(6);GE.enableAdsConversionValidation=R(21);GE.enableAutoPiiOnPhoneAndAddress=R(30);GE.enableCachedEcommerceData=R(89);GE.enableCcdPreAutoPiiDetection=R(11);GE.enableCloudRecommentationsErrorLogging=R(73);GE.enableCloudRecommentationsSchemaIngestion=R(72);GE.enableCloudRetailInjectPurchaseMetadata=R(71);GE.enableCloudRetailLogging=R(70);GE.enableCloudRetailPageCategories=R(17);GE.enableConsentDisclosureActivity=R(35);GE.enableDCFledge=R(7);GE.enableDecodeUri=R(53);
GE.enableDeferAllEnhancedMeasurement=R(37);GE.enableDirectTagLoadingInGoogleTag=R(64);GE.enableEuidAutoMode=R(10);GE.enableFormSkipValidation=R(31);GE.enableLoadGoogleTagOptionsObject=R(68);GE.enableUrlDecodeEventUsage=R(47);GE.enableV1HistoryEventInApi=R(78);GE.loadContainerForGtmEventTags=R(34);GE.useEnableAutoEventOnFormApis=R(22);GE.autoPiiEligible=uj();function HE(){return md(GE)}HE.D="internal.getFlags";function IE(){return new jd(zy)}IE.D="internal.getHtmlId";function JE(a,b){var c;return c}JE.D="internal.getProductSettingsParameter";function KE(a,b){var c;return c}KE.O="getQueryParameters";function LE(a,b){var c;return c}LE.O="getReferrerQueryParameters";function ME(a){var b="";return b}ME.O="getReferrerUrl";function NE(){return rj()}NE.D="internal.getRegionCode";function OE(a,b){var c;return c}OE.D="internal.getRemoteConfigParameter";function PE(a){var b="";return b}PE.O="getUrl";function QE(){K(this,"get_user_agent");return Cc.userAgent}QE.O="getUserAgent";function aF(){return z.gaGlobal=z.gaGlobal||{}}var bF=function(){var a=aF();a.hid=a.hid||Ja();return a.hid},cF=function(a,b){var c=aF();if(void 0==c.vid||b&&!c.from_cookie)c.vid=a,c.from_cookie=b};var KF=function(a){this.s=a;this.C="";this.h=this.s},LF=function(a,b){a.h=b;return a};function MF(a){var b=a.search;return a.protocol+"//"+a.hostname+a.pathname+(b?b+"&richsstsse":"?richsstsse")}function NF(a,b,c){if(a){var d=a||[],e=mb(b)?b:{};if(Array.isArray(d))for(var f=0;f<d.length;f++)c(d[f],e)}};var bG=window,cG=document,dG=function(a){var b=bG._gaUserPrefs;if(b&&b.ioo&&b.ioo()||cG.documentElement.hasAttribute("data-google-analytics-opt-out")||a&&!0===bG["ga-disable-"+a])return!0;try{var c=bG.external;if(c&&c._gaUserPrefs&&"oo"==c._gaUserPrefs)return!0}catch(f){}for(var d=El("AMP_TOKEN",String(cG.cookie),!0),e=0;e<d.length;e++)if("$OPT_OUT"==d[e])return!0;return cG.getElementById("__gaOptOutExtension")?!0:!1};
function mG(a){l(a,function(c){"_"===c.charAt(0)&&delete a[c]});var b=a[N.g.Ya]||{};l(b,function(c){"_"===c.charAt(0)&&delete b[c]})};var uG=function(a,b){};function tG(a,b){var c=function(){};return c}
function vG(a,b,c){};var wG=tG;function yG(a,b,c){var d=this;}yG.D="internal.gtagConfig";function zG(){var a={};return a};
function BG(a,b){}BG.O="gtagSet";function CG(a,b){}CG.O="injectHiddenIframe";function DG(a,b,c,d,e){}DG.D="internal.injectHtml";var HG={};
function JG(a,b,c,d){}var KG=Object.freeze({dl:1,id:1}),LG={};
function MG(a,b,c,d){}JG.O="injectScript";MG.D="internal.injectScript";function NG(a){var b=!0;return b}NG.O="isConsentGranted";var OG=function(){var a=kh(function(b){this.h.h.log("error",b)});a.O="JSON";return a};function PG(a){var b=void 0;return md(b)}PG.D="internal.legacyParseUrl";var QG=function(){return!1},RG={getItem:function(a){var b=null;return b},setItem:function(a,
b){return!1},removeItem:function(a){}};function SG(){}SG.O="logToConsole";function TG(a,b){}TG.D="internal.mergeRemoteConfig";function UG(a,b,c){c=void 0===c?!0:c;var d=[];return d}UG.D="internal.parseCookieValuesFromString";function VG(a){var b=void 0;return b}VG.O="parseUrl";function WG(a){}WG.D="internal.processAsNewEvent";function XG(a,b,c){var d;return d}XG.D="internal.pushToDataLayer";function YG(a,b){var c=!1;return c}YG.O="queryPermission";function ZG(){var a="";return a}ZG.O="readCharacterSet";function $G(){return qi.fa}$G.D="internal.readDataLayerName";function aH(){var a="";return a}aH.O="readTitle";function bH(a,b){var c=this;}bH.D="internal.registerCcdCallback";function cH(a){return!0}cH.D="internal.registerDestination";var dH=Object.freeze(["config","event","get","set"]);function eH(a,b,c){}eH.D="internal.registerGtagCommandListener";function fH(a,b){var c=!1;return c}fH.D="internal.removeDataLayerEventListener";function gH(a,b){}
gH.D="internal.removeFormData";function hH(){}hH.O="resetDataLayer";function iH(a,b,c,d){}iH.D="internal.sendGtagEvent";function jH(a,b,c){}jH.O="sendPixel";function kH(a,b){}kH.D="internal.setAnchorHref";function lH(a,b,c,d){var e=this;d=void 0===d?!0:d;var f=!1;return f}lH.O="setCookie";function mH(a,b){}mH.D="internal.setCorePlatformServices";function nH(a,b){}nH.D="internal.setDataLayerValue";function oH(a){}oH.O="setDefaultConsentState";function pH(a,b){}pH.D="internal.setDelegatedConsentType";function qH(a,b){}qH.D="internal.setFormAction";function rH(a,b,c){return!1}rH.O="setInWindow";function sH(a,b,c){}sH.D="internal.setProductSettingsParameter";function tH(a,b,c){}tH.D="internal.setRemoteConfigParameter";function uH(a,b){var c=this;}uH.D="internal.setupConversionLinker";function vH(a,b,c,d){var e=this;}vH.O="sha256";function wH(a,b,c){}
wH.D="internal.sortRemoteConfigParameters";var xH={},yH={};xH.O="templateStorage";xH.getItem=function(a){var b=null;return b};
xH.setItem=function(a,b){};
xH.removeItem=function(a){};xH.clear=function(){};function zH(a,b){var c=!1;return c}zH.D="internal.testRegex";var AH=function(a){var b;return b};function BH(a){var b;return b}BH.D="internal.unsiloId";function CH(a){}CH.O="updateConsentState";var DH;function EH(a,b,c){DH=DH||new uh;DH.add(a,b,c)}function FH(a,b){var c=DH=DH||new uh;if(c.s.hasOwnProperty(a))throw"Attempting to add a private function which already exists: "+a+".";if(c.h.hasOwnProperty(a))throw"Attempting to add a private function with an existing API name: "+a+".";c.s[a]=Fa(b)?Mg(a,b):Ng(a,b)}
function GH(){return function(a){var b;var c=DH;if(c.h.hasOwnProperty(a))b=c.get(a,this);else{var d;if(d=c.s.hasOwnProperty(a)){var e=!1,f=this.h.h;if(f){var g=f.wc();if(g){0!==g.indexOf("__cvt_")&&(e=!0);}}else e=!0;d=e}if(d){var h=c.s.hasOwnProperty(a)?c.s[a]:void 0;b=h}else throw Error(a+" is not a valid API name.");}return b}};var HH=function(){var a=function(c){return FH(c.D,c)},b=function(c){return EH(c.O,c)};b(dA);b(jA);b(aB);b(dB);b(eB);b(iB);b(kB);b(nB);b(OG());b(pB);b(uE);b(vE);b(KE);b(LE);b(ME);b(PE);b(BG);b(CG);b(JG);b(NG);b(SG);b(VG);b(YG);b(ZG);b(aH);b(jH);b(lH);b(oH);b(rH);b(vH);b(xH);b(CH);EH("Math",Sg());EH("Object",sh);EH("TestHelper",wh());EH("assertApi",Og);EH("assertThat",Pg);EH("decodeUri",Tg);EH("decodeUriComponent",Ug);EH("encodeUri",Vg);EH("encodeUriComponent",Wg);EH("fail",bh);EH("generateRandom",
ch);EH("getTimestamp",dh);EH("getTimestampMillis",dh);EH("getType",jh);EH("makeInteger",lh);EH("makeNumber",mh);EH("makeString",nh);EH("makeTableMap",oh);EH("mock",rh);EH("fromBase64",tE,!("atob"in z));EH("localStorage",RG,!QG());EH("toBase64",AH,!("btoa"in z));a(gA);a(oA);a(AA);a(HA);a(MA);a(QA);a(ZA);a(bB);a(fB);a(gB);a(jB);a(lB);a(mB);a(oB);a(qB);a(tB);a(uB);a(wB);a(AB);a(FB);a(GB);a(RB);a(WB);a(aC);a(jC);a(oC);a(BC);a(DC);a(QC);a(Xg);a(SC);a(rE);a(sE);a(wE);a(xE);a(yE);a(zE);a(AE);a(BE);a(CE);
a(DE);a(EE);a(FE);a(HE);a(IE);a(JE);a(NE);a(OE);a(yG);a(MG);a(PG);a(OA);a(TG);a(UG);a(WG);a(XG);a($G);a(bH);a(cH);a(eH);a(fH);a(gH);a(iH);a(kH);a(mH);a(pH);a(qH);a(sH);a(tH);a(wH);a(zH);FH("internal.GtagSchema",zG());R(56)&&a(DG);R(84)&&a(vB);R(90)&&a(BH);R(88)&&a(nH);R(101)&&a(uH);return GH()};var bA;function IH(){bA.h.h.M=function(a,b,c){ri.SANDBOXED_JS_SEMAPHORE=ri.SANDBOXED_JS_SEMAPHORE||0;ri.SANDBOXED_JS_SEMAPHORE++;try{return a.apply(b,c)}finally{ri.SANDBOXED_JS_SEMAPHORE--}}}function JH(a){void 0!==a&&l(a,function(b,c){for(var d=0;d<c.length;d++){var e=c[d].replace(/^_*/,"");Ji[e]=Ji[e]||[];Ji[e].push(b)}})};var KH=encodeURI,V=encodeURIComponent,LH=function(a,b,c){Nc(a,b,c)},MH=function(a,b){if(!a)return!1;var c=Gm(Lm(a),"host");if(!c)return!1;for(var d=0;b&&d<b.length;d++){var e=b[d]&&b[d].toLowerCase();if(e){var f=c.length-e.length;0<f&&"."!=e.charAt(0)&&(f--,e="."+e);if(0<=f&&c.indexOf(e,f)==f)return!0}}return!1},NH=function(a,b,c){for(var d={},e=!1,f=0;a&&f<a.length;f++)a[f]&&a[f].hasOwnProperty(b)&&
a[f].hasOwnProperty(c)&&(d[a[f][b]]=a[f][c],e=!0);return e?d:null};var Z={securityGroups:{}};

Z.securityGroups.e=["google"],function(){(function(a){Z.__e=a;Z.__e.m="e";Z.__e.isVendorTemplate=!0;Z.__e.priorityOverride=0;Z.__e.isInfrastructure=!1;Z.__e.runInSiloedMode=!0})(function(a){return String(a.vtp_gtmCachedValues.event)})}();Z.securityGroups.v=["google"],function(){(function(a){Z.__v=a;Z.__v.m="v";Z.__v.isVendorTemplate=!0;Z.__v.priorityOverride=0;Z.__v.isInfrastructure=!1;Z.__v.runInSiloedMode=!1})(function(a){var b=a.vtp_name;if(!b||!b.replace)return!1;var c=nz(b.replace(/\\\./g,"."),a.vtp_dataLayerVersion||1),d=void 0!==c?c:a.vtp_defaultValue;vz(d,"v",a.vtp_gtmEventId);return d})}();




Z.securityGroups.rep=["google"],function(){(function(a){Z.__rep=a;Z.__rep.m="rep";Z.__rep.isVendorTemplate=!0;Z.__rep.priorityOverride=0;Z.__rep.isInfrastructure=!1;Z.__rep.runInSiloedMode=!0})(function(a){var b=om(a.vtp_containerId),c=yo(b,!0),d;switch(c.prefix){case "AW":d=VC;break;case "DC":d=hD;break;case "GF":d=nD;break;case "HA":d=sD;break;case "UA":d=QD;break;case "MC":d=wG(c,a.vtp_gtmEventId);break;default:F(a.vtp_gtmOnFailure);return}d?(F(a.vtp_gtmOnSuccess),Qp(b,d),a.vtp_remoteConfig&&Vp(b,
a.vtp_remoteConfig||{})):F(a.vtp_gtmOnFailure)})}();







Z.securityGroups.read_container_data=["google"],function(){(function(a){Z.__read_container_data=a;Z.__read_container_data.m="read_container_data";Z.__read_container_data.isVendorTemplate=!0;Z.__read_container_data.priorityOverride=0;Z.__read_container_data.isInfrastructure=!1;Z.__read_container_data.runInSiloedMode=!1})(function(){return{assert:function(){},K:function(){return{}}}})}();







Z.securityGroups.get=["google"],function(){(function(a){Z.__get=a;Z.__get.m="get";Z.__get.isVendorTemplate=!0;Z.__get.priorityOverride=0;Z.__get.isInfrastructure=!1;Z.__get.runInSiloedMode=!1})(function(a){var b=a.vtp_settings,c=b.eventParameters||{},d=String(a.vtp_eventName),e={};e.eventId=a.vtp_gtmEventId;e.priorityId=a.vtp_gtmPriorityId;a.vtp_deferrable&&(e.deferrable=!0);var f=Zv(String(b.streamId),d,c);bw(f,e.eventId,e);a.vtp_gtmOnSuccess()})}();




var hJ={};hJ.dataLayer=Ti;hJ.callback=function(a){Ii.hasOwnProperty(a)&&Fa(Ii[a])&&Ii[a]();delete Ii[a]};hJ.bootstrap=0;hJ._spx=!1;
function iJ(){ri[lm()]=ri[lm()]||hJ;rm();wm()||l(xm(),function(d,e){$u(d,e.transportUrl,e.context);L(92)});Wa(Ji,Z.securityGroups);var a=nm(um()),b,c=null==a?void 0:null==(b=a.context)?void 0:b.source;2!==c&&4!==c&&3!==c||L(142);vf=Lf}
(function(a){function b(){m=C.documentElement.getAttribute("data-tag-assistant-present");by(m)&&(h=g.Mk)}if(!z["__TAGGY_INSTALLED"]){var c=!1;if(C.referrer){var d=Lm(C.referrer);c="cct.google"===Fm(d,"host")}if(!c){var e=Hl("googTaggyReferrer");c=e.length&&e[0].length}c&&(z["__TAGGY_INSTALLED"]=!0,Jc("https://cct.google/taggy/agent.js"))}if(Di)a();else{var f=function(u){var v="GTM",w="GTM";xi?(v="OGT",w="GTAG"):Di&&(w=v="OPT");var x=z["google.tagmanager.debugui2.queue"];x||(x=[],
z["google.tagmanager.debugui2.queue"]=x,Jc("https://"+qi.wd+"/debug/bootstrap?id="+Tf.ctid+"&src="+w+"&cond="+u+"&gtm="+Am()));var y={messageType:"CONTAINER_STARTING",data:{scriptSource:Dc,containerProduct:v,debug:!1,id:Tf.ctid,targetRef:{ctid:Tf.ctid,isDestination:dm.ie},aliases:fm(),destinations:im()}};y.data.resume=function(){a()};qi.lk&&(y.data.initialPublish=!0);x.push(y)},g={Bn:1,Nk:2,Zk:3,nk:4,Mk:5},h=void 0,m=void 0,n=Gm(z.location,"query",!1,void 0,"gtm_debug");by(n)&&(h=g.Nk);if(!h&&C.referrer){var p=Lm(C.referrer);
"tagassistant.google.com"===Fm(p,"host")&&(h=g.Zk)}if(!h){var q=Hl("__TAG_ASSISTANT");q.length&&q[0].length&&(h=g.nk)}h||b();if(!h&&cy(m)){var r=function(){if(t)return!0;t=!0;b();h&&Dc?f(h):a()},t=!1;Oc(C,"TADebugSignal",function(){r()},!1);z.setTimeout(function(){r()},200)}else h&&Dc?f(h):a()}})(function(){try{pm();if(R(16)){}zj().s();kl();(R(98)||R(99)||R(100))&&
pq();var a=mm();if(am().canonical[a]){var b=ri.zones;b&&b.unregisterChild(hm());var c=Lu(mm());c._event&&(c._event.external=[]);c._entity&&(c._entity.external=[]);}else{Xu();for(var d=data.resource||{},e=d.macros||[],f=0;f<e.length;f++)lf.push(e[f]);for(var g=d.tags||[],h=0;h<g.length;h++)of.push(g[h]);for(var m=d.predicates||
[],n=0;n<m.length;n++)nf.push(m[n]);for(var p=d.rules||[],q=0;q<p.length;q++){for(var r=p[q],t={},u=0;u<r.length;u++){var v=r[u][0];t[v]=Array.prototype.slice.call(r[u],1);"if"!==v&&"unless"!==v||uf(t[v])}mf.push(t)}qf=Z;rf=Tz;Nf=new Wf;var w=data.sandboxed_scripts,x=data.security_groups,y=data.infra;a:{var A=data.runtime||[],B=data.runtime_lines;bA=new Ie;IH();kf=aA();var E=bA,G=HH(),D=new ed("require",G);D.Eb();E.h.h.set("require",D);for(var M=[],P=0;P<A.length;P++){var O=A[P];if(!Ha(O)||3>O.length){if(0===
O.length)continue;break a}B&&B[P]&&B[P].length&&Ef(O,B[P]);try{bA.execute(O),R(32)&&mp&&50===O[0]&&M.push(O[1])}catch(fh){}}R(32)&&(wf=M)}if(void 0!==w)for(var T=["sandboxedScripts"],Y=0;Y<w.length;Y++){var W=w[Y].replace(/^_*/,"");Ji[W]=T}JH(x);if(void 0!==y)for(var X=0;X<y.length;X++)Ki[y[X]]=!0;iJ();if(R(25)&&!Di){for(var la=pj["7"],ka=la?la.split("|"):[],fa={},Da=0;Da<ka.length;Da++)fa[ka[Da]]=!0;for(var pa=0;pa<Wj.length;pa++){var Ea=Wj[pa],Ua=Ea,lb=fa[Ea]?"granted":"denied";Gj().implicit(Ua,
lb)}}ay();av=!1;bv=0;if("interactive"==C.readyState&&!C.createEventObject||"complete"==C.readyState)dv();else{Oc(C,"DOMContentLoaded",dv);Oc(C,"readystatechange",dv);if(C.createEventObject&&C.documentElement.doScroll){var Ib=!0;try{Ib=!z.frameElement}catch(fh){}Ib&&ev()}Oc(z,"load",dv)}px=!1;"complete"===C.readyState?rx():Oc(z,"load",rx);
mp&&(hp(zp),z.setInterval(yp,864E5));hp(Vz);hp(Ev);hp(ut);hp(Op);hp(Pv);hp(Ep);hp(Xr);hp(Cp);hp(Lv);R(32)&&hp(Hv);R(106)&&(hp(Wz),hp(Yz));xy();ij(1);Lw();Hi=Sa();hJ.bootstrap=Hi;
hJ._spx=!0,Zx();if(R(16)){}}}catch(fh){if(ij(4),mp){var jj=tp(!0,!0);Nc(jj)}}});

})()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    hasOwnProperty.call(object,"$loki"))return self.removeAutoUpdateObserver(object);try{self.update(object)}catch(err){}})}this.observerCallback=observerCallback;function createChange(name,op,obj){self.changes.push({name:name,operation:op,obj:JSON.parse(JSON.stringify(obj))})}function flushChanges(){self.changes=[]}this.getChanges=function(){return self.changes};this.flushChanges=flushChanges;function insertMeta(obj){if(!obj){return}if(!obj.meta){obj.meta={}}obj.meta.created=(new Date).getTime();obj.meta.revision=0}function updateMeta(obj){if(!obj){return}obj.meta.updated=(new Date).getTime();obj.meta.revision+=1}function createInsertChange(obj){createChange(self.name,"I",obj)}function createUpdateChange(obj){createChange(self.name,"U",obj)}function insertMetaWithChange(obj){insertMeta(obj);createInsertChange(obj)}function updateMetaWithChange(obj){updateMeta(obj);createUpdateChange(obj)}var insertHandler,updateHandler;function setHandlers(){insertHandler=self.disableChangesApi?insertMeta:insertMetaWithChange;updateHandler=self.disableChangesApi?updateMeta:updateMetaWithChange}setHandlers();this.setChangesApi=function(enabled){self.disableChangesApi=!enabled;setHandlers()};this.on("insert",function insertCallback(obj){insertHandler(obj)});this.on("update",function updateCallback(obj){updateHandler(obj)});this.on("delete",function deleteCallback(obj){if(!self.disableChangesApi){createChange(self.name,"R",obj)}});this.on("warning",function(warning){self.console.warn(warning)});flushChanges()}Collection.prototype=new LokiEventEmitter;Collection.prototype.console={log:function(){},warn:function(){},error:function(){}};Collection.prototype.addAutoUpdateObserver=function(object){if(!this.autoupdate||typeof Object.observe!=="function")return;Object.observe(object,this.observerCallback,["add","update","delete","reconfigure","setPrototype"])};Collection.prototype.removeAutoUpdateObserver=function(object){if(!this.autoupdate||typeof Object.observe!=="function")return;Object.unobserve(object,this.observerCallback)};Collection.prototype.addTransform=function(name,transform){if(this.transforms.hasOwnProperty(name)){throw new Error("a transform by that name already exists")}this.transforms[name]=transform};Collection.prototype.setTransform=function(name,transform){this.transforms[name]=transform};Collection.prototype.removeTransform=function(name){delete this.transforms[name]};Collection.prototype.byExample=function(template){var k,obj,query;query=[];for(k in template){if(!template.hasOwnProperty(k))continue;query.push((obj={},obj[k]=template[k],obj))}return{$and:query}};Collection.prototype.findObject=function(template){return this.findOne(this.byExample(template))};Collection.prototype.findObjects=function(template){return this.find(this.byExample(template))};Collection.prototype.ttlDaemonFuncGen=function(){var collection=this;var age=this.ttl.age;return function ttlDaemon(){var now=Date.now();var toRemove=collection.chain().where(function daemonFilter(member){var timestamp=member.meta.updated||member.meta.created;var diff=now-timestamp;return age<diff});toRemove.remove()}};Collection.prototype.setTTL=function(age,interval){if(age<0){clearInterval(this.ttl.daemon)}else{this.ttl.age=age;this.ttl.ttlInterval=interval;this.ttl.daemon=setInterval(this.ttlDaemonFuncGen(),interval)}};Collection.prototype.prepareFullDocIndex=function(){var len=this.data.length;var indexes=new Array(len);for(var i=0;i<len;i+=1){indexes[i]=i}return indexes};Collection.prototype.configureOptions=function(options){options=options||{};if(options.hasOwnProperty("adaptiveBinaryIndices")){this.adaptiveBinaryIndices=options.adaptiveBinaryIndices;if(this.adaptiveBinaryIndices){this.ensureAllIndexes()}}};Collection.prototype.ensureIndex=function(property,force){if(typeof force==="undefined"){force=false}if(property===null||property===undefined){throw new Error("Attempting to set index without an associated property")}if(this.binaryIndices[property]&&!force){if(!this.binaryIndices[property].dirty)return}var index={name:property,dirty:true,values:this.prepareFullDocIndex()};this.binaryIndices[property]=index;var wrappedComparer=function(p,data){return function(a,b){var objAp=data[a][p],objBp=data[b][p];if(objAp!==objBp){if(ltHelper(objAp,objBp,false))return-1;if(gtHelper(objAp,objBp,false))return 1}return 0}}(property,this.data);index.values.sort(wrappedComparer);index.dirty=false;this.dirty=true};Collection.prototype.getSequencedIndexValues=function(property){var idx,idxvals=this.binaryIndices[property].values;var result="";for(idx=0;idx<idxvals.length;idx++){result+=" ["+idx+"] "+this.data[idxvals[idx]][property]}return result};Collection.prototype.ensureUniqueIndex=function(field){var index=this.constraints.unique[field];if(!index){if(this.uniqueNames.indexOf(field)==-1){this.uniqueNames.push(field)}}this.constraints.unique[field]=index=new UniqueIndex(field);this.data.forEach(function(obj){index.set(obj)});return index};Collection.prototype.ensureAllIndexes=function(force){var key,bIndices=this.binaryIndices;for(key in bIndices){if(hasOwnProperty.call(bIndices,key)){this.ensureIndex(key,force)}}};Collection.prototype.flagBinaryIndexesDirty=function(){var key,bIndices=this.binaryIndices;for(key in bIndices){if(hasOwnProperty.call(bIndices,key)){bIndices[key].dirty=true}}};Collection.prototype.flagBinaryIndexDirty=function(index){if(this.binaryIndices[index])this.binaryIndices[index].dirty=true};Collection.prototype.count=function(query){if(!query){return this.data.length}return this.chain().find(query).filteredrows.length};Collection.prototype.ensureId=function(){var len=this.data.length,i=0;this.idIndex=[];for(i;i<len;i+=1){this.idIndex.push(this.data[i].$loki)}};Collection.prototype.ensureIdAsync=function(callback){this.async(function(){this.ensureId()},callback)};Collection.prototype.addDynamicView=function(name,options){var dv=new DynamicView(this,name,options);this.DynamicViews.push(dv);return dv};Collection.prototype.removeDynamicView=function(name){for(var idx=0;idx<this.DynamicViews.length;idx++){if(this.DynamicViews[idx].name===name){this.DynamicViews.splice(idx,1)}}};Collection.prototype.getDynamicView=function(name){for(var idx=0;idx<this.DynamicViews.length;idx++){if(this.DynamicViews[idx].name===name){return this.DynamicViews[idx]}}return null};Collection.prototype.findAndUpdate=function(filterObject,updateFunction){if(typeof filterObject==="function"){this.updateWhere(filterObject,updateFunction)}else{this.chain().find(filterObject).update(updateFunction)}};Collection.prototype.findAndRemove=function(filterObject){this.chain().find(filterObject).remove()};Collection.prototype.insert=function(doc){if(!Array.isArray(doc)){return this.insertOne(doc)}var obj;var results=[];this.emit("pre-insert",doc);for(var i=0,len=doc.length;i<len;i++){obj=this.insertOne(doc[i],true);if(!obj){return undefined}results.push(obj)}this.emit("insert",doc);return results.length===1?results[0]:results};Collection.prototype.insertOne=function(doc,bulkInsert){var err=null;var returnObj;if(typeof doc!=="object"){err=new TypeError("Document needs to be an object")}else if(doc===null){err=new TypeError("Object cannot be null")}if(err!==null){this.emit("error",err);throw err}var obj=this.cloneObjects?clone(doc,this.cloneMethod):doc;if(typeof obj.meta==="undefined"){obj.meta={revision:0,created:0}}returnObj=this.cloneObjects?clone(obj,this.cloneMethod):obj;if(!bulkInsert){this.emit("pre-insert",obj)}if(!this.add(obj)){return undefined}this.addAutoUpdateObserver(returnObj);if(!bulkInsert){this.emit("insert",returnObj)}return returnObj};Collection.prototype.clear=function(){this.data=[];this.idIndex=[];this.binaryIndices={};this.cachedIndex=null;this.cachedBinaryIndex=null;this.cachedData=null;this.maxId=0;this.DynamicViews=[];this.dirty=true};Collection.prototype.update=function(doc){if(Array.isArray(doc)){var k=0,len=doc.length;for(k;k<len;k+=1){this.update(doc[k])}return}if(!hasOwnProperty.call(doc,"$loki")){throw new Error("Trying to update unsynced document. Please save the document first by using insert() or addMany()")}try{this.startTransaction();var arr=this.get(doc.$loki,true),oldInternal,newInternal,position,self=this;if(!arr){throw new Error("Trying to update a document not in collection.")}oldInternal=arr[0];position=arr[1];newInternal=this.cloneObjects?clone(doc,this.cloneMethod):doc;this.emit("pre-update",doc);Object.keys(this.constraints.unique).forEach(function(key){self.constraints.unique[key].update(oldInternal,newInternal)});this.data[position]=newInternal;if(newInternal!==doc){this.addAutoUpdateObserver(doc)}for(var idx=0;idx<this.DynamicViews.length;idx++){this.DynamicViews[idx].evaluateDocument(position,false)}var key;if(this.adaptiveBinaryIndices){var bIndices=this.binaryIndices;for(key in bIndices){this.adaptiveBinaryIndexUpdate(position,key)}}else{this.flagBinaryIndexesDirty()}this.idIndex[position]=newInternal.$loki;this.commit();this.dirty=true;this.emit("update",doc,this.cloneObjects?clone(oldInternal,this.cloneMethod):null);return doc}catch(err){this.rollback();this.console.error(err.message);this.emit("error",err);throw err}};Collection.prototype.add=function(obj){if("object"!==typeof obj){throw new TypeError("Object being added needs to be an object")}if(typeof obj.$loki!=="undefined"){throw new Error("Document is already in collection, please use update()")}try{this.startTransaction();this.maxId++;if(isNaN(this.maxId)){this.maxId=this.data[this.data.length-1].$loki+1}obj.$loki=this.maxId;obj.meta.version=0;var key,constrUnique=this.constraints.unique;for(key in constrUnique){if(hasOwnProperty.call(constrUnique,key)){constrUnique[key].set(obj)}}this.idIndex.push(obj.$loki);this.data.push(obj);var addedPos=this.data.length-1;var dvlen=this.DynamicViews.length;for(var i=0;i<dvlen;i++){this.DynamicViews[i].evaluateDocument(addedPos,true)}if(this.adaptiveBinaryIndices){var bIndices=this.binaryIndices;for(key in bIndices){this.adaptiveBinaryIndexInsert(addedPos,key)}}else{this.flagBinaryIndexesDirty()}this.commit();this.dirty=true;return this.cloneObjects?clone(obj,this.cloneMethod):obj}catch(err){this.rollback();this.console.error(err.message);this.emit("error",err);throw err}};Collection.prototype.updateWhere=function(filterFunction,updateFunction){var results=this.where(filterFunction),i=0,obj;try{for(i;i<results.length;i++){obj=updateFunction(results[i]);this.update(obj)}}catch(err){this.rollback();this.console.error(err.message)}};Collection.prototype.removeWhere=function(query){var list;if(typeof query==="function"){list=this.data.filter(query);this.remove(list)}else{this.chain().find(query).remove()}};Collection.prototype.removeDataOnly=function(){this.remove(this.data.slice())};Collection.prototype.remove=function(doc){if(typeof doc==="number"){doc=this.get(doc)}if("object"!==typeof doc){throw new Error("Parameter is not an object")}if(Array.isArray(doc)){var k=0,len=doc.length;for(k;k<len;k+=1){this.remove(doc[k])}return}if(!hasOwnProperty.call(doc,"$loki")){throw new Error("Object is not a document stored in the collection")}try{this.startTransaction();var arr=this.get(doc.$loki,true),position=arr[1];var self=this;Object.keys(this.constraints.unique).forEach(function(key){if(doc[key]!==null&&typeof doc[key]!=="undefined"){self.constraints.unique[key].remove(doc[key])}});for(var idx=0;idx<this.DynamicViews.length;idx++){this.DynamicViews[idx].removeDocument(position)}if(this.adaptiveBinaryIndices){var key,bIndices=this.binaryIndices;for(key in bIndices){this.adaptiveBinaryIndexRemove(position,key)}}else{this.flagBinaryIndexesDirty()}this.data.splice(position,1);this.removeAutoUpdateObserver(doc);this.idIndex.splice(position,1);this.commit();this.dirty=true;this.emit("delete",arr[0]);delete doc.$loki;delete doc.meta;return doc}catch(err){this.rollback();this.console.error(err.message);this.emit("error",err);return null}};Collection.prototype.get=function(id,returnPosition){var retpos=returnPosition||false,data=this.idIndex,max=data.length-1,min=0,mid=min+max>>1;id=typeof id==="number"?id:parseInt(id,10);if(isNaN(id)){throw new TypeError("Passed id is not an integer")}while(data[min]<data[max]){mid=min+max>>1;if(data[mid]<id){min=mid+1}else{max=mid}}if(max===min&&data[min]===id){if(retpos){return[this.data[min],min]}return this.data[min]}return null};Collection.prototype.getBinaryIndexPosition=function(dataPosition,binaryIndexName){var val=this.data[dataPosition][binaryIndexName];var index=this.binaryIndices[binaryIndexName].values;var range=this.calculateRange("$eq",binaryIndexName,val);if(range[0]===0&&range[1]===-1){return null}var min=range[0];var max=range[1];for(var idx=min;idx<=max;idx++){if(index[idx]===dataPosition)return idx}return null};Collection.prototype.adaptiveBinaryIndexInsert=function(dataPosition,binaryIndexName){var index=this.binaryIndices[binaryIndexName].values;var val=this.data[dataPosition][binaryIndexName];var idxPos=this.calculateRangeStart(binaryIndexName,val);this.binaryIndices[binaryIndexName].values.splice(idxPos,0,dataPosition)};Collection.prototype.adaptiveBinaryIndexUpdate=function(dataPosition,binaryIndexName){var idxPos,index=this.binaryIndices[binaryIndexName].values,len=index.length;for(idxPos=0;idxPos<len;idxPos++){if(index[idxPos]===dataPosition)break}this.binaryIndices[binaryIndexName].values.splice(idxPos,1);this.adaptiveBinaryIndexInsert(dataPosition,binaryIndexName)};Collection.prototype.adaptiveBinaryIndexRemove=function(dataPosition,binaryIndexName,removedFromIndexOnly){
var idxPos=this.getBinaryIndexPosition(dataPosition,binaryIndexName);var index=this.binaryIndices[binaryIndexName].values;var len,idx;if(idxPos===null){return null}this.binaryIndices[binaryIndexName].values.splice(idxPos,1);if(removedFromIndexOnly===true){return}len=index.length;for(idx=0;idx<len;idx++){if(index[idx]>dataPosition){index[idx]--}}};Collection.prototype.calculateRangeStart=function(prop,val){var rcd=this.data;var index=this.binaryIndices[prop].values;var min=0;var max=index.length-1;var mid=0;if(index.length===0){return 0}var minVal=rcd[index[min]][prop];var maxVal=rcd[index[max]][prop];while(min<max){mid=min+max>>1;if(ltHelper(rcd[index[mid]][prop],val,false)){min=mid+1}else{max=mid}}var lbound=min;if(ltHelper(rcd[index[lbound]][prop],val,false)){return lbound+1}else{return lbound}};Collection.prototype.calculateRange=function(op,prop,val){var rcd=this.data;var index=this.binaryIndices[prop].values;var min=0;var max=index.length-1;var mid=0;if(rcd.length===0){return[0,-1]}var minVal=rcd[index[min]][prop];var maxVal=rcd[index[max]][prop];switch(op){case"$eq":case"$aeq":if(ltHelper(val,minVal,false)||gtHelper(val,maxVal,false)){return[0,-1]}break;case"$dteq":if(ltHelper(val,minVal,false)||gtHelper(val,maxVal,false)){return[0,-1]}break;case"$gt":if(gtHelper(val,maxVal,true)){return[0,-1]}break;case"$gte":if(gtHelper(val,maxVal,false)){return[0,-1]}break;case"$lt":if(ltHelper(val,minVal,true)){return[0,-1]}if(ltHelper(maxVal,val,false)){return[0,rcd.length-1]}break;case"$lte":if(ltHelper(val,minVal,false)){return[0,-1]}if(ltHelper(maxVal,val,true)){return[0,rcd.length-1]}break;case"$in":var idxset=[],segResult=[];for(var j=0,len=val.length;j<len;j++){var seg=this.calculateRange("$eq",prop,val[j]);for(var i=seg[0];i<=seg[1];i++){if(idxset[i]===undefined){idxset[i]=true;segResult.push(i)}}}return segResult}while(min<max){mid=min+max>>1;if(ltHelper(rcd[index[mid]][prop],val,false)){min=mid+1}else{max=mid}}var lbound=min;max=index.length-1;while(min<max){mid=min+max>>1;if(ltHelper(val,rcd[index[mid]][prop],false)){max=mid}else{min=mid+1}}var ubound=max;var lval=rcd[index[lbound]][prop];var uval=rcd[index[ubound]][prop];switch(op){case"$eq":if(lval!==val){return[0,-1]}if(uval!==val){ubound--}return[lbound,ubound];case"$dteq":if(lval>val||lval<val){return[0,-1]}if(uval>val||uval<val){ubound--}return[lbound,ubound];case"$gt":if(ltHelper(uval,val,true)){return[0,-1]}return[ubound,rcd.length-1];case"$gte":if(ltHelper(lval,val,false)){return[0,-1]}return[lbound,rcd.length-1];case"$lt":if(lbound===0&&ltHelper(lval,val,false)){return[0,0]}return[0,lbound-1];case"$lte":if(uval!==val){ubound--}if(ubound===0&&ltHelper(uval,val,false)){return[0,0]}return[0,ubound];default:return[0,rcd.length-1]}};Collection.prototype.by=function(field,value){var self;if(value===undefined){self=this;return function(value){return self.by(field,value)}}var result=this.constraints.unique[field].get(value);if(!this.cloneObjects){return result}else{return clone(result,this.cloneMethod)}};Collection.prototype.findOne=function(query){query=query||{};var result=new Resultset(this,{queryObj:query,firstOnly:true});if(Array.isArray(result)&&result.length===0){return null}else{if(!this.cloneObjects){return result}else{return clone(result,this.cloneMethod)}}};Collection.prototype.chain=function(transform,parameters){var rs=new Resultset(this);if(typeof transform==="undefined"){return rs}return rs.transform(transform,parameters)};Collection.prototype.find=function(query){if(typeof query==="undefined"){query="getAll"}var results=new Resultset(this,{queryObj:query});if(!this.cloneObjects){return results}else{return cloneObjectArray(results,this.cloneMethod)}};Collection.prototype.findOneUnindexed=function(prop,value){var i=this.data.length,doc;while(i--){if(this.data[i][prop]===value){doc=this.data[i];return doc}}return null};Collection.prototype.startTransaction=function(){if(this.transactional){this.cachedData=clone(this.data,this.cloneMethod);this.cachedIndex=this.idIndex;this.cachedBinaryIndex=this.binaryIndices;for(var idx=0;idx<this.DynamicViews.length;idx++){this.DynamicViews[idx].startTransaction()}}};Collection.prototype.commit=function(){if(this.transactional){this.cachedData=null;this.cachedIndex=null;this.cachedBinaryIndex=null;for(var idx=0;idx<this.DynamicViews.length;idx++){this.DynamicViews[idx].commit()}}};Collection.prototype.rollback=function(){if(this.transactional){if(this.cachedData!==null&&this.cachedIndex!==null){this.data=this.cachedData;this.idIndex=this.cachedIndex;this.binaryIndices=this.cachedBinaryIndex}for(var idx=0;idx<this.DynamicViews.length;idx++){this.DynamicViews[idx].rollback()}}};Collection.prototype.async=function(fun,callback){setTimeout(function(){if(typeof fun==="function"){fun();callback()}else{throw new TypeError("Argument passed for async execution is not a function")}},0)};Collection.prototype.where=function(fun){var results=new Resultset(this,{queryFunc:fun});if(!this.cloneObjects){return results}else{return cloneObjectArray(results,this.cloneMethod)}};Collection.prototype.mapReduce=function(mapFunction,reduceFunction){try{return reduceFunction(this.data.map(mapFunction))}catch(err){throw err}};Collection.prototype.eqJoin=function(joinData,leftJoinProp,rightJoinProp,mapFun){return new Resultset(this).eqJoin(joinData,leftJoinProp,rightJoinProp,mapFun)};Collection.prototype.stages={};Collection.prototype.getStage=function(name){if(!this.stages[name]){this.stages[name]={}}return this.stages[name]};Collection.prototype.commitLog=[];Collection.prototype.stage=function(stageName,obj){var copy=JSON.parse(JSON.stringify(obj));this.getStage(stageName)[obj.$loki]=copy;return copy};Collection.prototype.commitStage=function(stageName,message){var stage=this.getStage(stageName),prop,timestamp=(new Date).getTime();for(prop in stage){this.update(stage[prop]);this.commitLog.push({timestamp:timestamp,message:message,data:JSON.parse(JSON.stringify(stage[prop]))})}this.stages[stageName]={}};Collection.prototype.no_op=function(){return};Collection.prototype.extract=function(field){var i=0,len=this.data.length,isDotNotation=isDeepProperty(field),result=[];for(i;i<len;i+=1){result.push(deepProperty(this.data[i],field,isDotNotation))}return result};Collection.prototype.max=function(field){return Math.max.apply(null,this.extract(field))};Collection.prototype.min=function(field){return Math.min.apply(null,this.extract(field))};Collection.prototype.maxRecord=function(field){var i=0,len=this.data.length,deep=isDeepProperty(field),result={index:0,value:undefined},max;for(i;i<len;i+=1){if(max!==undefined){if(max<deepProperty(this.data[i],field,deep)){max=deepProperty(this.data[i],field,deep);result.index=this.data[i].$loki}}else{max=deepProperty(this.data[i],field,deep);result.index=this.data[i].$loki}}result.value=max;return result};Collection.prototype.minRecord=function(field){var i=0,len=this.data.length,deep=isDeepProperty(field),result={index:0,value:undefined},min;for(i;i<len;i+=1){if(min!==undefined){if(min>deepProperty(this.data[i],field,deep)){min=deepProperty(this.data[i],field,deep);result.index=this.data[i].$loki}}else{min=deepProperty(this.data[i],field,deep);result.index=this.data[i].$loki}}result.value=min;return result};Collection.prototype.extractNumerical=function(field){return this.extract(field).map(parseBase10).filter(Number).filter(function(n){return!isNaN(n)})};Collection.prototype.avg=function(field){return average(this.extractNumerical(field))};Collection.prototype.stdDev=function(field){return standardDeviation(this.extractNumerical(field))};Collection.prototype.mode=function(field){var dict={},data=this.extract(field);data.forEach(function(obj){if(dict[obj]){dict[obj]+=1}else{dict[obj]=1}});var max,prop,mode;for(prop in dict){if(max){if(max<dict[prop]){mode=prop}}else{mode=prop;max=dict[prop]}}return mode};Collection.prototype.median=function(field){var values=this.extractNumerical(field);values.sort(sub);var half=Math.floor(values.length/2);if(values.length%2){return values[half]}else{return(values[half-1]+values[half])/2}};function isDeepProperty(field){return field.indexOf(".")!==-1}function parseBase10(num){return parseFloat(num,10)}function isNotUndefined(obj){return obj!==undefined}function add(a,b){return a+b}function sub(a,b){return a-b}function median(values){values.sort(sub);var half=Math.floor(values.length/2);return values.length%2?values[half]:(values[half-1]+values[half])/2}function average(array){return array.reduce(add,0)/array.length}function standardDeviation(values){var avg=average(values);var squareDiffs=values.map(function(value){var diff=value-avg;var sqrDiff=diff*diff;return sqrDiff});var avgSquareDiff=average(squareDiffs);var stdDev=Math.sqrt(avgSquareDiff);return stdDev}function deepProperty(obj,property,isDeep){if(isDeep===false){return obj[property]}var pieces=property.split("."),root=obj;while(pieces.length>0){root=root[pieces.shift()]}return root}function binarySearch(array,item,fun){var lo=0,hi=array.length,compared,mid;while(lo<hi){mid=lo+hi>>1;compared=fun.apply(null,[item,array[mid]]);if(compared===0){return{found:true,index:mid}}else if(compared<0){hi=mid}else{lo=mid+1}}return{found:false,index:hi}}function BSonSort(fun){return function(array,item){return binarySearch(array,item,fun)}}function KeyValueStore(){}KeyValueStore.prototype={keys:[],values:[],sort:function(a,b){return a<b?-1:a>b?1:0},setSort:function(fun){this.bs=new BSonSort(fun)},bs:function(){return new BSonSort(this.sort)},set:function(key,value){var pos=this.bs(this.keys,key);if(pos.found){this.values[pos.index]=value}else{this.keys.splice(pos.index,0,key);this.values.splice(pos.index,0,value)}},get:function(key){return this.values[binarySearch(this.keys,key,this.sort).index]}};function UniqueIndex(uniqueField){this.field=uniqueField;this.keyMap={};this.lokiMap={}}UniqueIndex.prototype.keyMap={};UniqueIndex.prototype.lokiMap={};UniqueIndex.prototype.set=function(obj){var fieldValue=obj[this.field];if(fieldValue!==null&&typeof fieldValue!=="undefined"){if(this.keyMap[fieldValue]){throw new Error("Duplicate key for property "+this.field+": "+fieldValue)}else{this.keyMap[fieldValue]=obj;this.lokiMap[obj.$loki]=fieldValue}}};UniqueIndex.prototype.get=function(key){return this.keyMap[key]};UniqueIndex.prototype.byId=function(id){return this.keyMap[this.lokiMap[id]]};UniqueIndex.prototype.update=function(obj,doc){if(this.lokiMap[obj.$loki]!==doc[this.field]){var old=this.lokiMap[obj.$loki];this.set(doc);this.keyMap[old]=undefined}else{this.keyMap[obj[this.field]]=doc}};UniqueIndex.prototype.remove=function(key){var obj=this.keyMap[key];if(obj!==null&&typeof obj!=="undefined"){this.keyMap[key]=undefined;this.lokiMap[obj.$loki]=undefined}else{throw new Error("Key is not in unique index: "+this.field)}};UniqueIndex.prototype.clear=function(){this.keyMap={};this.lokiMap={}};function ExactIndex(exactField){this.index={};this.field=exactField}ExactIndex.prototype={set:function add(key,val){if(this.index[key]){this.index[key].push(val)}else{this.index[key]=[val]}},remove:function remove(key,val){var idxSet=this.index[key];for(var i in idxSet){if(idxSet[i]==val){idxSet.splice(i,1)}}if(idxSet.length<1){this.index[key]=undefined}},get:function get(key){return this.index[key]},clear:function clear(key){this.index={}}};function SortedIndex(sortedField){this.field=sortedField}SortedIndex.prototype={keys:[],values:[],sort:function(a,b){return a<b?-1:a>b?1:0},bs:function(){return new BSonSort(this.sort)},setSort:function(fun){this.bs=new BSonSort(fun)},set:function(key,value){var pos=binarySearch(this.keys,key,this.sort);if(pos.found){this.values[pos.index].push(value)}else{this.keys.splice(pos.index,0,key);this.values.splice(pos.index,0,[value])}},get:function(key){var bsr=binarySearch(this.keys,key,this.sort);if(bsr.found){return this.values[bsr.index]}else{return[]}},getLt:function(key){var bsr=binarySearch(this.keys,key,this.sort);var pos=bsr.index;if(bsr.found)pos--;return this.getAll(key,0,pos)},getGt:function(key){var bsr=binarySearch(this.keys,key,this.sort);var pos=bsr.index;if(bsr.found)pos++;return this.getAll(key,pos,this.keys.length)},getAll:function(key,start,end){var results=[];for(var i=start;i<end;i++){results=results.concat(this.values[i])}return results},getPos:function(key){return binarySearch(this.keys,key,this.sort)},remove:function(key,value){var pos=binarySearch(this.keys,key,this.sort).index;var idxSet=this.values[pos];for(var i in idxSet){if(idxSet[i]==value)idxSet.splice(i,1)}if(idxSet.length<1){this.keys.splice(pos,1);this.values.splice(pos,1)}},clear:function(){this.keys=[];this.values=[]}};Loki.LokiOps=LokiOps;Loki.Collection=Collection;Loki.KeyValueStore=KeyValueStore;Loki.LokiMemoryAdapter=LokiMemoryAdapter;Loki.LokiPartitioningAdapter=LokiPartitioningAdapter;Loki.LokiLocalStorageAdapter=LokiLocalStorageAdapter;Loki.LokiFsAdapter=LokiFsAdapter;Loki.persistenceAdapters={fs:LokiFsAdapter,localStorage:LokiLocalStorageAdapter};return Loki}()});

/**
 * This js file has been created in order to push chat events to OneTag server
 */

var eGainOneTagUtil = {
    regexForImg: /<\s*img[^>]+>/,
    documentUrl: document.URL,
    chatStartedPrefix: "",
    chatStartedSuffix: "",
    chatEndedPrefix: "",
    chatEndedSuffix: "",
    systemTimeOutMessage: "",
    lastAgentRequestMessageTime: -1,
    lastCustomerRequestMessageTime: -1,
    requiredUrlParams: ["entryPointId", "templateName", "ver", "locale", "eglvrefname", "eglvcaseid", "offercorrelationid", "interactionid", "eglvPriorityChat", "referer", "aid", "sid", "uid", "clientKey"],
    removeURLParameter: function (url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts = url.split('?');
        if (urlparts.length >= 2) {
            var prefix = encodeURIComponent(parameter) + '=';
            var pars = urlparts[1].split(/[&;]/g);
            //reverse iteration as may be destructive
            for (var i = pars.length; i-- > 0; ) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }
            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            return url;
        } else {
            return url;
        }
    },
    /*
     * EGS-39529 : Removing url parameters that are not required to be sent to Onetag and only used for maintaining chat session 
     * 
     */
    cleanIFrameUrl: function () {
        var url = document.URL;
        var urlString = window.location.search.substring(1);
        var urlParams = urlString.split("&");
        for (var i = 0; i < urlParams.length; i++) {
            var param = urlParams[i].split("=");
            var key = param[0];
            var value = param[1];
            if (eGainOneTagUtil.requiredUrlParams.indexOf(key) == -1) {
                url = eGainOneTagUtil.removeURLParameter(url, key);
            }
        }
        eGainOneTagUtil.documentUrl = url;
    },
    loadOneTag: function (chatInitializationData) {
        var EG_ACT_ID = chatInitializationData.oneTagAId;
        (function (e, f) {
            var d, c, b, a = e.createElement("iframe");
            a.src = "about:blank";
            a.id = "egot_iframe";
            a.setAttribute("title", "eGain OneTag - Journey Assistant");
            a.setAttribute("aria-hidden", "true");
            (a.frameElement || a).style.cssText = "width:0;height:0;border:0";
            b = e.getElementsByTagName("script");
            b = b[b.length - 1];
            b.parentNode.insertBefore(a, b);
            try {
                c = a.contentWindow.document;
            } catch (g) {
                d = e.domain, a.src = "javascript:var d=document.open();d.domain='" + d + "';void(0);", c = a.contentWindow.document;
            }
            c.open()._d = function () {
                var a = this.createElement("script");
                d && (this.domain = d);
                a.src = f;
                this.isEGFIF = !0;
                this.body.appendChild(a);
            };
            c.write('<body onload="document._d();">');
            c.close();
        })(document, "//" + chatInitializationData.oneTagServerDomainName + "/onetag/" + EG_ACT_ID);
    },
    pushChatEvent: function (eventType, eventInfo) {
        var EG_CALL_Q = window.EG_CALL_Q || [];
        EG_CALL_Q.push(["send",
            "cht",
            eventType,
            eGainOneTagUtil.documentUrl,
            101,
            eventInfo
        ]);
    },
    pushChatAgentMsg: function (messageHtml) {

        var curTime = Date.now();
        if (eGainOneTagUtil.lastAgentRequestMessageTime == -1) {
            eGainOneTagUtil.lastAgentRequestMessageTime = curTime;
        }
        var agentSideTimeElapsed = curTime - eGainOneTagUtil.lastCustomerRequestMessageTime;
        eGainOneTagUtil.lastAgentRequestMessageTime = curTime;

        /* EGS-43655: Removing personal data from onetag information */
        //var messageToBePushed = eGainOneTagUtil.parseSmileysInMessage(messageHtml);
        eGainOneTagUtil.pushChatEvent("uac", {
            "EventName": "ChatAgentMsg",
            "Time-to-respond": agentSideTimeElapsed,
        });
    },
    pushChatCustomerMsg: function (messageHtml) {
        var curTime = Date.now();
        if (eGainOneTagUtil.lastCustomerRequestMessageTime == -1) {
            eGainOneTagUtil.lastCustomerRequestMessageTime = curTime;
        }
        var customerSideTimeElapsed = curTime - eGainOneTagUtil.lastAgentRequestMessageTime;
        eGainOneTagUtil.lastCustomerRequestMessageTime = curTime;

        /* EGS-43655: Removing personal data from onetag information */
        //var messageToBePushed = eGainOneTagUtil.parseSmileysInMessage(messageHtml);
        eGainOneTagUtil.pushChatEvent("uac", {
            "EventName": "ChatCustomerMsg",
            "Time-to-respond": customerSideTimeElapsed,
        });
    },
    parseSmileysInMessage: function (messageHtml) {
        var messageToBePushed = messageHtml;
        if ((eGainOneTagUtil.regexForImg).test(messageHtml)) {
            var el = document.createElement('el');
            el.innerHTML = messageHtml;
            var smileys = el.getElementsByTagName('img');
            if (smileys) {
                var noOfSmileys = smileys.length;
                for (var i = 0; i < noOfSmileys; i++) {
                    var abridgedImg = "&lt;img alt='"
                            + (smileys[0].getAttribute('alt') || '') + "'&gt;";
                    smileys[0].outerHTML = abridgedImg;
                }
                messageToBePushed = el.innerHTML;
            }
        }
        messageToBePushed = eGain$.trim(eGain$("<div/>").html(messageToBePushed).text());
        return messageToBePushed;
    },
    pushChatSystemMsg: function (messageHtml) {
        if (messageHtml.search(eGainOneTagUtil.chatStartedPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatStartedSuffix) != -1) {
            var mode = (window.location.search.search("video=1") != -1) ? (window.location.search.search("avmode=4") != -1)?"Audio" : "Video" : "Text";
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatEngaged",
                "ChatType": mode
            });
        }
        if (messageHtml.search(eGainOneTagUtil.chatAgentTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatAgentTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Agent"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatQueueTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatQueueTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Queue"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatDeptTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatDeptTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Department"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatEndedPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatEndedSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("uac", {
                "EventName": "ChatExit",
                "Termination-Initiation": "Agent"
            });
        }
        if (messageHtml.search(eGainOneTagUtil.systemTimeOutMessage) != -1) {
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatExit",
                "Termination-Initiation": "System"
            });
        }
    },
    chatAwaitingAgentCaptured: false,
    pushChatAwaitingMsg: function (waitTime) {
        if (this.chatAwaitingAgentCaptured === false){
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatAwaitingAgent",
                "EstimatedWaitTime": waitTime
            });
            this.chatAwaitingAgentCaptured = true;
        }
        return this.chatAwaitingAgentCaptured;
    },
    pushChatEngagedMsg: function () {
        var mode = (window.location.search.search("video=1") != -1) ? "Video" : "Text";
        eGainOneTagUtil.pushChatEvent("aev", {
            "EventName": "ChatEngaged",
            "ChatType": mode
        });
    },
    parseMessages: function (messagingProperty) {
        if (messagingProperty) {
            var mesagingPropertyVariables = messagingProperty.split('\n');
            var foundStartChatString = false;
            var foundEndChatString = false;
            var foundTransferAgentString = false
            var foundTransferQueueString = false;
            var foundTransferDeptString = false;
            var foundsystemTimeOutMsg = false;
            for (i = 0; i < mesagingPropertyVariables.length; i++) {

                if (mesagingPropertyVariables[i].indexOf('agent_join_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatStartedString = eGain$.trim(keyValuePair[1]);
                    var temp = chatStartedString.split('{0}');
                    eGainOneTagUtil.chatStartedPrefix = temp[0];
                    eGainOneTagUtil.chatStartedSuffix = temp[1];
                    foundStartChatString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('agent_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = eGain$.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatAgentTransferPrefix = temp[0];
                    eGainOneTagUtil.chatAgentTransferSuffix = temp[1];
                    foundTransferAgentString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('queue_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = eGain$.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatQueueTransferPrefix = temp[0];
                    eGainOneTagUtil.chatQueueTransferSuffix = temp[1];
                    foundTransferQueueString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('deptt_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = eGain$.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatDeptTransferPrefix = temp[0];
                    eGainOneTagUtil.chatDeptTransferSuffix = temp[1];
                    foundTransferDeptString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('agent_close_session') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatEndedString = eGain$.trim(keyValuePair[1]);
                    var temp = chatEndedString.split('{0}');
                    eGainOneTagUtil.chatEndedPrefix = temp[0];
                    eGainOneTagUtil.chatEndedSuffix = temp[1];
                    foundEndChatString = true;

                }
                else if (mesagingPropertyVariables[i].indexOf('system_close_session') === 0) {
                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    eGainOneTagUtil.systemTimeOutMessage = eGain$.trim(keyValuePair[1]);
                    foundsystemTimeOutMsg = true;
                }
                else if (foundStartChatString === true && foundEndChatString === true && foundsystemTimeOutMsg === true
                        && foundTransferAgentString === true && foundTransferQueueString === true && foundTransferDeptString === true)
                    break;
            }
        }
    },
    disableTracker: function (eventType, eventInfo) {
        //to prevent OneTag Tracker default behaviour
        EG_CALL_Q = window.EG_CALL_Q || [];
        EG_CALL_Q.push(["disableTrackOnLoad"]);
    }
};
/*
CryptoJS v3.0.2
code.google.com/p/crypto-js
(c) 2009-2012 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
var CryptoJS=CryptoJS||function(o,q){var l={},m=l.lib={},n=m.Base=function(){function a(){}return{extend:function(e){a.prototype=this;var c=new a;e&&c.mixIn(e);c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.$super.extend(this)}}}(),j=m.WordArray=n.extend({init:function(a,e){a=
this.words=a||[];this.sigBytes=e!=q?e:4*a.length},toString:function(a){return(a||r).stringify(this)},concat:function(a){var e=this.words,c=a.words,d=this.sigBytes,a=a.sigBytes;this.clamp();if(d%4)for(var b=0;b<a;b++)e[d+b>>>2]|=(c[b>>>2]>>>24-8*(b%4)&255)<<24-8*((d+b)%4);else if(65535<c.length)for(b=0;b<a;b+=4)e[d+b>>>2]=c[b>>>2];else e.push.apply(e,c);this.sigBytes+=a;return this},clamp:function(){var a=this.words,e=this.sigBytes;a[e>>>2]&=4294967295<<32-8*(e%4);a.length=o.ceil(e/4)},clone:function(){var a=
n.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var e=[],c=0;c<a;c+=4)e.push(4294967296*o.random()|0);return j.create(e,a)}}),k=l.enc={},r=k.Hex={stringify:function(a){for(var e=a.words,a=a.sigBytes,c=[],d=0;d<a;d++){var b=e[d>>>2]>>>24-8*(d%4)&255;c.push((b>>>4).toString(16));c.push((b&15).toString(16))}return c.join("")},parse:function(a){for(var b=a.length,c=[],d=0;d<b;d+=2)c[d>>>3]|=parseInt(a.substr(d,2),16)<<24-4*(d%8);return j.create(c,b/2)}},p=k.Latin1={stringify:function(a){for(var b=
a.words,a=a.sigBytes,c=[],d=0;d<a;d++)c.push(String.fromCharCode(b[d>>>2]>>>24-8*(d%4)&255));return c.join("")},parse:function(a){for(var b=a.length,c=[],d=0;d<b;d++)c[d>>>2]|=(a.charCodeAt(d)&255)<<24-8*(d%4);return j.create(c,b)}},h=k.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error("Malformed UTF-8 data");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},b=m.BufferedBlockAlgorithm=n.extend({reset:function(){this._data=j.create();
this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=h.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,c=b.words,d=b.sigBytes,f=this.blockSize,i=d/(4*f),i=a?o.ceil(i):o.max((i|0)-this._minBufferSize,0),a=i*f,d=o.min(4*a,d);if(a){for(var h=0;h<a;h+=f)this._doProcessBlock(c,h);h=c.splice(0,a);b.sigBytes-=d}return j.create(h,d)},clone:function(){var a=n.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});m.Hasher=b.extend({init:function(){this.reset()},
reset:function(){b.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);this._doFinalize();return this._hash},clone:function(){var a=b.clone.call(this);a._hash=this._hash.clone();return a},blockSize:16,_createHelper:function(a){return function(b,c){return a.create(c).finalize(b)}},_createHmacHelper:function(a){return function(b,c){return f.HMAC.create(a,c).finalize(b)}}});var f=l.algo={};return l}(Math);
(function(o){function q(b,f,a,e,c,d,g){b=b+(f&a|~f&e)+c+g;return(b<<d|b>>>32-d)+f}function l(b,f,a,e,c,d,g){b=b+(f&e|a&~e)+c+g;return(b<<d|b>>>32-d)+f}function m(b,f,a,e,c,d,g){b=b+(f^a^e)+c+g;return(b<<d|b>>>32-d)+f}function n(b,f,a,e,c,d,g){b=b+(a^(f|~e))+c+g;return(b<<d|b>>>32-d)+f}var j=CryptoJS,k=j.lib,r=k.WordArray,k=k.Hasher,p=j.algo,h=[];(function(){for(var b=0;64>b;b++)h[b]=4294967296*o.abs(o.sin(b+1))|0})();p=p.MD5=k.extend({_doReset:function(){this._hash=r.create([1732584193,4023233417,
2562383102,271733878])},_doProcessBlock:function(b,f){for(var a=0;16>a;a++){var e=f+a,c=b[e];b[e]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360}for(var e=this._hash.words,c=e[0],d=e[1],g=e[2],i=e[3],a=0;64>a;a+=4)16>a?(c=q(c,d,g,i,b[f+a],7,h[a]),i=q(i,c,d,g,b[f+a+1],12,h[a+1]),g=q(g,i,c,d,b[f+a+2],17,h[a+2]),d=q(d,g,i,c,b[f+a+3],22,h[a+3])):32>a?(c=l(c,d,g,i,b[f+(a+1)%16],5,h[a]),i=l(i,c,d,g,b[f+(a+6)%16],9,h[a+1]),g=l(g,i,c,d,b[f+(a+11)%16],14,h[a+2]),d=l(d,g,i,c,b[f+a%16],20,h[a+3])):48>a?(c=
m(c,d,g,i,b[f+(3*a+5)%16],4,h[a]),i=m(i,c,d,g,b[f+(3*a+8)%16],11,h[a+1]),g=m(g,i,c,d,b[f+(3*a+11)%16],16,h[a+2]),d=m(d,g,i,c,b[f+(3*a+14)%16],23,h[a+3])):(c=n(c,d,g,i,b[f+3*a%16],6,h[a]),i=n(i,c,d,g,b[f+(3*a+7)%16],10,h[a+1]),g=n(g,i,c,d,b[f+(3*a+14)%16],15,h[a+2]),d=n(d,g,i,c,b[f+(3*a+5)%16],21,h[a+3]));e[0]=e[0]+c|0;e[1]=e[1]+d|0;e[2]=e[2]+g|0;e[3]=e[3]+i|0},_doFinalize:function(){var b=this._data,f=b.words,a=8*this._nDataBytes,e=8*b.sigBytes;f[e>>>5]|=128<<24-e%32;f[(e+64>>>9<<4)+14]=(a<<8|a>>>
24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(f.length+1);this._process();b=this._hash.words;for(f=0;4>f;f++)a=b[f],b[f]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360}});j.MD5=k._createHelper(p);j.HmacMD5=k._createHmacHelper(p)})(Math);

/**!

 @license
 handlebars v4.7.7

Copyright (C) 2011-2019 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Handlebars"] = factory();
	else
		root["Handlebars"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsRuntime = __webpack_require__(2);

	var _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);

	// Compiler imports

	var _handlebarsCompilerAst = __webpack_require__(45);

	var _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);

	var _handlebarsCompilerBase = __webpack_require__(46);

	var _handlebarsCompilerCompiler = __webpack_require__(51);

	var _handlebarsCompilerJavascriptCompiler = __webpack_require__(52);

	var _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);

	var _handlebarsCompilerVisitor = __webpack_require__(49);

	var _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);

	var _handlebarsNoConflict = __webpack_require__(44);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	var _create = _handlebarsRuntime2['default'].create;
	function create() {
	  var hb = _create();

	  hb.compile = function (input, options) {
	    return _handlebarsCompilerCompiler.compile(input, options, hb);
	  };
	  hb.precompile = function (input, options) {
	    return _handlebarsCompilerCompiler.precompile(input, options, hb);
	  };

	  hb.AST = _handlebarsCompilerAst2['default'];
	  hb.Compiler = _handlebarsCompilerCompiler.Compiler;
	  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];
	  hb.Parser = _handlebarsCompilerBase.parser;
	  hb.parse = _handlebarsCompilerBase.parse;
	  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst.Visitor = _handlebarsCompilerVisitor2['default'];

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	};

	exports.__esModule = true;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsBase = __webpack_require__(4);

	var base = _interopRequireWildcard(_handlebarsBase);

	// Each of these augment the Handlebars object. No need to setup here.
	// (This is done to easily share code between commonjs and browse envs)

	var _handlebarsSafeString = __webpack_require__(37);

	var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

	var _handlebarsException = __webpack_require__(6);

	var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

	var _handlebarsUtils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_handlebarsUtils);

	var _handlebarsRuntime = __webpack_require__(38);

	var runtime = _interopRequireWildcard(_handlebarsRuntime);

	var _handlebarsNoConflict = __webpack_require__(44);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	// For compatibility and usage outside of module systems, make the Handlebars object a namespace
	function create() {
	  var hb = new base.HandlebarsEnvironment();

	  Utils.extend(hb, base);
	  hb.SafeString = _handlebarsSafeString2['default'];
	  hb.Exception = _handlebarsException2['default'];
	  hb.Utils = Utils;
	  hb.escapeExpression = Utils.escapeExpression;

	  hb.VM = runtime;
	  hb.template = function (spec) {
	    return runtime.template(spec, hb);
	  };

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};

	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	      }
	    }

	    newObj["default"] = obj;
	    return newObj;
	  }
	};

	exports.__esModule = true;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.HandlebarsEnvironment = HandlebarsEnvironment;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _helpers = __webpack_require__(10);

	var _decorators = __webpack_require__(30);

	var _logger = __webpack_require__(32);

	var _logger2 = _interopRequireDefault(_logger);

	var _internalProtoAccess = __webpack_require__(33);

	var VERSION = '4.7.7';
	exports.VERSION = VERSION;
	var COMPILER_REVISION = 8;
	exports.COMPILER_REVISION = COMPILER_REVISION;
	var LAST_COMPATIBLE_COMPILER_REVISION = 7;

	exports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;
	var REVISION_CHANGES = {
	  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
	  2: '== 1.0.0-rc.3',
	  3: '== 1.0.0-rc.4',
	  4: '== 1.x.x',
	  5: '== 2.0.0-alpha.x',
	  6: '>= 2.0.0-beta.1',
	  7: '>= 4.0.0 <4.3.0',
	  8: '>= 4.3.0'
	};

	exports.REVISION_CHANGES = REVISION_CHANGES;
	var objectType = '[object Object]';

	function HandlebarsEnvironment(helpers, partials, decorators) {
	  this.helpers = helpers || {};
	  this.partials = partials || {};
	  this.decorators = decorators || {};

	  _helpers.registerDefaultHelpers(this);
	  _decorators.registerDefaultDecorators(this);
	}

	HandlebarsEnvironment.prototype = {
	  constructor: HandlebarsEnvironment,

	  logger: _logger2['default'],
	  log: _logger2['default'].log,

	  registerHelper: function registerHelper(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple helpers');
	      }
	      _utils.extend(this.helpers, name);
	    } else {
	      this.helpers[name] = fn;
	    }
	  },
	  unregisterHelper: function unregisterHelper(name) {
	    delete this.helpers[name];
	  },

	  registerPartial: function registerPartial(name, partial) {
	    if (_utils.toString.call(name) === objectType) {
	      _utils.extend(this.partials, name);
	    } else {
	      if (typeof partial === 'undefined') {
	        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
	      }
	      this.partials[name] = partial;
	    }
	  },
	  unregisterPartial: function unregisterPartial(name) {
	    delete this.partials[name];
	  },

	  registerDecorator: function registerDecorator(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple decorators');
	      }
	      _utils.extend(this.decorators, name);
	    } else {
	      this.decorators[name] = fn;
	    }
	  },
	  unregisterDecorator: function unregisterDecorator(name) {
	    delete this.decorators[name];
	  },
	  /**
	   * Reset the memory of illegal property accesses that have already been logged.
	   * @deprecated should only be used in handlebars test-cases
	   */
	  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {
	    _internalProtoAccess.resetLoggedProperties();
	  }
	};

	var log = _logger2['default'].log;

	exports.log = log;
	exports.createFrame = _utils.createFrame;
	exports.logger = _logger2['default'];

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.extend = extend;
	exports.indexOf = indexOf;
	exports.escapeExpression = escapeExpression;
	exports.isEmpty = isEmpty;
	exports.createFrame = createFrame;
	exports.blockParams = blockParams;
	exports.appendContextPath = appendContextPath;
	var escape = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#x27;',
	  '`': '&#x60;',
	  '=': '&#x3D;'
	};

	var badChars = /[&<>"'`=]/g,
	    possible = /[&<>"'`=]/;

	function escapeChar(chr) {
	  return escape[chr];
	}

	function extend(obj /* , ...source */) {
	  for (var i = 1; i < arguments.length; i++) {
	    for (var key in arguments[i]) {
	      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
	        obj[key] = arguments[i][key];
	      }
	    }
	  }

	  return obj;
	}

	var toString = Object.prototype.toString;

	exports.toString = toString;
	// Sourced from lodash
	// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
	/* eslint-disable func-style */
	var isFunction = function isFunction(value) {
	  return typeof value === 'function';
	};
	// fallback for older versions of Chrome and Safari
	/* istanbul ignore next */
	if (isFunction(/x/)) {
	  exports.isFunction = isFunction = function (value) {
	    return typeof value === 'function' && toString.call(value) === '[object Function]';
	  };
	}
	exports.isFunction = isFunction;

	/* eslint-enable func-style */

	/* istanbul ignore next */
	var isArray = Array.isArray || function (value) {
	  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
	};

	exports.isArray = isArray;
	// Older IE versions do not directly support indexOf so we must implement our own, sadly.

	function indexOf(array, value) {
	  for (var i = 0, len = array.length; i < len; i++) {
	    if (array[i] === value) {
	      return i;
	    }
	  }
	  return -1;
	}

	function escapeExpression(string) {
	  if (typeof string !== 'string') {
	    // don't escape SafeStrings, since they're already safe
	    if (string && string.toHTML) {
	      return string.toHTML();
	    } else if (string == null) {
	      return '';
	    } else if (!string) {
	      return string + '';
	    }

	    // Force a string conversion as this will be done by the append regardless and
	    // the regex test will do this transparently behind the scenes, causing issues if
	    // an object's to string has escaped characters in it.
	    string = '' + string;
	  }

	  if (!possible.test(string)) {
	    return string;
	  }
	  return string.replace(badChars, escapeChar);
	}

	function isEmpty(value) {
	  if (!value && value !== 0) {
	    return true;
	  } else if (isArray(value) && value.length === 0) {
	    return true;
	  } else {
	    return false;
	  }
	}

	function createFrame(object) {
	  var frame = extend({}, object);
	  frame._parent = object;
	  return frame;
	}

	function blockParams(params, ids) {
	  params.path = ids;
	  return params;
	}

	function appendContextPath(contextPath, id) {
	  return (contextPath ? contextPath + '.' : '') + id;
	}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$defineProperty = __webpack_require__(7)['default'];

	exports.__esModule = true;
	var errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];

	function Exception(message, node) {
	  var loc = node && node.loc,
	      line = undefined,
	      endLineNumber = undefined,
	      column = undefined,
	      endColumn = undefined;

	  if (loc) {
	    line = loc.start.line;
	    endLineNumber = loc.end.line;
	    column = loc.start.column;
	    endColumn = loc.end.column;

	    message += ' - ' + line + ':' + column;
	  }

	  var tmp = Error.prototype.constructor.call(this, message);

	  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
	  for (var idx = 0; idx < errorProps.length; idx++) {
	    this[errorProps[idx]] = tmp[errorProps[idx]];
	  }

	  /* istanbul ignore else */
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, Exception);
	  }

	  try {
	    if (loc) {
	      this.lineNumber = line;
	      this.endLineNumber = endLineNumber;

	      // Work around issue under safari where we can't directly set the column value
	      /* istanbul ignore next */
	      if (_Object$defineProperty) {
	        Object.defineProperty(this, 'column', {
	          value: column,
	          enumerable: true
	        });
	        Object.defineProperty(this, 'endColumn', {
	          value: endColumn,
	          enumerable: true
	        });
	      } else {
	        this.column = column;
	        this.endColumn = endColumn;
	      }
	    }
	  } catch (nop) {
	    /* Ignore if the browser is very particular */
	  }
	}

	Exception.prototype = new Error();

	exports['default'] = Exception;
	module.exports = exports['default'];

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(8), __esModule: true };

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(9);
	module.exports = function defineProperty(it, key, desc){
	  return $.setDesc(it, key, desc);
	};

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultHelpers = registerDefaultHelpers;
	exports.moveHelperToHooks = moveHelperToHooks;

	var _helpersBlockHelperMissing = __webpack_require__(11);

	var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

	var _helpersEach = __webpack_require__(12);

	var _helpersEach2 = _interopRequireDefault(_helpersEach);

	var _helpersHelperMissing = __webpack_require__(25);

	var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

	var _helpersIf = __webpack_require__(26);

	var _helpersIf2 = _interopRequireDefault(_helpersIf);

	var _helpersLog = __webpack_require__(27);

	var _helpersLog2 = _interopRequireDefault(_helpersLog);

	var _helpersLookup = __webpack_require__(28);

	var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

	var _helpersWith = __webpack_require__(29);

	var _helpersWith2 = _interopRequireDefault(_helpersWith);

	function registerDefaultHelpers(instance) {
	  _helpersBlockHelperMissing2['default'](instance);
	  _helpersEach2['default'](instance);
	  _helpersHelperMissing2['default'](instance);
	  _helpersIf2['default'](instance);
	  _helpersLog2['default'](instance);
	  _helpersLookup2['default'](instance);
	  _helpersWith2['default'](instance);
	}

	function moveHelperToHooks(instance, helperName, keepHelper) {
	  if (instance.helpers[helperName]) {
	    instance.hooks[helperName] = instance.helpers[helperName];
	    if (!keepHelper) {
	      delete instance.helpers[helperName];
	    }
	  }
	}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('blockHelperMissing', function (context, options) {
	    var inverse = options.inverse,
	        fn = options.fn;

	    if (context === true) {
	      return fn(this);
	    } else if (context === false || context == null) {
	      return inverse(this);
	    } else if (_utils.isArray(context)) {
	      if (context.length > 0) {
	        if (options.ids) {
	          options.ids = [options.name];
	        }

	        return instance.helpers.each(context, options);
	      } else {
	        return inverse(this);
	      }
	    } else {
	      if (options.data && options.ids) {
	        var data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
	        options = { data: data };
	      }

	      return fn(context, options);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _Object$keys = __webpack_require__(13)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('each', function (context, options) {
	    if (!options) {
	      throw new _exception2['default']('Must pass iterator to #each');
	    }

	    var fn = options.fn,
	        inverse = options.inverse,
	        i = 0,
	        ret = '',
	        data = undefined,
	        contextPath = undefined;

	    if (options.data && options.ids) {
	      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
	    }

	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    if (options.data) {
	      data = _utils.createFrame(options.data);
	    }

	    function execIteration(field, index, last) {
	      if (data) {
	        data.key = field;
	        data.index = index;
	        data.first = index === 0;
	        data.last = !!last;

	        if (contextPath) {
	          data.contextPath = contextPath + field;
	        }
	      }

	      ret = ret + fn(context[field], {
	        data: data,
	        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
	      });
	    }

	    if (context && typeof context === 'object') {
	      if (_utils.isArray(context)) {
	        for (var j = context.length; i < j; i++) {
	          if (i in context) {
	            execIteration(i, i, i === context.length - 1);
	          }
	        }
	      } else if (global.Symbol && context[global.Symbol.iterator]) {
	        var newContext = [];
	        var iterator = context[global.Symbol.iterator]();
	        for (var it = iterator.next(); !it.done; it = iterator.next()) {
	          newContext.push(it.value);
	        }
	        context = newContext;
	        for (var j = context.length; i < j; i++) {
	          execIteration(i, i, i === context.length - 1);
	        }
	      } else {
	        (function () {
	          var priorKey = undefined;

	          _Object$keys(context).forEach(function (key) {
	            // We're running the iterations one step out of sync so we can detect
	            // the last iteration without have to scan the object twice and create
	            // an itermediate keys array.
	            if (priorKey !== undefined) {
	              execIteration(priorKey, i - 1);
	            }
	            priorKey = key;
	            i++;
	          });
	          if (priorKey !== undefined) {
	            execIteration(priorKey, i - 1, true);
	          }
	        })();
	      }
	    }

	    if (i === 0) {
	      ret = inverse(this);
	    }

	    return ret;
	  });
	};

	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(14), __esModule: true };

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(15);
	module.exports = __webpack_require__(21).Object.keys;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(16);

	__webpack_require__(18)('keys', function($keys){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(17);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ }),
/* 17 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(19)
	  , core    = __webpack_require__(21)
	  , fails   = __webpack_require__(24);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(20)
	  , core      = __webpack_require__(21)
	  , ctx       = __webpack_require__(22)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && key in target;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(param){
	        return this instanceof C ? new C(param) : C(param);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
	  }
	};
	// type bitmap
	$export.F = 1;  // forced
	$export.G = 2;  // global
	$export.S = 4;  // static
	$export.P = 8;  // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	module.exports = $export;

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	var core = module.exports = {version: '1.2.6'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(23);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ }),
/* 23 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ }),
/* 24 */
/***/ (function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('helperMissing', function () /* [args, ]options */{
	    if (arguments.length === 1) {
	      // A missing field in a {{foo}} construct.
	      return undefined;
	    } else {
	      // Someone is actually trying to call something, blow up.
	      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('if', function (conditional, options) {
	    if (arguments.length != 2) {
	      throw new _exception2['default']('#if requires exactly one argument');
	    }
	    if (_utils.isFunction(conditional)) {
	      conditional = conditional.call(this);
	    }

	    // Default behavior is to render the positive path if the value is truthy and not empty.
	    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
	    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
	    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
	      return options.inverse(this);
	    } else {
	      return options.fn(this);
	    }
	  });

	  instance.registerHelper('unless', function (conditional, options) {
	    if (arguments.length != 2) {
	      throw new _exception2['default']('#unless requires exactly one argument');
	    }
	    return instance.helpers['if'].call(this, conditional, {
	      fn: options.inverse,
	      inverse: options.fn,
	      hash: options.hash
	    });
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('log', function () /* message, options */{
	    var args = [undefined],
	        options = arguments[arguments.length - 1];
	    for (var i = 0; i < arguments.length - 1; i++) {
	      args.push(arguments[i]);
	    }

	    var level = 1;
	    if (options.hash.level != null) {
	      level = options.hash.level;
	    } else if (options.data && options.data.level != null) {
	      level = options.data.level;
	    }
	    args[0] = level;

	    instance.log.apply(instance, args);
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 28 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('lookup', function (obj, field, options) {
	    if (!obj) {
	      // Note for 5.0: Change to "obj == null" in 5.0
	      return obj;
	    }
	    return options.lookupProperty(obj, field);
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('with', function (context, options) {
	    if (arguments.length != 2) {
	      throw new _exception2['default']('#with requires exactly one argument');
	    }
	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    var fn = options.fn;

	    if (!_utils.isEmpty(context)) {
	      var data = options.data;
	      if (options.data && options.ids) {
	        data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
	      }

	      return fn(context, {
	        data: data,
	        blockParams: _utils.blockParams([context], [data && data.contextPath])
	      });
	    } else {
	      return options.inverse(this);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultDecorators = registerDefaultDecorators;

	var _decoratorsInline = __webpack_require__(31);

	var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

	function registerDefaultDecorators(instance) {
	  _decoratorsInline2['default'](instance);
	}

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerDecorator('inline', function (fn, props, container, options) {
	    var ret = fn;
	    if (!props.partials) {
	      props.partials = {};
	      ret = function (context, options) {
	        // Create a new partials stack frame prior to exec.
	        var original = container.partials;
	        container.partials = _utils.extend({}, original, props.partials);
	        var ret = fn(context, options);
	        container.partials = original;
	        return ret;
	      };
	    }

	    props.partials[options.args[0]] = options.fn;

	    return ret;
	  });
	};

	module.exports = exports['default'];

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var logger = {
	  methodMap: ['debug', 'info', 'warn', 'error'],
	  level: 'info',

	  // Maps a given level value to the `methodMap` indexes above.
	  lookupLevel: function lookupLevel(level) {
	    if (typeof level === 'string') {
	      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
	      if (levelMap >= 0) {
	        level = levelMap;
	      } else {
	        level = parseInt(level, 10);
	      }
	    }

	    return level;
	  },

	  // Can be overridden in the host environment
	  log: function log(level) {
	    level = logger.lookupLevel(level);

	    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
	      var method = logger.methodMap[level];
	      // eslint-disable-next-line no-console
	      if (!console[method]) {
	        method = 'log';
	      }

	      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        message[_key - 1] = arguments[_key];
	      }

	      console[method].apply(console, message); // eslint-disable-line no-console
	    }
	  }
	};

	exports['default'] = logger;
	module.exports = exports['default'];

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$create = __webpack_require__(34)['default'];

	var _Object$keys = __webpack_require__(13)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	exports.__esModule = true;
	exports.createProtoAccessControl = createProtoAccessControl;
	exports.resultIsAllowed = resultIsAllowed;
	exports.resetLoggedProperties = resetLoggedProperties;

	var _createNewLookupObject = __webpack_require__(36);

	var _logger = __webpack_require__(32);

	var logger = _interopRequireWildcard(_logger);

	var loggedProperties = _Object$create(null);

	function createProtoAccessControl(runtimeOptions) {
	  var defaultMethodWhiteList = _Object$create(null);
	  defaultMethodWhiteList['constructor'] = false;
	  defaultMethodWhiteList['__defineGetter__'] = false;
	  defaultMethodWhiteList['__defineSetter__'] = false;
	  defaultMethodWhiteList['__lookupGetter__'] = false;

	  var defaultPropertyWhiteList = _Object$create(null);
	  // eslint-disable-next-line no-proto
	  defaultPropertyWhiteList['__proto__'] = false;

	  return {
	    properties: {
	      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),
	      defaultValue: runtimeOptions.allowProtoPropertiesByDefault
	    },
	    methods: {
	      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),
	      defaultValue: runtimeOptions.allowProtoMethodsByDefault
	    }
	  };
	}

	function resultIsAllowed(result, protoAccessControl, propertyName) {
	  if (typeof result === 'function') {
	    return checkWhiteList(protoAccessControl.methods, propertyName);
	  } else {
	    return checkWhiteList(protoAccessControl.properties, propertyName);
	  }
	}

	function checkWhiteList(protoAccessControlForType, propertyName) {
	  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {
	    return protoAccessControlForType.whitelist[propertyName] === true;
	  }
	  if (protoAccessControlForType.defaultValue !== undefined) {
	    return protoAccessControlForType.defaultValue;
	  }
	  logUnexpecedPropertyAccessOnce(propertyName);
	  return false;
	}

	function logUnexpecedPropertyAccessOnce(propertyName) {
	  if (loggedProperties[propertyName] !== true) {
	    loggedProperties[propertyName] = true;
	    logger.log('error', 'Handlebars: Access has been denied to resolve the property "' + propertyName + '" because it is not an "own property" of its parent.\n' + 'You can add a runtime option to disable the check or this warning:\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');
	  }
	}

	function resetLoggedProperties() {
	  _Object$keys(loggedProperties).forEach(function (propertyName) {
	    delete loggedProperties[propertyName];
	  });
	}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(35), __esModule: true };

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(9);
	module.exports = function create(P, D){
	  return $.create(P, D);
	};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$create = __webpack_require__(34)['default'];

	exports.__esModule = true;
	exports.createNewLookupObject = createNewLookupObject;

	var _utils = __webpack_require__(5);

	/**
	 * Create a new object with "null"-prototype to avoid truthy results on prototype properties.
	 * The resulting object can be used with "object[property]" to check if a property exists
	 * @param {...object} sources a varargs parameter of source objects that will be merged
	 * @returns {object}
	 */

	function createNewLookupObject() {
	  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {
	    sources[_key] = arguments[_key];
	  }

	  return _utils.extend.apply(undefined, [_Object$create(null)].concat(sources));
	}

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	// Build out our basic SafeString type
	'use strict';

	exports.__esModule = true;
	function SafeString(string) {
	  this.string = string;
	}

	SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
	  return '' + this.string;
	};

	exports['default'] = SafeString;
	module.exports = exports['default'];

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$seal = __webpack_require__(39)['default'];

	var _Object$keys = __webpack_require__(13)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.checkRevision = checkRevision;
	exports.template = template;
	exports.wrapProgram = wrapProgram;
	exports.resolvePartial = resolvePartial;
	exports.invokePartial = invokePartial;
	exports.noop = noop;

	var _utils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_utils);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _base = __webpack_require__(4);

	var _helpers = __webpack_require__(10);

	var _internalWrapHelper = __webpack_require__(43);

	var _internalProtoAccess = __webpack_require__(33);

	function checkRevision(compilerInfo) {
	  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
	      currentRevision = _base.COMPILER_REVISION;

	  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {
	    return;
	  }

	  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {
	    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
	        compilerVersions = _base.REVISION_CHANGES[compilerRevision];
	    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
	  } else {
	    // Use the embedded version info since the runtime doesn't know about this revision yet
	    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
	  }
	}

	function template(templateSpec, env) {
	  /* istanbul ignore next */
	  if (!env) {
	    throw new _exception2['default']('No environment passed to template');
	  }
	  if (!templateSpec || !templateSpec.main) {
	    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
	  }

	  templateSpec.main.decorator = templateSpec.main_d;

	  // Note: Using env.VM references rather than local var references throughout this section to allow
	  // for external users to override these as pseudo-supported APIs.
	  env.VM.checkRevision(templateSpec.compiler);

	  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)
	  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;

	  function invokePartialWrapper(partial, context, options) {
	    if (options.hash) {
	      context = Utils.extend({}, context, options.hash);
	      if (options.ids) {
	        options.ids[0] = true;
	      }
	    }
	    partial = env.VM.resolvePartial.call(this, partial, context, options);

	    var extendedOptions = Utils.extend({}, options, {
	      hooks: this.hooks,
	      protoAccessControl: this.protoAccessControl
	    });

	    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);

	    if (result == null && env.compile) {
	      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
	      result = options.partials[options.name](context, extendedOptions);
	    }
	    if (result != null) {
	      if (options.indent) {
	        var lines = result.split('\n');
	        for (var i = 0, l = lines.length; i < l; i++) {
	          if (!lines[i] && i + 1 === l) {
	            break;
	          }

	          lines[i] = options.indent + lines[i];
	        }
	        result = lines.join('\n');
	      }
	      return result;
	    } else {
	      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
	    }
	  }

	  // Just add water
	  var container = {
	    strict: function strict(obj, name, loc) {
	      if (!obj || !(name in obj)) {
	        throw new _exception2['default']('"' + name + '" not defined in ' + obj, {
	          loc: loc
	        });
	      }
	      return container.lookupProperty(obj, name);
	    },
	    lookupProperty: function lookupProperty(parent, propertyName) {
	      var result = parent[propertyName];
	      if (result == null) {
	        return result;
	      }
	      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
	        return result;
	      }

	      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {
	        return result;
	      }
	      return undefined;
	    },
	    lookup: function lookup(depths, name) {
	      var len = depths.length;
	      for (var i = 0; i < len; i++) {
	        var result = depths[i] && container.lookupProperty(depths[i], name);
	        if (result != null) {
	          return depths[i][name];
	        }
	      }
	    },
	    lambda: function lambda(current, context) {
	      return typeof current === 'function' ? current.call(context) : current;
	    },

	    escapeExpression: Utils.escapeExpression,
	    invokePartial: invokePartialWrapper,

	    fn: function fn(i) {
	      var ret = templateSpec[i];
	      ret.decorator = templateSpec[i + '_d'];
	      return ret;
	    },

	    programs: [],
	    program: function program(i, data, declaredBlockParams, blockParams, depths) {
	      var programWrapper = this.programs[i],
	          fn = this.fn(i);
	      if (data || depths || blockParams || declaredBlockParams) {
	        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
	      } else if (!programWrapper) {
	        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
	      }
	      return programWrapper;
	    },

	    data: function data(value, depth) {
	      while (value && depth--) {
	        value = value._parent;
	      }
	      return value;
	    },
	    mergeIfNeeded: function mergeIfNeeded(param, common) {
	      var obj = param || common;

	      if (param && common && param !== common) {
	        obj = Utils.extend({}, common, param);
	      }

	      return obj;
	    },
	    // An empty object to use as replacement for null-contexts
	    nullContext: _Object$seal({}),

	    noop: env.VM.noop,
	    compilerInfo: templateSpec.compiler
	  };

	  function ret(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var data = options.data;

	    ret._setup(options);
	    if (!options.partial && templateSpec.useData) {
	      data = initData(context, data);
	    }
	    var depths = undefined,
	        blockParams = templateSpec.useBlockParams ? [] : undefined;
	    if (templateSpec.useDepths) {
	      if (options.depths) {
	        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;
	      } else {
	        depths = [context];
	      }
	    }

	    function main(context /*, options*/) {
	      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
	    }

	    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
	    return main(context, options);
	  }

	  ret.isTop = true;

	  ret._setup = function (options) {
	    if (!options.partial) {
	      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);
	      wrapHelpersToPassLookupProperty(mergedHelpers, container);
	      container.helpers = mergedHelpers;

	      if (templateSpec.usePartial) {
	        // Use mergeIfNeeded here to prevent compiling global partials multiple times
	        container.partials = container.mergeIfNeeded(options.partials, env.partials);
	      }
	      if (templateSpec.usePartial || templateSpec.useDecorators) {
	        container.decorators = Utils.extend({}, env.decorators, options.decorators);
	      }

	      container.hooks = {};
	      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);

	      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;
	      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);
	      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);
	    } else {
	      container.protoAccessControl = options.protoAccessControl; // internal option
	      container.helpers = options.helpers;
	      container.partials = options.partials;
	      container.decorators = options.decorators;
	      container.hooks = options.hooks;
	    }
	  };

	  ret._child = function (i, data, blockParams, depths) {
	    if (templateSpec.useBlockParams && !blockParams) {
	      throw new _exception2['default']('must pass block params');
	    }
	    if (templateSpec.useDepths && !depths) {
	      throw new _exception2['default']('must pass parent depths');
	    }

	    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
	  };
	  return ret;
	}

	function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
	  function prog(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var currentDepths = depths;
	    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {
	      currentDepths = [context].concat(depths);
	    }

	    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
	  }

	  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

	  prog.program = i;
	  prog.depth = depths ? depths.length : 0;
	  prog.blockParams = declaredBlockParams || 0;
	  return prog;
	}

	/**
	 * This is currently part of the official API, therefore implementation details should not be changed.
	 */

	function resolvePartial(partial, context, options) {
	  if (!partial) {
	    if (options.name === '@partial-block') {
	      partial = options.data['partial-block'];
	    } else {
	      partial = options.partials[options.name];
	    }
	  } else if (!partial.call && !options.name) {
	    // This is a dynamic partial that returned a string
	    options.name = partial;
	    partial = options.partials[partial];
	  }
	  return partial;
	}

	function invokePartial(partial, context, options) {
	  // Use the current closure context to save the partial-block if this partial
	  var currentPartialBlock = options.data && options.data['partial-block'];
	  options.partial = true;
	  if (options.ids) {
	    options.data.contextPath = options.ids[0] || options.data.contextPath;
	  }

	  var partialBlock = undefined;
	  if (options.fn && options.fn !== noop) {
	    (function () {
	      options.data = _base.createFrame(options.data);
	      // Wrapper function to get access to currentPartialBlock from the closure
	      var fn = options.fn;
	      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {
	        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	        // Restore the partial-block from the closure for the execution of the block
	        // i.e. the part inside the block of the partial call.
	        options.data = _base.createFrame(options.data);
	        options.data['partial-block'] = currentPartialBlock;
	        return fn(context, options);
	      };
	      if (fn.partials) {
	        options.partials = Utils.extend({}, options.partials, fn.partials);
	      }
	    })();
	  }

	  if (partial === undefined && partialBlock) {
	    partial = partialBlock;
	  }

	  if (partial === undefined) {
	    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
	  } else if (partial instanceof Function) {
	    return partial(context, options);
	  }
	}

	function noop() {
	  return '';
	}

	function initData(context, data) {
	  if (!data || !('root' in data)) {
	    data = data ? _base.createFrame(data) : {};
	    data.root = context;
	  }
	  return data;
	}

	function executeDecorators(fn, prog, container, depths, data, blockParams) {
	  if (fn.decorator) {
	    var props = {};
	    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
	    Utils.extend(prog, props);
	  }
	  return prog;
	}

	function wrapHelpersToPassLookupProperty(mergedHelpers, container) {
	  _Object$keys(mergedHelpers).forEach(function (helperName) {
	    var helper = mergedHelpers[helperName];
	    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);
	  });
	}

	function passLookupPropertyOption(helper, container) {
	  var lookupProperty = container.lookupProperty;
	  return _internalWrapHelper.wrapHelper(helper, function (options) {
	    return Utils.extend({ lookupProperty: lookupProperty }, options);
	  });
	}

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(40), __esModule: true };

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(41);
	module.exports = __webpack_require__(21).Object.seal;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(42);

	__webpack_require__(18)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(it) : it;
	  };
	});

/***/ }),
/* 42 */
/***/ (function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ }),
/* 43 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.wrapHelper = wrapHelper;

	function wrapHelper(helper, transformOptionsFn) {
	  if (typeof helper !== 'function') {
	    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639
	    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.
	    return helper;
	  }
	  var wrapper = function wrapper() /* dynamic arguments */{
	    var options = arguments[arguments.length - 1];
	    arguments[arguments.length - 1] = transformOptionsFn(options);
	    return helper.apply(this, arguments);
	  };
	  return wrapper;
	}

/***/ }),
/* 44 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	exports['default'] = function (Handlebars) {
	  /* istanbul ignore next */
	  var root = typeof global !== 'undefined' ? global : window,
	      $Handlebars = root.Handlebars;
	  /* istanbul ignore next */
	  Handlebars.noConflict = function () {
	    if (root.Handlebars === Handlebars) {
	      root.Handlebars = $Handlebars;
	    }
	    return Handlebars;
	  };
	};

	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 45 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var AST = {
	  // Public API used to evaluate derived attributes regarding AST nodes
	  helpers: {
	    // a mustache is definitely a helper if:
	    // * it is an eligible helper, and
	    // * it has at least one parameter or hash segment
	    helperExpression: function helperExpression(node) {
	      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);
	    },

	    scopedId: function scopedId(path) {
	      return (/^\.|this\b/.test(path.original)
	      );
	    },

	    // an ID is simple if it only has one part, and that part is not
	    // `..` or `this`.
	    simpleId: function simpleId(path) {
	      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
	    }
	  }
	};

	// Must be exported as an object rather than the root of the module as the jison lexer
	// must modify the object to operate properly.
	exports['default'] = AST;
	module.exports = exports['default'];

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	exports.__esModule = true;
	exports.parseWithoutProcessing = parseWithoutProcessing;
	exports.parse = parse;

	var _parser = __webpack_require__(47);

	var _parser2 = _interopRequireDefault(_parser);

	var _whitespaceControl = __webpack_require__(48);

	var _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);

	var _helpers = __webpack_require__(50);

	var Helpers = _interopRequireWildcard(_helpers);

	var _utils = __webpack_require__(5);

	exports.parser = _parser2['default'];

	var yy = {};
	_utils.extend(yy, Helpers);

	function parseWithoutProcessing(input, options) {
	  // Just return if an already-compiled AST was passed in.
	  if (input.type === 'Program') {
	    return input;
	  }

	  _parser2['default'].yy = yy;

	  // Altering the shared object here, but this is ok as parser is a sync operation
	  yy.locInfo = function (locInfo) {
	    return new yy.SourceLocation(options && options.srcName, locInfo);
	  };

	  var ast = _parser2['default'].parse(input);

	  return ast;
	}

	function parse(input, options) {
	  var ast = parseWithoutProcessing(input, options);
	  var strip = new _whitespaceControl2['default'](options);

	  return strip.accept(ast);
	}

/***/ }),
/* 47 */
/***/ (function(module, exports) {

	// File ignored in coverage tests via setting in .istanbul.yml
	/* Jison generated parser */
	"use strict";

	exports.__esModule = true;
	var handlebars = (function () {
	    var parser = { trace: function trace() {},
	        yy: {},
	        symbols_: { "error": 2, "root": 3, "program": 4, "EOF": 5, "program_repetition0": 6, "statement": 7, "mustache": 8, "block": 9, "rawBlock": 10, "partial": 11, "partialBlock": 12, "content": 13, "COMMENT": 14, "CONTENT": 15, "openRawBlock": 16, "rawBlock_repetition0": 17, "END_RAW_BLOCK": 18, "OPEN_RAW_BLOCK": 19, "helperName": 20, "openRawBlock_repetition0": 21, "openRawBlock_option0": 22, "CLOSE_RAW_BLOCK": 23, "openBlock": 24, "block_option0": 25, "closeBlock": 26, "openInverse": 27, "block_option1": 28, "OPEN_BLOCK": 29, "openBlock_repetition0": 30, "openBlock_option0": 31, "openBlock_option1": 32, "CLOSE": 33, "OPEN_INVERSE": 34, "openInverse_repetition0": 35, "openInverse_option0": 36, "openInverse_option1": 37, "openInverseChain": 38, "OPEN_INVERSE_CHAIN": 39, "openInverseChain_repetition0": 40, "openInverseChain_option0": 41, "openInverseChain_option1": 42, "inverseAndProgram": 43, "INVERSE": 44, "inverseChain": 45, "inverseChain_option0": 46, "OPEN_ENDBLOCK": 47, "OPEN": 48, "mustache_repetition0": 49, "mustache_option0": 50, "OPEN_UNESCAPED": 51, "mustache_repetition1": 52, "mustache_option1": 53, "CLOSE_UNESCAPED": 54, "OPEN_PARTIAL": 55, "partialName": 56, "partial_repetition0": 57, "partial_option0": 58, "openPartialBlock": 59, "OPEN_PARTIAL_BLOCK": 60, "openPartialBlock_repetition0": 61, "openPartialBlock_option0": 62, "param": 63, "sexpr": 64, "OPEN_SEXPR": 65, "sexpr_repetition0": 66, "sexpr_option0": 67, "CLOSE_SEXPR": 68, "hash": 69, "hash_repetition_plus0": 70, "hashSegment": 71, "ID": 72, "EQUALS": 73, "blockParams": 74, "OPEN_BLOCK_PARAMS": 75, "blockParams_repetition_plus0": 76, "CLOSE_BLOCK_PARAMS": 77, "path": 78, "dataName": 79, "STRING": 80, "NUMBER": 81, "BOOLEAN": 82, "UNDEFINED": 83, "NULL": 84, "DATA": 85, "pathSegments": 86, "SEP": 87, "$accept": 0, "$end": 1 },
	        terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" },
	        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
	        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {

	            var $0 = $$.length - 1;
	            switch (yystate) {
	                case 1:
	                    return $$[$0 - 1];
	                    break;
	                case 2:
	                    this.$ = yy.prepareProgram($$[$0]);
	                    break;
	                case 3:
	                    this.$ = $$[$0];
	                    break;
	                case 4:
	                    this.$ = $$[$0];
	                    break;
	                case 5:
	                    this.$ = $$[$0];
	                    break;
	                case 6:
	                    this.$ = $$[$0];
	                    break;
	                case 7:
	                    this.$ = $$[$0];
	                    break;
	                case 8:
	                    this.$ = $$[$0];
	                    break;
	                case 9:
	                    this.$ = {
	                        type: 'CommentStatement',
	                        value: yy.stripComment($$[$0]),
	                        strip: yy.stripFlags($$[$0], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 10:
	                    this.$ = {
	                        type: 'ContentStatement',
	                        original: $$[$0],
	                        value: $$[$0],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 11:
	                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 12:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
	                    break;
	                case 13:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
	                    break;
	                case 14:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
	                    break;
	                case 15:
	                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 16:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 17:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 18:
	                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
	                    break;
	                case 19:
	                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
	                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
	                    program.chained = true;

	                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

	                    break;
	                case 20:
	                    this.$ = $$[$0];
	                    break;
	                case 21:
	                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
	                    break;
	                case 22:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 23:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 24:
	                    this.$ = {
	                        type: 'PartialStatement',
	                        name: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        indent: '',
	                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 25:
	                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 26:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
	                    break;
	                case 27:
	                    this.$ = $$[$0];
	                    break;
	                case 28:
	                    this.$ = $$[$0];
	                    break;
	                case 29:
	                    this.$ = {
	                        type: 'SubExpression',
	                        path: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 30:
	                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 31:
	                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 32:
	                    this.$ = yy.id($$[$0 - 1]);
	                    break;
	                case 33:
	                    this.$ = $$[$0];
	                    break;
	                case 34:
	                    this.$ = $$[$0];
	                    break;
	                case 35:
	                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 36:
	                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
	                    break;
	                case 37:
	                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };
	                    break;
	                case 38:
	                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };
	                    break;
	                case 39:
	                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };
	                    break;
	                case 40:
	                    this.$ = $$[$0];
	                    break;
	                case 41:
	                    this.$ = $$[$0];
	                    break;
	                case 42:
	                    this.$ = yy.preparePath(true, $$[$0], this._$);
	                    break;
	                case 43:
	                    this.$ = yy.preparePath(false, $$[$0], this._$);
	                    break;
	                case 44:
	                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
	                    break;
	                case 45:
	                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
	                    break;
	                case 46:
	                    this.$ = [];
	                    break;
	                case 47:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 48:
	                    this.$ = [];
	                    break;
	                case 49:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 50:
	                    this.$ = [];
	                    break;
	                case 51:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 58:
	                    this.$ = [];
	                    break;
	                case 59:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 64:
	                    this.$ = [];
	                    break;
	                case 65:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 70:
	                    this.$ = [];
	                    break;
	                case 71:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 78:
	                    this.$ = [];
	                    break;
	                case 79:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 82:
	                    this.$ = [];
	                    break;
	                case 83:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 86:
	                    this.$ = [];
	                    break;
	                case 87:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 90:
	                    this.$ = [];
	                    break;
	                case 91:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 94:
	                    this.$ = [];
	                    break;
	                case 95:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 98:
	                    this.$ = [$$[$0]];
	                    break;
	                case 99:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 100:
	                    this.$ = [$$[$0]];
	                    break;
	                case 101:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	            }
	        },
	        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],
	        defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] },
	        parseError: function parseError(str, hash) {
	            throw new Error(str);
	        },
	        parse: function parse(input) {
	            var self = this,
	                stack = [0],
	                vstack = [null],
	                lstack = [],
	                table = this.table,
	                yytext = "",
	                yylineno = 0,
	                yyleng = 0,
	                recovering = 0,
	                TERROR = 2,
	                EOF = 1;
	            this.lexer.setInput(input);
	            this.lexer.yy = this.yy;
	            this.yy.lexer = this.lexer;
	            this.yy.parser = this;
	            if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
	            var yyloc = this.lexer.yylloc;
	            lstack.push(yyloc);
	            var ranges = this.lexer.options && this.lexer.options.ranges;
	            if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
	            function popStack(n) {
	                stack.length = stack.length - 2 * n;
	                vstack.length = vstack.length - n;
	                lstack.length = lstack.length - n;
	            }
	            function lex() {
	                var token;
	                token = self.lexer.lex() || 1;
	                if (typeof token !== "number") {
	                    token = self.symbols_[token] || token;
	                }
	                return token;
	            }
	            var symbol,
	                preErrorSymbol,
	                state,
	                action,
	                a,
	                r,
	                yyval = {},
	                p,
	                len,
	                newState,
	                expected;
	            while (true) {
	                state = stack[stack.length - 1];
	                if (this.defaultActions[state]) {
	                    action = this.defaultActions[state];
	                } else {
	                    if (symbol === null || typeof symbol == "undefined") {
	                        symbol = lex();
	                    }
	                    action = table[state] && table[state][symbol];
	                }
	                if (typeof action === "undefined" || !action.length || !action[0]) {
	                    var errStr = "";
	                    if (!recovering) {
	                        expected = [];
	                        for (p in table[state]) if (this.terminals_[p] && p > 2) {
	                            expected.push("'" + this.terminals_[p] + "'");
	                        }
	                        if (this.lexer.showPosition) {
	                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
	                        } else {
	                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
	                        }
	                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
	                    }
	                }
	                if (action[0] instanceof Array && action.length > 1) {
	                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
	                }
	                switch (action[0]) {
	                    case 1:
	                        stack.push(symbol);
	                        vstack.push(this.lexer.yytext);
	                        lstack.push(this.lexer.yylloc);
	                        stack.push(action[1]);
	                        symbol = null;
	                        if (!preErrorSymbol) {
	                            yyleng = this.lexer.yyleng;
	                            yytext = this.lexer.yytext;
	                            yylineno = this.lexer.yylineno;
	                            yyloc = this.lexer.yylloc;
	                            if (recovering > 0) recovering--;
	                        } else {
	                            symbol = preErrorSymbol;
	                            preErrorSymbol = null;
	                        }
	                        break;
	                    case 2:
	                        len = this.productions_[action[1]][1];
	                        yyval.$ = vstack[vstack.length - len];
	                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
	                        if (ranges) {
	                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
	                        }
	                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
	                        if (typeof r !== "undefined") {
	                            return r;
	                        }
	                        if (len) {
	                            stack = stack.slice(0, -1 * len * 2);
	                            vstack = vstack.slice(0, -1 * len);
	                            lstack = lstack.slice(0, -1 * len);
	                        }
	                        stack.push(this.productions_[action[1]][0]);
	                        vstack.push(yyval.$);
	                        lstack.push(yyval._$);
	                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
	                        stack.push(newState);
	                        break;
	                    case 3:
	                        return true;
	                }
	            }
	            return true;
	        }
	    };
	    /* Jison generated lexer */
	    var lexer = (function () {
	        var lexer = { EOF: 1,
	            parseError: function parseError(str, hash) {
	                if (this.yy.parser) {
	                    this.yy.parser.parseError(str, hash);
	                } else {
	                    throw new Error(str);
	                }
	            },
	            setInput: function setInput(input) {
	                this._input = input;
	                this._more = this._less = this.done = false;
	                this.yylineno = this.yyleng = 0;
	                this.yytext = this.matched = this.match = '';
	                this.conditionStack = ['INITIAL'];
	                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
	                if (this.options.ranges) this.yylloc.range = [0, 0];
	                this.offset = 0;
	                return this;
	            },
	            input: function input() {
	                var ch = this._input[0];
	                this.yytext += ch;
	                this.yyleng++;
	                this.offset++;
	                this.match += ch;
	                this.matched += ch;
	                var lines = ch.match(/(?:\r\n?|\n).*/g);
	                if (lines) {
	                    this.yylineno++;
	                    this.yylloc.last_line++;
	                } else {
	                    this.yylloc.last_column++;
	                }
	                if (this.options.ranges) this.yylloc.range[1]++;

	                this._input = this._input.slice(1);
	                return ch;
	            },
	            unput: function unput(ch) {
	                var len = ch.length;
	                var lines = ch.split(/(?:\r\n?|\n)/g);

	                this._input = ch + this._input;
	                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
	                //this.yyleng -= len;
	                this.offset -= len;
	                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
	                this.match = this.match.substr(0, this.match.length - 1);
	                this.matched = this.matched.substr(0, this.matched.length - 1);

	                if (lines.length - 1) this.yylineno -= lines.length - 1;
	                var r = this.yylloc.range;

	                this.yylloc = { first_line: this.yylloc.first_line,
	                    last_line: this.yylineno + 1,
	                    first_column: this.yylloc.first_column,
	                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
	                };

	                if (this.options.ranges) {
	                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
	                }
	                return this;
	            },
	            more: function more() {
	                this._more = true;
	                return this;
	            },
	            less: function less(n) {
	                this.unput(this.match.slice(n));
	            },
	            pastInput: function pastInput() {
	                var past = this.matched.substr(0, this.matched.length - this.match.length);
	                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
	            },
	            upcomingInput: function upcomingInput() {
	                var next = this.match;
	                if (next.length < 20) {
	                    next += this._input.substr(0, 20 - next.length);
	                }
	                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
	            },
	            showPosition: function showPosition() {
	                var pre = this.pastInput();
	                var c = new Array(pre.length + 1).join("-");
	                return pre + this.upcomingInput() + "\n" + c + "^";
	            },
	            next: function next() {
	                if (this.done) {
	                    return this.EOF;
	                }
	                if (!this._input) this.done = true;

	                var token, match, tempMatch, index, col, lines;
	                if (!this._more) {
	                    this.yytext = '';
	                    this.match = '';
	                }
	                var rules = this._currentRules();
	                for (var i = 0; i < rules.length; i++) {
	                    tempMatch = this._input.match(this.rules[rules[i]]);
	                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
	                        match = tempMatch;
	                        index = i;
	                        if (!this.options.flex) break;
	                    }
	                }
	                if (match) {
	                    lines = match[0].match(/(?:\r\n?|\n).*/g);
	                    if (lines) this.yylineno += lines.length;
	                    this.yylloc = { first_line: this.yylloc.last_line,
	                        last_line: this.yylineno + 1,
	                        first_column: this.yylloc.last_column,
	                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
	                    this.yytext += match[0];
	                    this.match += match[0];
	                    this.matches = match;
	                    this.yyleng = this.yytext.length;
	                    if (this.options.ranges) {
	                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
	                    }
	                    this._more = false;
	                    this._input = this._input.slice(match[0].length);
	                    this.matched += match[0];
	                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
	                    if (this.done && this._input) this.done = false;
	                    if (token) return token;else return;
	                }
	                if (this._input === "") {
	                    return this.EOF;
	                } else {
	                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), { text: "", token: null, line: this.yylineno });
	                }
	            },
	            lex: function lex() {
	                var r = this.next();
	                if (typeof r !== 'undefined') {
	                    return r;
	                } else {
	                    return this.lex();
	                }
	            },
	            begin: function begin(condition) {
	                this.conditionStack.push(condition);
	            },
	            popState: function popState() {
	                return this.conditionStack.pop();
	            },
	            _currentRules: function _currentRules() {
	                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
	            },
	            topState: function topState() {
	                return this.conditionStack[this.conditionStack.length - 2];
	            },
	            pushState: function begin(condition) {
	                this.begin(condition);
	            } };
	        lexer.options = {};
	        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {

	            function strip(start, end) {
	                return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);
	            }

	            var YYSTATE = YY_START;
	            switch ($avoiding_name_collisions) {
	                case 0:
	                    if (yy_.yytext.slice(-2) === "\\\\") {
	                        strip(0, 1);
	                        this.begin("mu");
	                    } else if (yy_.yytext.slice(-1) === "\\") {
	                        strip(0, 1);
	                        this.begin("emu");
	                    } else {
	                        this.begin("mu");
	                    }
	                    if (yy_.yytext) return 15;

	                    break;
	                case 1:
	                    return 15;
	                    break;
	                case 2:
	                    this.popState();
	                    return 15;

	                    break;
	                case 3:
	                    this.begin('raw');return 15;
	                    break;
	                case 4:
	                    this.popState();
	                    // Should be using `this.topState()` below, but it currently
	                    // returns the second top instead of the first top. Opened an
	                    // issue about it at https://github.com/zaach/jison/issues/291
	                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {
	                        return 15;
	                    } else {
	                        strip(5, 9);
	                        return 'END_RAW_BLOCK';
	                    }

	                    break;
	                case 5:
	                    return 15;
	                    break;
	                case 6:
	                    this.popState();
	                    return 14;

	                    break;
	                case 7:
	                    return 65;
	                    break;
	                case 8:
	                    return 68;
	                    break;
	                case 9:
	                    return 19;
	                    break;
	                case 10:
	                    this.popState();
	                    this.begin('raw');
	                    return 23;

	                    break;
	                case 11:
	                    return 55;
	                    break;
	                case 12:
	                    return 60;
	                    break;
	                case 13:
	                    return 29;
	                    break;
	                case 14:
	                    return 47;
	                    break;
	                case 15:
	                    this.popState();return 44;
	                    break;
	                case 16:
	                    this.popState();return 44;
	                    break;
	                case 17:
	                    return 34;
	                    break;
	                case 18:
	                    return 39;
	                    break;
	                case 19:
	                    return 51;
	                    break;
	                case 20:
	                    return 48;
	                    break;
	                case 21:
	                    this.unput(yy_.yytext);
	                    this.popState();
	                    this.begin('com');

	                    break;
	                case 22:
	                    this.popState();
	                    return 14;

	                    break;
	                case 23:
	                    return 48;
	                    break;
	                case 24:
	                    return 73;
	                    break;
	                case 25:
	                    return 72;
	                    break;
	                case 26:
	                    return 72;
	                    break;
	                case 27:
	                    return 87;
	                    break;
	                case 28:
	                    // ignore whitespace
	                    break;
	                case 29:
	                    this.popState();return 54;
	                    break;
	                case 30:
	                    this.popState();return 33;
	                    break;
	                case 31:
	                    yy_.yytext = strip(1, 2).replace(/\\"/g, '"');return 80;
	                    break;
	                case 32:
	                    yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 80;
	                    break;
	                case 33:
	                    return 85;
	                    break;
	                case 34:
	                    return 82;
	                    break;
	                case 35:
	                    return 82;
	                    break;
	                case 36:
	                    return 83;
	                    break;
	                case 37:
	                    return 84;
	                    break;
	                case 38:
	                    return 81;
	                    break;
	                case 39:
	                    return 75;
	                    break;
	                case 40:
	                    return 77;
	                    break;
	                case 41:
	                    return 72;
	                    break;
	                case 42:
	                    yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');return 72;
	                    break;
	                case 43:
	                    return 'INVALID';
	                    break;
	                case 44:
	                    return 5;
	                    break;
	            }
	        };
	        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]+?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
	        lexer.conditions = { "mu": { "rules": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inclusive": false }, "emu": { "rules": [2], "inclusive": false }, "com": { "rules": [6], "inclusive": false }, "raw": { "rules": [3, 4, 5], "inclusive": false }, "INITIAL": { "rules": [0, 1, 44], "inclusive": true } };
	        return lexer;
	    })();
	    parser.lexer = lexer;
	    function Parser() {
	        this.yy = {};
	    }Parser.prototype = parser;parser.Parser = Parser;
	    return new Parser();
	})();exports["default"] = handlebars;
	module.exports = exports["default"];

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _visitor = __webpack_require__(49);

	var _visitor2 = _interopRequireDefault(_visitor);

	function WhitespaceControl() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  this.options = options;
	}
	WhitespaceControl.prototype = new _visitor2['default']();

	WhitespaceControl.prototype.Program = function (program) {
	  var doStandalone = !this.options.ignoreStandalone;

	  var isRoot = !this.isRootSeen;
	  this.isRootSeen = true;

	  var body = program.body;
	  for (var i = 0, l = body.length; i < l; i++) {
	    var current = body[i],
	        strip = this.accept(current);

	    if (!strip) {
	      continue;
	    }

	    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
	        _isNextWhitespace = isNextWhitespace(body, i, isRoot),
	        openStandalone = strip.openStandalone && _isPrevWhitespace,
	        closeStandalone = strip.closeStandalone && _isNextWhitespace,
	        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

	    if (strip.close) {
	      omitRight(body, i, true);
	    }
	    if (strip.open) {
	      omitLeft(body, i, true);
	    }

	    if (doStandalone && inlineStandalone) {
	      omitRight(body, i);

	      if (omitLeft(body, i)) {
	        // If we are on a standalone node, save the indent info for partials
	        if (current.type === 'PartialStatement') {
	          // Pull out the whitespace from the final line
	          current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
	        }
	      }
	    }
	    if (doStandalone && openStandalone) {
	      omitRight((current.program || current.inverse).body);

	      // Strip out the previous content node if it's whitespace only
	      omitLeft(body, i);
	    }
	    if (doStandalone && closeStandalone) {
	      // Always strip the next node
	      omitRight(body, i);

	      omitLeft((current.inverse || current.program).body);
	    }
	  }

	  return program;
	};

	WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {
	  this.accept(block.program);
	  this.accept(block.inverse);

	  // Find the inverse program that is involed with whitespace stripping.
	  var program = block.program || block.inverse,
	      inverse = block.program && block.inverse,
	      firstInverse = inverse,
	      lastInverse = inverse;

	  if (inverse && inverse.chained) {
	    firstInverse = inverse.body[0].program;

	    // Walk the inverse chain to find the last inverse that is actually in the chain.
	    while (lastInverse.chained) {
	      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
	    }
	  }

	  var strip = {
	    open: block.openStrip.open,
	    close: block.closeStrip.close,

	    // Determine the standalone candiacy. Basically flag our content as being possibly standalone
	    // so our parent can determine if we actually are standalone
	    openStandalone: isNextWhitespace(program.body),
	    closeStandalone: isPrevWhitespace((firstInverse || program).body)
	  };

	  if (block.openStrip.close) {
	    omitRight(program.body, null, true);
	  }

	  if (inverse) {
	    var inverseStrip = block.inverseStrip;

	    if (inverseStrip.open) {
	      omitLeft(program.body, null, true);
	    }

	    if (inverseStrip.close) {
	      omitRight(firstInverse.body, null, true);
	    }
	    if (block.closeStrip.open) {
	      omitLeft(lastInverse.body, null, true);
	    }

	    // Find standalone else statments
	    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
	      omitLeft(program.body);
	      omitRight(firstInverse.body);
	    }
	  } else if (block.closeStrip.open) {
	    omitLeft(program.body, null, true);
	  }

	  return strip;
	};

	WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {
	  return mustache.strip;
	};

	WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
	  /* istanbul ignore next */
	  var strip = node.strip || {};
	  return {
	    inlineStandalone: true,
	    open: strip.open,
	    close: strip.close
	  };
	};

	function isPrevWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = body.length;
	  }

	  // Nodes that end with newlines are considered whitespace (but are special
	  // cased for strip operations)
	  var prev = body[i - 1],
	      sibling = body[i - 2];
	  if (!prev) {
	    return isRoot;
	  }

	  if (prev.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
	  }
	}
	function isNextWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = -1;
	  }

	  var next = body[i + 1],
	      sibling = body[i + 2];
	  if (!next) {
	    return isRoot;
	  }

	  if (next.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
	  }
	}

	// Marks the node to the right of the position as omitted.
	// I.e. {{foo}}' ' will mark the ' ' node as omitted.
	//
	// If i is undefined, then the first child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitRight(body, i, multiple) {
	  var current = body[i == null ? 0 : i + 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
	    return;
	  }

	  var original = current.value;
	  current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
	  current.rightStripped = current.value !== original;
	}

	// Marks the node to the left of the position as omitted.
	// I.e. ' '{{foo}} will mark the ' ' node as omitted.
	//
	// If i is undefined then the last child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitLeft(body, i, multiple) {
	  var current = body[i == null ? body.length - 1 : i - 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
	    return;
	  }

	  // We omit the last node if it's whitespace only and not preceded by a non-content node.
	  var original = current.value;
	  current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
	  current.leftStripped = current.value !== original;
	  return current.leftStripped;
	}

	exports['default'] = WhitespaceControl;
	module.exports = exports['default'];

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function Visitor() {
	  this.parents = [];
	}

	Visitor.prototype = {
	  constructor: Visitor,
	  mutating: false,

	  // Visits a given value. If mutating, will replace the value if necessary.
	  acceptKey: function acceptKey(node, name) {
	    var value = this.accept(node[name]);
	    if (this.mutating) {
	      // Hacky sanity check: This may have a few false positives for type for the helper
	      // methods but will generally do the right thing without a lot of overhead.
	      if (value && !Visitor.prototype[value.type]) {
	        throw new _exception2['default']('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
	      }
	      node[name] = value;
	    }
	  },

	  // Performs an accept operation with added sanity check to ensure
	  // required keys are not removed.
	  acceptRequired: function acceptRequired(node, name) {
	    this.acceptKey(node, name);

	    if (!node[name]) {
	      throw new _exception2['default'](node.type + ' requires ' + name);
	    }
	  },

	  // Traverses a given array. If mutating, empty respnses will be removed
	  // for child elements.
	  acceptArray: function acceptArray(array) {
	    for (var i = 0, l = array.length; i < l; i++) {
	      this.acceptKey(array, i);

	      if (!array[i]) {
	        array.splice(i, 1);
	        i--;
	        l--;
	      }
	    }
	  },

	  accept: function accept(object) {
	    if (!object) {
	      return;
	    }

	    /* istanbul ignore next: Sanity code */
	    if (!this[object.type]) {
	      throw new _exception2['default']('Unknown type: ' + object.type, object);
	    }

	    if (this.current) {
	      this.parents.unshift(this.current);
	    }
	    this.current = object;

	    var ret = this[object.type](object);

	    this.current = this.parents.shift();

	    if (!this.mutating || ret) {
	      return ret;
	    } else if (ret !== false) {
	      return object;
	    }
	  },

	  Program: function Program(program) {
	    this.acceptArray(program.body);
	  },

	  MustacheStatement: visitSubExpression,
	  Decorator: visitSubExpression,

	  BlockStatement: visitBlock,
	  DecoratorBlock: visitBlock,

	  PartialStatement: visitPartial,
	  PartialBlockStatement: function PartialBlockStatement(partial) {
	    visitPartial.call(this, partial);

	    this.acceptKey(partial, 'program');
	  },

	  ContentStatement: function ContentStatement() /* content */{},
	  CommentStatement: function CommentStatement() /* comment */{},

	  SubExpression: visitSubExpression,

	  PathExpression: function PathExpression() /* path */{},

	  StringLiteral: function StringLiteral() /* string */{},
	  NumberLiteral: function NumberLiteral() /* number */{},
	  BooleanLiteral: function BooleanLiteral() /* bool */{},
	  UndefinedLiteral: function UndefinedLiteral() /* literal */{},
	  NullLiteral: function NullLiteral() /* literal */{},

	  Hash: function Hash(hash) {
	    this.acceptArray(hash.pairs);
	  },
	  HashPair: function HashPair(pair) {
	    this.acceptRequired(pair, 'value');
	  }
	};

	function visitSubExpression(mustache) {
	  this.acceptRequired(mustache, 'path');
	  this.acceptArray(mustache.params);
	  this.acceptKey(mustache, 'hash');
	}
	function visitBlock(block) {
	  visitSubExpression.call(this, block);

	  this.acceptKey(block, 'program');
	  this.acceptKey(block, 'inverse');
	}
	function visitPartial(partial) {
	  this.acceptRequired(partial, 'name');
	  this.acceptArray(partial.params);
	  this.acceptKey(partial, 'hash');
	}

	exports['default'] = Visitor;
	module.exports = exports['default'];

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.SourceLocation = SourceLocation;
	exports.id = id;
	exports.stripFlags = stripFlags;
	exports.stripComment = stripComment;
	exports.preparePath = preparePath;
	exports.prepareMustache = prepareMustache;
	exports.prepareRawBlock = prepareRawBlock;
	exports.prepareBlock = prepareBlock;
	exports.prepareProgram = prepareProgram;
	exports.preparePartialBlock = preparePartialBlock;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function validateClose(open, close) {
	  close = close.path ? close.path.original : close;

	  if (open.path.original !== close) {
	    var errorNode = { loc: open.path.loc };

	    throw new _exception2['default'](open.path.original + " doesn't match " + close, errorNode);
	  }
	}

	function SourceLocation(source, locInfo) {
	  this.source = source;
	  this.start = {
	    line: locInfo.first_line,
	    column: locInfo.first_column
	  };
	  this.end = {
	    line: locInfo.last_line,
	    column: locInfo.last_column
	  };
	}

	function id(token) {
	  if (/^\[.*\]$/.test(token)) {
	    return token.substring(1, token.length - 1);
	  } else {
	    return token;
	  }
	}

	function stripFlags(open, close) {
	  return {
	    open: open.charAt(2) === '~',
	    close: close.charAt(close.length - 3) === '~'
	  };
	}

	function stripComment(comment) {
	  return comment.replace(/^\{\{~?!-?-?/, '').replace(/-?-?~?\}\}$/, '');
	}

	function preparePath(data, parts, loc) {
	  loc = this.locInfo(loc);

	  var original = data ? '@' : '',
	      dig = [],
	      depth = 0;

	  for (var i = 0, l = parts.length; i < l; i++) {
	    var part = parts[i].part,

	    // If we have [] syntax then we do not treat path references as operators,
	    // i.e. foo.[this] resolves to approximately context.foo['this']
	    isLiteral = parts[i].original !== part;
	    original += (parts[i].separator || '') + part;

	    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
	      if (dig.length > 0) {
	        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });
	      } else if (part === '..') {
	        depth++;
	      }
	    } else {
	      dig.push(part);
	    }
	  }

	  return {
	    type: 'PathExpression',
	    data: data,
	    depth: depth,
	    parts: dig,
	    original: original,
	    loc: loc
	  };
	}

	function prepareMustache(path, params, hash, open, strip, locInfo) {
	  // Must use charAt to support IE pre-10
	  var escapeFlag = open.charAt(3) || open.charAt(2),
	      escaped = escapeFlag !== '{' && escapeFlag !== '&';

	  var decorator = /\*/.test(open);
	  return {
	    type: decorator ? 'Decorator' : 'MustacheStatement',
	    path: path,
	    params: params,
	    hash: hash,
	    escaped: escaped,
	    strip: strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareRawBlock(openRawBlock, contents, close, locInfo) {
	  validateClose(openRawBlock, close);

	  locInfo = this.locInfo(locInfo);
	  var program = {
	    type: 'Program',
	    body: contents,
	    strip: {},
	    loc: locInfo
	  };

	  return {
	    type: 'BlockStatement',
	    path: openRawBlock.path,
	    params: openRawBlock.params,
	    hash: openRawBlock.hash,
	    program: program,
	    openStrip: {},
	    inverseStrip: {},
	    closeStrip: {},
	    loc: locInfo
	  };
	}

	function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
	  if (close && close.path) {
	    validateClose(openBlock, close);
	  }

	  var decorator = /\*/.test(openBlock.open);

	  program.blockParams = openBlock.blockParams;

	  var inverse = undefined,
	      inverseStrip = undefined;

	  if (inverseAndProgram) {
	    if (decorator) {
	      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);
	    }

	    if (inverseAndProgram.chain) {
	      inverseAndProgram.program.body[0].closeStrip = close.strip;
	    }

	    inverseStrip = inverseAndProgram.strip;
	    inverse = inverseAndProgram.program;
	  }

	  if (inverted) {
	    inverted = inverse;
	    inverse = program;
	    program = inverted;
	  }

	  return {
	    type: decorator ? 'DecoratorBlock' : 'BlockStatement',
	    path: openBlock.path,
	    params: openBlock.params,
	    hash: openBlock.hash,
	    program: program,
	    inverse: inverse,
	    openStrip: openBlock.strip,
	    inverseStrip: inverseStrip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareProgram(statements, loc) {
	  if (!loc && statements.length) {
	    var firstLoc = statements[0].loc,
	        lastLoc = statements[statements.length - 1].loc;

	    /* istanbul ignore else */
	    if (firstLoc && lastLoc) {
	      loc = {
	        source: firstLoc.source,
	        start: {
	          line: firstLoc.start.line,
	          column: firstLoc.start.column
	        },
	        end: {
	          line: lastLoc.end.line,
	          column: lastLoc.end.column
	        }
	      };
	    }
	  }

	  return {
	    type: 'Program',
	    body: statements,
	    strip: {},
	    loc: loc
	  };
	}

	function preparePartialBlock(open, program, close, locInfo) {
	  validateClose(open, close);

	  return {
	    type: 'PartialBlockStatement',
	    name: open.path,
	    params: open.params,
	    hash: open.hash,
	    program: program,
	    openStrip: open.strip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable new-cap */

	'use strict';

	var _Object$create = __webpack_require__(34)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.Compiler = Compiler;
	exports.precompile = precompile;
	exports.compile = compile;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _ast = __webpack_require__(45);

	var _ast2 = _interopRequireDefault(_ast);

	var slice = [].slice;

	function Compiler() {}

	// the foundHelper register will disambiguate helper lookup from finding a
	// function in a context. This is necessary for mustache compatibility, which
	// requires that context functions in blocks are evaluated by blockHelperMissing,
	// and then proceed as if the resulting value was provided to blockHelperMissing.

	Compiler.prototype = {
	  compiler: Compiler,

	  equals: function equals(other) {
	    var len = this.opcodes.length;
	    if (other.opcodes.length !== len) {
	      return false;
	    }

	    for (var i = 0; i < len; i++) {
	      var opcode = this.opcodes[i],
	          otherOpcode = other.opcodes[i];
	      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {
	        return false;
	      }
	    }

	    // We know that length is the same between the two arrays because they are directly tied
	    // to the opcode behavior above.
	    len = this.children.length;
	    for (var i = 0; i < len; i++) {
	      if (!this.children[i].equals(other.children[i])) {
	        return false;
	      }
	    }

	    return true;
	  },

	  guid: 0,

	  compile: function compile(program, options) {
	    this.sourceNode = [];
	    this.opcodes = [];
	    this.children = [];
	    this.options = options;
	    this.stringParams = options.stringParams;
	    this.trackIds = options.trackIds;

	    options.blockParams = options.blockParams || [];

	    options.knownHelpers = _utils.extend(_Object$create(null), {
	      helperMissing: true,
	      blockHelperMissing: true,
	      each: true,
	      'if': true,
	      unless: true,
	      'with': true,
	      log: true,
	      lookup: true
	    }, options.knownHelpers);

	    return this.accept(program);
	  },

	  compileProgram: function compileProgram(program) {
	    var childCompiler = new this.compiler(),
	        // eslint-disable-line new-cap
	    result = childCompiler.compile(program, this.options),
	        guid = this.guid++;

	    this.usePartial = this.usePartial || result.usePartial;

	    this.children[guid] = result;
	    this.useDepths = this.useDepths || result.useDepths;

	    return guid;
	  },

	  accept: function accept(node) {
	    /* istanbul ignore next: Sanity code */
	    if (!this[node.type]) {
	      throw new _exception2['default']('Unknown type: ' + node.type, node);
	    }

	    this.sourceNode.unshift(node);
	    var ret = this[node.type](node);
	    this.sourceNode.shift();
	    return ret;
	  },

	  Program: function Program(program) {
	    this.options.blockParams.unshift(program.blockParams);

	    var body = program.body,
	        bodyLength = body.length;
	    for (var i = 0; i < bodyLength; i++) {
	      this.accept(body[i]);
	    }

	    this.options.blockParams.shift();

	    this.isSimple = bodyLength === 1;
	    this.blockParams = program.blockParams ? program.blockParams.length : 0;

	    return this;
	  },

	  BlockStatement: function BlockStatement(block) {
	    transformLiteralToPath(block);

	    var program = block.program,
	        inverse = block.inverse;

	    program = program && this.compileProgram(program);
	    inverse = inverse && this.compileProgram(inverse);

	    var type = this.classifySexpr(block);

	    if (type === 'helper') {
	      this.helperSexpr(block, program, inverse);
	    } else if (type === 'simple') {
	      this.simpleSexpr(block);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('blockValue', block.path.original);
	    } else {
	      this.ambiguousSexpr(block, program, inverse);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('ambiguousBlockValue');
	    }

	    this.opcode('append');
	  },

	  DecoratorBlock: function DecoratorBlock(decorator) {
	    var program = decorator.program && this.compileProgram(decorator.program);
	    var params = this.setupFullMustacheParams(decorator, program, undefined),
	        path = decorator.path;

	    this.useDecorators = true;
	    this.opcode('registerDecorator', params.length, path.original);
	  },

	  PartialStatement: function PartialStatement(partial) {
	    this.usePartial = true;

	    var program = partial.program;
	    if (program) {
	      program = this.compileProgram(partial.program);
	    }

	    var params = partial.params;
	    if (params.length > 1) {
	      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);
	    } else if (!params.length) {
	      if (this.options.explicitPartialContext) {
	        this.opcode('pushLiteral', 'undefined');
	      } else {
	        params.push({ type: 'PathExpression', parts: [], depth: 0 });
	      }
	    }

	    var partialName = partial.name.original,
	        isDynamic = partial.name.type === 'SubExpression';
	    if (isDynamic) {
	      this.accept(partial.name);
	    }

	    this.setupFullMustacheParams(partial, program, undefined, true);

	    var indent = partial.indent || '';
	    if (this.options.preventIndent && indent) {
	      this.opcode('appendContent', indent);
	      indent = '';
	    }

	    this.opcode('invokePartial', isDynamic, partialName, indent);
	    this.opcode('append');
	  },
	  PartialBlockStatement: function PartialBlockStatement(partialBlock) {
	    this.PartialStatement(partialBlock);
	  },

	  MustacheStatement: function MustacheStatement(mustache) {
	    this.SubExpression(mustache);

	    if (mustache.escaped && !this.options.noEscape) {
	      this.opcode('appendEscaped');
	    } else {
	      this.opcode('append');
	    }
	  },
	  Decorator: function Decorator(decorator) {
	    this.DecoratorBlock(decorator);
	  },

	  ContentStatement: function ContentStatement(content) {
	    if (content.value) {
	      this.opcode('appendContent', content.value);
	    }
	  },

	  CommentStatement: function CommentStatement() {},

	  SubExpression: function SubExpression(sexpr) {
	    transformLiteralToPath(sexpr);
	    var type = this.classifySexpr(sexpr);

	    if (type === 'simple') {
	      this.simpleSexpr(sexpr);
	    } else if (type === 'helper') {
	      this.helperSexpr(sexpr);
	    } else {
	      this.ambiguousSexpr(sexpr);
	    }
	  },
	  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
	    var path = sexpr.path,
	        name = path.parts[0],
	        isBlock = program != null || inverse != null;

	    this.opcode('getContext', path.depth);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    path.strict = true;
	    this.accept(path);

	    this.opcode('invokeAmbiguous', name, isBlock);
	  },

	  simpleSexpr: function simpleSexpr(sexpr) {
	    var path = sexpr.path;
	    path.strict = true;
	    this.accept(path);
	    this.opcode('resolvePossibleLambda');
	  },

	  helperSexpr: function helperSexpr(sexpr, program, inverse) {
	    var params = this.setupFullMustacheParams(sexpr, program, inverse),
	        path = sexpr.path,
	        name = path.parts[0];

	    if (this.options.knownHelpers[name]) {
	      this.opcode('invokeKnownHelper', params.length, name);
	    } else if (this.options.knownHelpersOnly) {
	      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);
	    } else {
	      path.strict = true;
	      path.falsy = true;

	      this.accept(path);
	      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));
	    }
	  },

	  PathExpression: function PathExpression(path) {
	    this.addDepth(path.depth);
	    this.opcode('getContext', path.depth);

	    var name = path.parts[0],
	        scoped = _ast2['default'].helpers.scopedId(path),
	        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);

	    if (blockParamId) {
	      this.opcode('lookupBlockParam', blockParamId, path.parts);
	    } else if (!name) {
	      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
	      this.opcode('pushContext');
	    } else if (path.data) {
	      this.options.data = true;
	      this.opcode('lookupData', path.depth, path.parts, path.strict);
	    } else {
	      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);
	    }
	  },

	  StringLiteral: function StringLiteral(string) {
	    this.opcode('pushString', string.value);
	  },

	  NumberLiteral: function NumberLiteral(number) {
	    this.opcode('pushLiteral', number.value);
	  },

	  BooleanLiteral: function BooleanLiteral(bool) {
	    this.opcode('pushLiteral', bool.value);
	  },

	  UndefinedLiteral: function UndefinedLiteral() {
	    this.opcode('pushLiteral', 'undefined');
	  },

	  NullLiteral: function NullLiteral() {
	    this.opcode('pushLiteral', 'null');
	  },

	  Hash: function Hash(hash) {
	    var pairs = hash.pairs,
	        i = 0,
	        l = pairs.length;

	    this.opcode('pushHash');

	    for (; i < l; i++) {
	      this.pushParam(pairs[i].value);
	    }
	    while (i--) {
	      this.opcode('assignToHash', pairs[i].key);
	    }
	    this.opcode('popHash');
	  },

	  // HELPERS
	  opcode: function opcode(name) {
	    this.opcodes.push({
	      opcode: name,
	      args: slice.call(arguments, 1),
	      loc: this.sourceNode[0].loc
	    });
	  },

	  addDepth: function addDepth(depth) {
	    if (!depth) {
	      return;
	    }

	    this.useDepths = true;
	  },

	  classifySexpr: function classifySexpr(sexpr) {
	    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);

	    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

	    // a mustache is an eligible helper if:
	    // * its id is simple (a single part, not `this` or `..`)
	    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);

	    // if a mustache is an eligible helper but not a definite
	    // helper, it is ambiguous, and will be resolved in a later
	    // pass or at runtime.
	    var isEligible = !isBlockParam && (isHelper || isSimple);

	    // if ambiguous, we can possibly resolve the ambiguity now
	    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
	    if (isEligible && !isHelper) {
	      var _name = sexpr.path.parts[0],
	          options = this.options;
	      if (options.knownHelpers[_name]) {
	        isHelper = true;
	      } else if (options.knownHelpersOnly) {
	        isEligible = false;
	      }
	    }

	    if (isHelper) {
	      return 'helper';
	    } else if (isEligible) {
	      return 'ambiguous';
	    } else {
	      return 'simple';
	    }
	  },

	  pushParams: function pushParams(params) {
	    for (var i = 0, l = params.length; i < l; i++) {
	      this.pushParam(params[i]);
	    }
	  },

	  pushParam: function pushParam(val) {
	    var value = val.value != null ? val.value : val.original || '';

	    if (this.stringParams) {
	      if (value.replace) {
	        value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
	      }

	      if (val.depth) {
	        this.addDepth(val.depth);
	      }
	      this.opcode('getContext', val.depth || 0);
	      this.opcode('pushStringParam', value, val.type);

	      if (val.type === 'SubExpression') {
	        // SubExpressions get evaluated and passed in
	        // in string params mode.
	        this.accept(val);
	      }
	    } else {
	      if (this.trackIds) {
	        var blockParamIndex = undefined;
	        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {
	          blockParamIndex = this.blockParamIndex(val.parts[0]);
	        }
	        if (blockParamIndex) {
	          var blockParamChild = val.parts.slice(1).join('.');
	          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);
	        } else {
	          value = val.original || value;
	          if (value.replace) {
	            value = value.replace(/^this(?:\.|$)/, '').replace(/^\.\//, '').replace(/^\.$/, '');
	          }

	          this.opcode('pushId', val.type, value);
	        }
	      }
	      this.accept(val);
	    }
	  },

	  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {
	    var params = sexpr.params;
	    this.pushParams(params);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    if (sexpr.hash) {
	      this.accept(sexpr.hash);
	    } else {
	      this.opcode('emptyHash', omitEmpty);
	    }

	    return params;
	  },

	  blockParamIndex: function blockParamIndex(name) {
	    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
	      var blockParams = this.options.blockParams[depth],
	          param = blockParams && _utils.indexOf(blockParams, name);
	      if (blockParams && param >= 0) {
	        return [depth, param];
	      }
	    }
	  }
	};

	function precompile(input, options, env) {
	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);
	  }

	  options = options || {};
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var ast = env.parse(input, options),
	      environment = new env.Compiler().compile(ast, options);
	  return new env.JavaScriptCompiler().compile(environment, options);
	}

	function compile(input, options, env) {
	  if (options === undefined) options = {};

	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);
	  }

	  options = _utils.extend({}, options);
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var compiled = undefined;

	  function compileInput() {
	    var ast = env.parse(input, options),
	        environment = new env.Compiler().compile(ast, options),
	        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);
	    return env.template(templateSpec);
	  }

	  // Template is only compiled on first use and cached after that point.
	  function ret(context, execOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled.call(this, context, execOptions);
	  }
	  ret._setup = function (setupOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._setup(setupOptions);
	  };
	  ret._child = function (i, data, blockParams, depths) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._child(i, data, blockParams, depths);
	  };
	  return ret;
	}

	function argEquals(a, b) {
	  if (a === b) {
	    return true;
	  }

	  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
	    for (var i = 0; i < a.length; i++) {
	      if (!argEquals(a[i], b[i])) {
	        return false;
	      }
	    }
	    return true;
	  }
	}

	function transformLiteralToPath(sexpr) {
	  if (!sexpr.path.parts) {
	    var literal = sexpr.path;
	    // Casting to string here to make false and 0 literal values play nicely with the rest
	    // of the system.
	    sexpr.path = {
	      type: 'PathExpression',
	      data: false,
	      depth: 0,
	      parts: [literal.original + ''],
	      original: literal.original + '',
	      loc: literal.loc
	    };
	  }
	}

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _Object$keys = __webpack_require__(13)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _base = __webpack_require__(4);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _codeGen = __webpack_require__(53);

	var _codeGen2 = _interopRequireDefault(_codeGen);

	function Literal(value) {
	  this.value = value;
	}

	function JavaScriptCompiler() {}

	JavaScriptCompiler.prototype = {
	  // PUBLIC API: You can override these methods in a subclass to provide
	  // alternative compiled forms for name lookup and buffering semantics
	  nameLookup: function nameLookup(parent, name /*,  type */) {
	    return this.internalNameLookup(parent, name);
	  },
	  depthedLookup: function depthedLookup(name) {
	    return [this.aliasable('container.lookup'), '(depths, ', JSON.stringify(name), ')'];
	  },

	  compilerInfo: function compilerInfo() {
	    var revision = _base.COMPILER_REVISION,
	        versions = _base.REVISION_CHANGES[revision];
	    return [revision, versions];
	  },

	  appendToBuffer: function appendToBuffer(source, location, explicit) {
	    // Force a source as this simplifies the merge logic.
	    if (!_utils.isArray(source)) {
	      source = [source];
	    }
	    source = this.source.wrap(source, location);

	    if (this.environment.isSimple) {
	      return ['return ', source, ';'];
	    } else if (explicit) {
	      // This is a case where the buffer operation occurs as a child of another
	      // construct, generally braces. We have to explicitly output these buffer
	      // operations to ensure that the emitted code goes in the correct location.
	      return ['buffer += ', source, ';'];
	    } else {
	      source.appendToBuffer = true;
	      return source;
	    }
	  },

	  initializeBuffer: function initializeBuffer() {
	    return this.quotedString('');
	  },
	  // END PUBLIC API
	  internalNameLookup: function internalNameLookup(parent, name) {
	    this.lookupPropertyFunctionIsUsed = true;
	    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];
	  },

	  lookupPropertyFunctionIsUsed: false,

	  compile: function compile(environment, options, context, asObject) {
	    this.environment = environment;
	    this.options = options;
	    this.stringParams = this.options.stringParams;
	    this.trackIds = this.options.trackIds;
	    this.precompile = !asObject;

	    this.name = this.environment.name;
	    this.isChild = !!context;
	    this.context = context || {
	      decorators: [],
	      programs: [],
	      environments: []
	    };

	    this.preamble();

	    this.stackSlot = 0;
	    this.stackVars = [];
	    this.aliases = {};
	    this.registers = { list: [] };
	    this.hashes = [];
	    this.compileStack = [];
	    this.inlineStack = [];
	    this.blockParams = [];

	    this.compileChildren(environment, options);

	    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;
	    this.useBlockParams = this.useBlockParams || environment.useBlockParams;

	    var opcodes = environment.opcodes,
	        opcode = undefined,
	        firstLoc = undefined,
	        i = undefined,
	        l = undefined;

	    for (i = 0, l = opcodes.length; i < l; i++) {
	      opcode = opcodes[i];

	      this.source.currentLocation = opcode.loc;
	      firstLoc = firstLoc || opcode.loc;
	      this[opcode.opcode].apply(this, opcode.args);
	    }

	    // Flush any trailing content that might be pending.
	    this.source.currentLocation = firstLoc;
	    this.pushSource('');

	    /* istanbul ignore next */
	    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
	      throw new _exception2['default']('Compile completed with content left on stack');
	    }

	    if (!this.decorators.isEmpty()) {
	      this.useDecorators = true;

	      this.decorators.prepend(['var decorators = container.decorators, ', this.lookupPropertyFunctionVarDeclaration(), ';\n']);
	      this.decorators.push('return fn;');

	      if (asObject) {
	        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);
	      } else {
	        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\n');
	        this.decorators.push('}\n');
	        this.decorators = this.decorators.merge();
	      }
	    } else {
	      this.decorators = undefined;
	    }

	    var fn = this.createFunctionContext(asObject);
	    if (!this.isChild) {
	      var ret = {
	        compiler: this.compilerInfo(),
	        main: fn
	      };

	      if (this.decorators) {
	        ret.main_d = this.decorators; // eslint-disable-line camelcase
	        ret.useDecorators = true;
	      }

	      var _context = this.context;
	      var programs = _context.programs;
	      var decorators = _context.decorators;

	      for (i = 0, l = programs.length; i < l; i++) {
	        if (programs[i]) {
	          ret[i] = programs[i];
	          if (decorators[i]) {
	            ret[i + '_d'] = decorators[i];
	            ret.useDecorators = true;
	          }
	        }
	      }

	      if (this.environment.usePartial) {
	        ret.usePartial = true;
	      }
	      if (this.options.data) {
	        ret.useData = true;
	      }
	      if (this.useDepths) {
	        ret.useDepths = true;
	      }
	      if (this.useBlockParams) {
	        ret.useBlockParams = true;
	      }
	      if (this.options.compat) {
	        ret.compat = true;
	      }

	      if (!asObject) {
	        ret.compiler = JSON.stringify(ret.compiler);

	        this.source.currentLocation = { start: { line: 1, column: 0 } };
	        ret = this.objectLiteral(ret);

	        if (options.srcName) {
	          ret = ret.toStringWithSourceMap({ file: options.destName });
	          ret.map = ret.map && ret.map.toString();
	        } else {
	          ret = ret.toString();
	        }
	      } else {
	        ret.compilerOptions = this.options;
	      }

	      return ret;
	    } else {
	      return fn;
	    }
	  },

	  preamble: function preamble() {
	    // track the last context pushed into place to allow skipping the
	    // getContext opcode when it would be a noop
	    this.lastContext = 0;
	    this.source = new _codeGen2['default'](this.options.srcName);
	    this.decorators = new _codeGen2['default'](this.options.srcName);
	  },

	  createFunctionContext: function createFunctionContext(asObject) {
	    // istanbul ignore next

	    var _this = this;

	    var varDeclarations = '';

	    var locals = this.stackVars.concat(this.registers.list);
	    if (locals.length > 0) {
	      varDeclarations += ', ' + locals.join(', ');
	    }

	    // Generate minimizer alias mappings
	    //
	    // When using true SourceNodes, this will update all references to the given alias
	    // as the source nodes are reused in situ. For the non-source node compilation mode,
	    // aliases will not be used, but this case is already being run on the client and
	    // we aren't concern about minimizing the template size.
	    var aliasCount = 0;
	    _Object$keys(this.aliases).forEach(function (alias) {
	      var node = _this.aliases[alias];
	      if (node.children && node.referenceCount > 1) {
	        varDeclarations += ', alias' + ++aliasCount + '=' + alias;
	        node.children[0] = 'alias' + aliasCount;
	      }
	    });

	    if (this.lookupPropertyFunctionIsUsed) {
	      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();
	    }

	    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];

	    if (this.useBlockParams || this.useDepths) {
	      params.push('blockParams');
	    }
	    if (this.useDepths) {
	      params.push('depths');
	    }

	    // Perform a second pass over the output to merge content when possible
	    var source = this.mergeSource(varDeclarations);

	    if (asObject) {
	      params.push(source);

	      return Function.apply(this, params);
	    } else {
	      return this.source.wrap(['function(', params.join(','), ') {\n  ', source, '}']);
	    }
	  },
	  mergeSource: function mergeSource(varDeclarations) {
	    var isSimple = this.environment.isSimple,
	        appendOnly = !this.forceBuffer,
	        appendFirst = undefined,
	        sourceSeen = undefined,
	        bufferStart = undefined,
	        bufferEnd = undefined;
	    this.source.each(function (line) {
	      if (line.appendToBuffer) {
	        if (bufferStart) {
	          line.prepend('  + ');
	        } else {
	          bufferStart = line;
	        }
	        bufferEnd = line;
	      } else {
	        if (bufferStart) {
	          if (!sourceSeen) {
	            appendFirst = true;
	          } else {
	            bufferStart.prepend('buffer += ');
	          }
	          bufferEnd.add(';');
	          bufferStart = bufferEnd = undefined;
	        }

	        sourceSeen = true;
	        if (!isSimple) {
	          appendOnly = false;
	        }
	      }
	    });

	    if (appendOnly) {
	      if (bufferStart) {
	        bufferStart.prepend('return ');
	        bufferEnd.add(';');
	      } else if (!sourceSeen) {
	        this.source.push('return "";');
	      }
	    } else {
	      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

	      if (bufferStart) {
	        bufferStart.prepend('return buffer + ');
	        bufferEnd.add(';');
	      } else {
	        this.source.push('return buffer;');
	      }
	    }

	    if (varDeclarations) {
	      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\n'));
	    }

	    return this.source.merge();
	  },

	  lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {
	    return '\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    '.trim();
	  },

	  // [blockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // On stack, after: return value of blockHelperMissing
	  //
	  // The purpose of this opcode is to take a block of the form
	  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
	  // replace it on the stack with the result of properly
	  // invoking blockHelperMissing.
	  blockValue: function blockValue(name) {
	    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs(name, 0, params);

	    var blockName = this.popStack();
	    params.splice(1, 0, blockName);

	    this.push(this.source.functionCall(blockHelperMissing, 'call', params));
	  },

	  // [ambiguousBlockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // Compiler value, before: lastHelper=value of last found helper, if any
	  // On stack, after, if no lastHelper: same as [blockValue]
	  // On stack, after, if lastHelper: value
	  ambiguousBlockValue: function ambiguousBlockValue() {
	    // We're being a bit cheeky and reusing the options value from the prior exec
	    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs('', 0, params, true);

	    this.flushInline();

	    var current = this.topStack();
	    params.splice(1, 0, current);

	    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);
	  },

	  // [appendContent]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  //
	  // Appends the string value of `content` to the current buffer
	  appendContent: function appendContent(content) {
	    if (this.pendingContent) {
	      content = this.pendingContent + content;
	    } else {
	      this.pendingLocation = this.source.currentLocation;
	    }

	    this.pendingContent = content;
	  },

	  // [append]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Coerces `value` to a String and appends it to the current buffer.
	  //
	  // If `value` is truthy, or 0, it is coerced into a string and appended
	  // Otherwise, the empty string is appended
	  append: function append() {
	    if (this.isInline()) {
	      this.replaceStack(function (current) {
	        return [' != null ? ', current, ' : ""'];
	      });

	      this.pushSource(this.appendToBuffer(this.popStack()));
	    } else {
	      var local = this.popStack();
	      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);
	      if (this.environment.isSimple) {
	        this.pushSource(['else { ', this.appendToBuffer("''", undefined, true), ' }']);
	      }
	    }
	  },

	  // [appendEscaped]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Escape `value` and append it to the buffer
	  appendEscaped: function appendEscaped() {
	    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));
	  },

	  // [getContext]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  // Compiler value, after: lastContext=depth
	  //
	  // Set the value of the `lastContext` compiler value to the depth
	  getContext: function getContext(depth) {
	    this.lastContext = depth;
	  },

	  // [pushContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext, ...
	  //
	  // Pushes the value of the current context onto the stack.
	  pushContext: function pushContext() {
	    this.pushStackLiteral(this.contextName(this.lastContext));
	  },

	  // [lookupOnContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext[name], ...
	  //
	  // Looks up the value of `name` on the current context and pushes
	  // it onto the stack.
	  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {
	    var i = 0;

	    if (!scoped && this.options.compat && !this.lastContext) {
	      // The depthed query is expected to handle the undefined logic for the root level that
	      // is implemented below, so we evaluate that directly in compat mode
	      this.push(this.depthedLookup(parts[i++]));
	    } else {
	      this.pushContext();
	    }

	    this.resolvePath('context', parts, i, falsy, strict);
	  },

	  // [lookupBlockParam]
	  //
	  // On stack, before: ...
	  // On stack, after: blockParam[name], ...
	  //
	  // Looks up the value of `parts` on the given block param and pushes
	  // it onto the stack.
	  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
	    this.useBlockParams = true;

	    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);
	    this.resolvePath('context', parts, 1);
	  },

	  // [lookupData]
	  //
	  // On stack, before: ...
	  // On stack, after: data, ...
	  //
	  // Push the data lookup operator
	  lookupData: function lookupData(depth, parts, strict) {
	    if (!depth) {
	      this.pushStackLiteral('data');
	    } else {
	      this.pushStackLiteral('container.data(data, ' + depth + ')');
	    }

	    this.resolvePath('data', parts, 0, true, strict);
	  },

	  resolvePath: function resolvePath(type, parts, i, falsy, strict) {
	    // istanbul ignore next

	    var _this2 = this;

	    if (this.options.strict || this.options.assumeObjects) {
	      this.push(strictLookup(this.options.strict && strict, this, parts, type));
	      return;
	    }

	    var len = parts.length;
	    for (; i < len; i++) {
	      /* eslint-disable no-loop-func */
	      this.replaceStack(function (current) {
	        var lookup = _this2.nameLookup(current, parts[i], type);
	        // We want to ensure that zero and false are handled properly if the context (falsy flag)
	        // needs to have the special handling for these values.
	        if (!falsy) {
	          return [' != null ? ', lookup, ' : ', current];
	        } else {
	          // Otherwise we can use generic falsy handling
	          return [' && ', lookup];
	        }
	      });
	      /* eslint-enable no-loop-func */
	    }
	  },

	  // [resolvePossibleLambda]
	  //
	  // On stack, before: value, ...
	  // On stack, after: resolved value, ...
	  //
	  // If the `value` is a lambda, replace it on the stack by
	  // the return value of the lambda
	  resolvePossibleLambda: function resolvePossibleLambda() {
	    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);
	  },

	  // [pushStringParam]
	  //
	  // On stack, before: ...
	  // On stack, after: string, currentContext, ...
	  //
	  // This opcode is designed for use in string mode, which
	  // provides the string value of a parameter along with its
	  // depth rather than resolving it immediately.
	  pushStringParam: function pushStringParam(string, type) {
	    this.pushContext();
	    this.pushString(type);

	    // If it's a subexpression, the string result
	    // will be pushed after this opcode.
	    if (type !== 'SubExpression') {
	      if (typeof string === 'string') {
	        this.pushString(string);
	      } else {
	        this.pushStackLiteral(string);
	      }
	    }
	  },

	  emptyHash: function emptyHash(omitEmpty) {
	    if (this.trackIds) {
	      this.push('{}'); // hashIds
	    }
	    if (this.stringParams) {
	      this.push('{}'); // hashContexts
	      this.push('{}'); // hashTypes
	    }
	    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
	  },
	  pushHash: function pushHash() {
	    if (this.hash) {
	      this.hashes.push(this.hash);
	    }
	    this.hash = { values: {}, types: [], contexts: [], ids: [] };
	  },
	  popHash: function popHash() {
	    var hash = this.hash;
	    this.hash = this.hashes.pop();

	    if (this.trackIds) {
	      this.push(this.objectLiteral(hash.ids));
	    }
	    if (this.stringParams) {
	      this.push(this.objectLiteral(hash.contexts));
	      this.push(this.objectLiteral(hash.types));
	    }

	    this.push(this.objectLiteral(hash.values));
	  },

	  // [pushString]
	  //
	  // On stack, before: ...
	  // On stack, after: quotedString(string), ...
	  //
	  // Push a quoted version of `string` onto the stack
	  pushString: function pushString(string) {
	    this.pushStackLiteral(this.quotedString(string));
	  },

	  // [pushLiteral]
	  //
	  // On stack, before: ...
	  // On stack, after: value, ...
	  //
	  // Pushes a value onto the stack. This operation prevents
	  // the compiler from creating a temporary variable to hold
	  // it.
	  pushLiteral: function pushLiteral(value) {
	    this.pushStackLiteral(value);
	  },

	  // [pushProgram]
	  //
	  // On stack, before: ...
	  // On stack, after: program(guid), ...
	  //
	  // Push a program expression onto the stack. This takes
	  // a compile-time guid and converts it into a runtime-accessible
	  // expression.
	  pushProgram: function pushProgram(guid) {
	    if (guid != null) {
	      this.pushStackLiteral(this.programExpression(guid));
	    } else {
	      this.pushStackLiteral(null);
	    }
	  },

	  // [registerDecorator]
	  //
	  // On stack, before: hash, program, params..., ...
	  // On stack, after: ...
	  //
	  // Pops off the decorator's parameters, invokes the decorator,
	  // and inserts the decorator into the decorators list.
	  registerDecorator: function registerDecorator(paramSize, name) {
	    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),
	        options = this.setupHelperArgs(name, paramSize);

	    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);
	  },

	  // [invokeHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // Pops off the helper's parameters, invokes the helper,
	  // and pushes the helper's return value onto the stack.
	  //
	  // If the helper is not found, `helperMissing` is called.
	  invokeHelper: function invokeHelper(paramSize, name, isSimple) {
	    var nonHelper = this.popStack(),
	        helper = this.setupHelper(paramSize, name);

	    var possibleFunctionCalls = [];

	    if (isSimple) {
	      // direct call to helper
	      possibleFunctionCalls.push(helper.name);
	    }
	    // call a function from the input object
	    possibleFunctionCalls.push(nonHelper);
	    if (!this.options.strict) {
	      possibleFunctionCalls.push(this.aliasable('container.hooks.helperMissing'));
	    }

	    var functionLookupCode = ['(', this.itemsSeparatedBy(possibleFunctionCalls, '||'), ')'];
	    var functionCall = this.source.functionCall(functionLookupCode, 'call', helper.callParams);
	    this.push(functionCall);
	  },

	  itemsSeparatedBy: function itemsSeparatedBy(items, separator) {
	    var result = [];
	    result.push(items[0]);
	    for (var i = 1; i < items.length; i++) {
	      result.push(separator, items[i]);
	    }
	    return result;
	  },
	  // [invokeKnownHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // This operation is used when the helper is known to exist,
	  // so a `helperMissing` fallback is not required.
	  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
	    var helper = this.setupHelper(paramSize, name);
	    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));
	  },

	  // [invokeAmbiguous]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of disambiguation
	  //
	  // This operation is used when an expression like `{{foo}}`
	  // is provided, but we don't know at compile-time whether it
	  // is a helper or a path.
	  //
	  // This operation emits more code than the other options,
	  // and can be avoided by passing the `knownHelpers` and
	  // `knownHelpersOnly` flags at compile-time.
	  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
	    this.useRegister('helper');

	    var nonHelper = this.popStack();

	    this.emptyHash();
	    var helper = this.setupHelper(0, name, helperCall);

	    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');

	    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];
	    if (!this.options.strict) {
	      lookup[0] = '(helper = ';
	      lookup.push(' != null ? helper : ', this.aliasable('container.hooks.helperMissing'));
	    }

	    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('"function"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);
	  },

	  // [invokePartial]
	  //
	  // On stack, before: context, ...
	  // On stack after: result of partial invocation
	  //
	  // This operation pops off a context, invokes a partial with that context,
	  // and pushes the result of the invocation back.
	  invokePartial: function invokePartial(isDynamic, name, indent) {
	    var params = [],
	        options = this.setupParams(name, 1, params);

	    if (isDynamic) {
	      name = this.popStack();
	      delete options.name;
	    }

	    if (indent) {
	      options.indent = JSON.stringify(indent);
	    }
	    options.helpers = 'helpers';
	    options.partials = 'partials';
	    options.decorators = 'container.decorators';

	    if (!isDynamic) {
	      params.unshift(this.nameLookup('partials', name, 'partial'));
	    } else {
	      params.unshift(name);
	    }

	    if (this.options.compat) {
	      options.depths = 'depths';
	    }
	    options = this.objectLiteral(options);
	    params.push(options);

	    this.push(this.source.functionCall('container.invokePartial', '', params));
	  },

	  // [assignToHash]
	  //
	  // On stack, before: value, ..., hash, ...
	  // On stack, after: ..., hash, ...
	  //
	  // Pops a value off the stack and assigns it to the current hash
	  assignToHash: function assignToHash(key) {
	    var value = this.popStack(),
	        context = undefined,
	        type = undefined,
	        id = undefined;

	    if (this.trackIds) {
	      id = this.popStack();
	    }
	    if (this.stringParams) {
	      type = this.popStack();
	      context = this.popStack();
	    }

	    var hash = this.hash;
	    if (context) {
	      hash.contexts[key] = context;
	    }
	    if (type) {
	      hash.types[key] = type;
	    }
	    if (id) {
	      hash.ids[key] = id;
	    }
	    hash.values[key] = value;
	  },

	  pushId: function pushId(type, name, child) {
	    if (type === 'BlockParam') {
	      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));
	    } else if (type === 'PathExpression') {
	      this.pushString(name);
	    } else if (type === 'SubExpression') {
	      this.pushStackLiteral('true');
	    } else {
	      this.pushStackLiteral('null');
	    }
	  },

	  // HELPERS

	  compiler: JavaScriptCompiler,

	  compileChildren: function compileChildren(environment, options) {
	    var children = environment.children,
	        child = undefined,
	        compiler = undefined;

	    for (var i = 0, l = children.length; i < l; i++) {
	      child = children[i];
	      compiler = new this.compiler(); // eslint-disable-line new-cap

	      var existing = this.matchExistingProgram(child);

	      if (existing == null) {
	        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
	        var index = this.context.programs.length;
	        child.index = index;
	        child.name = 'program' + index;
	        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);
	        this.context.decorators[index] = compiler.decorators;
	        this.context.environments[index] = child;

	        this.useDepths = this.useDepths || compiler.useDepths;
	        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;
	        child.useDepths = this.useDepths;
	        child.useBlockParams = this.useBlockParams;
	      } else {
	        child.index = existing.index;
	        child.name = 'program' + existing.index;

	        this.useDepths = this.useDepths || existing.useDepths;
	        this.useBlockParams = this.useBlockParams || existing.useBlockParams;
	      }
	    }
	  },
	  matchExistingProgram: function matchExistingProgram(child) {
	    for (var i = 0, len = this.context.environments.length; i < len; i++) {
	      var environment = this.context.environments[i];
	      if (environment && environment.equals(child)) {
	        return environment;
	      }
	    }
	  },

	  programExpression: function programExpression(guid) {
	    var child = this.environment.children[guid],
	        programParams = [child.index, 'data', child.blockParams];

	    if (this.useBlockParams || this.useDepths) {
	      programParams.push('blockParams');
	    }
	    if (this.useDepths) {
	      programParams.push('depths');
	    }

	    return 'container.program(' + programParams.join(', ') + ')';
	  },

	  useRegister: function useRegister(name) {
	    if (!this.registers[name]) {
	      this.registers[name] = true;
	      this.registers.list.push(name);
	    }
	  },

	  push: function push(expr) {
	    if (!(expr instanceof Literal)) {
	      expr = this.source.wrap(expr);
	    }

	    this.inlineStack.push(expr);
	    return expr;
	  },

	  pushStackLiteral: function pushStackLiteral(item) {
	    this.push(new Literal(item));
	  },

	  pushSource: function pushSource(source) {
	    if (this.pendingContent) {
	      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
	      this.pendingContent = undefined;
	    }

	    if (source) {
	      this.source.push(source);
	    }
	  },

	  replaceStack: function replaceStack(callback) {
	    var prefix = ['('],
	        stack = undefined,
	        createdStack = undefined,
	        usedLiteral = undefined;

	    /* istanbul ignore next */
	    if (!this.isInline()) {
	      throw new _exception2['default']('replaceStack on non-inline');
	    }

	    // We want to merge the inline statement into the replacement statement via ','
	    var top = this.popStack(true);

	    if (top instanceof Literal) {
	      // Literals do not need to be inlined
	      stack = [top.value];
	      prefix = ['(', stack];
	      usedLiteral = true;
	    } else {
	      // Get or create the current stack name for use by the inline
	      createdStack = true;
	      var _name = this.incrStack();

	      prefix = ['((', this.push(_name), ' = ', top, ')'];
	      stack = this.topStack();
	    }

	    var item = callback.call(this, stack);

	    if (!usedLiteral) {
	      this.popStack();
	    }
	    if (createdStack) {
	      this.stackSlot--;
	    }
	    this.push(prefix.concat(item, ')'));
	  },

	  incrStack: function incrStack() {
	    this.stackSlot++;
	    if (this.stackSlot > this.stackVars.length) {
	      this.stackVars.push('stack' + this.stackSlot);
	    }
	    return this.topStackName();
	  },
	  topStackName: function topStackName() {
	    return 'stack' + this.stackSlot;
	  },
	  flushInline: function flushInline() {
	    var inlineStack = this.inlineStack;
	    this.inlineStack = [];
	    for (var i = 0, len = inlineStack.length; i < len; i++) {
	      var entry = inlineStack[i];
	      /* istanbul ignore if */
	      if (entry instanceof Literal) {
	        this.compileStack.push(entry);
	      } else {
	        var stack = this.incrStack();
	        this.pushSource([stack, ' = ', entry, ';']);
	        this.compileStack.push(stack);
	      }
	    }
	  },
	  isInline: function isInline() {
	    return this.inlineStack.length;
	  },

	  popStack: function popStack(wrapped) {
	    var inline = this.isInline(),
	        item = (inline ? this.inlineStack : this.compileStack).pop();

	    if (!wrapped && item instanceof Literal) {
	      return item.value;
	    } else {
	      if (!inline) {
	        /* istanbul ignore next */
	        if (!this.stackSlot) {
	          throw new _exception2['default']('Invalid stack pop');
	        }
	        this.stackSlot--;
	      }
	      return item;
	    }
	  },

	  topStack: function topStack() {
	    var stack = this.isInline() ? this.inlineStack : this.compileStack,
	        item = stack[stack.length - 1];

	    /* istanbul ignore if */
	    if (item instanceof Literal) {
	      return item.value;
	    } else {
	      return item;
	    }
	  },

	  contextName: function contextName(context) {
	    if (this.useDepths && context) {
	      return 'depths[' + context + ']';
	    } else {
	      return 'depth' + context;
	    }
	  },

	  quotedString: function quotedString(str) {
	    return this.source.quotedString(str);
	  },

	  objectLiteral: function objectLiteral(obj) {
	    return this.source.objectLiteral(obj);
	  },

	  aliasable: function aliasable(name) {
	    var ret = this.aliases[name];
	    if (ret) {
	      ret.referenceCount++;
	      return ret;
	    }

	    ret = this.aliases[name] = this.source.wrap(name);
	    ret.aliasable = true;
	    ret.referenceCount = 1;

	    return ret;
	  },

	  setupHelper: function setupHelper(paramSize, name, blockHelper) {
	    var params = [],
	        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);
	    var foundHelper = this.nameLookup('helpers', name, 'helper'),
	        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');

	    return {
	      params: params,
	      paramsInit: paramsInit,
	      name: foundHelper,
	      callParams: [callContext].concat(params)
	    };
	  },

	  setupParams: function setupParams(helper, paramSize, params) {
	    var options = {},
	        contexts = [],
	        types = [],
	        ids = [],
	        objectArgs = !params,
	        param = undefined;

	    if (objectArgs) {
	      params = [];
	    }

	    options.name = this.quotedString(helper);
	    options.hash = this.popStack();

	    if (this.trackIds) {
	      options.hashIds = this.popStack();
	    }
	    if (this.stringParams) {
	      options.hashTypes = this.popStack();
	      options.hashContexts = this.popStack();
	    }

	    var inverse = this.popStack(),
	        program = this.popStack();

	    // Avoid setting fn and inverse if neither are set. This allows
	    // helpers to do a check for `if (options.fn)`
	    if (program || inverse) {
	      options.fn = program || 'container.noop';
	      options.inverse = inverse || 'container.noop';
	    }

	    // The parameters go on to the stack in order (making sure that they are evaluated in order)
	    // so we need to pop them off the stack in reverse order
	    var i = paramSize;
	    while (i--) {
	      param = this.popStack();
	      params[i] = param;

	      if (this.trackIds) {
	        ids[i] = this.popStack();
	      }
	      if (this.stringParams) {
	        types[i] = this.popStack();
	        contexts[i] = this.popStack();
	      }
	    }

	    if (objectArgs) {
	      options.args = this.source.generateArray(params);
	    }

	    if (this.trackIds) {
	      options.ids = this.source.generateArray(ids);
	    }
	    if (this.stringParams) {
	      options.types = this.source.generateArray(types);
	      options.contexts = this.source.generateArray(contexts);
	    }

	    if (this.options.data) {
	      options.data = 'data';
	    }
	    if (this.useBlockParams) {
	      options.blockParams = 'blockParams';
	    }
	    return options;
	  },

	  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {
	    var options = this.setupParams(helper, paramSize, params);
	    options.loc = JSON.stringify(this.source.currentLocation);
	    options = this.objectLiteral(options);
	    if (useRegister) {
	      this.useRegister('options');
	      params.push('options');
	      return ['options=', options];
	    } else if (params) {
	      params.push(options);
	      return '';
	    } else {
	      return options;
	    }
	  }
	};

	(function () {
	  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');

	  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

	  for (var i = 0, l = reservedWords.length; i < l; i++) {
	    compilerWords[reservedWords[i]] = true;
	  }
	})();

	/**
	 * @deprecated May be removed in the next major version
	 */
	JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
	  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);
	};

	function strictLookup(requireTerminal, compiler, parts, type) {
	  var stack = compiler.popStack(),
	      i = 0,
	      len = parts.length;
	  if (requireTerminal) {
	    len--;
	  }

	  for (; i < len; i++) {
	    stack = compiler.nameLookup(stack, parts[i], type);
	  }

	  if (requireTerminal) {
	    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ', ', JSON.stringify(compiler.source.currentLocation), ' )'];
	  } else {
	    return stack;
	  }
	}

	exports['default'] = JavaScriptCompiler;
	module.exports = exports['default'];

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/* global define */
	'use strict';

	var _Object$keys = __webpack_require__(13)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var SourceNode = undefined;

	try {
	  /* istanbul ignore next */
	  if (false) {
	    // We don't support this in AMD environments. For these environments, we asusme that
	    // they are running on the browser and thus have no need for the source-map library.
	    var SourceMap = require('source-map');
	    SourceNode = SourceMap.SourceNode;
	  }
	} catch (err) {}
	/* NOP */

	/* istanbul ignore if: tested but not covered in istanbul due to dist build  */
	if (!SourceNode) {
	  SourceNode = function (line, column, srcFile, chunks) {
	    this.src = '';
	    if (chunks) {
	      this.add(chunks);
	    }
	  };
	  /* istanbul ignore next */
	  SourceNode.prototype = {
	    add: function add(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src += chunks;
	    },
	    prepend: function prepend(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src = chunks + this.src;
	    },
	    toStringWithSourceMap: function toStringWithSourceMap() {
	      return { code: this.toString() };
	    },
	    toString: function toString() {
	      return this.src;
	    }
	  };
	}

	function castChunk(chunk, codeGen, loc) {
	  if (_utils.isArray(chunk)) {
	    var ret = [];

	    for (var i = 0, len = chunk.length; i < len; i++) {
	      ret.push(codeGen.wrap(chunk[i], loc));
	    }
	    return ret;
	  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
	    // Handle primitives that the SourceNode will throw up on
	    return chunk + '';
	  }
	  return chunk;
	}

	function CodeGen(srcFile) {
	  this.srcFile = srcFile;
	  this.source = [];
	}

	CodeGen.prototype = {
	  isEmpty: function isEmpty() {
	    return !this.source.length;
	  },
	  prepend: function prepend(source, loc) {
	    this.source.unshift(this.wrap(source, loc));
	  },
	  push: function push(source, loc) {
	    this.source.push(this.wrap(source, loc));
	  },

	  merge: function merge() {
	    var source = this.empty();
	    this.each(function (line) {
	      source.add(['  ', line, '\n']);
	    });
	    return source;
	  },

	  each: function each(iter) {
	    for (var i = 0, len = this.source.length; i < len; i++) {
	      iter(this.source[i]);
	    }
	  },

	  empty: function empty() {
	    var loc = this.currentLocation || { start: {} };
	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);
	  },
	  wrap: function wrap(chunk) {
	    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];

	    if (chunk instanceof SourceNode) {
	      return chunk;
	    }

	    chunk = castChunk(chunk, this, loc);

	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);
	  },

	  functionCall: function functionCall(fn, type, params) {
	    params = this.generateList(params);
	    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
	  },

	  quotedString: function quotedString(str) {
	    return '"' + (str + '').replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
	    .replace(/\u2029/g, '\\u2029') + '"';
	  },

	  objectLiteral: function objectLiteral(obj) {
	    // istanbul ignore next

	    var _this = this;

	    var pairs = [];

	    _Object$keys(obj).forEach(function (key) {
	      var value = castChunk(obj[key], _this);
	      if (value !== 'undefined') {
	        pairs.push([_this.quotedString(key), ':', value]);
	      }
	    });

	    var ret = this.generateList(pairs);
	    ret.prepend('{');
	    ret.add('}');
	    return ret;
	  },

	  generateList: function generateList(entries) {
	    var ret = this.empty();

	    for (var i = 0, len = entries.length; i < len; i++) {
	      if (i) {
	        ret.add(',');
	      }

	      ret.add(castChunk(entries[i], this));
	    }

	    return ret;
	  },

	  generateArray: function generateArray(entries) {
	    var ret = this.generateList(entries);
	    ret.prepend('[');
	    ret.add(']');

	    return ret;
	  }
	};

	exports['default'] = CodeGen;
	module.exports = exports['default'];

/***/ })
/******/ ])
});
;
angular.module("angular-simple-sidebar", []).directive("angularSimpleSidebar", function (hotkeys, $rootScope) {
    var tabOpen = false;
    var escObj;
    return {
        restrict: "E", transclude: !0, scope: {
            items: "=", state: "=", title: "=", close: "=", settings: "=", expanded: "=", collapsed: "="
        }
        , template: '<a href="#" class="ass-menu-button" aria-label="{{ariaLabel}}" title="{{::title}}" ng-click="openSidebar()" no-right-click><i class="eg-font-2 eg-bars-icon"></i></a><div title=""><aside class="ass-aside-menu ass-slide-{{slide}}"><a href="#" ng-if="settings.close" class="ass-aside-menu-close" tabindex=0 ng-click="closeSidebar()" title="{{ariaLabelClose}}" aria-label="{{ariaLabelClose}}" no-right-click><span ng-if="!settings.closeIcon">[x]</span><span ng-if="settings.closeIcon"><i class="{{::settings.closeIcon}}"></i></span></a><h3 class="ass-aside-menu-title"></h3><a id="{{item.id}}" href="{{::item.link}}" target="{{::item.target}}" class="ass-aside-menu-item"  ng-click="closeSidebar()" ng-repeat="item in items" tabindex="-1" title="{{::item.name|translate}}" no-right-click><i ng-if="::item.icon" class="{{::item.icon}} ass-aside-menu-icon"></i><span>{{::item.name|translate}}</span></a></aside><div ng-if="state" class="ass-aside-overlay" ng-click="closeSidebar()"></div></div>', link: function (a, b, c) {
            a.ariaLabel = a.title + ' ' + a.collapsed;
            a.ariaLabelClose = a.close;
            var element = b;
            a.slide, a.state && (a.slide = "in"), a.openSidebar = function () {
                if (!tabOpen) {
                    escObj = hotkeys.get('esc');
                    hotkeys.add({
                        combo: 'esc',
                        description: 'Close sidebar',
                        callback: function () {
                            if (tabOpen) {
                                a.closeSidebar();
                            }
                        }
                    });
                    tabOpen = true;
                    a.ariaLabel = a.title + ' ' + a.expanded;
                    a.state = !0, a.slide = "in";
                    if (a.items) {
                        for (var i = 0; i < a.items.length; i++) {
                            document.getElementById(a.items[i].id).tabIndex = 0;
                        }
                    }
                    var inputs = element[0].querySelectorAll('.ass-aside-menu a');
                    var firstInput = angular.element(inputs[0]);
                    var lastInput = angular.element(inputs[inputs.length - 1]);

                    /*set focus on first input*/
                    //firstInput.focus();

                    /*redirect last tab to first input*/
                    lastInput.on('keydown', function (e) {
                        if ((e.which === 9 && !e.shiftKey)) {
                            e.preventDefault();
                            firstInput[0].focus();
                        }
                    });

                    /*redirect first shift+tab to last input*/
                    firstInput.on('keydown', function (e) {
                        if ((e.which === 9 && e.shiftKey)) {
                            e.preventDefault();
                            lastInput[0].focus();
                        }
                    });
                } else {
                    a.closeSidebar();
                }
            }
            , a.closeSidebar = function () {
                tabOpen = false;
                a.ariaLabel = a.title + ' ' + a.collapsed;
                hotkeys.del('esc');
                hotkeys.add(escObj);
                a.state = !1, a.slide = "out";
                if (a.items) {
                    for (var i = 0; i < a.items.length; i++) {
                        document.getElementById(a.items[i].id).tabIndex = -1;
                    }
                }
                $rootScope.$broadcast("application_sidebar_closed");
            };
        }
    };
}

);
var app=angular.module("app",["ngRoute","ngCookies","ngSanitize","ngAnimate","ui.bootstrap","pascalprecht.translate","ui.router","ngStorage","focus-if","angular-simple-sidebar","ngTouch","cfp.hotkeys","ngProgress"]);app.run(function($state,$rootScope,$window,$interval,ApplicationFactory,SessionFactory,HooksFactory,$http){$rootScope.apiPath=applicationDefaults.eGainChatApiPath;var locale=ApplicationFactory.GetUrlParameter("locale");$window.HooksFactory=HooksFactory;$rootScope.locale=locale?ApplicationFactory.GetCaseSensitiveLocale(locale):"en-US";$rootScope.lang=locale.split("-").length>0?locale.split("-")[0]:"en";$rootScope.isRtl=ApplicationFactory.isRtl();ApplicationFactory.SendMultiSubDomainSupportConfigToParent();ApplicationFactory.PersistToParentStorage("egPopoutWindowAttachCloseHandler","true","session");if(ApplicationFactory.isPoppedOut()){ApplicationFactory.PersistToParentStorage("egPopoutWindow","true","session");$interval(function(){var timestamp=Date.now();if(ApplicationFactory.IsIEorEdge()){ApplicationFactory.PersistToStorage("egPopoutWindowTimestamp",timestamp)}else{ApplicationFactory.PersistToParentStorage("egPopoutWindowTimestamp",timestamp)}},500)}ApplicationFactory.ValidateApplicationState().then(function(isValid){ApplicationFactory.InitializeApplicationState();if(isValid){processChatData($rootScope,$state,$window,ApplicationFactory,SessionFactory,$http)}else{$state.go("chat.error")}},function(){})});var processChatData=function($rootScope,$state,$window,ApplicationFactory,SessionFactory,$http){var isSmallDevice=ApplicationFactory.CheckMobile();var egChatSessionId=ApplicationFactory.GetUrlParameter("egSessionId");var egLastRequestId=ApplicationFactory.GetUrlParameter("egLastRequestId");var isVAEnabled=ApplicationFactory.GetUrlParameter("VAEnabled")==="true"?true:false;var egVASessionId=ApplicationFactory.GetUrlParameter("VASessionId");var egVAActive=ApplicationFactory.GetUrlParameter("VAActive")==="true"?true:false;var egVAEscalated=ApplicationFactory.GetUrlParameter("VAEscalated")==="true"?true:false;var egOffRecordBtnState=ApplicationFactory.GetUrlParameter("egOffRecordBtnState")==="true"?true:false;var isChatAttachmentEnabled=ApplicationFactory.GetUrlParameter("isChatAttachmentEnabled");var parentLostWhileChatInProgressInPopout=ApplicationFactory.GetUrlParameter("parentLost")==="true";if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){ApplicationFactory.RetrieveFromParentStorage("egSessionId",clearSessionStateIfNotValid)}else{processChat()}function clearSessionStateIfNotValid(data){if(data){var req={method:"POST",url:applicationDefaults.eGainChatApiPath+"/egain/chat/entrypoint/transcript",data:{sid:data},headers:{Accept:"application/json","Content-Type":"application/json"}};$http(req).then(function(response){processChat(data)},function(error){if("400-115"===error.data.code){SessionFactory.ClearSessionState();processChat(null)}else{$state.go("chat.error")}})}else{processChat(data)}}function processChat(data){if(data){egChatSessionId=data}var isNewChat=egChatSessionId===null||egLastRequestId===null;ApplicationFactory.GetXEgainSessionIDOnLoad();ApplicationFactory.GetTabIDOnLoad();if(true===ApplicationFactory.isPoppedOut()){var saveSessionId=ApplicationFactory.RetrieveFromStorage("egSessionId","session");if(saveSessionId&&saveSessionId===egChatSessionId){isNewChat=true}}else if(true===ApplicationFactory.IsUndocked()){egChatSessionId=ApplicationFactory.GetParameterFromUrlOrStorage("egSessionId");egLastRequestId=ApplicationFactory.GetCookie("egain-last-success-request-id");egLastRequestId=egLastRequestId?""+(parseInt(egLastRequestId)+1):null;var isInProgressFlagInLocal=ApplicationFactory.GetParameterFromUrlOrStorage("isUnDockedChatInProgress")=="true";egOffRecordBtnState=ApplicationFactory.GetParameterFromUrlOrStorage("egOffRecordBtnState")==="true"?true:false;isChatAttachmentEnabled=ApplicationFactory.GetParameterFromUrlOrStorage("isChatAttachmentEnabled");isNewChat=egChatSessionId===null||egLastRequestId===null;if(isInProgressFlagInLocal){isNewChat=true}}if(egVASessionId){isNewChat=false}$rootScope.isSmallDevice=isSmallDevice;$rootScope.isDocked=ApplicationFactory.IsDocked();$rootScope.isLargeDevice=!$rootScope.isSmallDevice;if(isNewChat){ApplicationFactory.RemoveFromParentStorage("agentJoined","local");if(!true===ApplicationFactory.IsUndocked()){SessionFactory.ClearSessionState()}if(isVAEnabled){$state.go("launch-va",{launchVA:true})}else{$state.go("launch-chat",{launchChat:true})}}else{if(egVAActive||egVAEscalated){SessionFactory.SetVASessionId(egVASessionId)}if(egVAActive){$state.go("attach")}else if(true===parentLostWhileChatInProgressInPopout){isSessionStillActive(egChatSessionId,$http,$state,SessionFactory)}else{var chatSessionData={sessionID:egChatSessionId,lastRequestId:egLastRequestId,OffRecordBtnState:egOffRecordBtnState};SessionFactory.SetSessionState(chatSessionData,egLastRequestId);$state.go("attach")}if(isChatAttachmentEnabled){SessionFactory.SetChatTransferredFlag(true);SessionFactory.SetChatAttachmentEnabledFlag(isChatAttachmentEnabled==="true")}else{SessionFactory.SetChatTransferredFlag(false)}}}};var isSessionStillActive=function(chatId,$http,$state,SessionFactory){if(chatId){var req={method:"POST",url:applicationDefaults.eGainChatApiPath+"/egain/chat/entrypoint/transcript",data:{sid:chatId},headers:{Accept:"application/json","Content-Type":"application/json"}};$http(req).then(function(response){},function(error){if("400-115"===error.data.code){SessionFactory.ClearSessionState();$state.go("launch-chat",{launchChat:true})}})}};app.config(function($stateProvider){var services={ApplicationFactory:"ApplicationFactory",ConfigFactory:"ConfigFactory",ConnectionFactory:"ConnectionFactory",CustomerFactory:"CustomerFactory",ChatHeaderFactory:"ChatHeaderFactory",SessionFactory:"SessionFactory",VideoFactory:"VideoFactory",AttachmentFactory:"AttachmentFactory",AuthenticationFactory:"AuthenticationFactory"};$stateProvider.state("launch-va",{templateUrl:applicationDefaults.eGainContextPath+"pages/va-landing/va-landing.html",resolve:services,params:{launchVA:false}}).state("launch-chat",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-landing/chat-landing.html",resolve:services,params:{launchChat:false,nextChatState:null}}).state("chat",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-main/chat-main.html",resolve:services,params:{currentLocale:applicationDefaults.eGainChatDefaultLocale,entryPointId:applicationDefaults.eGainChatEntryPointId}}).state("initialize",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-initialize/chat-initialize.html",resolve:services,params:{currentLocale:applicationDefaults.eGainChatDefaultLocale,entryPointId:applicationDefaults.eGainChatEntryPointId}}).state("attach",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-attach/chat-attach.html",resolve:services}).state("chat.pre-chat",{templateUrl:applicationDefaults.eGainContextPath+"pages/pre-chat/pre-chat.html",params:{VAEscalated:false,VAShowPreChat:false}}).state("chat.interaction",{templateUrl:applicationDefaults.eGainContextPath+"pages/interaction/interaction.html",params:{attachedChat:false,chatConnectionInfo:null}}).state("chat.post-chat",{templateUrl:applicationDefaults.eGainContextPath+"pages/post-chat/post-chat.html"}).state("chat.thank-you",{templateUrl:applicationDefaults.eGainContextPath+"pages/thanks-message/thanks-message.html"}).state("chat.deflection",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-deflection/chat-deflection.html",params:{customer:{},oneTagCustomerInfo:{}}}).state("chat.deflection.escalation-results",{template:"<div ng-include=\"'components/escalation-search-results-list/escalation-search-results-list.html'\"></div>"}).state("chat.deflection.article",{template:"<div ng-include=\"'components/article-content/article-content.html'\"></div>",params:{articleId:null,searchTerm:null,portalLanguage:null}}).state("chat.chat-unavailable",{templateUrl:applicationDefaults.eGainContextPath+"pages/chat-unavailable/chat-unavailable.html",params:{condition:null}}).state("chat.error",{templateUrl:applicationDefaults.eGainContextPath+"pages/error/error.html",params:{errorCode:null,errorMsg:null,minimizePage:false}})}).config(["$translateProvider",function($translateProvider){var options={files:[{prefix:applicationDefaults.eGainContextPath+"ext-components/l10n/",suffix:".json"},{prefix:applicationDefaults.eGainContextPath+"l10n/",suffix:".json"}]};$translateProvider.useStaticFilesLoader(options);$translateProvider.preferredLanguage(applicationDefaults.eGainChatDefaultLocale);$translateProvider.useSanitizeValueStrategy("sceParameters")}]).config(["$sessionStorageProvider",function($sessionStorageProvider){}]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("HttpInterceptorFactory")}]).config(["$compileProvider",function($compileProvider){$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|blob):|data:image\//);$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|blob|mailto):|data:image\//)}]);app.directive("egChatLaunchButton",["$state","$stateParams","$rootScope","ApplicationFactory","VAFactory",function($state,$stateParams,$rootScope,ApplicationFactory,VAFactory){return{link:function($scope,$element,attrs){$element.ready(function(){if(!$rootScope.isSmallDevice){var lout;function expandLaunchButton(event,data){$element.addClass("egain-hover");clearTimeout(lout);lout=setTimeout(function(){var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_LAUNCH_HOVER","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize)},0)}function collapseLaunchButton(event,data){$element.removeClass("egain-hover");clearTimeout(lout);lout=setTimeout(function(){var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_LAUNCH_HOVER_OUT","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize)},800)}var chatLaunchContainer=$element.find("div");chatLaunchContainer.bind("focus",function(event,data){expandLaunchButton(event,data)});chatLaunchContainer.bind("blur",function(event,data){collapseLaunchButton(event,data)});$element.bind("mouseover",function(event,data){expandLaunchButton(event,data)});$element.bind("mouseout",function(event,data){collapseLaunchButton(event,data)})}var launchButtonHandler=function(event,data){event.preventDefault();var enableTrackerMsg=ApplicationFactory.CreatePayload("NOTIFY","EG_ENABLE_TRACKER","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(enableTrackerMsg);if($stateParams.launchVA){VAFactory.SetVAActive(true);if(ApplicationFactory.GetUrlParameter("proactiveDockedOffer")==="1"){var acceptEventData={};acceptEventData={reason:ApplicationFactory.GetUrlParameter("reason"),bannerid:ApplicationFactory.GetUrlParameter("bannerid"),ruleId:ApplicationFactory.GetUrlParameter("ruleId"),interactionId:ApplicationFactory.GetUrlParameter("interactionId"),proactiveDocked:"1"};ApplicationFactory.PostMessageToParent(acceptEventData)}$state.go("chat.interaction")}else{if($scope.page.OnetagFailure===true){$state.go("chat.error",{errorCode:"ONETAG_FAILURE"});return}if(ApplicationFactory.GetUrlParameter("proactiveDockedOffer")==="1"){var acceptEventData={};acceptEventData={reason:ApplicationFactory.GetUrlParameter("reason"),bannerid:ApplicationFactory.GetUrlParameter("bannerid"),ruleId:ApplicationFactory.GetUrlParameter("ruleId"),interactionId:ApplicationFactory.GetUrlParameter("interactionId"),proactiveDocked:"1"};ApplicationFactory.PostMessageToParent(acceptEventData)}$state.go("initialize")}};if(!$rootScope.isSmallDevice){var launchButtonInputs=$element[0].querySelector(".chat-launch-input-container");if(launchButtonInputs){angular.element(launchButtonInputs).bind("click",launchButtonHandler)}$element.bind("keydown",function(event){var code=event.keyCode||event.which;if(code===13){launchButtonHandler(event)}})}else{$element.bind("click",launchButtonHandler)}})},restrict:"A"}}]);app.directive("egToolbar",["$window","$filter","$rootScope","$timeout","ConnectionFactory","ConfigFactory","TranscriptFactory","VideoFactory","ApplicationFactory","MessageFactory","$translate",function($window,$filter,$rootScope,$timeout,ConnectionFactory,ConfigFactory,TranscriptFactory,VideoFactory,ApplicationFactory,MessageFactory,$translate){function download(data,filename,type){if(MobileInterface){MobileInterface.SaveTranscript(data)}else{var a=document.createElement("a"),file=new Blob([data],{type:type});if(window.navigator.msSaveOrOpenBlob){window.navigator.msSaveOrOpenBlob(file,filename)}else if(ApplicationFactory.IsVisitorIOSPhone()||ApplicationFactory.IsVisitorIOSTablet()){var reader=new FileReader;var url=[window.location.protocol,"//",window.location.host,applicationDefaults.eGainChatApiPath,"/templates/chat/",ApplicationFactory.GetUrlParameter("templateName"),"/transcript/blank.html"].join("");var transcriptWindow=window.open(url);reader.onloadend=function(e){transcriptWindow.document.write(data);transcriptWindow.document.close()};transcriptWindow.onload=function(){reader.readAsDataURL(file)}}else{var url=URL.createObjectURL(file);a.href=url;a.download=filename;a.target="_blank";document.body.appendChild(a);a.click();setTimeout(function(){document.body.removeChild(a);window.URL.revokeObjectURL(url)},50)}}}function getTranscript(){var content=new Array;return TranscriptFactory.GetTranscript().then(function(transcriptContent){content.push(transcriptContent);content.push("</body></html>");var transcriptContent=content.join(" ");var parser=new DOMParser;var transcriptDoc=parser.parseFromString(transcriptContent,"text/html");var chatMessagesStr=transcriptDoc.getElementById("chatMessages").innerHTML;chatMessagesStr=chatMessagesStr.replace(/onclick\s*=\s*[\"\'].*?[\"\']/gi,"");chatMessagesStr=chatMessagesStr.replace(/<script.*?\/script>/gi,"");chatMessagesStr=chatMessagesStr.replace(/<a.*?>/gi,"<u>");chatMessagesStr=chatMessagesStr.replace(/<\/a>/gi," </u>");transcriptDoc.getElementById("chatMessages").innerHTML=chatMessagesStr;return transcriptDoc.documentElement.innerHTML})}function saveTranscript(){getTranscript().then(function(contentVal){var div=document.createElement("div");div.setAttribute("id","chatTranscript");div.innerHTML=contentVal;var x=div.getElementsByTagName("img");var protocol=document.location.protocol;var hostname=document.location.hostname;var baseUrl=protocol+"//"+hostname;for(var i=0;i<x.length;i++){var url=div.getElementsByTagName("img").item(i).getAttribute("src");url=ApplicationFactory.addBaseURL(url,baseUrl);div.getElementsByTagName("img").item(i).setAttribute("src",url)}contentVal=div.innerHTML;contentVal="<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'>"+contentVal;var sysdate=$filter("date")(new Date,"MMMdd_yyyy_hhmma");download(contentVal,"transcript_"+sysdate+".htm","html")})}return{link:function(scope,$element,attrs){var knowledgeBaseUrl=ConfigFactory.GetChatConfigurations().KnowledgeBaseUrl;var knowledgeBaseUrlTarget=ConfigFactory.GetChatConfigurations().KnowledgeBaseUrlTarget;function disableLinksIfCustomerBlocked(){var asideLinks=document.querySelectorAll(".ass-aside-menu-item");var allowedLinkIds=["egain-save-transcript","egain-faq"];for(var i=0;i<asideLinks.length;i++){if(allowedLinkIds.indexOf(asideLinks[i].id)===-1){asideLinks[i].classList.add("disabled-link")}}}scope.$on("application_service_customer_block_event",function(evt,data){disableLinksIfCustomerBlocked()});$element.bind("click",function(event,data){var elementId=event.target.id;if(""===elementId){elementId=event.target.parentElement?event.target.parentElement.id:""}if(ApplicationFactory.GetCustomerBlocked()===true){disableLinksIfCustomerBlocked()}if(elementId==="egain-save-transcript"){event.preventDefault();scope.page.menuexpanded=false;var oneTagEventInfo=ConnectionFactory.GetConnection().connected?{EventName:"ChatMenuButton",ButtonDesc:"Save"}:{EventName:"ChatSurveyMenuButton",ButtonDesc:"Save-Transcript"};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);saveTranscript()}if(elementId==="egain-faq"){var subject=$rootScope.subject?$rootScope.subject:"";event.preventDefault();var oneTagEventInfo=ConnectionFactory.GetConnection().connected?{EventName:"ChatMenuButton",ButtonDesc:"FAQ"}:{EventName:"ChatSurveyMenuButton",ButtonDesc:"FAQ"};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);scope.page.menuexpanded=false;if(knowledgeBaseUrl&&knowledgeBaseUrl.length>0){var isDocked=ApplicationFactory.IsDocked();var url="";if(knowledgeBaseUrl.indexOf("<search_text>")!=-1){url=knowledgeBaseUrl.replace("<search_text>",encodeURIComponent(subject))}else{url=knowledgeBaseUrl}var target=knowledgeBaseUrlTarget;switch(target){case"_new":$window.open(url);break;case"_parent":if(isDocked){parent.window.location.href=url}else{if(window.opener){window.opener.location.href=url}}break;default:$window.open(url);break}}}if(elementId==="egain-off-record"){event.preventDefault();var oneTagEventInfo={EventName:"ChatOffRecord"};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);scope.offRecord=!scope.offRecord;$translate(["APP.EG_OFF_RECORD"]).then(function(translations){var offRecordMsg=translations["APP.EG_OFF_RECORD"];MessageFactory.SendSystemMessage(offRecordMsg,"offrecord")});scope.addRemoveToolbarButton("offRecord",false);scope.addRemoveToolbarButton("onRecord",true);scope.enableAttachmentLink(true);scope.$apply()}if(elementId==="egain-on-record"){event.preventDefault();scope.offRecord=!scope.offRecord;$translate(["APP.EG_ON_RECORD"]).then(function(translations){var onRecordMsg=translations["APP.EG_ON_RECORD"];MessageFactory.SendSystemMessage(onRecordMsg,"onrecord")});scope.addRemoveToolbarButton("offRecord",true);scope.addRemoveToolbarButton("onRecord",false);scope.enableAttachmentLink(false);scope.$apply()}if(elementId==="egain-video-chat"){event.preventDefault();VideoFactory.VideoClick()}if(elementId==="egain-audio-chat"){event.preventDefault();VideoFactory.AudioClick()}})},restrict:"AEC"}}]);app.directive("closelink",["$window","ApplicationFactory","ConnectionFactory","SessionFactory","VAFactory","hotkeys",function($window,ApplicationFactory,ConnectionFactory,SessionFactory,VAFactory,hotkeys){return{link:function($scope,$element,attrs){var confirmMessage="";ApplicationFactory.Translate("APP.EG_CONFIRM_CLOSE_CHAT").then(function(result){confirmMessage=result});var endChat=function(element){if(ConnectionFactory.GetConnection().connected){if(element){var closeBtn=angular.element(element);if(closeBtn){closeBtn.addClass("disabled")}}ConnectionFactory.IsNetworkConnectionActive().then(function(response){if(false===response){ConnectionFactory.ShowConnectionErrorMessage();return}if(closeBtn&&true===closeBtn.hasClass("disabled")){closeBtn.removeClass("disabled")}if(confirm(confirmMessage)){$window.clearInterval($window.myIntervalId);eGainOneTagUtil.pushChatEvent("uac",{EventName:"ChatExit","Termination-Initiation":"User"});ConnectionFactory.EndChat("close_button_click")}})}else if(VAFactory.IsVAActive()){if(confirm(confirmMessage)){if(!SessionFactory.GetDuplicateSessionFlag()){SessionFactory.ClearSessionState()}ApplicationFactory.ResetChat();if(!ApplicationFactory.IsDocked()){if(ApplicationFactory.isPoppedOut()){ApplicationFactory.PersistToParentStorage("egPopoutWindow","false","session")}$window.close()}}}else{if(!SessionFactory.GetDuplicateSessionFlag()){SessionFactory.ClearSessionState()}ApplicationFactory.ResetChat();if(!ApplicationFactory.IsDocked()){if(ApplicationFactory.isPoppedOut()){ApplicationFactory.PersistToParentStorage("egPopoutWindow","false","session")}$window.close()}}};hotkeys.add({combo:"esc",description:"Close chat",callback:function(){endChat()}});$element.on("click",function(){if(MobileInterface){MobileInterface.SendCloseButtonClicked()}endChat(this)})},restrict:"A"}}]);app.directive("messagesubmit",["$rootScope","$timeout","ApplicationFactory","ConfigFactory","VAFactory",function($rootScope,$timeout,ApplicationFactory,ConfigFactory,VAFactory){return{restrict:"A",link:function($scope,$element,$attrs){$scope.isCustomerTyping=false;var chatConfig=ConfigFactory.GetChatConfigurations();var setTypingStatus=function(){$timeout(function(){try{var maxCharacterCount=chatConfig.MaxMessageSize;var currentCount=0;currentCount=$scope.customerMessage.length;var remainderCount=maxCharacterCount-currentCount;if(remainderCount<=50){$scope.showTypingStatus=true;$scope.characterCountRemaining=remainderCount}else{$scope.showTypingStatus=false}}catch(error){}},0)};$element.bind("keydown input",function(event){var code=event.keyCode||event.which;if(!VAFactory.IsVAActive()){if($scope.scp.customerTypingTimer){$timeout.cancel($scope.scp.customerTypingTimer);$scope.scp.customerTypingTimer=null}else{$scope.sendCustomerStartTypingStatus();$scope.isCustomerTyping=true}$scope.scp.customerTypingTimer=$timeout(function(){if($scope.scp.customerTypingTimer){$scope.sendCustomerStopTypingStatus()}$scope.scp.customerTypingTimer=null},chatConfig.CustomerNoTypingTimeout)}blurIfRequired=function(event){var messages=angular.element(document.querySelectorAll("#msg_container .chat-message .message"));if(messages.length<3){event.target.blur()}};if(code===13&&!event.shiftKey){event.preventDefault();$scope.$apply(function(){$scope.processAndSendMessage(event);if(ApplicationFactory.IsVisitorIOSPhone()||ApplicationFactory.IsVisitorIOSTablet()){blurIfRequired(event)}})}if(code===9){$scope.focusTextArea=false}setTypingStatus()});var chatWindow=angular.element(document.querySelector("#egain-chat-overlay"));var is_landscape=false;var updateView=function(){is_landscape=screen.height<screen.width;if(is_landscape){chatWindow.addClass("message-edit-wrapper")}else{chatWindow.removeClass("message-edit-wrapper")}};$element.bind("focus",function(event){$scope.isEditiorFocussed=true;setTypingStatus();if($rootScope.isSmallDevice){updateView();window.addEventListener("resize",updateView,false)}});$element.bind("blur",function(event){$scope.isEditiorFocussed=false;if($rootScope.isSmallDevice){chatWindow.removeClass("message-edit-wrapper");window.removeEventListener("resize",updateView,false)}});$element.bind("keyup",function(event){});if($rootScope.isLargeDevice){$element.ready(function(){$element[0].focus()});$scope.$on("application_sidebar_closed",function(){$element[0].focus()})}}}}]);app.directive("egLoginParams",["$timeout","$filter","ConfigFactory",function($timeout,$filter,ConfigFactory){return{restrict:"A",link:function($scope,$element,$attrs){if($scope.$last){$scope.preChatForm.loaded=true}}}}]);app.directive("egFormInput",["$timeout","$rootScope","ApplicationFactory",function($timeout,$rootScope,ApplicationFactory){return{restrict:"A",scope:{submitEnter:"=",egFormInput:"="},link:function($scope,$element,$attrs){if($attrs.checkOnLoad==="true"){$scope.$watch("isReady",function(newValue,oldValue){if(newValue===true){$timeout(function(){try{$scope.countAttr=$element.val().length}catch(error){}})}})}if($rootScope.isSmallDevice){var isAndroid=false;if(ApplicationFactory.IsVisitorAndroid()){isAndroid=true}var is_landscape=false;var chatWindow=angular.element(document.querySelector("#egain-chat-overlay"));var $el=$element[0];var doneBtn=angular.element($el.parentNode.getElementsByClassName("egain-done-btn")[0]);var updateView=function(){if(isAndroid){is_landscape=screen.height<screen.width}else{is_landscape=!(window.innerHeight>window.innerWidth)}if(is_landscape){chatWindow.addClass("form-edit-wrapper");angular.element($el.parentNode).addClass("edit-wrapper");document.body.scrollTop=document.documentElement.scrollTop=0}else{chatWindow.removeClass("form-edit-wrapper");angular.element($el.parentNode).removeClass("edit-wrapper")}};$element.bind("focus",function(){updateView();window.addEventListener("resize",updateView,false)});doneBtn.bind("click",function(){chatWindow.removeClass("form-edit-wrapper");window.removeEventListener("resize",updateView,false);angular.element($el.parentNode).removeClass("edit-wrapper")});$element.bind("blur",function(event){chatWindow.removeClass("form-edit-wrapper");window.removeEventListener("resize",updateView,false);angular.element($el.parentNode).removeClass("edit-wrapper")})}$element.bind("keydown",function(event){if($scope.egFormInput&&$scope.egFormInput.error){$scope.$apply(function(){$scope.egFormInput.error=false})}if(event.keyCode==13&&!event.shiftKey){event.preventDefault();$scope.submitEnter=true;$scope.$apply();return false}})}}}]);app.directive("egChatTranscript",["$window","$rootScope","MessageFactory","AttachmentFactory","VideoFactory","AuthenticationFactory","ApplicationFactory",function($window,$rootScope,MessageFactory,AttachmentFactory,VideoFactory,AuthenticationFactory,ApplicationFactory){return{link:function(scope,element,attrs){scope.page.isScrolledToBottom=function(){var contentDiv=document.querySelector(".egain-chat-content");if(Math.round(contentDiv.scrollHeight-contentDiv.offsetHeight)-Math.round(contentDiv.scrollTop)<=1){return true}return false};scope.page.scrollToBottom=function(){var contentDiv=document.querySelector(".egain-chat-content");if(contentDiv){contentDiv.scrollTop=contentDiv.scrollHeight;scope.page.showNewMessageSign=false}};scope.page.isScrollingOn=function(){var contentDiv=document.querySelector(".egain-chat-content");return contentDiv.scrollHeight>contentDiv.clientHeight};element.on("click",function(event){if(event.target.id==="egcb_join_link"){event.preventDefault();var aTag=event.target;var sessionId=event.target.getAttribute("egcb-sessionid");var winName=event.target.getAttribute("egcb-winname");var href=event.target.getAttribute("egcb-href");var templateLocale=new RegExp("[\\?&]locale=([^&#]*)").exec(document.location.href);var locale=templateLocale==null?"en_US":decodeURIComponent(templateLocale[1].replace(/-/g,"_"));event.target.getAttribute("target",winName);if(scope.page.eGainDockedChatCb&&scope.page.eGainDockedChatCb.openCobrowseWindow){scope.page.eGainDockedChatCb.openCobrowseWindow(href,winName,sessionId,locale)}}else if(event.target.getAttribute("egainElement")==="video"){event.preventDefault();var userId=event.target.getAttribute("egainUserId");var avmode=event.target.getAttribute("egainAVMode");var eventAction=event.target.getAttribute("egainAction");eventAction=eventAction?eventAction.toLowerCase():"";switch(eventAction){case"accept":{VideoFactory.AcceptVideoChat(userId,avmode);break}case"reject":{VideoFactory.DeclineVideoChat(userId,avmode);break}}}else if(event.target.id&&event.target.id.indexOf("va-radio-options")!=-1){event.preventDefault();var message=event.target.value;message=decodeURIComponent(message);event.target.parentNode.parentNode.hidden=true;MessageFactory.SendMessageToAgent(message)}else if(event.target.id==="va-text"){event.preventDefault();var message=event.target.href;var offset=-1;if(message){offset=message.indexOf("javascript:doReply")}if(offset>=0){var offset2=message.lastIndexOf(")");if(offset2>offset){message=message.substring(offset+20,offset2-1);message=decodeURIComponent(message);MessageFactory.SendMessageToAgent(message);document.querySelector("#egain-chat-message-input-horizontal textarea").focus()}}}else if(event.target.id==="eg-attachment-link"){event.preventDefault();AttachmentFactory.GetArticleAttachment(event.target.getAttribute("eg-attachment-id"))}else if(event.target.getAttribute("egainElement")==="authenticate"){event.preventDefault();var requestId=event.target.getAttribute("authReqId");var eventAction=event.target.getAttribute("egainAction");eventAction=eventAction?eventAction.toLowerCase():"";switch(eventAction){case"accept":{var confirmMessage="";ApplicationFactory.Translate("APP.EG_AUTH_REDIRECTION_IN_PROGRESS").then(function(result){confirmMessage=result;var windowFeatures="top=0,left=0,height=650,width=450,resizable=yes,scrollbars=yes,toolbar=no";var windowName="authWindow";$rootScope.authWindow=$window.open("",windowName,windowFeatures);$rootScope.authWindow.document.write(confirmMessage);var authReqButtonParentElement=angular.element(event.target).parent();if(authReqButtonParentElement){authReqButtonParentElement.children().addClass("disabled")}AuthenticationFactory.AcceptAuthRequest(requestId)});break}case"reject":{var authReqButtonParentElement=angular.element(event.target).parent();if(authReqButtonParentElement){authReqButtonParentElement.children().addClass("disabled")}AuthenticationFactory.DeclineAuthRequest(requestId);break}}}else if(event.target.nodeName==="A"){event.preventDefault();var ele=angular.element(event.target);var url=ele.attr("href");if(url&&"string"===typeof url&&"#"!==url){$window.open(url,"eGainChat")}}})}}}]);app.directive("scrollBottom",["$timeout",function($timeout){function link($scope,$element,attrs){$element.on("click",function(){$timeout(function(){var elem=document.getElementsByClassName(attrs.scrollWindow)[0];elem.scrollTop=elem.scrollHeight},0)})}return{link:link,scope:{scrollBottom:"="},restrict:"A"}}]);app.directive("egStatusBar",function($timeout){function link(scope,element,attrs){var transcriptElement;element.ready(function(){transcriptElement=document.querySelector(".egain-chat-content");scope.isScrolledToBottom=function(){if(Math.round(transcriptElement.scrollHeight-transcriptElement.offsetHeight)-Math.round(transcriptElement.scrollTop)<=1){return true}return false};scope.$watch("page.showNewMessageSign",function(newValue,oldValue){if(newValue){angular.element(transcriptElement).on("scroll",function(){var ifTranscriptScrolledToBottom=scope.isScrolledToBottom();if(ifTranscriptScrolledToBottom&&scope.page.showNewMessageSign){scope.page.showNewMessageSign=false;scope.$apply()}})}else{angular.element(transcriptElement).off("scroll")}})})}return{link:link,restrict:"A"}});app.directive("egSearchresultArticleLink",["$state",function($state){return{restrict:"A",link:function(scope,element,attrs){element.on("click",function(){var oneTagEventInfo={EventName:"ChatKBSearchView",ArticleId:scope.article.id,Rank:this.getAttribute("index")?parseInt(this.getAttribute("index"))+1:0};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);$state.go("chat.deflection.article",{articleId:scope.article.id,searchTerm:scope.searchTerm,portalLanguage:scope.portalLanguage});scope.$apply()})}}}]);app.directive("egCallbackLink",["$window","ApplicationFactory",function($window,ApplicationFactory){return{link:function($scope,$element,attrs){$element.on("click",function(){if($scope.contactOption.url!=null&&$scope.contactOption.url!==""){if($scope.contactOption.url.toLowerCase().indexOf("mailto:")===0){ApplicationFactory.SetMailLinkClicked(true);setTimeout(function(){ApplicationFactory.SetMailLinkClicked(false)},10)}else $window.open($scope.contactOption.url)}})},restrict:"A"}}]);app.directive("egMinimizeWindow",["$state","$rootScope","ApplicationFactory","MessageFactory","GHFactory","SessionFactory",function($state,$rootScope,ApplicationFactory,MessageFactory,GHFactory,SessionFactory){return{link:function($scope,$element,attrs){var chatWindow=angular.element(document.querySelector("#egain-chat-overlay"));var chatHeader=angular.element(document.querySelector("#egain-chat-header-small"));$scope.$watch("page.visible",function(newValue){if(newValue){$scope.chatWindowHeight=chatWindow[0].offsetHeight}});var rebuildScrollbar=function(e){if(typeof $scope.page.scrollToBottom!=="undefined"){$scope.page.scrollToBottom()}e.target.removeEventListener("transitionend",rebuildScrollbar)};$scope.$watch("page.minimized",function(newValue,oldValue){if(newValue==true){if(oldValue!==true){chatWindow.css("transition","height .5s")}chatWindow.removeClass("egain-maximized");chatWindow.addClass("egain-minimized");var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_MINIMIZE","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);if(!SessionFactory.GetDuplicateSessionFlag()){ApplicationFactory.PersistToParentStorage("egChatWindowState",$scope.page.minimized)}}if(newValue==false){if(oldValue!==false){chatWindow.css("transition","height .5s")}var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_MAXIMIZE","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);chatWindow.removeClass("egain-minimized");chatWindow.addClass("egain-maximized");if(GHFactory.GetGHActive()){GHFactory.ExpandGHWindow(false)}else if(GHFactory.GetGHActive()===false){GHFactory.CollapseGHWindow(false)}if(angular.equals($state.current.name,"chat.interaction")&&oldValue==true){document.querySelector("#egain-chat-overlay").addEventListener("transitionend",rebuildScrollbar)}if($scope.page.badgeCount>0){$scope.page.badgeCount=0;MessageFactory.SetBadgeCount($scope.page.badgeCount)}if(!SessionFactory.GetDuplicateSessionFlag()){ApplicationFactory.PersistToParentStorage("egChatWindowState",$scope.page.minimized)}}});var savedWindowState=ApplicationFactory.GetUrlParameter("egChatWindowState");$scope.page.minimized=angular.equals("true",savedWindowState)?true:false},restrict:"A"}}]);app.directive("egResizeDiv",[function(){return{link:function($scope,$element,attrs){$scope.$watchGroup(["page.ready","page.headerLoaded"],function(newValues,oldValues){if(newValues[0]&&newValues[1]){$scope.page.visible=true;removeWaitElement()}})},restrict:"A"}}]);app.directive("egHeader",[function(){return{link:function($scope,$element,attrs){$element.ready(function(){$scope.page.progressbar.setParent($element[0])})},restrict:"A"}}]);app.directive("egOffRecordBtn",["$translate","ApplicationFactory","MessageFactory",function($translate,ApplicationFactory,MessageFactory){return{link:function($scope,$element,attrs){$scope.$watch("offRecord",function(newValue,oldValue){if(newValue===true&&oldValue===false){MessageFactory.SetOffRecordFlag(true);ApplicationFactory.PersistToParentStorage("egOffRecordBtnState",true)}else if(newValue===false&&oldValue===true){MessageFactory.SetOffRecordFlag(false);ApplicationFactory.PersistToParentStorage("egOffRecordBtnState",false)}})},restrict:"A"}}]);app.directive("egArticleContent",["$state","$window","$timeout",function($state,$window,$timeout){return{restrict:"AC",link:function(scope,el,attr){scope.$watch("page.ready",function(newValue){if(newValue){$timeout(function(){angular.element(document.querySelector("#egain-chat-article-content")).find("a").on("click",function(e){e.preventDefault();var a=document.createElement("a");a.href=e.currentTarget.href;a.hostname;if(!(document.location.host==a.hostname)){$window.open(e.currentTarget.href,"_blank","toolbar=yes, scrollbars=yes, resizable=yes, top=60, left=500, width=600, height=600")}else{scope.page.previousArticles.push(scope.article.id);$state.go("chat.deflection.article",{articleId:e.target.id});scope.$apply()}})})}})}}}]);app.directive("egPopoutWindow",["$window","ApplicationFactory","SessionFactory",function($window,ApplicationFactory,SessionFactory){return{link:function($scope,$element,attrs){$element.on("click",function(){ApplicationFactory.isPopoutButtonClicked(true);var p=ApplicationFactory.CreatePayload("POPOUT","POPOUT_START","","EGLV_DOCK_POPOUT");p.compatible={isRelayImplementedInTemplate:true};ApplicationFactory.PostMessageToParent(p,"*")})},restrict:"A"}}]);app.directive("egDragDrop",["$timeout","$filter","AttachmentFactory","ApplicationFactory",function($timeout,$filter,AttachmentFactory,ApplicationFactory){return{restrict:"A",link:function($scope,$element,$attrs){$element.ready(function(){function dragEnterLeave(evt){evt.stopPropagation();evt.preventDefault();$scope.$apply(function(){$scope.dropText="";$scope.dropClass=""})}$element.bind("dragenter",dragEnterLeave);$element.bind("dragleave",dragEnterLeave);$element.bind("dragover",function(evt){evt.stopPropagation();evt.preventDefault()});$element.bind("drop",function(event,data){event.stopPropagation();event.preventDefault();$scope.$apply(function(){$scope.dropText="";$scope.dropClass=""});var files=event.dataTransfer.files;if(files.length>0&&(ApplicationFactory.isDescendent("egain-chat-content",event.target)||ApplicationFactory.isDescendent("egain-chat-header-small",event.target)||ApplicationFactory.isDescendent("egain-chat-alternate-engagement-options",event.target))){$scope.$apply(function(){$scope.files=[];for(var i=0;i<files.length;i++){$scope.files.push(files[i])}AttachmentFactory.ValidateAttachmentFiles($scope.files,true)})}})})}}}]);app.directive("egPagePushMessage",["$window","$timeout",function($window,$timeout){return{restrict:"A",link:function($scope,$element,$attrs){$timeout(function(){var anchorElements=$element.find("a");if(anchorElements&&anchorElements.length&&0<anchorElements.length){var url=null;var ele=null;var isURLAvailable=false;for(var i=0;i<anchorElements.length;i++){ele=anchorElements[i]?angular.element(anchorElements[i]):null;url=ele&&ele.attr("href")?ele.attr("href"):null;if(url&&"string"===typeof url){isURLAvailable=true;break}}if(true===isURLAvailable){$window.open(url,"eGainChat")}}})}}}]);app.directive("egSurveyInputField",["$rootScope","$timeout",function($rootScope,$timeout){return{link:function($scope,$element,attrs){if($rootScope.isSmallDevice){var chatWindow=angular.element(document.querySelector("#egain-chat-overlay"));var is_landscape=false;var $el=$element[0];var doneBtn=angular.element($el.parentNode.getElementsByClassName("egain-done-btn")[0]);var updateView=function(){is_landscape=screen.height<screen.width;if(is_landscape){chatWindow.addClass("input-edit-wrapper");angular.element($el.parentNode).addClass("edit-wrapper")}else{chatWindow.removeClass("input-edit-wrapper");angular.element($el.parentNode).removeClass("edit-wrapper")}};$element.bind("focus",function(event){updateView();window.addEventListener("resize",updateView,false)});doneBtn.bind("click",function(){chatWindow.removeClass("input-edit-wrapper");window.removeEventListener("resize",updateView,false);angular.element($el.parentNode).removeClass("edit-wrapper")});$element.bind("blur",function(event){chatWindow.removeClass("input-edit-wrapper");window.removeEventListener("resize",updateView,false);angular.element($el.parentNode).removeClass("edit-wrapper")})}$element.bind("keydown",function(event){$timeout(function(){$scope.question.showCharacterCount=true;try{var maxCharacterCount=attrs.maxlength?attrs.maxlength:2e3;var currentCount=0;currentCount=$scope.question.answer.length;var remainderCount=maxCharacterCount-currentCount;$scope.question.characterCount=remainderCount}catch(error){}})})},restrict:"A"}}]);app.directive("keyNavigation",["$timeout","VAFactory",function($timeout,VAFactory){return{link:function($scope,$element){$element.ready(function(){if(VAFactory.IsVAActive()){var bubble=$element[0].querySelector(".bubble");if(bubble){bubble.focus()}}});$element.bind("keydown",function(event){var focusNextChild=function(currentChild){if(position>=0){currentMessageBubble.tabIndex=-1;currentMessageBubble.blur()}var el;if(currentChild&&currentChild.length>0){if(currentChild[0].className.indexOf("system")>-1){el=currentChild[0]}else{el=currentChild.children().children()[1]}}if(el){el.focus();el.tabIndex=0}};var code=event.keyCode||event.which;if(code===38||code===40){event.preventDefault();var siblings=$element.parent().children();var position=-1;var currentMessageBubble;var isPreviousMessageAttachment=false;var isNextMessageAttachment=false;var isCurrentMessageAttachment=false;if(angular.element($element.children())[0].className.indexOf("system")>-1){currentMessageBubble=$element.children()[0]}else{currentMessageBubble=$element.children().children().children()[1];if(angular.element(currentMessageBubble).children()[0].className.indexOf("attachmentImageDiv")>-1){isCurrentMessageAttachment=true}}for(var i=0;i<siblings.length;i++){if(siblings[i]===$element[0]){position=i;break}}if(code===40){var bubble=angular.element(siblings[position+1]).children().children().children().children();if(bubble[2]&&bubble[2].className.indexOf("attachmentImageDiv")>-1){isNextMessageAttachment=true}var nextMessageBubble;if(siblings.length>position+1){if(angular.element(siblings[position+1]).children().length>0&&angular.element(siblings[position+1]).children()[0].className.indexOf("system")>-1){nextMessageBubble=angular.element(siblings[position+1]).children()[0]}else{nextMessageBubble=angular.element(siblings[position+1]).children().children().children()}}var flag=true;var checkNextAttachmentBubble=true;if(isCurrentMessageAttachment){checkNextAttachmentBubble=false;var buttons=angular.element(currentMessageBubble).children().children().children().children();var downloadImage=angular.element(angular.element(currentMessageBubble).children().children()[0]).children().children()[0];if(buttons&&buttons.length===3){if(buttons[2].tabIndex===-1){nextMessageBubble=currentMessageBubble}if(buttons[1].tabIndex===0){buttons[1].tabIndex=-1;buttons[1].blur();buttons[2].tabIndex=0;buttons[2].focus()}else if(buttons[2].tabIndex===0&&nextMessageBubble){buttons[2].tabIndex=-1;buttons[2].blur();if(isNextMessageAttachment){checkNextAttachmentBubble=true}else{nextMessageBubble[1].focus();nextMessageBubble[1].tabIndex=0}}else if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();buttons[1].tabIndex=0;buttons[1].focus()}}else if(downloadImage){if(downloadImage.tabIndex===0&&nextMessageBubble){downloadImage.tabIndex=-1;downloadImage.blur();nextMessageBubble.tabIndex=0;nextMessageBubble.focus()}else{downloadImage.tabIndex=0;downloadImage.focus();currentMessageBubble.blur();currentMessageBubble.tabIndex=-1}}flag=false}if(isNextMessageAttachment&&nextMessageBubble&&checkNextAttachmentBubble){var buttons=angular.element(nextMessageBubble).children().children().children().children();var downloadImage=angular.element(angular.element(nextMessageBubble).children().children()[0]).children().children()[0];if(buttons&&buttons.length===3){if(buttons[1].tabIndex===0){buttons[1].tabIndex=-1;buttons[1].blur();buttons[2].tabIndex=0;buttons[2].focus()}else if(buttons[2].tabIndex===0){buttons[2].tabIndex=-1;buttons[2].blur();nextMessageBubble.focus();nextMessageBubble.tabIndex=0}else if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();buttons[1].tabIndex=0;buttons[1].focus()}else{downloadImage.tabIndex=0;downloadImage.focus();currentMessageBubble.tabIndex=-1;currentMessageBubble.blur()}}else if(downloadImage){if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();currentMessageBubble.tabIndex=-1;currentMessageBubble.blur()}else{downloadImage.tabIndex=0;downloadImage.focus();angular.element(nextMessageBubble.children().children()[0]).children().children()[0].focus();angular.element(nextMessageBubble.children().children()[0]).children().children()[0].tabIndex=0}}flag=false}if(flag){var currentChild=angular.element(siblings[position+1]).children();if(currentChild&&currentChild.length>0){focusNextChild(currentChild)}}}else if(code===38){var bubble=angular.element(siblings[position-1]).children().children().children().children();if(bubble[2]&&bubble[2].className.indexOf("attachmentImageDiv")>-1){isPreviousMessageAttachment=true}var previousMessageBubble;if(angular.element(siblings[position-1]).children().length>0&&angular.element(siblings[position-1]).children()[0].className.indexOf("system")>-1){previousMessageBubble=angular.element(siblings[position-1]).children()[0]}else{previousMessageBubble=angular.element(siblings[position-1]).children().children().children()[1]}var flag=true;var checkPreviousAttachmentBubble=true;if(isCurrentMessageAttachment){checkPreviousAttachmentBubble=false;var buttons=angular.element(currentMessageBubble).children().children().children().children();var downloadImage=angular.element(angular.element(currentMessageBubble).children().children()[0]).children().children()[0];if(buttons&&buttons.length===3){if(buttons[1].tabIndex===0){buttons[1].tabIndex=-1;buttons[1].blur();downloadImage.tabIndex=0;downloadImage.focus()}else if(buttons[2].tabIndex===0){buttons[2].tabIndex=-1;buttons[2].blur();buttons[1].tabIndex=0;buttons[1].focus()}else if(downloadImage.tabIndex===0&&previousMessageBubble){downloadImage.tabIndex=-1;downloadImage.blur();if(isPreviousMessageAttachment){checkPreviousAttachmentBubble=true}else{previousMessageBubble.focus();previousMessageBubble.tabIndex=0}}flag=false}else if(downloadImage){if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();previousMessageBubble.focus();previousMessageBubble.tabIndex=0}else{downloadImage.tabIndex=0;downloadImage.focus()}}}if(isPreviousMessageAttachment&&previousMessageBubble&&checkPreviousAttachmentBubble){var buttons=angular.element(previousMessageBubble).children().children().children().children();var downloadImage=angular.element(angular.element(previousMessageBubble).children().children()[0]).children().children()[0];if(buttons&&buttons.length===3){if(buttons[1].tabIndex===0){buttons[1].tabIndex=-1;buttons[1].blur();downloadImage.tabIndex=0;downloadImage.focus()}else if(buttons[2].tabIndex===0){buttons[2].tabIndex=-1;buttons[2].blur();buttons[1].tabIndex=0;buttons[1].focus()}else if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();previousMessageBubble.focus();previousMessageBubble.tabIndex=0}else{currentMessageBubble.tabIndex=-1;currentMessageBubble.blur();buttons[2].tabIndex=0;buttons[2].focus()}flag=false}else if(downloadImage){if(downloadImage.tabIndex===0){downloadImage.tabIndex=-1;downloadImage.blur();previousMessageBubble.focus();previousMessageBubble.tabIndex=0}else{downloadImage.tabIndex=0;downloadImage.focus()}}}if(flag){var currentChild=angular.element(siblings[position-1]).children();if(currentChild&&currentChild.length>0){focusNextChild(currentChild)}}}}})}}}]);app.directive("focus",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var params=scope.$eval(attrs.focus);if(params.index===0){$timeout(function(){angular.element(element)[0].focus()},1e3)}}}});app.directive("focusStar",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var params=scope.$eval(attrs.focusStar);if(element.length>0&&element[0].children&&element[0].children.length>0){var childElem=angular.element(element[0].children[0]);childElem.attr("aria-label",attrs.arialabel);if(params.index===0){childElem.attr("id","que_"+params.index);childElem.attr("aria-labelledby","surveyHeading que_"+params.index);childElem.bind("keydown",function(event){if(event.keyCode===9){childElem.attr("aria-labelledby","")}})}angular.element(element).attr("aria-label","")}if(params.index===0){$timeout(function(){angular.element(element).find("span")[0].focus()},1e3)}}}});app.directive("vaildateAriaAttrs",function($timeout){return{restrict:"A",link:function($scope,$element,attrs){$timeout(function(){var children=angular.element($element[0].children);for(var i=0;i<children.length;i++){var elem=angular.element(children[i]);if(typeof elem.attr("aria-valuenow")!=="undefined"&&elem.attr("aria-valuenow")!==""&&(typeof elem.attr("aria-valuetext")!=="undefined"||elem.attr("aria-valuetext")==="")){elem.attr("aria-valuetext",elem.attr("aria-valuenow"))}}})}}});app.directive("minimizedLaunchButton",function($timeout){return{restrict:"A",link:function($scope,$element){$element.on("keydown",function(event){var code=event.which||event.keyCode;if(code===13){$timeout(function(){$scope.page.minimized=false})}})}}});app.directive("dropdownSizeHandler",["$rootScope","$timeout","$window","ConfigFactory",function($rootScope,$timeout,$window,ConfigFactory){return{restrict:"A",link:function($scope,$element,attrs){var mobileOrTablet=navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i);var edge=window.navigator.userAgent.indexOf("Edge")>-1;var chatConfig=ConfigFactory.GetChatConfigurations();$element[0].style.font=chatConfig.templateStyle.font;var selectElements=angular.element(document.querySelectorAll("#PreChatForm select"));for(var i=0;i<selectElements.length;i++){selectElements[i].style.font=chatConfig.templateStyle.font;if(mobileOrTablet){selectElements[i].style["white-space"]="normal"}}if(!mobileOrTablet&&!edge){var addDummy=function(text){var dummyDiv=document.createElement("div");var textNode=document.createTextNode(text);dummyDiv.appendChild(textNode);dummyDiv.style["display"]="inline-block";dummyDiv.style["font"]=chatConfig.templateStyle.font;dummyDiv.style["padding-left"]="5px";dummyDiv.style["position"]="fixed";dummyDiv.style["top"]="-1000px";dummyDiv.classList.add("dummy-element");document.body.appendChild(dummyDiv);return dummyDiv};var removeAllDummies=function(){var elems=document.getElementsByClassName("dummy-element");for(var i=0;i<elems.length;i++){document.body.removeChild(elems[i])}if(elems.length){removeAllDummies()}};var resizeOptions=function(element){var text=$scope.option.text;var dummyDiv=addDummy(text);var parentElement=angular.element(element.parentElement)[0];var dummyDivWidth=angular.element(dummyDiv)[0].offsetWidth;if(parentElement.offsetWidth>0&&parentElement.offsetWidth<dummyDivWidth){var selectDisplayAreaWidth=parentElement.offsetWidth-10;var done=false,d=3;while(!done){var maxLength=text.length-d<=0?1:text.length-d;var newText=text.substr(0,maxLength)+"...";var newDummyDiv=addDummy(newText);var newDummyDivWidth=angular.element(newDummyDiv)[0].offsetWidth;if(newDummyDivWidth<=selectDisplayAreaWidth){text=newText;done=true}d=d+3}$element[0].text=text}else{$element[0].text=$scope.option.text}removeAllDummies();return $scope.option};resizeOptions($element[0]);$timeout(function(){var textData=resizeOptions($element[0]);$element[0].displayText=textData.displayText},200);angular.element($window).bind("resize",function(){var textData=resizeOptions($element[0]);$element[0].displayText=textData.displayText})}}}}]);app.directive("noRightClick",function($timeout){return{restrict:"A",link:function($scope,$element,attrs){$element.bind("contextmenu",function(event){event.preventDefault()})}}});(function(){"use strict";angular.module("pascalprecht.translate").directive("ariaTranslate",ariaTranslateDirectiveFactory);function ariaTranslateDirectiveFactory($rootScope,$translate){return{link:link,priority:-1};function link(scope,element,attrs){scope.off={};scope.off.$translateChangeSuccess=$rootScope.$on("$translateChangeSuccess",translateAriaLabel);scope.off.$translateRefreshEnd=$rootScope.$on("$translateRefreshEnd",translateAriaLabel);translateAriaLabel();function setAriaLabel(value){attrs.$set("ariaLabel",value)}function translateAriaLabel(){var translationId=attrs.ariaTranslate;var translation=$translate.instant(translationId);setAriaLabel(translation||translationId);if(translation!==translationId){scope.off.$translateRefreshEnd()}}}}})(window.angular);app.filter("toTrusted",function($sce){return function(htmlCode){return $sce.trustAsHtml(htmlCode)}});app.filter("highlightArticle",function($sce){return function(origText,characterRanges){if(!angular.isDefined(characterRanges)||!angular.isDefined(characterRanges.length)){return $sce.trustAsHtml(origText)}else{var newSnippet=[];var currentCRIndex=0;for(var i=0;i<origText.length;i++){var CR=characterRanges[currentCRIndex];if(angular.isDefined(CR)){if(i===CR.firstPos)newSnippet.push('<span class="egain-highlighted-content">');newSnippet.push(origText.charAt(i));if(i===CR.lastPos-1){newSnippet.push("</span>");if(characterRanges.length>currentCRIndex+1){currentCRIndex++}}}}var highlightedText=newSnippet.join("");return $sce.trustAsHtml(highlightedText)}}});app.filter("nospace",function(){return function(value){return!value?"":value.replace(/<br ?\/?>/g,"").replace(/&nbsp;/g,"").trim()}});
/*! egain-client-library 17-08-2020 */
(function(global,factory){"use strict";if(typeof module==="object"&&typeof module.exports==="object"){module.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document")}return factory(w)}}else{factory(global)}})(typeof window!=="undefined"?window:this,function(window,noGlobal){"use strict";var arr=[];var getProto=Object.getPrototypeOf;var slice=arr.slice;var flat=arr.flat?function(array){return arr.flat.call(array)}:function(array){return arr.concat.apply([],array)};var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var fnToString=hasOwn.toString;var ObjectFunctionString=fnToString.call(Object);var support={};var isFunction=function isFunction(obj){return typeof obj==="function"&&typeof obj.nodeType!=="number"};var isWindow=function isWindow(obj){return obj!=null&&obj===obj.window};var document=window.document;var preservedScriptAttributes={type:true,src:true,nonce:true,noModule:true};function DOMEval(code,node,doc){doc=doc||document;var i,val,script=doc.createElement("script");script.text=code;if(node){for(i in preservedScriptAttributes){val=node[i]||node.getAttribute&&node.getAttribute(i);if(val){script.setAttribute(i,val)}}}doc.head.appendChild(script).parentNode.removeChild(script)}function toType(obj){if(obj==null){return obj+""}return typeof obj==="object"||typeof obj==="function"?class2type[toString.call(obj)]||"object":typeof obj}var version="3.5.1",jQuery=function(selector,context){return new jQuery.fn.init(selector,context)};jQuery.fn=jQuery.prototype={jquery:version,constructor:jQuery,length:0,toArray:function(){return slice.call(this)},get:function(num){if(num==null){return slice.call(this)}return num<0?this[num+this.length]:this[num]},pushStack:function(elems){var ret=jQuery.merge(this.constructor(),elems);ret.prevObject=this;return ret},each:function(callback){return jQuery.each(this,callback)},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem)}))},slice:function(){return this.pushStack(slice.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(jQuery.grep(this,function(_elem,i){return(i+1)%2}))},odd:function(){return this.pushStack(jQuery.grep(this,function(_elem,i){return i%2}))},eq:function(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[])},end:function(){return this.prevObject||this.constructor()},push:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;if(typeof target==="boolean"){deep=target;target=arguments[i]||{};i++}if(typeof target!=="object"&&!isFunction(target)){target={}}if(i===length){target=this;i--}for(;i<length;i++){if((options=arguments[i])!=null){for(name in options){copy=options[name];if(name==="__proto__"||target===copy){continue}if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){src=target[name];if(copyIsArray&&!Array.isArray(src)){clone=[]}else if(!copyIsArray&&!jQuery.isPlainObject(src)){clone={}}else{clone=src}copyIsArray=false;target[name]=jQuery.extend(deep,clone,copy)}else if(copy!==undefined){target[name]=copy}}}}return target};jQuery.extend({expando:"jQuery"+(version+Math.random()).replace(/\D/g,""),isReady:true,error:function(msg){throw new Error(msg)},noop:function(){},isPlainObject:function(obj){var proto,Ctor;if(!obj||toString.call(obj)!=="[object Object]"){return false}proto=getProto(obj);if(!proto){return true}Ctor=hasOwn.call(proto,"constructor")&&proto.constructor;return typeof Ctor==="function"&&fnToString.call(Ctor)===ObjectFunctionString},isEmptyObject:function(obj){var name;for(name in obj){return false}return true},globalEval:function(code,options,doc){DOMEval(code,{nonce:options&&options.nonce},doc)},each:function(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break}}}return obj},makeArray:function(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr==="string"?[arr]:arr)}else{push.call(ret,arr)}}return ret},inArray:function(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i)},merge:function(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j]}first.length=i;return first},grep:function(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;for(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i])}}return matches},map:function(elems,callback,arg){var length,value,i=0,ret=[];if(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value)}}}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value)}}}return flat(ret)},guid:1,support:support});if(typeof Symbol==="function"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator]}jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(_i,name){class2type["[object "+name+"]"]=name.toLowerCase()});function isArrayLike(obj){var length=!!obj&&"length"in obj&&obj.length,type=toType(obj);if(isFunction(obj)||isWindow(obj)){return false}return type==="array"||length===0||typeof length==="number"&&length>0&&length-1 in obj}var Sizzle=function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando="sizzle"+1*new Date,preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),nonnativeSelectorCache=createCache(),sortOrder=function(a,b){if(a===b){hasDuplicate=true}return 0},hasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,pushNative=arr.push,push=arr.push,slice=arr.slice,indexOf=function(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i}}return-1},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|"+"ismap|loop|multiple|open|readonly|required|scoped",whitespace="[\\x20\\t\\r\\n\\f]",identifier="(?:\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+"*([*^$|!~]?=)"+whitespace+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+whitespace+"*\\]",pseudos=":("+identifier+")(?:\\(("+"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+"((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|"+".*"+")\\)|)",rwhitespace=new RegExp(whitespace+"+","g"),rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rdescend=new RegExp(whitespace+"|>"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={ID:new RegExp("^#("+identifier+")"),CLASS:new RegExp("^\\.("+identifier+")"),TAG:new RegExp("^("+identifier+"|[*])"),ATTR:new RegExp("^"+attributes),PSEUDO:new RegExp("^"+pseudos),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),bool:new RegExp("^(?:"+booleans+")$","i"),needsContext:new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rhtml=/HTML$/i,rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,runescape=new RegExp("\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\([^\\r\\n\\f])","g"),funescape=function(escape,nonHex){var high="0x"+escape.slice(1)-65536;return nonHex?nonHex:high<0?String.fromCharCode(high+65536):String.fromCharCode(high>>10|55296,high&1023|56320)},rcssescape=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,fcssescape=function(ch,asCodePoint){if(asCodePoint){if(ch==="\0"){return"�"}return ch.slice(0,-1)+"\\"+ch.charCodeAt(ch.length-1).toString(16)+" "}return"\\"+ch},unloadHandler=function(){setDocument()},inDisabledFieldset=addCombinator(function(elem){return elem.disabled===true&&elem.nodeName.toLowerCase()==="fieldset"},{dir:"parentNode",next:"legend"});try{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes);arr[preferredDoc.childNodes.length].nodeType}catch(e){push={apply:arr.length?function(target,els){pushNative.apply(target,slice.call(els))}:function(target,els){var j=target.length,i=0;while(target[j++]=els[i++]){}target.length=j-1}}}function Sizzle(selector,context,results,seed){var m,i,elem,nid,match,groups,newSelector,newContext=context&&context.ownerDocument,nodeType=context?context.nodeType:9;results=results||[];if(typeof selector!=="string"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results}if(!seed){setDocument(context);context=context||document;if(documentIsHTML){if(nodeType!==11&&(match=rquickExpr.exec(selector))){if(m=match[1]){if(nodeType===9){if(elem=context.getElementById(m)){if(elem.id===m){results.push(elem);return results}}else{return results}}else{if(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results}}}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results}}if(support.qsa&&!nonnativeSelectorCache[selector+" "]&&(!rbuggyQSA||!rbuggyQSA.test(selector))&&(nodeType!==1||context.nodeName.toLowerCase()!=="object")){newSelector=selector;newContext=context;if(nodeType===1&&(rdescend.test(selector)||rcombinators.test(selector))){newContext=rsibling.test(selector)&&testContext(context.parentNode)||context;if(newContext!==context||!support.scope){if(nid=context.getAttribute("id")){nid=nid.replace(rcssescape,fcssescape)}else{context.setAttribute("id",nid=expando)}}groups=tokenize(selector);i=groups.length;while(i--){groups[i]=(nid?"#"+nid:":scope")+" "+toSelector(groups[i])}newSelector=groups.join(",")}try{push.apply(results,newContext.querySelectorAll(newSelector));return results}catch(qsaError){nonnativeSelectorCache(selector,true)}finally{if(nid===expando){context.removeAttribute("id")}}}}}return select(selector.replace(rtrim,"$1"),context,results,seed)}function createCache(){var keys=[];function cache(key,value){if(keys.push(key+" ")>Expr.cacheLength){delete cache[keys.shift()]}return cache[key+" "]=value}return cache}function markFunction(fn){fn[expando]=true;return fn}function assert(fn){var el=document.createElement("fieldset");try{return!!fn(el)}catch(e){return false}finally{if(el.parentNode){el.parentNode.removeChild(el)}el=null}}function addHandle(attrs,handler){var arr=attrs.split("|"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler}}function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&a.sourceIndex-b.sourceIndex;if(diff){return diff}if(cur){while(cur=cur.nextSibling){if(cur===b){return-1}}}return a?1:-1}function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type===type}}function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name==="input"||name==="button")&&elem.type===type}}function createDisabledPseudo(disabled){return function(elem){if("form"in elem){if(elem.parentNode&&elem.disabled===false){if("label"in elem){if("label"in elem.parentNode){return elem.parentNode.disabled===disabled}else{return elem.disabled===disabled}}return elem.isDisabled===disabled||elem.isDisabled!==!disabled&&inDisabledFieldset(elem)===disabled}return elem.disabled===disabled}else if("label"in elem){return elem.disabled===disabled}return false}}function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;while(i--){if(seed[j=matchIndexes[i]]){seed[j]=!(matches[j]=seed[j])}}})})}function testContext(context){return context&&typeof context.getElementsByTagName!=="undefined"&&context}support=Sizzle.support={};isXML=Sizzle.isXML=function(elem){var namespace=elem.namespaceURI,docElem=(elem.ownerDocument||elem).documentElement;return!rhtml.test(namespace||docElem&&docElem.nodeName||"HTML")};setDocument=Sizzle.setDocument=function(node){var hasCompare,subWindow,doc=node?node.ownerDocument||node:preferredDoc;if(doc==document||doc.nodeType!==9||!doc.documentElement){return document}document=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);if(preferredDoc!=document&&(subWindow=document.defaultView)&&subWindow.top!==subWindow){if(subWindow.addEventListener){subWindow.addEventListener("unload",unloadHandler,false)}else if(subWindow.attachEvent){subWindow.attachEvent("onunload",unloadHandler)}}support.scope=assert(function(el){docElem.appendChild(el).appendChild(document.createElement("div"));return typeof el.querySelectorAll!=="undefined"&&!el.querySelectorAll(":scope fieldset div").length});support.attributes=assert(function(el){el.className="i";return!el.getAttribute("className")});support.getElementsByTagName=assert(function(el){el.appendChild(document.createComment(""));return!el.getElementsByTagName("*").length});support.getElementsByClassName=rnative.test(document.getElementsByClassName);support.getById=assert(function(el){docElem.appendChild(el).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length});if(support.getById){Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId}};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var elem=context.getElementById(id);return elem?[elem]:[]}}}else{Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");return node&&node.value===attrId}};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var node,i,elems,elem=context.getElementById(id);if(elem){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem]}elems=context.getElementsByName(id);i=0;while(elem=elems[i++]){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem]}}}return[]}}}Expr.find["TAG"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!=="undefined"){return context.getElementsByTagName(tag)}else if(support.qsa){return context.querySelectorAll(tag)}}:function(tag,context){var elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if(tag==="*"){while(elem=results[i++]){if(elem.nodeType===1){tmp.push(elem)}}return tmp}return results};Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!=="undefined"&&documentIsHTML){return context.getElementsByClassName(className)}};rbuggyMatches=[];rbuggyQSA=[];if(support.qsa=rnative.test(document.querySelectorAll)){assert(function(el){var input;docElem.appendChild(el).innerHTML="<a id='"+expando+"'></a>"+"<select id='"+expando+"-\r\\' msallowcapture=''>"+"<option selected=''></option></select>";if(el.querySelectorAll("[msallowcapture^='']").length){rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")")}if(!el.querySelectorAll("[selected]").length){rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")")}if(!el.querySelectorAll("[id~="+expando+"-]").length){rbuggyQSA.push("~=")}input=document.createElement("input");input.setAttribute("name","");el.appendChild(input);if(!el.querySelectorAll("[name='']").length){rbuggyQSA.push("\\["+whitespace+"*name"+whitespace+"*="+whitespace+"*(?:''|\"\")")}if(!el.querySelectorAll(":checked").length){rbuggyQSA.push(":checked")}if(!el.querySelectorAll("a#"+expando+"+*").length){rbuggyQSA.push(".#.+[+~]")}el.querySelectorAll("\\\f");rbuggyQSA.push("[\\r\\n\\f]")});assert(function(el){el.innerHTML="<a href='' disabled='disabled'></a>"+"<select disabled='disabled'><option/></select>";var input=document.createElement("input");input.setAttribute("type","hidden");el.appendChild(input).setAttribute("name","D");if(el.querySelectorAll("[name=d]").length){rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=")}if(el.querySelectorAll(":enabled").length!==2){rbuggyQSA.push(":enabled",":disabled")}docElem.appendChild(el).disabled=true;if(el.querySelectorAll(":disabled").length!==2){rbuggyQSA.push(":enabled",":disabled")}el.querySelectorAll("*,:x");rbuggyQSA.push(",.*:")})}if(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)){assert(function(el){support.disconnectedMatch=matches.call(el,"*");matches.call(el,"[s!='']:x");rbuggyMatches.push("!=",pseudos)})}rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));hasCompare=rnative.test(docElem.compareDocumentPosition);contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16))}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return true}}}return false};sortOrder=hasCompare?function(a,b){if(a===b){hasDuplicate=true;return 0}var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare}compare=(a.ownerDocument||a)==(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(compare&1||!support.sortDetached&&b.compareDocumentPosition(a)===compare){if(a==document||a.ownerDocument==preferredDoc&&contains(preferredDoc,a)){return-1}if(b==document||b.ownerDocument==preferredDoc&&contains(preferredDoc,b)){return 1}return sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0}return compare&4?-1:1}:function(a,b){if(a===b){hasDuplicate=true;return 0}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup){return a==document?-1:b==document?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0}else if(aup===bup){return siblingCheck(a,b)}cur=a;while(cur=cur.parentNode){ap.unshift(cur)}cur=b;while(cur=cur.parentNode){bp.unshift(cur)}while(ap[i]===bp[i]){i++}return i?siblingCheck(ap[i],bp[i]):ap[i]==preferredDoc?-1:bp[i]==preferredDoc?1:0};return document};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements)};Sizzle.matchesSelector=function(elem,expr){setDocument(elem);if(support.matchesSelector&&documentIsHTML&&!nonnativeSelectorCache[expr+" "]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&&elem.document.nodeType!==11){return ret}}catch(e){nonnativeSelectorCache(expr,true)}}return Sizzle(expr,document,null,[elem]).length>0};Sizzle.contains=function(context,elem){if((context.ownerDocument||context)!=document){setDocument(context)}return contains(context,elem)};Sizzle.attr=function(elem,name){if((elem.ownerDocument||elem)!=document){setDocument(elem)}var fn=Expr.attrHandle[name.toLowerCase()],val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null};Sizzle.escape=function(sel){return(sel+"").replace(rcssescape,fcssescape)};Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg)};Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;hasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem=results[i++]){if(elem===results[i]){j=duplicates.push(i)}}while(j--){results.splice(duplicates[j],1)}}sortInput=null;return results};getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(!nodeType){while(node=elem[i++]){ret+=getText(node)}}else if(nodeType===1||nodeType===9||nodeType===11){if(typeof elem.textContent==="string"){return elem.textContent}else{for(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem)}}}else if(nodeType===3||nodeType===4){return elem.nodeValue}return ret};Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(match){match[1]=match[1].replace(runescape,funescape);match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape);if(match[2]==="~="){match[3]=" "+match[3]+" "}return match.slice(0,4)},CHILD:function(match){match[1]=match[1].toLowerCase();if(match[1].slice(0,3)==="nth"){if(!match[3]){Sizzle.error(match[0])}match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));match[5]=+(match[7]+match[8]||match[3]==="odd")}else if(match[3]){Sizzle.error(match[0])}return match},PSEUDO:function(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr["CHILD"].test(match[0])){return null}if(match[3]){match[2]=match[4]||match[5]||""}else if(unquoted&&rpseudo.test(unquoted)&&(excess=tokenize(unquoted,true))&&(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){match[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess)}return match.slice(0,3)}},filter:{TAG:function(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector==="*"?function(){return true}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName}},CLASS:function(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,function(elem){return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!=="undefined"&&elem.getAttribute("class")||"")})},ATTR:function(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator==="!="}if(!operator){return true}result+="";return operator==="="?result===check:operator==="!="?result!==check:operator==="^="?check&&result.indexOf(check)===0:operator==="*="?check&&result.indexOf(check)>-1:operator==="$="?check&&result.slice(-check.length)===check:operator==="~="?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":false}},CHILD:function(type,what,_argument,first,last){var simple=type.slice(0,3)!=="nth",forward=type.slice(-4)!=="last",ofType=what==="of-type";return first===1&&last===0?function(elem){return!!elem.parentNode}:function(elem,_context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){if(simple){while(dir){node=elem;while(node=node[dir]){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false}}start=dir=type==="only"&&!start&&"nextSibling"}return true}start=[forward?parent.firstChild:parent.lastChild];if(forward&&useCache){node=parent;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break}}}else{if(useCache){node=elem;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex}if(diff===false){while(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){if(useCache){outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff]}if(node===elem){break}}}}}diff-=last;return diff===first||diff%first===0&&diff/first>=0}}},PSEUDO:function(pseudo,argument){var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);if(fn[expando]){return fn(argument)}if(fn.length>1){args=[pseudo,pseudo,"",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i])}}):function(elem){return fn(elem,0,args)}}return fn}},pseudos:{not:markFunction(function(selector){var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction(function(seed,matches,_context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;while(i--){if(elem=unmatched[i]){seed[i]=!(matches[i]=elem)}}}):function(elem,_context,xml){input[0]=elem;matcher(input,null,xml,results);input[0]=null;return!results.pop()}}),has:markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0}}),contains:markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||getText(elem)).indexOf(text)>-1}}),lang:markFunction(function(lang){if(!ridentifier.test(lang||"")){Sizzle.error("unsupported lang: "+lang)}lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang")){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+"-")===0}}while((elem=elem.parentNode)&&elem.nodeType===1);return false}}),target:function(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id},root:function(elem){return elem===docElem},focus:function(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex)},enabled:createDisabledPseudo(false),disabled:createDisabledPseudo(true),checked:function(elem){var nodeName=elem.nodeName.toLowerCase();return nodeName==="input"&&!!elem.checked||nodeName==="option"&&!!elem.selected},selected:function(elem){if(elem.parentNode){elem.parentNode.selectedIndex}return elem.selected===true},empty:function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false}}return true},parent:function(elem){return!Expr.pseudos["empty"](elem)},header:function(elem){return rheader.test(elem.nodeName)},input:function(elem){return rinputs.test(elem.nodeName)},button:function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type==="button"||name==="button"},text:function(elem){var attr;return elem.nodeName.toLowerCase()==="input"&&elem.type==="text"&&((attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text")},first:createPositionalPseudo(function(){return[0]}),last:createPositionalPseudo(function(_matchIndexes,length){return[length-1]}),eq:createPositionalPseudo(function(_matchIndexes,length,argument){return[argument<0?argument+length:argument]}),even:createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i)}return matchIndexes}),odd:createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i)}return matchIndexes}),lt:createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument>length?length:argument;for(;--i>=0;){matchIndexes.push(i)}return matchIndexes}),gt:createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i)}return matchIndexes})}};Expr.pseudos["nth"]=Expr.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i)}for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i)}function setFilters(){}setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters;tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached){return parseOnly?0:cached.slice(0)}soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){if(!matched||(match=rcomma.exec(soFar))){if(match){soFar=soFar.slice(match[0].length)||soFar}groups.push(tokens=[])}matched=false;if(match=rcombinators.exec(soFar)){matched=match.shift();tokens.push({value:matched,type:match[0].replace(rtrim," ")});soFar=soFar.slice(matched.length)}for(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length)}}if(!matched){break}}return parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0)};function toSelector(tokens){var i=0,len=tokens.length,selector="";for(;i<len;i++){selector+=tokens[i].value}return selector}function addCombinator(matcher,combinator,base){var dir=combinator.dir,skip=combinator.next,key=skip||dir,checkNonElements=base&&key==="parentNode",doneName=done++;return combinator.first?function(elem,context,xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml)}}return false}:function(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];if(xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true}}}}else{while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});uniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if(skip&&skip===elem.nodeName.toLowerCase()){elem=elem[dir]||elem}else if((oldCache=uniqueCache[key])&&oldCache[0]===dirruns&&oldCache[1]===doneName){return newCache[2]=oldCache[2]}else{uniqueCache[key]=newCache;if(newCache[2]=matcher(elem,context,xml)){return true}}}}}return false}}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false}}return true}:matchers[0]}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results)}return results}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if(elem=unmatched[i]){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i)}}}}return newUnmatched}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter)}if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector)}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),matcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;if(matcher){matcher(matcherIn,matcherOut,context,xml)}if(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);i=temp.length;while(i--){if(elem=temp[i]){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem)}}}if(seed){if(postFinder||preFilter){if(postFinder){temp=[];i=matcherOut.length;while(i--){if(elem=matcherOut[i]){temp.push(matcherIn[i]=elem)}}postFinder(null,matcherOut=[],temp,xml)}i=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem)}}}}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml)}else{push.apply(results,matcherOut)}}})}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,matchContext=addCombinator(function(elem){return elem===checkContext},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1},implicitRelative,true),matchers=[function(elem,context,xml){var ret=!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));checkContext=null;return ret}];for(;i<len;i++){if(matcher=Expr.relative[tokens[i].type]){matchers=[addCombinator(elementMatcher(matchers),matcher)]}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);if(matcher[expando]){j=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break}}return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens))}matchers.push(matcher)}}return elementMatcher(matchers)}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&&Expr.find["TAG"]("*",outermost),dirrunsUnique=dirruns+=contextBackup==null?1:Math.random()||.1,len=elems.length;if(outermost){outermostContext=context==document||context||outermost}for(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;if(!context&&elem.ownerDocument!=document){setDocument(elem);xml=!documentIsHTML}while(matcher=elementMatchers[j++]){if(matcher(elem,context||document,xml)){results.push(elem);break}}if(outermost){dirruns=dirrunsUnique}}if(bySet){if(elem=!matcher&&elem){matchedCount--}if(seed){unmatched.push(elem)}}}matchedCount+=i;if(bySet&&i!==matchedCount){j=0;while(matcher=setMatchers[j++]){matcher(unmatched,setMatched,context,xml)}if(seed){if(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results)}}}setMatched=condense(setMatched)}push.apply(results,setMatched);if(outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1){Sizzle.uniqueSort(results)}}if(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup}return unmatched};return bySet?markFunction(superMatcher):superMatcher}compile=Sizzle.compile=function(selector,match){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){if(!match){match=tokenize(selector)}i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached)}else{elementMatchers.push(cached)}}cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));cached.selector=selector}return cached};select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector==="function"&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);results=results||[];if(match.length===1){tokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type==="ID"&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results}else if(compiled){context=context.parentNode}selector=selector.slice(tokens.shift().value.length)}i=matchExpr["needsContext"].test(selector)?0:tokens.length;while(i--){token=tokens[i];if(Expr.relative[type=token.type]){break}if(find=Expr.find[type]){if(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context)){tokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results}break}}}}(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results};support.sortStable=expando.split("").sort(sortOrder).join("")===expando;support.detectDuplicates=!!hasDuplicate;setDocument();support.sortDetached=assert(function(el){return el.compareDocumentPosition(document.createElement("fieldset"))&1});if(!assert(function(el){el.innerHTML="<a href='#'></a>";return el.firstChild.getAttribute("href")==="#"})){addHandle("type|href|height|width",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()==="type"?1:2)}})}if(!support.attributes||!assert(function(el){el.innerHTML="<input/>";el.firstChild.setAttribute("value","");return el.firstChild.getAttribute("value")===""})){addHandle("value",function(elem,_name,isXML){if(!isXML&&elem.nodeName.toLowerCase()==="input"){return elem.defaultValue}})}if(!assert(function(el){return el.getAttribute("disabled")==null})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null}})}return Sizzle}(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;jQuery.expr[":"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;jQuery.escapeSelector=Sizzle.escape;var dir=function(elem,dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break}matched.push(elem)}}return matched};var siblings=function(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n)}}return matched};var rneedsContext=jQuery.expr.match.needsContext;function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase()}var rsingleTag=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function winnow(elements,qualifier,not){if(isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){return!!qualifier.call(elem,i,elem)!==not})}if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return elem===qualifier!==not})}if(typeof qualifier!=="string"){return jQuery.grep(elements,function(elem){return indexOf.call(qualifier,elem)>-1!==not})}return jQuery.filter(qualifier,elements,not)}jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=":not("+expr+")"}if(elems.length===1&&elem.nodeType===1){return jQuery.find.matchesSelector(elem,expr)?[elem]:[]}return jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1}))};jQuery.fn.extend({find:function(selector){var i,ret,len=this.length,self=this;if(typeof selector!=="string"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true}}}))}ret=this.pushStack([]);for(i=0;i<len;i++){jQuery.find(selector,self[i],ret)}return len>1?jQuery.uniqueSort(ret):ret},filter:function(selector){return this.pushStack(winnow(this,selector||[],false))},not:function(selector){return this.pushStack(winnow(this,selector||[],true))},is:function(selector){return!!winnow(this,typeof selector==="string"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length}});var rootjQuery,rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;if(!selector){return this}root=root||rootjQuery;if(typeof selector==="string"){if(selector[0]==="<"&&selector[selector.length-1]===">"&&selector.length>=3){match=[null,selector,null]}else{match=rquickExpr.exec(selector)}if(match&&(match[1]||!context)){if(match[1]){context=context instanceof jQuery?context[0]:context;jQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){if(isFunction(this[match])){this[match](context[match])}else{this.attr(match,context[match])}}}return this}else{elem=document.getElementById(match[2]);if(elem){this[0]=elem;this.length=1}return this}}else if(!context||context.jquery){return(context||root).find(selector)}else{return this.constructor(context).find(selector)}}else if(selector.nodeType){this[0]=selector;this.length=1;return this}else if(isFunction(selector)){return root.ready!==undefined?root.ready(selector):selector(jQuery)}return jQuery.makeArray(selector,this)};init.prototype=jQuery.fn;rootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,guaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true}}})},closest:function(selectors,context){var cur,i=0,l=this.length,matched=[],targets=typeof selectors!=="string"&&jQuery(selectors);if(!rneedsContext.test(selectors)){for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){if(cur.nodeType<11&&(targets?targets.index(cur)>-1:cur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break}}}}return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched)},index:function(elem){if(!elem){return this[0]&&this[0].parentNode?this.first().prevAll().length:-1}if(typeof elem==="string"){return indexOf.call(jQuery(elem),this[0])}return indexOf.call(this,elem.jquery?elem[0]:elem)},add:function(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))))},addBack:function(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector))}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}return cur}jQuery.each({parent:function(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null},parents:function(elem){return dir(elem,"parentNode")},parentsUntil:function(elem,_i,until){return dir(elem,"parentNode",until)},next:function(elem){return sibling(elem,"nextSibling")},prev:function(elem){return sibling(elem,"previousSibling")},nextAll:function(elem){return dir(elem,"nextSibling")},prevAll:function(elem){return dir(elem,"previousSibling")},nextUntil:function(elem,_i,until){return dir(elem,"nextSibling",until)},prevUntil:function(elem,_i,until){return dir(elem,"previousSibling",until)},siblings:function(elem){return siblings((elem.parentNode||{}).firstChild,elem)},children:function(elem){return siblings(elem.firstChild)},contents:function(elem){if(elem.contentDocument!=null&&getProto(elem.contentDocument)){return elem.contentDocument}if(nodeName(elem,"template")){elem=elem.content||elem}return jQuery.merge([],elem.childNodes)}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!=="Until"){selector=until}if(selector&&typeof selector==="string"){matched=jQuery.filter(selector,matched)}if(this.length>1){if(!guaranteedUnique[name]){jQuery.uniqueSort(matched)}if(rparentsprev.test(name)){matched.reverse()}}return this.pushStack(matched)}});var rnothtmlwhite=/[^\x20\t\r\n\f]+/g;function createOptions(options){var object={};jQuery.each(options.match(rnothtmlwhite)||[],function(_,flag){object[flag]=true});return object}jQuery.Callbacks=function(options){options=typeof options==="string"?createOptions(options):jQuery.extend({},options);var firing,memory,fired,locked,list=[],queue=[],firingIndex=-1,fire=function(){locked=locked||options.once;fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){if(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){firingIndex=list.length;memory=false}}}if(!options.memory){memory=false}firing=false;if(locked){if(memory){list=[]}else{list=""}}},self={add:function(){if(list){if(memory&&!firing){firingIndex=list.length-1;queue.push(memory)}(function add(args){jQuery.each(args,function(_,arg){if(isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg)}}else if(arg&&arg.length&&toType(arg)!=="string"){add(arg)}})})(arguments);if(memory&&!firing){fire()}}return this},remove:function(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);if(index<=firingIndex){firingIndex--}}});return this},has:function(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0},empty:function(){if(list){list=[]}return this},disable:function(){locked=queue=[];list=memory="";return this},disabled:function(){return!list},lock:function(){locked=queue=[];if(!memory&&!firing){list=memory=""}return this},locked:function(){return!!locked},fireWith:function(context,args){if(!locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire()}}return this},fire:function(){self.fireWith(this,arguments);return this},fired:function(){return!!fired}};return self};function Identity(v){return v}function Thrower(ex){throw ex}function adoptValue(value,resolve,reject,noValue){var method;try{if(value&&isFunction(method=value.promise)){method.call(value).done(resolve).fail(reject)}else if(value&&isFunction(method=value.then)){method.call(value,resolve,reject)}else{resolve.apply(undefined,[value].slice(noValue))}}catch(value){reject.apply(undefined,[value])}}jQuery.extend({Deferred:function(func){var tuples=[["notify","progress",jQuery.Callbacks("memory"),jQuery.Callbacks("memory"),2],["resolve","done",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),0,"resolved"],["reject","fail",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),1,"rejected"]],state="pending",promise={state:function(){return state},always:function(){deferred.done(arguments).fail(arguments);return this},catch:function(fn){return promise.then(null,fn)},pipe:function(){var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(_i,tuple){var fn=isFunction(fns[tuple[4]])&&fns[tuple[4]];deferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject)}else{newDefer[tuple[0]+"With"](this,fn?[returned]:arguments)}})});fns=null}).promise()},then:function(onFulfilled,onRejected,onProgress){var maxDepth=0;function resolve(depth,deferred,handler,special){return function(){var that=this,args=arguments,mightThrow=function(){var returned,then;if(depth<maxDepth){return}returned=handler.apply(that,args);if(returned===deferred.promise()){throw new TypeError("Thenable self-resolution")}then=returned&&(typeof returned==="object"||typeof returned==="function")&&returned.then;if(isFunction(then)){if(special){then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special))}else{maxDepth++;then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special),resolve(maxDepth,deferred,Identity,deferred.notifyWith))}}else{if(handler!==Identity){that=undefined;args=[returned]}(special||deferred.resolveWith)(that,args)}},process=special?mightThrow:function(){try{mightThrow()}catch(e){if(jQuery.Deferred.exceptionHook){jQuery.Deferred.exceptionHook(e,process.stackTrace)}if(depth+1>=maxDepth){if(handler!==Thrower){that=undefined;args=[e]}deferred.rejectWith(that,args)}}};if(depth){process()}else{if(jQuery.Deferred.getStackHook){process.stackTrace=jQuery.Deferred.getStackHook()}window.setTimeout(process)}}}return jQuery.Deferred(function(newDefer){tuples[0][3].add(resolve(0,newDefer,isFunction(onProgress)?onProgress:Identity,newDefer.notifyWith));tuples[1][3].add(resolve(0,newDefer,isFunction(onFulfilled)?onFulfilled:Identity));tuples[2][3].add(resolve(0,newDefer,isFunction(onRejected)?onRejected:Thrower))}).promise()},promise:function(obj){return obj!=null?jQuery.extend(obj,promise):promise}},deferred={};jQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[5];promise[tuple[1]]=list.add;if(stateString){list.add(function(){state=stateString},tuples[3-i][2].disable,tuples[3-i][3].disable,tuples[0][2].lock,tuples[0][3].lock)}list.add(tuple[3].fire);deferred[tuple[0]]=function(){deferred[tuple[0]+"With"](this===deferred?undefined:this,arguments);return this};deferred[tuple[0]+"With"]=list.fireWith});promise.promise(deferred);if(func){func.call(deferred,deferred)}return deferred},when:function(singleValue){var remaining=arguments.length,i=remaining,resolveContexts=Array(i),resolveValues=slice.call(arguments),master=jQuery.Deferred(),updateFunc=function(i){return function(value){resolveContexts[i]=this;resolveValues[i]=arguments.length>1?slice.call(arguments):value;if(!--remaining){master.resolveWith(resolveContexts,resolveValues)}}};if(remaining<=1){adoptValue(singleValue,master.done(updateFunc(i)).resolve,master.reject,!remaining);if(master.state()==="pending"||isFunction(resolveValues[i]&&resolveValues[i].then)){return master.then()}}while(i--){adoptValue(resolveValues[i],updateFunc(i),master.reject)}return master.promise()}});var rerrorNames=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;jQuery.Deferred.exceptionHook=function(error,stack){if(window.console&&window.console.warn&&error&&rerrorNames.test(error.name)){window.console.warn("jQuery.Deferred exception: "+error.message,error.stack,stack)}};jQuery.readyException=function(error){window.setTimeout(function(){throw error})};var readyList=jQuery.Deferred();jQuery.fn.ready=function(fn){readyList.then(fn).catch(function(error){jQuery.readyException(error)});return this};jQuery.extend({isReady:false,readyWait:1,ready:function(wait){if(wait===true?--jQuery.readyWait:jQuery.isReady){return}jQuery.isReady=true;if(wait!==true&&--jQuery.readyWait>0){return}readyList.resolveWith(document,[jQuery])}});jQuery.ready.then=readyList.then;function completed(){document.removeEventListener("DOMContentLoaded",completed);window.removeEventListener("load",completed);jQuery.ready()}if(document.readyState==="complete"||document.readyState!=="loading"&&!document.documentElement.doScroll){window.setTimeout(jQuery.ready)}else{document.addEventListener("DOMContentLoaded",completed);window.addEventListener("load",completed)}var access=function(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;if(toType(key)==="object"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw)}}else if(value!==undefined){chainable=true;if(!isFunction(value)){raw=true}if(bulk){if(raw){fn.call(elems,value);fn=null}else{bulk=fn;fn=function(elem,_key,value){return bulk.call(jQuery(elem),value)}}}if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)))}}}if(chainable){return elems}if(bulk){return fn.call(elems)}return len?fn(elems[0],key):emptyGet};var rmsPrefix=/^-ms-/,rdashAlpha=/-([a-z])/g;function fcamelCase(_all,letter){return letter.toUpperCase()}function camelCase(string){return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase)}var acceptData=function(owner){return owner.nodeType===1||owner.nodeType===9||!+owner.nodeType};function Data(){this.expando=jQuery.expando+Data.uid++}Data.uid=1;Data.prototype={cache:function(owner){var value=owner[this.expando];if(!value){value={};if(acceptData(owner)){if(owner.nodeType){owner[this.expando]=value}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true})}}}return value},set:function(owner,data,value){var prop,cache=this.cache(owner);if(typeof data==="string"){cache[camelCase(data)]=value}else{for(prop in data){cache[camelCase(prop)]=data[prop]}}return cache},get:function(owner,key){return key===undefined?this.cache(owner):owner[this.expando]&&owner[this.expando][camelCase(key)]},access:function(owner,key,value){if(key===undefined||key&&typeof key==="string"&&value===undefined){return this.get(owner,key)}this.set(owner,key,value);return value!==undefined?value:key},remove:function(owner,key){var i,cache=owner[this.expando];if(cache===undefined){return}if(key!==undefined){if(Array.isArray(key)){key=key.map(camelCase)}else{key=camelCase(key);key=key in cache?[key]:key.match(rnothtmlwhite)||[]}i=key.length;while(i--){delete cache[key[i]]}}if(key===undefined||jQuery.isEmptyObject(cache)){if(owner.nodeType){owner[this.expando]=undefined}else{delete owner[this.expando]}}},hasData:function(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache)}};var dataPriv=new Data;var dataUser=new Data;var rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/[A-Z]/g;function getData(data){if(data==="true"){return true}if(data==="false"){return false}if(data==="null"){return null}if(data===+data+""){return+data}if(rbrace.test(data)){return JSON.parse(data)}return data}function dataAttr(elem,key,data){var name;if(data===undefined&&elem.nodeType===1){name="data-"+key.replace(rmultiDash,"-$&").toLowerCase();data=elem.getAttribute(name);if(typeof data==="string"){try{data=getData(data)}catch(e){}dataUser.set(elem,key,data)}else{data=undefined}}return data}jQuery.extend({hasData:function(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem)},data:function(elem,name,data){return dataUser.access(elem,name,data)},removeData:function(elem,name){dataUser.remove(elem,name)},_data:function(elem,name,data){return dataPriv.access(elem,name,data)},_removeData:function(elem,name){dataPriv.remove(elem,name)}});jQuery.fn.extend({data:function(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;if(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,"hasDataAttrs")){i=attrs.length;while(i--){if(attrs[i]){name=attrs[i].name;if(name.indexOf("data-")===0){name=camelCase(name.slice(5));dataAttr(elem,name,data[name])}}}dataPriv.set(elem,"hasDataAttrs",true)}}return data}if(typeof key==="object"){return this.each(function(){dataUser.set(this,key)})}return access(this,function(value){var data;if(elem&&value===undefined){data=dataUser.get(elem,key);if(data!==undefined){return data}data=dataAttr(elem,key);if(data!==undefined){return data}return}this.each(function(){dataUser.set(this,key,value)})},null,value,arguments.length>1,null,true)},removeData:function(key){return this.each(function(){dataUser.remove(this,key)})}});jQuery.extend({queue:function(elem,type,data){var queue;if(elem){type=(type||"fx")+"queue";queue=dataPriv.get(elem,type);if(data){if(!queue||Array.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data))}else{queue.push(data)}}return queue||[]}},dequeue:function(elem,type){type=type||"fx";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function(){jQuery.dequeue(elem,type)};if(fn==="inprogress"){fn=queue.shift();startLength--}if(fn){if(type==="fx"){queue.unshift("inprogress")}delete hooks.stop;fn.call(elem,next,hooks)}if(!startLength&&hooks){hooks.empty.fire()}},_queueHooks:function(elem,type){var key=type+"queueHooks";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks("once memory").add(function(){dataPriv.remove(elem,[type+"queue",key])})})}});jQuery.fn.extend({queue:function(type,data){var setter=2;if(typeof type!=="string"){data=type;type="fx";setter--}if(arguments.length<setter){return jQuery.queue(this[0],type)}return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);jQuery._queueHooks(this,type);if(type==="fx"&&queue[0]!=="inprogress"){jQuery.dequeue(this,type)}})},dequeue:function(type){return this.each(function(){jQuery.dequeue(this,type)})},clearQueue:function(type){return this.queue(type||"fx",[])},promise:function(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function(){if(!--count){defer.resolveWith(elements,[elements])}};if(typeof type!=="string"){obj=type;type=undefined}type=type||"fx";while(i--){tmp=dataPriv.get(elements[i],type+"queueHooks");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve)}}resolve();return defer.promise(obj)}});var pnum=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;var rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i");var cssExpand=["Top","Right","Bottom","Left"];var documentElement=document.documentElement;var isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem)},composed={composed:true};if(documentElement.getRootNode){isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem)||elem.getRootNode(composed)===elem.ownerDocument}}var isHiddenWithinTree=function(elem,el){elem=el||elem;return elem.style.display==="none"||elem.style.display===""&&isAttached(elem)&&jQuery.css(elem,"display")==="none"};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale,maxIterations=20,currentValue=tween?function(){return tween.cur()}:function(){return jQuery.css(elem,prop,"")},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),initialInUnit=elem.nodeType&&(jQuery.cssNumber[prop]||unit!=="px"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){initial=initial/2;unit=unit||initialInUnit[3];initialInUnit=+initial||1;while(maxIterations--){jQuery.style(elem,prop,initialInUnit+unit);if((1-scale)*(1-(scale=currentValue()/initial||.5))<=0){maxIterations=0}initialInUnit=initialInUnit/scale}initialInUnit=initialInUnit*2;jQuery.style(elem,prop,initialInUnit+unit);valueParts=valueParts||[]}if(valueParts){initialInUnit=+initialInUnit||+initial||0;adjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted}}return adjusted}var defaultDisplayMap={};function getDefaultDisplay(elem){var temp,doc=elem.ownerDocument,nodeName=elem.nodeName,display=defaultDisplayMap[nodeName];if(display){return display}temp=doc.body.appendChild(doc.createElement(nodeName));display=jQuery.css(temp,"display");temp.parentNode.removeChild(temp);if(display==="none"){display="block"}defaultDisplayMap[nodeName]=display;return display}function showHide(elements,show){var display,elem,values=[],index=0,length=elements.length;for(;index<length;index++){elem=elements[index];if(!elem.style){continue}display=elem.style.display;if(show){if(display==="none"){values[index]=dataPriv.get(elem,"display")||null;if(!values[index]){elem.style.display=""}}if(elem.style.display===""&&isHiddenWithinTree(elem)){values[index]=getDefaultDisplay(elem)}}else{if(display!=="none"){values[index]="none";dataPriv.set(elem,"display",display)}}}for(index=0;index<length;index++){if(values[index]!=null){elements[index].style.display=values[index]}}return elements}jQuery.fn.extend({show:function(){return showHide(this,true)},hide:function(){return showHide(this)},toggle:function(state){if(typeof state==="boolean"){return state?this.show():this.hide()}return this.each(function(){if(isHiddenWithinTree(this)){jQuery(this).show()}else{jQuery(this).hide()}})}});var rcheckableType=/^(?:checkbox|radio)$/i;var rtagName=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i;var rscriptType=/^$|^module$|\/(?:java|ecma)script/i;(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement("div")),input=document.createElement("input");input.setAttribute("type","radio");input.setAttribute("checked","checked");input.setAttribute("name","t");div.appendChild(input);support.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;div.innerHTML="<textarea>x</textarea>";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;div.innerHTML="<option></option>";support.option=!!div.lastChild})();var wrapMap={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;if(!support.option){wrapMap.optgroup=wrapMap.option=[1,"<select multiple='multiple'>","</select>"]}function getAll(context,tag){var ret;if(typeof context.getElementsByTagName!=="undefined"){ret=context.getElementsByTagName(tag||"*")}else if(typeof context.querySelectorAll!=="undefined"){ret=context.querySelectorAll(tag||"*")}else{ret=[]}if(tag===undefined||tag&&nodeName(context,tag)){return jQuery.merge([context],ret)}return ret}function setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],"globalEval",!refElements||dataPriv.get(refElements[i],"globalEval"))}}var rhtml=/<|&#?\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,attached,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){if(toType(elem)==="object"){jQuery.merge(nodes,elem.nodeType?[elem]:elem)}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem))}else{tmp=tmp||fragment.appendChild(context.createElement("div"));tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];j=wrap[0];while(j--){tmp=tmp.lastChild}jQuery.merge(nodes,tmp.childNodes);tmp=fragment.firstChild;tmp.textContent=""}}}fragment.textContent="";i=0;while(elem=nodes[i++]){if(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem)}continue}attached=isAttached(elem);tmp=getAll(fragment.appendChild(elem),"script");if(attached){setGlobalEval(tmp)}if(scripts){j=0;while(elem=tmp[j++]){if(rscriptType.test(elem.type||"")){scripts.push(elem)}}}}return fragment}var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\.(.+)|)/;function returnTrue(){return true}function returnFalse(){return false}function expectSync(elem,type){return elem===safeActiveElement()===(type==="focus")}function safeActiveElement(){try{return document.activeElement}catch(err){}}function on(elem,types,selector,data,fn,one){var origFn,type;if(typeof types==="object"){if(typeof selector!=="string"){data=data||selector;selector=undefined}for(type in types){on(elem,type,selector,data,types[type],one)}return elem}if(data==null&&fn==null){fn=selector;data=selector=undefined}else if(fn==null){if(typeof selector==="string"){fn=data;data=undefined}else{fn=data;data=selector;selector=undefined}}if(fn===false){fn=returnFalse}else if(!fn){return elem}if(one===1){origFn=fn;fn=function(event){jQuery().off(event);return origFn.apply(this,arguments)};fn.guid=origFn.guid||(origFn.guid=jQuery.guid++)}return elem.each(function(){jQuery.event.add(this,types,fn,data,selector)})}jQuery.event={global:{},add:function(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);if(!acceptData(elem)){return}if(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector}if(selector){jQuery.find.matchesSelector(documentElement,selector)}if(!handler.guid){handler.guid=jQuery.guid++}if(!(events=elemData.events)){events=elemData.events=Object.create(null)}if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){return typeof jQuery!=="undefined"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined}}types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){continue}special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;special=jQuery.event.special[type]||{};handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(".")},handleObjIn);if(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle)}}}if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid}}if(selector){handlers.splice(handlers.delegateCount++,0,handleObj)}else{handlers.push(handleObj)}jQuery.event.global[type]=true}},remove:function(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return}types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true)}continue}special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");origCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector==="**"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--}if(special.remove){special.remove.call(elem,handleObj)}}}if(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle)}delete events[type]}}if(jQuery.isEmptyObject(events)){dataPriv.remove(elem,"handle events")}},dispatch:function(nativeEvent){var i,j,ret,matched,handleObj,handlerQueue,args=new Array(arguments.length),event=jQuery.event.fix(nativeEvent),handlers=(dataPriv.get(this,"events")||Object.create(null))[event.type]||[],special=jQuery.event.special[event.type]||{};args[0]=event;for(i=1;i<arguments.length;i++){args[i]=arguments[i]}event.delegateTarget=this;if(special.preDispatch&&special.preDispatch.call(this,event)===false){return}handlerQueue=jQuery.event.handlers.call(this,event,handlers);i=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){if(!event.rnamespace||handleObj.namespace===false||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation()}}}}}if(special.postDispatch){special.postDispatch.call(this,event)}return event.result},handlers:function(event,handlers){var i,handleObj,sel,matchedHandlers,matchedSelectors,handlerQueue=[],delegateCount=handlers.delegateCount,cur=event.target;if(delegateCount&&cur.nodeType&&!(event.type==="click"&&event.button>=1)){for(;cur!==this;cur=cur.parentNode||this){if(cur.nodeType===1&&!(event.type==="click"&&cur.disabled===true)){matchedHandlers=[];matchedSelectors={};for(i=0;i<delegateCount;i++){handleObj=handlers[i];sel=handleObj.selector+" ";if(matchedSelectors[sel]===undefined){matchedSelectors[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length}if(matchedSelectors[sel]){matchedHandlers.push(handleObj)}}if(matchedHandlers.length){handlerQueue.push({elem:cur,handlers:matchedHandlers})}}}}cur=this;if(delegateCount<handlers.length){handlerQueue.push({elem:cur,handlers:handlers.slice(delegateCount)})}return handlerQueue},addProp:function(name,hook){Object.defineProperty(jQuery.Event.prototype,name,{enumerable:true,configurable:true,get:isFunction(hook)?function(){if(this.originalEvent){return hook(this.originalEvent)}}:function(){if(this.originalEvent){return this.originalEvent[name]}},set:function(value){Object.defineProperty(this,name,{enumerable:true,configurable:true,writable:true,value:value})}})},fix:function(originalEvent){return originalEvent[jQuery.expando]?originalEvent:new jQuery.Event(originalEvent)},special:{load:{noBubble:true},click:{setup:function(data){var el=this||data;if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){leverageNative(el,"click",returnTrue)}return false},trigger:function(data){var el=this||data;if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){leverageNative(el,"click")}return true},_default:function(event){var target=event.target;return rcheckableType.test(target.type)&&target.click&&nodeName(target,"input")&&dataPriv.get(target,"click")||nodeName(target,"a")}},beforeunload:{postDispatch:function(event){if(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result}}}}};function leverageNative(el,type,expectSync){if(!expectSync){if(dataPriv.get(el,type)===undefined){jQuery.event.add(el,type,returnTrue)}return}dataPriv.set(el,type,false);jQuery.event.add(el,type,{namespace:false,handler:function(event){var notAsync,result,saved=dataPriv.get(this,type);if(event.isTrigger&1&&this[type]){if(!saved.length){saved=slice.call(arguments);dataPriv.set(this,type,saved);notAsync=expectSync(this,type);this[type]();result=dataPriv.get(this,type);if(saved!==result||notAsync){dataPriv.set(this,type,false)}else{result={}}if(saved!==result){event.stopImmediatePropagation();event.preventDefault();return result.value}}else if((jQuery.event.special[type]||{}).delegateType){event.stopPropagation()}}else if(saved.length){dataPriv.set(this,type,{value:jQuery.event.trigger(jQuery.extend(saved[0],jQuery.Event.prototype),saved.slice(1),this)});event.stopImmediatePropagation()}}})}jQuery.removeEvent=function(elem,type,handle){if(elem.removeEventListener){elem.removeEventListener(type,handle)}};jQuery.Event=function(src,props){if(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props)}if(src&&src.type){this.originalEvent=src;this.type=src.type;this.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&src.returnValue===false?returnTrue:returnFalse;this.target=src.target&&src.target.nodeType===3?src.target.parentNode:src.target;this.currentTarget=src.currentTarget;this.relatedTarget=src.relatedTarget}else{this.type=src}if(props){jQuery.extend(this,props)}this.timeStamp=src&&src.timeStamp||Date.now();this[jQuery.expando]=true};jQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,isSimulated:false,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e&&!this.isSimulated){e.preventDefault()}},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopPropagation()}},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopImmediatePropagation()}this.stopPropagation()}};jQuery.each({altKey:true,bubbles:true,cancelable:true,changedTouches:true,ctrlKey:true,detail:true,eventPhase:true,metaKey:true,pageX:true,pageY:true,shiftKey:true,view:true,char:true,code:true,charCode:true,key:true,keyCode:true,button:true,buttons:true,clientX:true,clientY:true,offsetX:true,offsetY:true,pointerId:true,pointerType:true,screenX:true,screenY:true,targetTouches:true,toElement:true,touches:true,which:function(event){var button=event.button;if(event.which==null&&rkeyEvent.test(event.type)){return event.charCode!=null?event.charCode:event.keyCode}if(!event.which&&button!==undefined&&rmouseEvent.test(event.type)){if(button&1){return 1}if(button&2){return 3}if(button&4){return 2}return 0}return event.which}},jQuery.event.addProp);jQuery.each({focus:"focusin",blur:"focusout"},function(type,delegateType){jQuery.event.special[type]={setup:function(){leverageNative(this,type,expectSync);return false},trigger:function(){leverageNative(this,type);return true},delegateType:delegateType}});jQuery.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;if(!related||related!==target&&!jQuery.contains(target,related)){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix}return ret}}});jQuery.fn.extend({on:function(types,selector,data,fn){return on(this,types,selector,data,fn)},one:function(types,selector,data,fn){return on(this,types,selector,data,fn,1)},off:function(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){handleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this}if(typeof types==="object"){for(type in types){this.off(type,selector,types[type])}return this}if(selector===false||typeof selector==="function"){fn=selector;selector=undefined}if(fn===false){fn=returnFalse}return this.each(function(){jQuery.event.remove(this,types,fn,selector)})}});var rnoInnerhtml=/<script|<style|<link/i,rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function manipulationTarget(elem,content){if(nodeName(elem,"table")&&nodeName(content.nodeType!==11?content:content.firstChild,"tr")){return jQuery(elem).children("tbody")[0]||elem}return elem}function disableScript(elem){elem.type=(elem.getAttribute("type")!==null)+"/"+elem.type;return elem}function restoreScript(elem){if((elem.type||"").slice(0,5)==="true/"){elem.type=elem.type.slice(5)}else{elem.removeAttribute("type")}return elem}function cloneCopyEvent(src,dest){var i,l,type,pdataOld,udataOld,udataCur,events;if(dest.nodeType!==1){return}if(dataPriv.hasData(src)){pdataOld=dataPriv.get(src);events=pdataOld.events;if(events){dataPriv.remove(dest,"handle events");for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i])}}}}if(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur)}}function fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();if(nodeName==="input"&&rcheckableType.test(src.type)){dest.checked=src.checked}else if(nodeName==="input"||nodeName==="textarea"){dest.defaultValue=src.defaultValue}}function domManip(collection,args,callback,ignored){args=flat(args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],valueIsFunction=isFunction(value);if(valueIsFunction||l>1&&typeof value==="string"&&!support.checkClone&&rchecked.test(value)){return collection.each(function(index){var self=collection.eq(index);if(valueIsFunction){args[0]=value.call(this,index,self.html())}domManip(self,args,callback,ignored)})}if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first}if(first||ignored){scripts=jQuery.map(getAll(fragment,"script"),disableScript);hasScripts=scripts.length;for(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);if(hasScripts){jQuery.merge(scripts,getAll(node,"script"))}}callback.call(collection[i],node,i)}if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;jQuery.map(scripts,restoreScript);for(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||"")&&!dataPriv.access(node,"globalEval")&&jQuery.contains(doc,node)){if(node.src&&(node.type||"").toLowerCase()!=="module"){if(jQuery._evalUrl&&!node.noModule){jQuery._evalUrl(node.src,{nonce:node.nonce||node.getAttribute("nonce")},doc)}}else{DOMEval(node.textContent.replace(rcleanScript,""),node,doc)}}}}}}return collection}function remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node))}if(node.parentNode){if(keepData&&isAttached(node)){setGlobalEval(getAll(node,"script"))}node.parentNode.removeChild(node)}}return elem}jQuery.extend({htmlPrefilter:function(html){return html},clone:function(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=isAttached(elem);if(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){destElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i])}}if(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i])}}else{cloneCopyEvent(elem,clone)}}destElements=getAll(clone,"script");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,"script"))}return clone},cleanData:function(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if(data=elem[dataPriv.expando]){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type)}else{jQuery.removeEvent(elem,type,data.handle)}}}elem[dataPriv.expando]=undefined}if(elem[dataUser.expando]){elem[dataUser.expando]=undefined}}}}});jQuery.fn.extend({detach:function(selector){return remove(this,selector,true)},remove:function(selector){return remove(this,selector)},text:function(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value}})},null,value,arguments.length)},append:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem)}})},prepend:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild)}})},before:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this)}})},after:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling)}})},empty:function(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.textContent=""}}return this},clone:function(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents)})},html:function(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML}if(typeof value==="string"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value}}elem=0}catch(e){}}if(elem){this.empty().append(value)}},null,value,arguments.length)},replaceWith:function(){var ignored=[];return domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this)}}},ignored)}});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);push.apply(ret,elems.get())}return this.pushStack(ret)}});var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i");var getStyles=function(elem){var view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window}return view.getComputedStyle(elem)};var swap=function(elem,options,callback){var ret,name,old={};for(name in options){old[name]=elem.style[name];elem.style[name]=options[name]}ret=callback.call(elem);for(name in options){elem.style[name]=old[name]}return ret};var rboxStyle=new RegExp(cssExpand.join("|"),"i");(function(){function computeStyleTests(){if(!div){return}container.style.cssText="position:absolute;left:-11111px;width:60px;"+"margin-top:1px;padding:0;border:0";div.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;"+"margin:auto;border:1px;padding:1px;"+"width:60%;top:1%";documentElement.appendChild(container).appendChild(div);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!=="1%";reliableMarginLeftVal=roundPixelMeasures(divStyle.marginLeft)===12;div.style.right="60%";pixelBoxStylesVal=roundPixelMeasures(divStyle.right)===36;boxSizingReliableVal=roundPixelMeasures(divStyle.width)===36;div.style.position="absolute";scrollboxSizeVal=roundPixelMeasures(div.offsetWidth/3)===12;documentElement.removeChild(container);div=null}function roundPixelMeasures(measure){return Math.round(parseFloat(measure))}var pixelPositionVal,boxSizingReliableVal,scrollboxSizeVal,pixelBoxStylesVal,reliableTrDimensionsVal,reliableMarginLeftVal,container=document.createElement("div"),div=document.createElement("div");if(!div.style){return}div.style.backgroundClip="content-box";div.cloneNode(true).style.backgroundClip="";support.clearCloneStyle=div.style.backgroundClip==="content-box";jQuery.extend(support,{boxSizingReliable:function(){computeStyleTests();return boxSizingReliableVal},pixelBoxStyles:function(){computeStyleTests();return pixelBoxStylesVal},pixelPosition:function(){computeStyleTests();return pixelPositionVal},reliableMarginLeft:function(){computeStyleTests();return reliableMarginLeftVal},scrollboxSize:function(){computeStyleTests();return scrollboxSizeVal},reliableTrDimensions:function(){var table,tr,trChild,trStyle;if(reliableTrDimensionsVal==null){table=document.createElement("table");tr=document.createElement("tr");trChild=document.createElement("div");table.style.cssText="position:absolute;left:-11111px";tr.style.height="1px";trChild.style.height="9px";documentElement.appendChild(table).appendChild(tr).appendChild(trChild);trStyle=window.getComputedStyle(tr);reliableTrDimensionsVal=parseInt(trStyle.height)>3;documentElement.removeChild(table)}return reliableTrDimensionsVal}})})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;computed=computed||getStyles(elem);if(computed){ret=computed.getPropertyValue(name)||computed[name];if(ret===""&&!isAttached(elem)){ret=jQuery.style(elem,name)}if(!support.pixelBoxStyles()&&rnumnonpx.test(ret)&&rboxStyle.test(name)){width=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;style.minWidth=style.maxWidth=style.width=ret;ret=computed.width;style.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth}}return ret!==undefined?ret+"":ret}function addGetHookIf(conditionFn,hookFn){return{get:function(){if(conditionFn()){delete this.get;return}return(this.get=hookFn).apply(this,arguments)}}}var cssPrefixes=["Webkit","Moz","ms"],emptyStyle=document.createElement("div").style,vendorProps={};function vendorPropName(name){var capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name}}}function finalPropName(name){var final=jQuery.cssProps[name]||vendorProps[name];if(final){return final}if(name in emptyStyle){return name}return vendorProps[name]=vendorPropName(name)||name}var rdisplayswap=/^(none|table(?!-c[ea]).+)/,rcustomProp=/^--/,cssShow={position:"absolute",visibility:"hidden",display:"block"},cssNormalTransform={letterSpacing:"0",fontWeight:"400"};function setPositiveNumber(_elem,value,subtract){var matches=rcssNum.exec(value);return matches?Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):value}function boxModelAdjustment(elem,dimension,box,isBorderBox,styles,computedVal){var i=dimension==="width"?1:0,extra=0,delta=0;if(box===(isBorderBox?"border":"content")){return 0}for(;i<4;i+=2){if(box==="margin"){delta+=jQuery.css(elem,box+cssExpand[i],true,styles)}if(!isBorderBox){delta+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);if(box!=="padding"){delta+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles)}else{extra+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles)}}else{if(box==="content"){delta-=jQuery.css(elem,"padding"+cssExpand[i],true,styles)}if(box!=="margin"){delta-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles)}}}if(!isBorderBox&&computedVal>=0){delta+=Math.max(0,Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-computedVal-delta-extra-.5))||0}return delta}function getWidthOrHeight(elem,dimension,extra){var styles=getStyles(elem),boxSizingNeeded=!support.boxSizingReliable()||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",valueIsBorderBox=isBorderBox,val=curCSS(elem,dimension,styles),offsetProp="offset"+dimension[0].toUpperCase()+dimension.slice(1);if(rnumnonpx.test(val)){if(!extra){return val}val="auto"}if((!support.boxSizingReliable()&&isBorderBox||!support.reliableTrDimensions()&&nodeName(elem,"tr")||val==="auto"||!parseFloat(val)&&jQuery.css(elem,"display",false,styles)==="inline")&&elem.getClientRects().length){isBorderBox=jQuery.css(elem,"boxSizing",false,styles)==="border-box";valueIsBorderBox=offsetProp in elem;if(valueIsBorderBox){val=elem[offsetProp]}}val=parseFloat(val)||0;return val+boxModelAdjustment(elem,dimension,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles,val)+"px"}jQuery.extend({cssHooks:{opacity:{get:function(elem,computed){if(computed){var ret=curCSS(elem,"opacity");return ret===""?"1":ret}}}},cssNumber:{animationIterationCount:true,columnCount:true,fillOpacity:true,flexGrow:true,flexShrink:true,fontWeight:true,gridArea:true,gridColumn:true,gridColumnEnd:true,gridColumnStart:true,gridRow:true,gridRowEnd:true,gridRowStart:true,lineHeight:true,opacity:true,order:true,orphans:true,widows:true,zIndex:true,zoom:true},cssProps:{},style:function(elem,name,value,extra){if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return}var ret,type,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name),style=elem.style;if(!isCustomProp){name=finalPropName(origName)}hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(value!==undefined){type=typeof value;if(type==="string"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);type="number"}if(value==null||value!==value){return}if(type==="number"&&!isCustomProp){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px")}if(!support.clearCloneStyle&&value===""&&name.indexOf("background")===0){style[name]="inherit"}if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){if(isCustomProp){style.setProperty(name,value)}else{style[name]=value}}}else{if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret}return style[name]}},css:function(elem,name,extra,styles){var val,num,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name);if(!isCustomProp){name=finalPropName(origName)}hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(hooks&&"get"in hooks){val=hooks.get(elem,true,extra)}if(val===undefined){val=curCSS(elem,name,styles)}if(val==="normal"&&name in cssNormalTransform){val=cssNormalTransform[name]}if(extra===""||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val}return val}});jQuery.each(["height","width"],function(_i,dimension){jQuery.cssHooks[dimension]={get:function(elem,computed,extra){if(computed){return rdisplayswap.test(jQuery.css(elem,"display"))&&(!elem.getClientRects().length||!elem.getBoundingClientRect().width)?swap(elem,cssShow,function(){return getWidthOrHeight(elem,dimension,extra)}):getWidthOrHeight(elem,dimension,extra)}},set:function(elem,value,extra){var matches,styles=getStyles(elem),scrollboxSizeBuggy=!support.scrollboxSize()&&styles.position==="absolute",boxSizingNeeded=scrollboxSizeBuggy||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",subtract=extra?boxModelAdjustment(elem,dimension,extra,isBorderBox,styles):0;if(isBorderBox&&scrollboxSizeBuggy){subtract-=Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-parseFloat(styles[dimension])-boxModelAdjustment(elem,dimension,"border",false,styles)-.5)}if(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||"px")!=="px"){elem.style[dimension]=value;value=jQuery.css(elem,dimension)}return setPositiveNumber(elem,value,subtract)}}});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,"marginLeft"))||elem.getBoundingClientRect().left-swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left}))+"px"}});jQuery.each({margin:"",padding:"",border:"Width"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function(value){var i=0,expanded={},parts=typeof value==="string"?value.split(" "):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0]}return expanded}};if(prefix!=="margin"){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber}});jQuery.fn.extend({css:function(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(Array.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles)}return map}return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name)},name,value,arguments.length>1)}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing)}jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?"":"px")},cur:function(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this)},run:function(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration)}else{this.pos=eased=percent}this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this)}if(hooks&&hooks.set){hooks.set(this)}else{Tween.propHooks._default.set(this)}return this}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function(tween){var result;if(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop]}result=jQuery.css(tween.elem,tween.prop,"");return!result||result==="auto"?0:result},set:function(tween){if(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween)}else if(tween.elem.nodeType===1&&(jQuery.cssHooks[tween.prop]||tween.elem.style[finalPropName(tween.prop)]!=null)){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit)}else{tween.elem[tween.prop]=tween.now}}}};Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now}}};jQuery.easing={linear:function(p){return p},swing:function(p){return.5-Math.cos(p*Math.PI)/2},_default:"swing"};jQuery.fx=Tween.prototype.init;jQuery.fx.step={};var fxNow,inProgress,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;function schedule(){if(inProgress){if(document.hidden===false&&window.requestAnimationFrame){window.requestAnimationFrame(schedule)}else{window.setTimeout(schedule,jQuery.fx.interval)}jQuery.fx.tick()}}function createFxNow(){window.setTimeout(function(){fxNow=undefined});return fxNow=Date.now()}function genFx(type,includeWidth){var which,i=0,attrs={height:type};includeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs["margin"+which]=attrs["padding"+which]=type}if(includeWidth){attrs.opacity=attrs.width=type}return attrs}function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),index=0,length=collection.length;for(;index<length;index++){if(tween=collection[index].call(animation,prop,value)){return tween}}}function defaultPrefilter(elem,props,opts){var prop,value,toggle,hooks,oldfire,propTween,restoreDisplay,display,isBox="width"in props||"height"in props,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHiddenWithinTree(elem),dataShow=dataPriv.get(elem,"fxshow");if(!opts.queue){hooks=jQuery._queueHooks(elem,"fx");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire()}}}hooks.unqueued++;anim.always(function(){anim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,"fx").length){hooks.empty.fire()}})})}for(prop in props){value=props[prop];if(rfxtypes.test(value)){delete props[prop];toggle=toggle||value==="toggle";if(value===(hidden?"hide":"show")){if(value==="show"&&dataShow&&dataShow[prop]!==undefined){hidden=true}else{continue}}orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop)}}propTween=!jQuery.isEmptyObject(props);if(!propTween&&jQuery.isEmptyObject(orig)){return}if(isBox&&elem.nodeType===1){opts.overflow=[style.overflow,style.overflowX,style.overflowY];restoreDisplay=dataShow&&dataShow.display;if(restoreDisplay==null){restoreDisplay=dataPriv.get(elem,"display")}display=jQuery.css(elem,"display");if(display==="none"){if(restoreDisplay){display=restoreDisplay}else{showHide([elem],true);restoreDisplay=elem.style.display||restoreDisplay;display=jQuery.css(elem,"display");showHide([elem])}}if(display==="inline"||display==="inline-block"&&restoreDisplay!=null){if(jQuery.css(elem,"float")==="none"){if(!propTween){anim.done(function(){style.display=restoreDisplay});if(restoreDisplay==null){display=style.display;restoreDisplay=display==="none"?"":display}}style.display="inline-block"}}}if(opts.overflow){style.overflow="hidden";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2]})}propTween=false;for(prop in orig){if(!propTween){if(dataShow){if("hidden"in dataShow){hidden=dataShow.hidden}}else{dataShow=dataPriv.access(elem,"fxshow",{display:restoreDisplay})}if(toggle){dataShow.hidden=!hidden}if(hidden){showHide([elem],true)}anim.done(function(){if(!hidden){showHide([elem])}dataPriv.remove(elem,"fxshow");for(prop in orig){jQuery.style(elem,prop,orig[prop])}})}propTween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=propTween.start;if(hidden){propTween.end=propTween.start;propTween.start=0}}}}function propFilter(props,specialEasing){var index,name,easing,value,hooks;for(index in props){name=camelCase(index);easing=specialEasing[name];value=props[index];if(Array.isArray(value)){easing=value[1];value=props[index]=value[0]}if(index!==name){props[name]=value;delete props[index]}hooks=jQuery.cssHooks[name];if(hooks&&"expand"in hooks){value=hooks.expand(value);delete props[name];for(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing}}}else{specialEasing[name]=easing}}}function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){delete tick.elem}),tick=function(){if(stopped){return false}var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),temp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent)}deferred.notifyWith(elem,[animation,percent,remaining]);if(percent<1&&length){return remaining}if(!length){deferred.notifyWith(elem,[animation,1,0])}deferred.resolveWith(elem,[animation]);return false},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween},stop:function(gotoEnd){var index=0,length=gotoEnd?animation.tweens.length:0;if(stopped){return this}stopped=true;for(;index<length;index++){animation.tweens[index].run(1)}if(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd])}else{deferred.rejectWith(elem,[animation,gotoEnd])}return this}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=result.stop.bind(result)}return result}}jQuery.map(props,createTween,animation);if(isFunction(animation.opts.start)){animation.opts.start.call(elem,animation)}animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));return animation}jQuery.Animation=jQuery.extend(Animation,{tweeners:{"*":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween}]},tweener:function(props,callback){if(isFunction(props)){callback=props;props=["*"]}else{props=props.match(rnothtmlwhite)}var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback)}},prefilters:[defaultPrefilter],prefilter:function(callback,prepend){if(prepend){Animation.prefilters.unshift(callback)}else{Animation.prefilters.push(callback)}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{complete:fn||!fn&&easing||isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!isFunction(easing)&&easing};if(jQuery.fx.off){opt.duration=0}else{if(typeof opt.duration!=="number"){if(opt.duration in jQuery.fx.speeds){opt.duration=jQuery.fx.speeds[opt.duration]}else{opt.duration=jQuery.fx.speeds._default}}}if(opt.queue==null||opt.queue===true){opt.queue="fx"}opt.old=opt.complete;opt.complete=function(){if(isFunction(opt.old)){opt.old.call(this)}if(opt.queue){jQuery.dequeue(this,opt.queue)}};return opt};jQuery.fn.extend({fadeTo:function(speed,to,easing,callback){return this.filter(isHiddenWithinTree).css("opacity",0).show().end().animate({opacity:to},speed,easing,callback)},animate:function(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function(){var anim=Animation(this,jQuery.extend({},prop),optall);if(empty||dataPriv.get(this,"finish")){anim.stop(true)}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation)},stop:function(type,clearQueue,gotoEnd){var stopQueue=function(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd)};if(typeof type!=="string"){gotoEnd=clearQueue;clearQueue=type;type=undefined}if(clearQueue){this.queue(type||"fx",[])}return this.each(function(){var dequeue=true,index=type!=null&&type+"queueHooks",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index])}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index])}}}for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1)}}if(dequeue||!gotoEnd){jQuery.dequeue(this,type)}})},finish:function(type){if(type!==false){type=type||"fx"}return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+"queue"],hooks=data[type+"queueHooks"],timers=jQuery.timers,length=queue?queue.length:0;data.finish=true;jQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true)}for(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1)}}for(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this)}}delete data.finish})}});jQuery.each(["toggle","show","hide"],function(_i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed==="boolean"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback)}});jQuery.each({slideDown:genFx("show"),slideUp:genFx("hide"),slideToggle:genFx("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback)}});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=Date.now();for(;i<timers.length;i++){timer=timers[i];if(!timer()&&timers[i]===timer){timers.splice(i--,1)}}if(!timers.length){jQuery.fx.stop()}fxNow=undefined};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);jQuery.fx.start()};jQuery.fx.interval=13;jQuery.fx.start=function(){if(inProgress){return}inProgress=true;schedule()};jQuery.fx.stop=function(){inProgress=null};jQuery.fx.speeds={slow:600,fast:200,_default:400};jQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||"fx";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout)}})};(function(){var input=document.createElement("input"),select=document.createElement("select"),opt=select.appendChild(document.createElement("option"));input.type="checkbox";support.checkOn=input.value!=="";support.optSelected=opt.selected;input=document.createElement("input");input.value="t";input.type="radio";support.radioValue=input.value==="t"})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function(name,value){return access(this,jQuery.attr,name,value,arguments.length>1)},removeAttr:function(name){return this.each(function(){jQuery.removeAttr(this,name)})}});jQuery.extend({attr:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return}if(typeof elem.getAttribute==="undefined"){return jQuery.prop(elem,name,value)}if(nType!==1||!jQuery.isXMLDoc(elem)){hooks=jQuery.attrHooks[name.toLowerCase()]||(jQuery.expr.match.bool.test(name)?boolHook:undefined)}if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return}if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret}elem.setAttribute(name,value+"");return value}if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret}ret=jQuery.find.attr(elem,name);return ret==null?undefined:ret},attrHooks:{type:{set:function(elem,value){if(!support.radioValue&&value==="radio"&&nodeName(elem,"input")){var val=elem.value;elem.setAttribute("type",value);if(val){elem.value=val}return value}}}},removeAttr:function(elem,value){var name,i=0,attrNames=value&&value.match(rnothtmlwhite);if(attrNames&&elem.nodeType===1){while(name=attrNames[i++]){elem.removeAttribute(name)}}}});boolHook={set:function(elem,value,name){if(value===false){jQuery.removeAttr(elem,name)}else{elem.setAttribute(name,name)}return name}};jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(_i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle,lowercaseName=name.toLowerCase();if(!isXML){handle=attrHandle[lowercaseName];attrHandle[lowercaseName]=ret;ret=getter(elem,name,isXML)!=null?lowercaseName:null;attrHandle[lowercaseName]=handle}return ret}});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function(name,value){return access(this,jQuery.prop,name,value,arguments.length>1)},removeProp:function(name){return this.each(function(){delete this[jQuery.propFix[name]||name]})}});jQuery.extend({prop:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return}if(nType!==1||!jQuery.isXMLDoc(elem)){name=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name]}if(value!==undefined){if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret}return elem[name]=value}if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret}return elem[name]},propHooks:{tabIndex:{get:function(elem){var tabindex=jQuery.find.attr(elem,"tabindex");if(tabindex){return parseInt(tabindex,10)}if(rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href){return 0}return-1}}},propFix:{for:"htmlFor",class:"className"}});if(!support.optSelected){jQuery.propHooks.selected={get:function(elem){var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex}return null},set:function(elem){var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex}}}}}jQuery.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){jQuery.propFix[this.toLowerCase()]=this});function stripAndCollapse(value){var tokens=value.match(rnothtmlwhite)||[];return tokens.join(" ")}function getClass(elem){return elem.getAttribute&&elem.getAttribute("class")||""}function classesToArray(value){if(Array.isArray(value)){return value}if(typeof value==="string"){return value.match(rnothtmlwhite)||[]}return[]}jQuery.fn.extend({addClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)))})}classes=classesToArray(value);if(classes.length){while(elem=this[i++]){curValue=getClass(elem);cur=elem.nodeType===1&&" "+stripAndCollapse(curValue)+" ";if(cur){j=0;while(clazz=classes[j++]){if(cur.indexOf(" "+clazz+" ")<0){cur+=clazz+" "}}finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue)}}}}return this},removeClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)))})}if(!arguments.length){return this.attr("class","")}classes=classesToArray(value);if(classes.length){while(elem=this[i++]){curValue=getClass(elem);cur=elem.nodeType===1&&" "+stripAndCollapse(curValue)+" ";if(cur){j=0;while(clazz=classes[j++]){while(cur.indexOf(" "+clazz+" ")>-1){cur=cur.replace(" "+clazz+" "," ")}}finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue)}}}}return this},toggleClass:function(value,stateVal){var type=typeof value,isValidValue=type==="string"||Array.isArray(value);if(typeof stateVal==="boolean"&&isValidValue){return stateVal?this.addClass(value):this.removeClass(value)}if(isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal)})}return this.each(function(){var className,i,self,classNames;if(isValidValue){i=0;self=jQuery(this);classNames=classesToArray(value);while(className=classNames[i++]){if(self.hasClass(className)){self.removeClass(className)}else{self.addClass(className)}}}else if(value===undefined||type==="boolean"){className=getClass(this);if(className){dataPriv.set(this,"__className__",className)}if(this.setAttribute){this.setAttribute("class",className||value===false?"":dataPriv.get(this,"__className__")||"")}}})},hasClass:function(selector){var className,elem,i=0;className=" "+selector+" ";while(elem=this[i++]){if(elem.nodeType===1&&(" "+stripAndCollapse(getClass(elem))+" ").indexOf(className)>-1){return true}}return false}});var rreturn=/\r/g;jQuery.fn.extend({val:function(value){var hooks,ret,valueIsFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){return ret}ret=elem.value;if(typeof ret==="string"){return ret.replace(rreturn,"")}return ret==null?"":ret}return}valueIsFunction=isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return}if(valueIsFunction){val=value.call(this,i,jQuery(this).val())}else{val=value}if(val==null){val=""}else if(typeof val==="number"){val+=""}else if(Array.isArray(val)){val=jQuery.map(val,function(value){return value==null?"":value+""})}hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){this.value=val}})}});jQuery.extend({valHooks:{option:{get:function(elem){var val=jQuery.find.attr(elem,"value");return val!=null?val:stripAndCollapse(jQuery.text(elem))}},select:{get:function(elem){var value,option,i,options=elem.options,index=elem.selectedIndex,one=elem.type==="select-one",values=one?null:[],max=one?index+1:options.length;if(index<0){i=max}else{i=one?index:0}for(;i<max;i++){option=options[i];if((option.selected||i===index)&&!option.disabled&&(!option.parentNode.disabled||!nodeName(option.parentNode,"optgroup"))){value=jQuery(option).val();if(one){return value}values.push(value)}}return values},set:function(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true}}if(!optionSet){elem.selectedIndex=-1}return values}}}});jQuery.each(["radio","checkbox"],function(){jQuery.valHooks[this]={set:function(elem,value){if(Array.isArray(value)){return elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute("value")===null?"on":elem.value}}});support.focusin="onfocusin"in window;var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,stopPropagationCallback=function(e){e.stopPropagation()};jQuery.extend(jQuery.event,{trigger:function(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,lastElement,eventPath=[elem||document],type=hasOwn.call(event,"type")?event.type:event,namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];cur=lastElement=tmp=elem=elem||document;if(elem.nodeType===3||elem.nodeType===8){return}if(rfocusMorph.test(type+jQuery.event.triggered)){return}if(type.indexOf(".")>-1){namespaces=type.split(".");type=namespaces.shift();namespaces.sort()}ontype=type.indexOf(":")<0&&"on"+type;event=event[jQuery.expando]?event:new jQuery.Event(type,typeof event==="object"&&event);event.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(".");event.rnamespace=event.namespace?new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;event.result=undefined;if(!event.target){event.target=elem}data=data==null?[event]:jQuery.makeArray(data,[event]);special=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return}if(!onlyHandlers&&!special.noBubble&&!isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode}for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur}if(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window)}}i=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){lastElement=cur;event.type=i>1?bubbleType:special.bindType||type;handle=(dataPriv.get(cur,"events")||Object.create(null))[event.type]&&dataPriv.get(cur,"handle");if(handle){handle.apply(cur,data)}handle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault()}}}event.type=type;if(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){if(ontype&&isFunction(elem[type])&&!isWindow(elem)){tmp=elem[ontype];if(tmp){elem[ontype]=null}jQuery.event.triggered=type;if(event.isPropagationStopped()){lastElement.addEventListener(type,stopPropagationCallback)}elem[type]();if(event.isPropagationStopped()){lastElement.removeEventListener(type,stopPropagationCallback)}jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp}}}}return event.result},simulate:function(type,elem,event){var e=jQuery.extend(new jQuery.Event,event,{type:type,isSimulated:true});jQuery.event.trigger(e,null,elem)}});jQuery.fn.extend({trigger:function(type,data){return this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandler:function(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true)}}});if(!support.focusin){jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){var handler=function(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event))};jQuery.event.special[fix]={setup:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true)}dataPriv.access(doc,fix,(attaches||0)+1)},teardown:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix)}else{dataPriv.access(doc,fix,attaches)}}}})}var location=window.location;var nonce={guid:Date.now()};var rquery=/\?/;jQuery.parseXML=function(data){var xml;if(!data||typeof data!=="string"){return null}try{xml=(new window.DOMParser).parseFromString(data,"text/xml")}catch(e){xml=undefined}if(!xml||xml.getElementsByTagName("parsererror").length){jQuery.error("Invalid XML: "+data)}return xml};var rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(Array.isArray(obj)){jQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){add(prefix,v)}else{buildParams(prefix+"["+(typeof v==="object"&&v!=null?i:"")+"]",v,traditional,add)}})}else if(!traditional&&toType(obj)==="object"){for(name in obj){buildParams(prefix+"["+name+"]",obj[name],traditional,add)}}else{add(prefix,obj)}}jQuery.param=function(a,traditional){var prefix,s=[],add=function(key,valueOrFunction){var value=isFunction(valueOrFunction)?valueOrFunction():valueOrFunction;s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(value==null?"":value)};if(a==null){return""}if(Array.isArray(a)||a.jquery&&!jQuery.isPlainObject(a)){jQuery.each(a,function(){add(this.name,this.value)})}else{for(prefix in a){buildParams(prefix,a[prefix],traditional,add)}}return s.join("&")};jQuery.fn.extend({serialize:function(){return jQuery.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var elements=jQuery.prop(this,"elements");return elements?jQuery.makeArray(elements):this}).filter(function(){var type=this.type;return this.name&&!jQuery(this).is(":disabled")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type))}).map(function(_i,elem){var val=jQuery(this).val();if(val==null){return null}if(Array.isArray(val)){return jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,"\r\n")}})}return{name:elem.name,value:val.replace(rCRLF,"\r\n")}}).get()}});var r20=/%20/g,rhash=/#.*$/,rantiCache=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \t]*([^\r\n]*)$/gm,rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,prefilters={},transports={},allTypes="*/".concat("*"),originAnchor=document.createElement("a");originAnchor.href=location.href;function addToPrefiltersOrTransports(structure){return function(dataTypeExpression,func){if(typeof dataTypeExpression!=="string"){func=dataTypeExpression;dataTypeExpression="*"}var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnothtmlwhite)||[];if(isFunction(func)){while(dataType=dataTypes[i++]){if(dataType[0]==="+"){dataType=dataType.slice(1)||"*";(structure[dataType]=structure[dataType]||[]).unshift(func)}else{(structure[dataType]=structure[dataType]||[]).push(func)}}}}}function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure===transports;function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport==="string"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false}else if(seekingTransport){return!(selected=dataTypeOrTransport)}});return selected}return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*")}function ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:deep||(deep={}))[key]=src[key]}}if(deep){jQuery.extend(true,target,deep)}return target}function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;while(dataTypes[0]==="*"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader("Content-Type")}}if(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break}}}if(dataTypes[0]in responses){finalDataType=dataTypes[0]}else{for(type in responses){if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){finalDataType=type;break}if(!firstDataType){firstDataType=type}}finalDataType=finalDataType||firstDataType}if(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType)}return responses[finalDataType]}}function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},dataTypes=s.dataTypes.slice();if(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv]}}current=dataTypes.shift();while(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response}if(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType)}prev=current;current=dataTypes.shift();if(current){if(current==="*"){current=prev}else if(prev!=="*"&&prev!==current){conv=converters[prev+" "+current]||converters["* "+current];if(!conv){for(conv2 in converters){tmp=conv2.split(" ");if(tmp[1]===current){conv=converters[prev+" "+tmp[0]]||converters["* "+tmp[0]];if(conv){if(conv===true){conv=converters[conv2]}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1])}break}}}}if(conv!==true){if(conv&&s.throws){response=conv(response)}else{try{response=conv(response)}catch(e){return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current}}}}}}}return{state:"success",data:response}}jQuery.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:location.href,type:"GET",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":allTypes,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":true,"text json":JSON.parse,"text xml":jQuery.parseXML},flatOptions:{url:true,context:true}},ajaxSetup:function(target,settings){return settings?ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):ajaxExtend(jQuery.ajaxSettings,target)},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),ajax:function(url,options){if(typeof url==="object"){options=url;url=undefined}options=options||{};var transport,cacheURL,responseHeadersString,responseHeaders,timeoutTimer,urlAnchor,completed,fireGlobals,i,uncached,s=jQuery.ajaxSetup({},options),callbackContext=s.context||s,globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks("once memory"),statusCode=s.statusCode||{},requestHeaders={},requestHeadersNames={},strAbort="canceled",jqXHR={readyState:0,getResponseHeader:function(key){var match;if(completed){if(!responseHeaders){responseHeaders={};while(match=rheaders.exec(responseHeadersString)){responseHeaders[match[1].toLowerCase()+" "]=(responseHeaders[match[1].toLowerCase()+" "]||[]).concat(match[2])}}match=responseHeaders[key.toLowerCase()+" "]}return match==null?null:match.join(", ")},getAllResponseHeaders:function(){return completed?responseHeadersString:null},setRequestHeader:function(name,value){if(completed==null){name=requestHeadersNames[name.toLowerCase()]=requestHeadersNames[name.toLowerCase()]||name;requestHeaders[name]=value}return this},overrideMimeType:function(type){if(completed==null){s.mimeType=type}return this},statusCode:function(map){var code;if(map){if(completed){jqXHR.always(map[jqXHR.status])}else{for(code in map){statusCode[code]=[statusCode[code],map[code]]}}}return this},abort:function(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText)}done(0,finalText);return this}};deferred.promise(jqXHR);s.url=((url||s.url||location.href)+"").replace(rprotocol,location.protocol+"//");s.type=options.method||options.type||s.method||s.type;s.dataTypes=(s.dataType||"*").toLowerCase().match(rnothtmlwhite)||[""];if(s.crossDomain==null){urlAnchor=document.createElement("a");try{urlAnchor.href=s.url;urlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!==urlAnchor.protocol+"//"+urlAnchor.host}catch(e){s.crossDomain=true}}if(s.data&&s.processData&&typeof s.data!=="string"){s.data=jQuery.param(s.data,s.traditional)}inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);if(completed){return jqXHR}fireGlobals=jQuery.event&&s.global;if(fireGlobals&&jQuery.active++===0){jQuery.event.trigger("ajaxStart")}s.type=s.type.toUpperCase();s.hasContent=!rnoContent.test(s.type);cacheURL=s.url.replace(rhash,"");if(!s.hasContent){uncached=s.url.slice(cacheURL.length);if(s.data&&(s.processData||typeof s.data==="string")){cacheURL+=(rquery.test(cacheURL)?"&":"?")+s.data;delete s.data}if(s.cache===false){cacheURL=cacheURL.replace(rantiCache,"$1");uncached=(rquery.test(cacheURL)?"&":"?")+"_="+nonce.guid+++uncached}s.url=cacheURL+uncached}else if(s.data&&s.processData&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0){s.data=s.data.replace(r20,"+")}if(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL])}if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL])}}if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader("Content-Type",s.contentType)}jqXHR.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):s.accepts["*"]);for(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i])}if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||completed)){return jqXHR.abort()}strAbort="abort";completeDeferred.add(s.complete);jqXHR.done(s.success);jqXHR.fail(s.error);transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);if(!transport){done(-1,"No Transport")}else{jqXHR.readyState=1;if(fireGlobals){globalEventContext.trigger("ajaxSend",[jqXHR,s])}if(completed){return jqXHR}if(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort("timeout")},s.timeout)}try{completed=false;transport.send(requestHeaders,done)}catch(e){if(completed){throw e}done(-1,e)}}function done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;if(completed){return}completed=true;if(timeoutTimer){window.clearTimeout(timeoutTimer)}transport=undefined;responseHeadersString=headers||"";jqXHR.readyState=status>0?4:0;isSuccess=status>=200&&status<300||status===304;if(responses){response=ajaxHandleResponses(s,jqXHR,responses)}if(!isSuccess&&jQuery.inArray("script",s.dataTypes)>-1){s.converters["text script"]=function(){}}response=ajaxConvert(s,response,jqXHR,isSuccess);if(isSuccess){if(s.ifModified){modified=jqXHR.getResponseHeader("Last-Modified");if(modified){jQuery.lastModified[cacheURL]=modified}modified=jqXHR.getResponseHeader("etag");if(modified){jQuery.etag[cacheURL]=modified}}if(status===204||s.type==="HEAD"){statusText="nocontent"}else if(status===304){statusText="notmodified"}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error}}else{error=statusText;if(status||!statusText){statusText="error";if(status<0){status=0}}}jqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+"";if(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR])}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error])}jqXHR.statusCode(statusCode);statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",[jqXHR,s,isSuccess?success:error])}completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger("ajaxComplete",[jqXHR,s]);if(!--jQuery.active){jQuery.event.trigger("ajaxStop")}}}return jqXHR},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json")},getScript:function(url,callback){return jQuery.get(url,undefined,callback,"script")}});jQuery.each(["get","post"],function(_i,method){jQuery[method]=function(url,data,callback,type){if(isFunction(data)){type=type||callback;callback=data;data=undefined}return jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url))}});jQuery.ajaxPrefilter(function(s){var i;for(i in s.headers){if(i.toLowerCase()==="content-type"){s.contentType=s.headers[i]||""}}});jQuery._evalUrl=function(url,options,doc){return jQuery.ajax({url:url,type:"GET",dataType:"script",cache:true,async:false,global:false,converters:{"text script":function(){}},dataFilter:function(response){jQuery.globalEval(response,options,doc)}})};jQuery.fn.extend({wrapAll:function(html){var wrap;if(this[0]){if(isFunction(html)){html=html.call(this[0])}wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0])}wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild}return elem}).append(this)}return this},wrapInner:function(html){if(isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i))})}return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html)}else{self.append(html)}})},wrap:function(html){var htmlIsFunction=isFunction(html);return this.each(function(i){jQuery(this).wrapAll(htmlIsFunction?html.call(this,i):html)})},unwrap:function(selector){this.parent(selector).not("body").each(function(){jQuery(this).replaceWith(this.childNodes)});return this}});jQuery.expr.pseudos.hidden=function(elem){return!jQuery.expr.pseudos.visible(elem)};jQuery.expr.pseudos.visible=function(elem){return!!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length)};jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest}catch(e){}};var xhrSuccessStatus={0:200,1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&"withCredentials"in xhrSupported;support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var callback,errorCallback;if(support.cors||xhrSupported&&!options.crossDomain){return{send:function(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);if(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i]}}if(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType)}if(!options.crossDomain&&!headers["X-Requested-With"]){headers["X-Requested-With"]="XMLHttpRequest"}for(i in headers){xhr.setRequestHeader(i,headers[i])}callback=function(type){return function(){if(callback){callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.ontimeout=xhr.onreadystatechange=null;if(type==="abort"){xhr.abort()}else if(type==="error"){if(typeof xhr.status!=="number"){complete(0,"error")}else{complete(xhr.status,xhr.statusText)}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,(xhr.responseType||"text")!=="text"||typeof xhr.responseText!=="string"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders())}}}};xhr.onload=callback();errorCallback=xhr.onerror=xhr.ontimeout=callback("error");if(xhr.onabort!==undefined){xhr.onabort=errorCallback}else{xhr.onreadystatechange=function(){if(xhr.readyState===4){window.setTimeout(function(){if(callback){errorCallback()}})}}}callback=callback("abort");try{xhr.send(options.hasContent&&options.data||null)}catch(e){if(callback){throw e}}},abort:function(){if(callback){callback()}}}}});jQuery.ajaxPrefilter(function(s){if(s.crossDomain){s.contents.script=false}});jQuery.ajaxSetup({accepts:{script:"text/javascript, application/javascript, "+"application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(text){jQuery.globalEval(text);return text}}});jQuery.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false}if(s.crossDomain){s.type="GET"}});jQuery.ajaxTransport("script",function(s){if(s.crossDomain||s.scriptAttrs){var script,callback;return{send:function(_,complete){script=jQuery("<script>").attr(s.scriptAttrs||{}).prop({charset:s.scriptCharset,src:s.url}).on("load error",callback=function(evt){script.remove();callback=null;if(evt){complete(evt.type==="error"?404:200,evt.type)}});document.head.appendChild(script[0])},abort:function(){if(callback){callback()}}}}});var oldCallbacks=[],rjsonp=/(=)\?(?=&|$)|\?\?/;jQuery.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var callback=oldCallbacks.pop()||jQuery.expando+"_"+nonce.guid++;this[callback]=true;return callback}});jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?"url":typeof s.data==="string"&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&rjsonp.test(s.data)&&"data");if(jsonProp||s.dataTypes[0]==="jsonp"){callbackName=s.jsonpCallback=isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;if(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName)}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName}s.converters["script json"]=function(){if(!responseContainer){jQuery.error(callbackName+" was not called")}return responseContainer[0]};s.dataTypes[0]="json";overwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments};jqXHR.always(function(){if(overwritten===undefined){jQuery(window).removeProp(callbackName)}else{window[callbackName]=overwritten}if(s[callbackName]){s.jsonpCallback=originalSettings.jsonpCallback;oldCallbacks.push(callbackName)}if(responseContainer&&isFunction(overwritten)){overwritten(responseContainer[0])}responseContainer=overwritten=undefined});return"script"}});support.createHTMLDocument=function(){var body=document.implementation.createHTMLDocument("").body;body.innerHTML="<form></form><form></form>";return body.childNodes.length===2}();jQuery.parseHTML=function(data,context,keepScripts){if(typeof data!=="string"){return[]}if(typeof context==="boolean"){keepScripts=context;context=false}var base,parsed,scripts;if(!context){if(support.createHTMLDocument){context=document.implementation.createHTMLDocument("");base=context.createElement("base");base.href=document.location.href;context.head.appendChild(base)}else{context=document}}parsed=rsingleTag.exec(data);scripts=!keepScripts&&[];if(parsed){return[context.createElement(parsed[1])]}parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove()}return jQuery.merge([],parsed.childNodes)};jQuery.fn.load=function(url,params,callback){var selector,type,response,self=this,off=url.indexOf(" ");if(off>-1){selector=stripAndCollapse(url.slice(off));url=url.slice(0,off)}if(isFunction(params)){callback=params;params=undefined}else if(params&&typeof params==="object"){type="POST"}if(self.length>0){jQuery.ajax({url:url,type:type||"GET",dataType:"html",data:params}).done(function(responseText){response=arguments;self.html(selector?jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):responseText)}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR])})})}return this};jQuery.expr.pseudos.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem}).length};jQuery.offset={setOffset:function(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,"position"),curElem=jQuery(elem),props={};if(position==="static"){elem.style.position="relative"}curOffset=curElem.offset();curCSSTop=jQuery.css(elem,"top");curCSSLeft=jQuery.css(elem,"left");calculatePosition=(position==="absolute"||position==="fixed")&&(curCSSTop+curCSSLeft).indexOf("auto")>-1;if(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0}if(isFunction(options)){options=options.call(elem,i,jQuery.extend({},curOffset))}if(options.top!=null){props.top=options.top-curOffset.top+curTop}if(options.left!=null){props.left=options.left-curOffset.left+curLeft}if("using"in options){options.using.call(elem,props)}else{if(typeof props.top==="number"){props.top+="px"}if(typeof props.left==="number"){props.left+="px"}curElem.css(props)}}};jQuery.fn.extend({offset:function(options){if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i)})}var rect,win,elem=this[0];if(!elem){return}if(!elem.getClientRects().length){return{top:0,left:0}}rect=elem.getBoundingClientRect();win=elem.ownerDocument.defaultView;return{top:rect.top+win.pageYOffset,left:rect.left+win.pageXOffset}},position:function(){if(!this[0]){return}var offsetParent,offset,doc,elem=this[0],parentOffset={top:0,left:0};if(jQuery.css(elem,"position")==="fixed"){offset=elem.getBoundingClientRect()}else{offset=this.offset();doc=elem.ownerDocument;offsetParent=elem.offsetParent||doc.documentElement;while(offsetParent&&(offsetParent===doc.body||offsetParent===doc.documentElement)&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.parentNode}if(offsetParent&&offsetParent!==elem&&offsetParent.nodeType===1){parentOffset=jQuery(offsetParent).offset();parentOffset.top+=jQuery.css(offsetParent,"borderTopWidth",true);parentOffset.left+=jQuery.css(offsetParent,"borderLeftWidth",true)}}return{top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)}},offsetParent:function(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.offsetParent}return offsetParent||documentElement})}});jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){var top="pageYOffset"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){var win;if(isWindow(elem)){win=elem}else if(elem.nodeType===9){win=elem.defaultView}if(val===undefined){return win?win[prop]:elem[method]}if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset)}else{elem[method]=val}},method,val,arguments.length)}});jQuery.each(["top","left"],function(_i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);return rnumnonpx.test(computed)?jQuery(elem).position()[prop]+"px":computed}})});jQuery.each({Height:"height",Width:"width"},function(name,type){jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},function(defaultExtra,funcName){jQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),extra=defaultExtra||(margin===true||value===true?"margin":"border");return access(this,function(elem,type,value){var doc;if(isWindow(elem)){return funcName.indexOf("outer")===0?elem["inner"+name]:elem.document.documentElement["client"+name]}if(elem.nodeType===9){doc=elem.documentElement;return Math.max(elem.body["scroll"+name],doc["scroll"+name],elem.body["offset"+name],doc["offset"+name],doc["client"+name])}return value===undefined?jQuery.css(elem,type,extra):jQuery.style(elem,type,value,extra)},type,chainable?margin:undefined,chainable)}})});jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(_i,type){jQuery.fn[type]=function(fn){return this.on(type,fn)}});jQuery.fn.extend({bind:function(types,data,fn){return this.on(types,null,data,fn)},unbind:function(types,fn){return this.off(types,null,fn)},delegate:function(selector,types,data,fn){return this.on(types,selector,data,fn)},undelegate:function(selector,types,fn){return arguments.length===1?this.off(selector,"**"):this.off(types,selector||"**",fn)},hover:function(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver)}});jQuery.each(("blur focus focusin focusout resize scroll click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup contextmenu").split(" "),function(_i,name){jQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name)}});var rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;jQuery.proxy=function(fn,context){var tmp,args,proxy;if(typeof context==="string"){tmp=fn[context];context=fn;fn=tmp}if(!isFunction(fn)){return undefined}args=slice.call(arguments,2);proxy=function(){return fn.apply(context||this,args.concat(slice.call(arguments)))};proxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy};jQuery.holdReady=function(hold){if(hold){jQuery.readyWait++}else{jQuery.ready(true)}};jQuery.isArray=Array.isArray;jQuery.parseJSON=JSON.parse;jQuery.nodeName=nodeName;jQuery.isFunction=isFunction;jQuery.isWindow=isWindow;jQuery.camelCase=camelCase;jQuery.type=toType;jQuery.now=Date.now;jQuery.isNumeric=function(obj){var type=jQuery.type(obj);return(type==="number"||type==="string")&&!isNaN(obj-parseFloat(obj))};jQuery.trim=function(text){return text==null?"":(text+"").replace(rtrim,"")};if(typeof define==="function"&&define.amd){define("jquery",[],function(){return jQuery})}var _jQuery=window.jQuery,_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$}if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery}return jQuery};if(typeof noGlobal==="undefined"){window.jQuery=window.$=jQuery}return jQuery});(function($){window.eGain$=$;window.eGainjQuery=jQuery;var Base64=function(){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var obj={encode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;do{chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4)}while(i<input.length);return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output}};return obj}();var MD5=function(){var hexcase=0;var b64pad="";var chrsz=8;var safe_add=function(x,y){var lsw=(x&65535)+(y&65535);var msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&65535};var bit_rol=function(num,cnt){return num<<cnt|num>>>32-cnt};var str2binl=function(str){var bin=[];var mask=(1<<chrsz)-1;for(var i=0;i<str.length*chrsz;i+=chrsz){bin[i>>5]|=(str.charCodeAt(i/chrsz)&mask)<<i%32}return bin};var binl2str=function(bin){var str="";var mask=(1<<chrsz)-1;for(var i=0;i<bin.length*32;i+=chrsz){str+=String.fromCharCode(bin[i>>5]>>>i%32&mask)}return str};var binl2hex=function(binarray){var hex_tab=hexcase?"0123456789ABCDEF":"0123456789abcdef";var str="";for(var i=0;i<binarray.length*4;i++){str+=hex_tab.charAt(binarray[i>>2]>>i%4*8+4&15)+hex_tab.charAt(binarray[i>>2]>>i%4*8&15)}return str};var binl2b64=function(binarray){var tab="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var str="";var triplet,j;for(var i=0;i<binarray.length*4;i+=3){triplet=(binarray[i>>2]>>8*(i%4)&255)<<16|(binarray[i+1>>2]>>8*((i+1)%4)&255)<<8|binarray[i+2>>2]>>8*((i+2)%4)&255;for(j=0;j<4;j++){if(i*8+j*6>binarray.length*32){str+=b64pad}else{str+=tab.charAt(triplet>>6*(3-j)&63)}}}return str};var md5_cmn=function(q,a,b,x,s,t){return safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b)};var md5_ff=function(a,b,c,d,x,s,t){return md5_cmn(b&c|~b&d,a,b,x,s,t)};var md5_gg=function(a,b,c,d,x,s,t){return md5_cmn(b&d|c&~d,a,b,x,s,t)};var md5_hh=function(a,b,c,d,x,s,t){return md5_cmn(b^c^d,a,b,x,s,t)};var md5_ii=function(a,b,c,d,x,s,t){return md5_cmn(c^(b|~d),a,b,x,s,t)};var core_md5=function(x,len){x[len>>5]|=128<<len%32;x[(len+64>>>9<<4)+14]=len;var a=1732584193;var b=-271733879;var c=-1732584194;var d=271733878;var olda,oldb,oldc,oldd;for(var i=0;i<x.length;i+=16){olda=a;oldb=b;oldc=c;oldd=d;a=md5_ff(a,b,c,d,x[i+0],7,-680876936);d=md5_ff(d,a,b,c,x[i+1],12,-389564586);c=md5_ff(c,d,a,b,x[i+2],17,606105819);b=md5_ff(b,c,d,a,x[i+3],22,-1044525330);a=md5_ff(a,b,c,d,x[i+4],7,-176418897);d=md5_ff(d,a,b,c,x[i+5],12,1200080426);c=md5_ff(c,d,a,b,x[i+6],17,-1473231341);b=md5_ff(b,c,d,a,x[i+7],22,-45705983);a=md5_ff(a,b,c,d,x[i+8],7,1770035416);d=md5_ff(d,a,b,c,x[i+9],12,-1958414417);c=md5_ff(c,d,a,b,x[i+10],17,-42063);b=md5_ff(b,c,d,a,x[i+11],22,-1990404162);a=md5_ff(a,b,c,d,x[i+12],7,1804603682);d=md5_ff(d,a,b,c,x[i+13],12,-40341101);c=md5_ff(c,d,a,b,x[i+14],17,-1502002290);b=md5_ff(b,c,d,a,x[i+15],22,1236535329);a=md5_gg(a,b,c,d,x[i+1],5,-165796510);d=md5_gg(d,a,b,c,x[i+6],9,-1069501632);c=md5_gg(c,d,a,b,x[i+11],14,643717713);b=md5_gg(b,c,d,a,x[i+0],20,-373897302);a=md5_gg(a,b,c,d,x[i+5],5,-701558691);d=md5_gg(d,a,b,c,x[i+10],9,38016083);c=md5_gg(c,d,a,b,x[i+15],14,-660478335);b=md5_gg(b,c,d,a,x[i+4],20,-405537848);a=md5_gg(a,b,c,d,x[i+9],5,568446438);d=md5_gg(d,a,b,c,x[i+14],9,-1019803690);c=md5_gg(c,d,a,b,x[i+3],14,-187363961);b=md5_gg(b,c,d,a,x[i+8],20,1163531501);a=md5_gg(a,b,c,d,x[i+13],5,-1444681467);d=md5_gg(d,a,b,c,x[i+2],9,-51403784);c=md5_gg(c,d,a,b,x[i+7],14,1735328473);b=md5_gg(b,c,d,a,x[i+12],20,-1926607734);a=md5_hh(a,b,c,d,x[i+5],4,-378558);d=md5_hh(d,a,b,c,x[i+8],11,-2022574463);c=md5_hh(c,d,a,b,x[i+11],16,1839030562);b=md5_hh(b,c,d,a,x[i+14],23,-35309556);a=md5_hh(a,b,c,d,x[i+1],4,-1530992060);d=md5_hh(d,a,b,c,x[i+4],11,1272893353);c=md5_hh(c,d,a,b,x[i+7],16,-155497632);b=md5_hh(b,c,d,a,x[i+10],23,-1094730640);a=md5_hh(a,b,c,d,x[i+13],4,681279174);d=md5_hh(d,a,b,c,x[i+0],11,-358537222);c=md5_hh(c,d,a,b,x[i+3],16,-722521979);b=md5_hh(b,c,d,a,x[i+6],23,76029189);a=md5_hh(a,b,c,d,x[i+9],4,-640364487);d=md5_hh(d,a,b,c,x[i+12],11,-421815835);c=md5_hh(c,d,a,b,x[i+15],16,530742520);b=md5_hh(b,c,d,a,x[i+2],23,-995338651);a=md5_ii(a,b,c,d,x[i+0],6,-198630844);d=md5_ii(d,a,b,c,x[i+7],10,1126891415);c=md5_ii(c,d,a,b,x[i+14],15,-1416354905);b=md5_ii(b,c,d,a,x[i+5],21,-57434055);a=md5_ii(a,b,c,d,x[i+12],6,1700485571);d=md5_ii(d,a,b,c,x[i+3],10,-1894986606);c=md5_ii(c,d,a,b,x[i+10],15,-1051523);b=md5_ii(b,c,d,a,x[i+1],21,-2054922799);a=md5_ii(a,b,c,d,x[i+8],6,1873313359);d=md5_ii(d,a,b,c,x[i+15],10,-30611744);c=md5_ii(c,d,a,b,x[i+6],15,-1560198380);b=md5_ii(b,c,d,a,x[i+13],21,1309151649);a=md5_ii(a,b,c,d,x[i+4],6,-145523070);d=md5_ii(d,a,b,c,x[i+11],10,-1120210379);c=md5_ii(c,d,a,b,x[i+2],15,718787259);b=md5_ii(b,c,d,a,x[i+9],21,-343485551);a=safe_add(a,olda);b=safe_add(b,oldb);c=safe_add(c,oldc);d=safe_add(d,oldd)}return[a,b,c,d]};var core_hmac_md5=function(key,data){var bkey=str2binl(key);if(bkey.length>16){bkey=core_md5(bkey,key.length*chrsz)}var ipad=new Array(16),opad=new Array(16);for(var i=0;i<16;i++){ipad[i]=bkey[i]^909522486;opad[i]=bkey[i]^1549556828}var hash=core_md5(ipad.concat(str2binl(data)),512+data.length*chrsz);return core_md5(opad.concat(hash),512+128)};var obj={hexdigest:function(s){return binl2hex(core_md5(str2binl(s),s.length*chrsz))},b64digest:function(s){return binl2b64(core_md5(str2binl(s),s.length*chrsz))},hash:function(s){return binl2str(core_md5(str2binl(s),s.length*chrsz))},hmac_hexdigest:function(key,data){return binl2hex(core_hmac_md5(key,data))},hmac_b64digest:function(key,data){return binl2b64(core_hmac_md5(key,data))},hmac_hash:function(key,data){return binl2str(core_hmac_md5(key,data))},test:function(){return MD5.hexdigest("abc")==="900150983cd24fb0d6963f7d28e17f72"}};return obj}();if(!Function.prototype.bind){Function.prototype.bind=function(obj){var func=this;return function(){return func.apply(obj,arguments)}}}if(!Function.prototype.prependArg){Function.prototype.prependArg=function(arg){var func=this;return function(){var newargs=[arg];for(var i=0;i<arguments.length;i++){newargs.push(arguments[i])}return func.apply(this,newargs)}}}if(!Array.prototype.indexOf){Array.prototype.indexOf=function(elt){var len=this.length;var from=Number(arguments[1])||0;from=from<0?Math.ceil(from):Math.floor(from);if(from<0){from+=len}for(;from<len;from++){if(from in this&&this[from]===elt){return from}}return-1}}(function(callback){var Strophe;function $build(name,attrs){return new Strophe.Builder(name,attrs)}function $msg(attrs){return new Strophe.Builder("message",attrs)}function $iq(attrs){return new Strophe.Builder("iq",attrs)}function $pres(attrs){return new Strophe.Builder("presence",attrs)}Strophe={VERSION:"1.0.1",NS:{HTTPBIND:"http://jabber.org/protocol/httpbind",BOSH:"urn:xmpp:xbosh",CLIENT:"jabber:client",AUTH:"jabber:iq:auth",ROSTER:"jabber:iq:roster",PROFILE:"jabber:iq:profile",DISCO_INFO:"http://jabber.org/protocol/disco#info",DISCO_ITEMS:"http://jabber.org/protocol/disco#items",MUC:"http://jabber.org/protocol/muc",SASL:"urn:ietf:params:xml:ns:xmpp-sasl",STREAM:"http://etherx.jabber.org/streams",BIND:"urn:ietf:params:xml:ns:xmpp-bind",SESSION:"urn:ietf:params:xml:ns:xmpp-session",VERSION:"jabber:iq:version",STANZAS:"urn:ietf:params:xml:ns:xmpp-stanzas"},addNamespace:function(name,value){Strophe.NS[name]=value},Status:{ERROR:0,CONNECTING:1,CONNFAIL:2,AUTHENTICATING:3,AUTHFAIL:4,CONNECTED:5,DISCONNECTED:6,DISCONNECTING:7,ATTACHED:8},LogLevel:{DEBUG:0,INFO:1,WARN:2,ERROR:3,FATAL:4},ElementType:{NORMAL:1,TEXT:3},TIMEOUT:1.1,SECONDARY_TIMEOUT:.1,forEachChild:function(elem,elemName,func){var i,childNode;for(i=0;i<elem.childNodes.length;i++){childNode=elem.childNodes[i];if(childNode.nodeType==Strophe.ElementType.NORMAL&&(!elemName||this.isTagEqual(childNode,elemName))){func(childNode)}}},isTagEqual:function(el,name){return el.tagName.toLowerCase()==name.toLowerCase()},_xmlGenerator:null,_makeGenerator:function(){var doc;if(window.ActiveXObject){doc=new ActiveXObject("Microsoft.XMLDOM");doc.appendChild(doc.createElement("strophe"))}else{doc=document.implementation.createDocument("jabber:client","strophe",null)}return doc},xmlElement:function(name){if(!name){return null}var node=null;if(!Strophe._xmlGenerator){Strophe._xmlGenerator=Strophe._makeGenerator()}node=Strophe._xmlGenerator.createElement(name);var a,i,k;for(a=1;a<arguments.length;a++){if(!arguments[a]){continue}if(typeof arguments[a]=="string"||typeof arguments[a]=="number"){node.appendChild(Strophe.xmlTextNode(arguments[a]))}else if(typeof arguments[a]=="object"&&typeof arguments[a].sort=="function"){for(i=0;i<arguments[a].length;i++){if(typeof arguments[a][i]=="object"&&typeof arguments[a][i].sort=="function"){node.setAttribute(arguments[a][i][0],arguments[a][i][1])}}}else if(typeof arguments[a]=="object"){for(k in arguments[a]){if(arguments[a].hasOwnProperty(k)){node.setAttribute(k,arguments[a][k])}}}}return node},xmlescape:function(text){if(!text)return"";if(text.constructor!=Array){text=text.replace(/\&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}else{for(var i=0;i<text.length;i++){text[i]=text[i].replace(/\&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}}return text},xmlTextNode:function(text){text=Strophe.xmlescape(text);if(!Strophe._xmlGenerator){Strophe._xmlGenerator=Strophe._makeGenerator()}return Strophe._xmlGenerator.createTextNode(text)},getText:function(elem){if(!elem){return null}var str="";if(elem.childNodes.length===0&&elem.nodeType==Strophe.ElementType.TEXT){str+=elem.nodeValue}for(var i=0;i<elem.childNodes.length;i++){if(elem.childNodes[i].nodeType==Strophe.ElementType.TEXT){str+=elem.childNodes[i].nodeValue}}return str},copyElement:function(elem){var i,el;if(elem.nodeType==Strophe.ElementType.NORMAL){el=Strophe.xmlElement(elem.tagName);for(i=0;i<elem.attributes.length;i++){el.setAttribute(elem.attributes[i].nodeName.toLowerCase(),elem.attributes[i].value)}for(i=0;i<elem.childNodes.length;i++){el.appendChild(Strophe.copyElement(elem.childNodes[i]))}}else if(elem.nodeType==Strophe.ElementType.TEXT){el=Strophe.xmlTextNode(elem.nodeValue)}return el},escapeNode:function(node){return node.replace(/^\s+|\s+$/g,"").replace(/\\/g,"\\5c").replace(/ /g,"\\20").replace(/\"/g,"\\22").replace(/\&/g,"\\26").replace(/\'/g,"\\27").replace(/\//g,"\\2f").replace(/:/g,"\\3a").replace(/</g,"\\3c").replace(/>/g,"\\3e").replace(/@/g,"\\40")},unescapeNode:function(node){return node.replace(/\\20/g," ").replace(/\\22/g,'"').replace(/\\26/g,"&").replace(/\\27/g,"'").replace(/\\2f/g,"/").replace(/\\3a/g,":").replace(/\\3c/g,"<").replace(/\\3e/g,">").replace(/\\40/g,"@").replace(/\\5c/g,"\\")},getNodeFromJid:function(jid){if(jid.indexOf("@")<0){return null}return jid.split("@")[0]},getDomainFromJid:function(jid){var bare=Strophe.getBareJidFromJid(jid);if(bare.indexOf("@")<0){return bare}else{var parts=bare.split("@");parts.splice(0,1);return parts.join("@")}},getResourceFromJid:function(jid){var s=jid.split("/");if(s.length<2){return null}s.splice(0,1);return s.join("/")},getBareJidFromJid:function(jid){return jid.split("/")[0]},log:function(level,msg){return},debug:function(msg){this.log(this.LogLevel.DEBUG,msg)},info:function(msg){this.log(this.LogLevel.INFO,msg)},warn:function(msg){this.log(this.LogLevel.WARN,msg)},error:function(msg){this.log(this.LogLevel.ERROR,msg)},fatal:function(msg){this.log(this.LogLevel.FATAL,msg)},serialize:function(elem){var result;if(!elem){return null}if(typeof elem.tree==="function"){elem=elem.tree()}var nodeName=elem.nodeName;var i,child;if(elem.getAttribute("_realname")){nodeName=elem.getAttribute("_realname")}result="<"+nodeName;for(i=0;i<elem.attributes.length;i++){if(elem.attributes[i].nodeName!="_realname"){result+=" "+elem.attributes[i].nodeName.toLowerCase()+"='"+elem.attributes[i].value.replace("&","&amp;").replace("'","&apos;").replace("<","&lt;")+"'"}}if(elem.childNodes.length>0){result+=">";for(i=0;i<elem.childNodes.length;i++){child=elem.childNodes[i];if(child.nodeType==Strophe.ElementType.NORMAL){result+=Strophe.serialize(child)}else if(child.nodeType==Strophe.ElementType.TEXT){result+=child.nodeValue}}result+="</"+nodeName+">"}else{result+="/>"}return result},_requestId:0,_connectionPlugins:{},addConnectionPlugin:function(name,ptype){Strophe._connectionPlugins[name]=ptype}};Strophe.Builder=function(name,attrs){if(name=="presence"||name=="message"||name=="iq"){if(attrs&&!attrs.xmlns){attrs.xmlns=Strophe.NS.CLIENT}else if(!attrs){attrs={xmlns:Strophe.NS.CLIENT}}}this.nodeTree=Strophe.xmlElement(name,attrs);this.node=this.nodeTree};Strophe.Builder.prototype={tree:function(){return this.nodeTree},toString:function(){return Strophe.serialize(this.nodeTree)},up:function(){this.node=this.node.parentNode;return this},attrs:function(moreattrs){for(var k in moreattrs){if(moreattrs.hasOwnProperty(k)){this.node.setAttribute(k,moreattrs[k])}}return this},c:function(name,attrs){var child=Strophe.xmlElement(name,attrs);this.node.appendChild(child);this.node=child;return this},cnode:function(elem){this.node.appendChild(elem);this.node=elem;return this},t:function(text){var child=Strophe.xmlTextNode(text);this.node.appendChild(child);return this}};Strophe.Handler=function(handler,ns,name,type,id,from,options){this.handler=handler;this.ns=ns;this.name=name;this.type=type;this.id=id;this.options=options||{matchbare:false};if(!this.options.matchBare){this.options.matchBare=false}if(this.options.matchBare){this.from=Strophe.getBareJidFromJid(from)}else{this.from=from}this.user=true};Strophe.Handler.prototype={isMatch:function(elem){var nsMatch;var from=null;if(this.options.matchBare){from=Strophe.getBareJidFromJid(elem.getAttribute("from"))}else{from=elem.getAttribute("from")}nsMatch=false;if(!this.ns){nsMatch=true}else{var self=this;Strophe.forEachChild(elem,null,function(elem){if(elem.getAttribute("xmlns")==self.ns){nsMatch=true}});nsMatch=nsMatch||elem.getAttribute("xmlns")==this.ns}if(nsMatch&&(!this.name||Strophe.isTagEqual(elem,this.name))&&(!this.type||elem.getAttribute("type")===this.type)&&(!this.id||elem.getAttribute("id")===this.id)&&(!this.from||from===this.from)){return true}return false},run:function(elem){var result=null;try{result=this.handler(elem)}catch(e){if(e.sourceURL){Strophe.fatal("error: "+this.handler+" "+e.sourceURL+":"+e.line+" - "+e.name+": "+e.message)}else if(e.fileName){if(typeof console!="undefined"){console.trace();console.error(this.handler," - error - ",e,e.message)}Strophe.fatal("error: "+this.handler+" "+e.fileName+":"+e.lineNumber+" - "+e.name+": "+e.message)}else{Strophe.fatal("error: "+this.handler)}throw e}return result},toString:function(){return"{Handler: "+this.handler+"("+this.name+","+this.id+","+this.ns+")}"}};Strophe.TimedHandler=function(period,handler){this.period=period;this.handler=handler;this.lastCalled=(new Date).getTime();this.user=true};Strophe.TimedHandler.prototype={run:function(){this.lastCalled=(new Date).getTime();return this.handler()},reset:function(){this.lastCalled=(new Date).getTime()},toString:function(){return"{TimedHandler: "+this.handler+"("+this.period+")}"}};Strophe.Request=function(elem,func,rid,sends){this.id=++Strophe._requestId;this.xmlData=elem;this.data=Strophe.serialize(elem);this.origFunc=func;this.func=func;this.rid=rid;this.date=NaN;this.sends=sends||0;this.abort=false;this.dead=null;this.age=function(){if(!this.date){return 0}var now=new Date;return(now-this.date)/1e3};this.timeDead=function(){if(!this.dead){return 0}var now=new Date;return(now-this.dead)/1e3};this.xhr=this._newXHR()};Strophe.Request.prototype={getResponse:function(){var node=null;if(this.xhr.responseXML&&this.xhr.responseXML.documentElement){node=this.xhr.responseXML.documentElement;if(node.tagName=="parsererror"){Strophe.error("invalid response received");Strophe.error("responseText: "+this.xhr.responseText);Strophe.error("responseXML: "+Strophe.serialize(this.xhr.responseXML));throw"parsererror"}}else if(this.xhr.responseText){Strophe.error("invalid response received");Strophe.error("responseText: "+this.xhr.responseText);Strophe.error("responseXML: "+Strophe.serialize(this.xhr.responseXML))}return node},_newXHR:function(){var xhr=null;if(window.XMLHttpRequest){xhr=new XMLHttpRequest;if(xhr.overrideMimeType){xhr.overrideMimeType("text/xml")}}else if(window.ActiveXObject){xhr=new ActiveXObject("Microsoft.XMLHTTP")}xhr.onreadystatechange=this.func.prependArg(this);return xhr}};Strophe.Connection=function(service){this.service=service;this.jid="";this.rid=Math.floor(Math.random()*4294967295);this.sid=null;this.streamId=null;this.do_session=false;this.do_bind=false;this.timedHandlers=[];this.handlers=[];this.removeTimeds=[];this.removeHandlers=[];this.addTimeds=[];this.addHandlers=[];this._idleTimeout=null;this._disconnectTimeout=null;this.authenticated=false;this.disconnecting=false;this.connected=false;this.errors=0;this.paused=false;this.hold=1;this.wait=60;this.window=5;this._data=[];this._requests=[];this._uniqueId=Math.round(Math.random()*1e4);this._sasl_success_handler=null;this._sasl_failure_handler=null;this._sasl_challenge_handler=null;this._idleTimeout=setTimeout(this._onIdle.bind(this),100);for(var k in Strophe._connectionPlugins){if(Strophe._connectionPlugins.hasOwnProperty(k)){var ptype=Strophe._connectionPlugins[k];var F=function(){};F.prototype=ptype;this[k]=new F;this[k].init(this)}}};Strophe.Connection.prototype={reset:function(){this.rid=Math.floor(Math.random()*4294967295);this.sid=null;this.streamId=null;this.do_session=false;this.do_bind=false;this.timedHandlers=[];this.handlers=[];this.removeTimeds=[];this.removeHandlers=[];this.addTimeds=[];this.addHandlers=[];this.authenticated=false;this.disconnecting=false;this.connected=false;this.errors=0;this._requests=[];this._uniqueId=Math.round(Math.random()*1e4)},pause:function(){this.paused=true},resume:function(){this.paused=false},getUniqueId:function(suffix){if(typeof suffix=="string"||typeof suffix=="number"){return++this._uniqueId+":"+suffix}else{return++this._uniqueId+""}},connect:function(jid,pass,callback,wait,hold){this.jid=jid;this.pass=pass;this.connect_callback=callback;this.disconnecting=false;this.connected=false;this.authenticated=false;this.errors=0;this.wait=wait||this.wait;this.hold=hold||this.hold;this.domain=Strophe.getDomainFromJid(this.jid);var body=this._buildBody().attrs({to:this.domain,"xml:lang":"en",wait:this.wait,hold:this.hold,content:"text/xml; charset=utf-8",ver:"1.6","xmpp:version":"1.0","xmlns:xmpp":Strophe.NS.BOSH});this._changeConnectStatus(Strophe.Status.CONNECTING,null);this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this).prependArg(this._connect_cb.bind(this)),body.tree().getAttribute("rid")));this._throttledRequestHandler()},attach:function(jid,sid,rid,callback,wait,hold,wind){this.jid=jid;this.sid=sid;this.rid=rid;this.connect_callback=callback;this.domain=Strophe.getDomainFromJid(this.jid);this.authenticated=true;this.connected=true;this.wait=wait||this.wait;this.hold=hold||this.hold;this.window=wind||this.window;this._changeConnectStatus(Strophe.Status.ATTACHED,null)},xmlInput:function(elem){return},xmlOutput:function(elem){return},rawInput:function(data){return},rawOutput:function(data){return},send:function(elem){if(elem===null){return}if(typeof elem.sort==="function"){for(var i=0;i<elem.length;i++){this._queueData(elem[i])}}else if(typeof elem.tree==="function"){this._queueData(elem.tree())}else{this._queueData(elem)}this._throttledRequestHandler();clearTimeout(this._idleTimeout);this._idleTimeout=setTimeout(this._onIdle.bind(this),100)},flush:function(){clearTimeout(this._idleTimeout);this._onIdle()},sendIQ:function(elem,callback,errback,timeout){var timeoutHandler=null;var that=this;if(typeof elem.tree==="function"){elem=elem.tree()}var id=elem.getAttribute("id");if(!id){id=this.getUniqueId("sendIQ");elem.setAttribute("id",id)}var handler=this.addHandler(function(stanza){if(timeoutHandler){that.deleteTimedHandler(timeoutHandler)}var iqtype=stanza.getAttribute("type");if(iqtype==="result"){if(callback){callback(stanza)}}else if(iqtype==="error"){if(errback){errback(stanza)}}else{throw{name:"StropheError",message:"Got bad IQ type of "+iqtype}}},null,"iq",null,id);if(timeout){timeoutHandler=this.addTimedHandler(timeout,function(){that.deleteHandler(handler);if(errback){errback(null)}return false})}this.send(elem);return id},_queueData:function(element){if(element===null||!element.tagName||!element.childNodes){throw{name:"StropheError",message:"Cannot queue non-DOMElement."}}this._data.push(element)},_sendRestart:function(){this._data.push("restart");this._throttledRequestHandler();clearTimeout(this._idleTimeout);this._idleTimeout=setTimeout(this._onIdle.bind(this),100)},addTimedHandler:function(period,handler){var thand=new Strophe.TimedHandler(period,handler);this.addTimeds.push(thand);return thand},deleteTimedHandler:function(handRef){this.removeTimeds.push(handRef)},addHandler:function(handler,ns,name,type,id,from,options){var hand=new Strophe.Handler(handler,ns,name,type,id,from,options);this.addHandlers.push(hand);return hand},deleteHandler:function(handRef){this.removeHandlers.push(handRef)},disconnect:function(reason){this._changeConnectStatus(Strophe.Status.DISCONNECTING,reason);Strophe.info("Disconnect was called because: "+reason);if(this.connected){this._disconnectTimeout=this._addSysTimedHandler(3e3,this._onDisconnectTimeout.bind(this));this._sendTerminate(reason)}},disconnectAfterUnload:function(reason){this._changeConnectStatus(Strophe.Status.DISCONNECTING,reason);Strophe.info("Disconnect was called because: "+reason);this._onDisconnectTimeout()},_changeConnectStatus:function(status,condition){for(var k in Strophe._connectionPlugins){if(Strophe._connectionPlugins.hasOwnProperty(k)){var plugin=this[k];if(plugin.statusChanged){try{plugin.statusChanged(status,condition)}catch(err){Strophe.error(""+k+" plugin caused an exception "+"changing status: "+err)}}}}if(this.connect_callback){try{this.connect_callback(status,condition)}catch(e){Strophe.error("User connection callback caused an "+"exception: "+e)}}},_buildBody:function(){var bodyWrap=$build("body",{rid:this.rid++,xmlns:Strophe.NS.HTTPBIND});if(this.sid!==null){bodyWrap.attrs({sid:this.sid})}return bodyWrap},_removeRequest:function(req){Strophe.debug("removing request");var i;for(i=this._requests.length-1;i>=0;i--){if(req==this._requests[i]){this._requests.splice(i,1)}}req.xhr.onreadystatechange=function(){};this._throttledRequestHandler()},_restartRequest:function(i){var req=this._requests[i];if(req.dead===null){req.dead=new Date}this._processRequest(i)},_processRequest:function(i){var req=this._requests[i];var reqStatus=-1;try{if(req.xhr.readyState==4){reqStatus=req.xhr.status}}catch(e){Strophe.error("caught an error in _requests["+i+"], reqStatus: "+reqStatus)}if(typeof reqStatus=="undefined"){reqStatus=-1}var time_elapsed=req.age();var primaryTimeout=!isNaN(time_elapsed)&&time_elapsed>Math.floor(Strophe.TIMEOUT*this.wait);var secondaryTimeout=req.dead!==null&&req.timeDead()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait);var requestCompletedWithServerError=req.xhr.readyState==4&&(reqStatus<1||reqStatus>=500);if(primaryTimeout||secondaryTimeout||requestCompletedWithServerError){if(secondaryTimeout){Strophe.error("Request "+this._requests[i].id+" timed out (secondary), restarting")}req.abort=true;req.xhr.abort();req.xhr.onreadystatechange=function(){};this._requests[i]=new Strophe.Request(req.xmlData,req.origFunc,req.rid,req.sends);req=this._requests[i]}if(req.xhr.readyState===0){Strophe.debug("request id "+req.id+"."+req.sends+" posting");req.date=new Date;try{req.xhr.open("POST",this.service,true)}catch(e2){Strophe.error("XHR open failed: "+e2.message);if(!this.connected){this._changeConnectStatus(Strophe.Status.CONNFAIL,"bad-service")}this.disconnect();return}var sendFunc=function(){req.xhr.send(req.data)};if(req.sends>1){var backoff=Math.pow(req.sends,3)*1e3;setTimeout(sendFunc,backoff)}else{sendFunc()}req.sends++;this.xmlOutput(req.xmlData);this.rawOutput(req.data)}else{Strophe.debug("_processRequest: "+(i===0?"first":"second")+" request has readyState of "+req.xhr.readyState)}},_throttledRequestHandler:function(){if(!this._requests){Strophe.debug("_throttledRequestHandler called with "+"undefined requests")}else{Strophe.debug("_throttledRequestHandler called with "+this._requests.length+" requests")}if(!this._requests||this._requests.length===0){return}if(this._requests.length>0){this._processRequest(0)}if(this._requests.length>1&&Math.abs(this._requests[0].rid-this._requests[1].rid)<this.window-1){this._processRequest(1)}},_onRequestStateChange:function(func,req){Strophe.debug("request id "+req.id+"."+req.sends+" state changed to "+req.xhr.readyState);if(req.abort){req.abort=false;return}var reqStatus;if(req.xhr.readyState==4){reqStatus=0;try{reqStatus=req.xhr.status}catch(e){}if(typeof reqStatus=="undefined"){reqStatus=0}if(this.disconnecting){if(reqStatus>=400){this._hitError(reqStatus);return}}var reqIs0=this._requests[0]==req;var reqIs1=this._requests[1]==req;if(reqStatus>0&&reqStatus<500||req.sends>30){this._removeRequest(req);Strophe.debug("request id "+req.id+" should now be removed")}if(reqStatus==200){if(reqIs1||reqIs0&&this._requests.length>0&&this._requests[0].age()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait)){this._restartRequest(0)}Strophe.debug("request id "+req.id+"."+req.sends+" got 200");func(req);this.errors=0}else{Strophe.error("request id "+req.id+"."+req.sends+" error "+reqStatus+" happened");if(reqStatus===0||reqStatus>=400&&reqStatus<600||reqStatus>=12e3){this._hitError(reqStatus);if(reqStatus>=400&&reqStatus<500){this._changeConnectStatus(Strophe.Status.DISCONNECTING,null);this._doDisconnect()}}}if(!(reqStatus>0&&reqStatus<1e4||req.sends>30)){this._throttledRequestHandler()}}},_hitError:function(reqStatus){this.errors++;Strophe.warn("request errored, status: "+reqStatus+", number of errors: "+this.errors);if(this.errors>4){this._onDisconnectTimeout()}},_doDisconnect:function(){Strophe.info("_doDisconnect was called");this.authenticated=false;this.disconnecting=false;this.sid=null;this.streamId=null;this.rid=Math.floor(Math.random()*4294967295);if(this.connected){this._changeConnectStatus(Strophe.Status.DISCONNECTED,null);this.connected=false}this.handlers=[];this.timedHandlers=[];this.removeTimeds=[];this.removeHandlers=[];this.addTimeds=[];this.addHandlers=[]},_dataRecv:function(req){try{var elem=req.getResponse()}catch(e){if(e!="parsererror"){throw e}this.disconnect("strophe-parsererror")}if(elem===null){return}this.xmlInput(elem);this.rawInput(Strophe.serialize(elem));var i,hand;while(this.removeHandlers.length>0){hand=this.removeHandlers.pop();i=this.handlers.indexOf(hand);if(i>=0){this.handlers.splice(i,1)}}while(this.addHandlers.length>0){this.handlers.push(this.addHandlers.pop())}if(this.disconnecting&&this._requests.length===0){this.deleteTimedHandler(this._disconnectTimeout);this._disconnectTimeout=null;this._doDisconnect();return}var typ=elem.getAttribute("type");var cond,conflict;if(typ!==null&&typ=="terminate"){cond=elem.getAttribute("condition");conflict=elem.getElementsByTagName("conflict");if(cond!==null){if(cond=="remote-stream-error"&&conflict.length>0){cond="conflict"}this._changeConnectStatus(Strophe.Status.CONNFAIL,cond)}else{this._changeConnectStatus(Strophe.Status.CONNFAIL,"unknown")}this.disconnect();return}var self=this;Strophe.forEachChild(elem,null,function(child){var i,newList;newList=self.handlers;self.handlers=[];for(i=0;i<newList.length;i++){var hand=newList[i];if(hand.isMatch(child)&&(self.authenticated||!hand.user)){if(hand.run(child)){self.handlers.push(hand)}}else{self.handlers.push(hand)}}})},_sendTerminate:function(reason){Strophe.info("_sendTerminate was called");var body=this._buildBody().attrs({type:"terminate"});if(this.authenticated){var elem=body.c("presence",{xmlns:Strophe.NS.CLIENT,type:"unavailable"});if(reason&&"string"===typeof reason){elem.up().c("chatTerminatedEvent",{xmlns:"http://bindings.egain.com/chat",event:reason})}}this.disconnecting=true;var req=new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this).prependArg(this._dataRecv.bind(this)),body.tree().getAttribute("rid"));req.syncRequest="boolean"===typeof req.syncRequest?req.syncRequest:true;while(this._requests.length>0)this._requests.pop();this._requests.push(req);this._throttledRequestHandler()},_connect_cb:function(req){Strophe.info("_connect_cb was called");this.connected=true;var bodyWrap=req.getResponse();if(!bodyWrap){return}this.xmlInput(bodyWrap);this.rawInput(Strophe.serialize(bodyWrap));var typ=bodyWrap.getAttribute("type");var cond,conflict;if(typ!==null&&typ=="terminate"){cond=bodyWrap.getAttribute("condition");conflict=bodyWrap.getElementsByTagName("conflict");if(cond!==null){if(cond=="remote-stream-error"&&conflict.length>0){cond="conflict"}this._changeConnectStatus(Strophe.Status.CONNFAIL,cond)}else{this._changeConnectStatus(Strophe.Status.CONNFAIL,"unknown")}return}if(!this.sid){this.sid=bodyWrap.getAttribute("sid")}if(!this.stream_id){this.stream_id=bodyWrap.getAttribute("authid")}var wind=bodyWrap.getAttribute("requests");if(wind){this.window=parseInt(wind,10)}var hold=bodyWrap.getAttribute("hold");if(hold){this.hold=parseInt(hold,10)}var wait=bodyWrap.getAttribute("wait");if(wait){this.wait=parseInt(wait,10)}var do_sasl_plain=false;var do_sasl_digest_md5=false;var do_sasl_anonymous=false;var mechanisms=bodyWrap.getElementsByTagName("mechanism");var i,mech,auth_str,hashed_auth_str;if(mechanisms.length>0){for(i=0;i<mechanisms.length;i++){mech=Strophe.getText(mechanisms[i]);if(mech=="DIGEST-MD5"){do_sasl_digest_md5=true}else if(mech=="PLAIN"){do_sasl_plain=true}else if(mech=="ANONYMOUS"){do_sasl_anonymous=true}}}else{var body=this._buildBody();this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this).prependArg(this._connect_cb.bind(this)),body.tree().getAttribute("rid")));this._throttledRequestHandler();return}if(Strophe.getNodeFromJid(this.jid)===null&&do_sasl_anonymous){this._changeConnectStatus(Strophe.Status.AUTHENTICATING,null);this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,"success",null,null);this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null);this.send($build("auth",{xmlns:Strophe.NS.SASL,mechanism:"ANONYMOUS"}).tree())}else if(Strophe.getNodeFromJid(this.jid)===null){this._changeConnectStatus(Strophe.Status.CONNFAIL,"x-strophe-bad-non-anon-jid");this.disconnect()}else if(do_sasl_digest_md5){this._changeConnectStatus(Strophe.Status.AUTHENTICATING,null);this._sasl_challenge_handler=this._addSysHandler(this._sasl_challenge1_cb.bind(this),null,"challenge",null,null);this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null);this.send($build("auth",{xmlns:Strophe.NS.SASL,mechanism:"DIGEST-MD5"}).tree())}else if(do_sasl_plain){auth_str=Strophe.getBareJidFromJid(this.jid);auth_str=auth_str+"\0";auth_str=auth_str+Strophe.getNodeFromJid(this.jid);auth_str=auth_str+"\0";auth_str=auth_str+this.pass;this._changeConnectStatus(Strophe.Status.AUTHENTICATING,null);this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,"success",null,null);this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null);hashed_auth_str=Base64.encode(auth_str);this.send($build("auth",{xmlns:Strophe.NS.SASL,mechanism:"PLAIN"}).t(hashed_auth_str).tree())}else{this._changeConnectStatus(Strophe.Status.AUTHENTICATING,null);this._addSysHandler(this._auth1_cb.bind(this),null,null,null,"_auth_1");this.send($iq({type:"get",to:this.domain,id:"_auth_1"}).c("query",{xmlns:Strophe.NS.AUTH}).c("username",{}).t(Strophe.getNodeFromJid(this.jid)).tree())}},_sasl_challenge1_cb:function(elem){var attribMatch=/([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/;var challenge=Base64.decode(Strophe.getText(elem));var cnonce=MD5.hexdigest(Math.random()*1234567890);var realm="";var host=null;var nonce="";var qop="";var matches;this.deleteHandler(this._sasl_failure_handler);while(challenge.match(attribMatch)){matches=challenge.match(attribMatch);challenge=challenge.replace(matches[0],"");matches[2]=matches[2].replace(/^"(.+)"$/,"$1");switch(matches[1]){case"realm":realm=matches[2];break;case"nonce":nonce=matches[2];break;case"qop":qop=matches[2];break;case"host":host=matches[2];break}}var digest_uri="xmpp/"+this.domain;if(host!==null){digest_uri=digest_uri+"/"+host}var A1=MD5.hash(Strophe.getNodeFromJid(this.jid)+":"+realm+":"+this.pass)+":"+nonce+":"+cnonce;var A2="AUTHENTICATE:"+digest_uri;var responseText="";responseText+="username="+this._quote(Strophe.getNodeFromJid(this.jid))+",";responseText+="realm="+this._quote(realm)+",";responseText+="nonce="+this._quote(nonce)+",";responseText+="cnonce="+this._quote(cnonce)+",";responseText+='nc="00000001",';responseText+='qop="auth",';responseText+="digest-uri="+this._quote(digest_uri)+",";responseText+="response="+this._quote(MD5.hexdigest(MD5.hexdigest(A1)+":"+nonce+":00000001:"+cnonce+":auth:"+MD5.hexdigest(A2)))+",";responseText+='charset="utf-8"';this._sasl_challenge_handler=this._addSysHandler(this._sasl_challenge2_cb.bind(this),null,"challenge",null,null);this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,"success",null,null);this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null);this.send($build("response",{xmlns:Strophe.NS.SASL}).t(Base64.encode(responseText)).tree());return false},_quote:function(str){return'"'+str.replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"'},_sasl_challenge2_cb:function(elem){this.deleteHandler(this._sasl_success_handler);this.deleteHandler(this._sasl_failure_handler);this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,"success",null,null);this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null);this.send($build("response",{xmlns:Strophe.NS.SASL}).tree());return false},_auth1_cb:function(elem){var iq=$iq({type:"set",id:"_auth_2"}).c("query",{xmlns:Strophe.NS.AUTH}).c("username",{}).t(Strophe.getNodeFromJid(this.jid)).up().c("password").t(this.pass);if(!Strophe.getResourceFromJid(this.jid)){this.jid=Strophe.getBareJidFromJid(this.jid)+"/strophe"}iq.up().c("resource",{}).t(Strophe.getResourceFromJid(this.jid));this._addSysHandler(this._auth2_cb.bind(this),null,null,null,"_auth_2");this.send(iq.tree());return false},_sasl_success_cb:function(elem){Strophe.info("SASL authentication succeeded.");this.deleteHandler(this._sasl_failure_handler);this._sasl_failure_handler=null;if(this._sasl_challenge_handler){this.deleteHandler(this._sasl_challenge_handler);this._sasl_challenge_handler=null}this._addSysHandler(this._sasl_auth1_cb.bind(this),null,"stream:features",null,null);this._sendRestart();return false},_sasl_auth1_cb:function(elem){var i,child;for(i=0;i<elem.childNodes.length;i++){child=elem.childNodes[i];if(child.nodeName=="bind"){this.do_bind=true}if(child.nodeName=="session"){this.do_session=true}}if(!this.do_bind){this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);return false}else{this._addSysHandler(this._sasl_bind_cb.bind(this),null,null,null,"_bind_auth_2");var resource=Strophe.getResourceFromJid(this.jid);if(resource){this.send($iq({type:"set",id:"_bind_auth_2"}).c("bind",{xmlns:Strophe.NS.BIND}).c("resource",{}).t(resource).tree())}else{this.send($iq({type:"set",id:"_bind_auth_2"}).c("bind",{xmlns:Strophe.NS.BIND}).tree())}}return false},_sasl_bind_cb:function(elem){if(elem.getAttribute("type")=="error"){Strophe.info("SASL binding failed.");this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);return false}var bind=elem.getElementsByTagName("bind");var jidNode;if(bind.length>0){jidNode=bind[0].getElementsByTagName("jid");if(jidNode.length>0){this.jid=Strophe.getText(jidNode[0]);if(this.do_session){this._addSysHandler(this._sasl_session_cb.bind(this),null,null,null,"_session_auth_2");this.send($iq({type:"set",id:"_session_auth_2"}).c("session",{xmlns:Strophe.NS.SESSION}).tree())}else{this.authenticated=true;this._changeConnectStatus(Strophe.Status.CONNECTED,null)}}}else{Strophe.info("SASL binding failed.");this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);return false}},_sasl_session_cb:function(elem){if(elem.getAttribute("type")=="result"){this.authenticated=true;this._changeConnectStatus(Strophe.Status.CONNECTED,null)}else if(elem.getAttribute("type")=="error"){Strophe.info("Session creation failed.");this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);return false}return false},_sasl_failure_cb:function(elem){if(this._sasl_success_handler){this.deleteHandler(this._sasl_success_handler);this._sasl_success_handler=null}if(this._sasl_challenge_handler){this.deleteHandler(this._sasl_challenge_handler);this._sasl_challenge_handler=null}this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);return false},_auth2_cb:function(elem){if(elem.getAttribute("type")=="result"){this.authenticated=true;this._changeConnectStatus(Strophe.Status.CONNECTED,null)}else if(elem.getAttribute("type")=="error"){this._changeConnectStatus(Strophe.Status.AUTHFAIL,null);this.disconnect()}return false},_addSysTimedHandler:function(period,handler){var thand=new Strophe.TimedHandler(period,handler);thand.user=false;this.addTimeds.push(thand);return thand},_addSysHandler:function(handler,ns,name,type,id){var hand=new Strophe.Handler(handler,ns,name,type,id);hand.user=false;this.addHandlers.push(hand);return hand},_onDisconnectTimeout:function(){Strophe.info("_onDisconnectTimeout was called");var req;while(this._requests.length>0){req=this._requests.pop();req.abort=true;req.xhr.abort();req.xhr.onreadystatechange=function(){}}this._doDisconnect();return false},_onIdle:function(){var i,thand,since,newList;while(this.removeTimeds.length>0){thand=this.removeTimeds.pop();i=this.timedHandlers.indexOf(thand);if(i>=0){this.timedHandlers.splice(i,1)}}while(this.addTimeds.length>0){this.timedHandlers.push(this.addTimeds.pop())}var now=(new Date).getTime();newList=[];for(i=0;i<this.timedHandlers.length;i++){thand=this.timedHandlers[i];if(this.authenticated||!thand.user){since=thand.lastCalled+thand.period;if(since-now<=0){if(thand.run()){newList.push(thand)}}else{newList.push(thand)}}}this.timedHandlers=newList;var body,time_elapsed;if(this.authenticated&&this._requests.length===0&&this._data.length===0&&!this.disconnecting){Strophe.info("no requests during idle cycle, sending "+"blank request");this._data.push(null)}if(this._requests.length<2&&this._data.length>0&&!this.paused){body=this._buildBody();for(i=0;i<this._data.length;i++){if(this._data[i]!==null){if(this._data[i]==="restart"){body.attrs({to:this.domain,"xml:lang":"en","xmpp:restart":"true","xmlns:xmpp":Strophe.NS.BOSH})}else{body.cnode(this._data[i]).up()}}}delete this._data;this._data=[];this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this).prependArg(this._dataRecv.bind(this)),body.tree().getAttribute("rid")));this._processRequest(this._requests.length-1)}if(this._requests.length>0){time_elapsed=this._requests[0].age();if(this._requests[0].dead!==null){if(this._requests[0].timeDead()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait)){this._throttledRequestHandler()}}if(time_elapsed>Math.floor(Strophe.TIMEOUT*this.wait)){Strophe.warn("Request "+this._requests[0].id+" timed out, over "+Math.floor(Strophe.TIMEOUT*this.wait)+" seconds since last activity");this._throttledRequestHandler()}}clearTimeout(this._idleTimeout);this._idleTimeout=setTimeout(this._onIdle.bind(this),100)}};if(callback){callback(Strophe,$build,$msg,$iq,$pres)}})(function(){window.Strophe=arguments[0];window.$build=arguments[1];window.$msg=arguments[2];window.$iq=arguments[3];window.$pres=arguments[4]});var eGainLibrarySettings=function(){this.IsDevelopmentModeOn=false;this.IsDebugOn=false;this.CORSHost="";this.ChatPauseInSec=30;this.eGainContextPath="";this.RetryCount=0;this.RetryIntervalInSec=5};window.egChatFrameIdentifier=2;window.eGainLibrarySettings=eGainLibrarySettings;var eGainLibrary=function(librarySettings){var _this=this;this.Datatype={CustomerObject:function(){this.Locale={Language:"en",Country:"US"};this.PrimaryKey={Name:"",Value:""};this.PrimaryKeyParams={PRIMARY_KEY_EMAIL:"Email",PRIMARY_KEY_PHONE:"Phone"};this.SetPrimaryKey=function(primaryKey,primaryKeyValue){this.PrimaryKey.Name=primaryKey;this.PrimaryKey.Value=primaryKeyValue};this.CustomerParameters=[];this.AddCustomerParameter=function(customerParam){this.CustomerParameters.push(customerParam)}},CustomerParameter:function(){this.eGainParentObject="";this.eGainChildObject="";this.eGainParamName="";this.eGainAttribute="";this.eGainValue="";this.eGainMinLength="";this.eGainMaxLength="";this.eGainRequired="";this.eGainFieldType="";this.eGainValidationString=""},EventHandlers:function(){this.OnConnectionInitialized={};this.OnConnectSuccess={};this.OnConnectionComplete={};this.OnCustTerminateSuccess={};this.OnConnectionFailure={};this.OnConnectionPaused={};this.OnConnectionResumed={};this.OnConnectionAttached={};this.OnConnectionAttachedFailure={};this.OnDockConnectionAttachedFailure={};this.OnConnectionFailure={};this.OnDuplicateSession={};this.OnAgentsNotAvailable={};this.OnSysemMessageReceived={};this.OnGetQueueCurrentStatus={};this.OnMessagePropertyLoad={};this.OnErrorOccured={};this.OnNetworkDisconnect={};this.OnNetworkReconnect={};this.OnTimeToReconnectExpired={}},ResultObject:function(){this.StatusCode="";this.StatusMessage="";this.IsSuccess=false}};this.ConnectionParameters=[];this.AddConnectionParameter=function(paramName,paramValue){if(paramName&&paramValue){var obj={};obj[paramName]=paramValue;this.ConnectionParameters.push(obj)}};var Utils={IsMobile:function(){},IsTablet:function(){},IsMobileOrTablet:function(){var check=false;(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check=true})(navigator.userAgent||navigator.vendor||window.opera);return check},UpdateQueryStringParameter:function(url,key,value){var re=new RegExp("([?&])"+key+"=.*?(&|$)","i");var separator=url.indexOf("?")!==-1?"&":"?";if(url.match(re)){return url.replace(re,"$1"+key+"="+value+"$2")}else{return url+separator+key+"="+value}}};var _egainLib=this;var _isDevelopmentModeOn=librarySettings?librarySettings.IsDevelopmentModeOn:false;var _corsHost="";var _eGainContextPath=librarySettings?librarySettings.eGainContextPath:"";_eGainContextPath=_eGainContextPath?_eGainContextPath:"";var _retryCountLimit=librarySettings?librarySettings.RetryCount:0;var _retryIntervalInSec=librarySettings?librarySettings.RetryIntervalInSec:5;var _entryPointId;var _connection=null;var _connected=false;var connectionFailure=false;var languageCode;var countryCode;var _templateName;var _version;var BOSH_SERVICE;var MESSAGING_URL;var CUSTOM_CHAT_URL;var CUSTOM_MESSAGING_URL;var MASKING_URL;var _video=false;var _videoURLParam="";var _avmode=null;var _avmodeURLParam="";var _onConnectionInitialized;var _onConnectSuccess;var _onConnectionComplete;var _onCustTerminateSuccess;var _onConnectionPaused;var _onConnectionResumed;var _onConnectionFailure;var _onConnectionAttached;var _onConnectionAttachedFailure;var _onDockConnectionAttachedFailure;var _onDuplicateSession;var _onAgentsNotAvailable;var _onServerNotificationReceived;var _onSystemMessageReceived;var _onGetQueueCurrentStatus;var _onMessagePropertyLoad;var _onErrorOccured;var _onNetworkDisconnect;var _onNetworkReconnect;var _onTimeToReconnectExpired;var eGainLog=function(message){if(typeof _this.logger==="function"){_this.logger(message)}};var onNetworkDisconnect=function(){if(typeof _onNetworkDisconnect==="function"){_onNetworkDisconnect()}};var onNetworkReconnect=function(){if(typeof _onNetworkReconnect==="function"){_onNetworkReconnect()}};var onTimeToReconnectExpired=function(){if(typeof _onTimeToReconnectExpired==="function"){_onTimeToReconnectExpired()}};var initializeApplicationState=function(entryPointId,language,country,templateName,version,serverURL){_entryPointId=entryPointId;if(serverURL)_corsHost=serverURL;else if(librarySettings&&librarySettings.CORSHost)_corsHost=librarySettings.CORSHost;languageCode=language?language:"en";countryCode=country?country:"US";_templateName=templateName?templateName:"";_version=version?version:"";eGainLibrary.debug=librarySettings?librarySettings.IsDebugOn:false;eGainLibrary.eGainLog=eGainLog;eGainLibrary.onNetworkDisconnect=onNetworkDisconnect;eGainLibrary.onNetworkReconnect=onNetworkReconnect;eGainLibrary.onTimeToReconnectExpired=onTimeToReconnectExpired};var validateEventHandlers=function(callbacks){try{if(typeof callbacks!=="object"){throw"The library cannot be initialized without providing an EventHandlers Object as parameter."}if(typeof callbacks.OnConnectionInitialized!=="function"){}else{_onConnectionInitialized=callbacks.OnConnectionInitialized}if(typeof callbacks.OnConnectSuccess!=="function"){throw"OnConnectSuccess is not defined or is not a function"}else{_onConnectSuccess=callbacks.OnConnectSuccess}if(typeof callbacks.OnConnectionFailure!=="function"){throw"OnConnectionFailure is not defined or is not a function"}else{_onConnectionFailure=callbacks.OnConnectionFailure}if(typeof callbacks.OnConnectionComplete!=="function"){throw"OnConnectionComplete is not defined or is not a function"}else{_onConnectionComplete=callbacks.OnConnectionComplete}if(typeof callbacks.OnCustTerminateSuccess!=="function"){throw"OnCustTerminateSuccess is not defined or is not a function"}else{_onCustTerminateSuccess=callbacks.OnCustTerminateSuccess}if(typeof callbacks.OnSystemMessageReceived!=="function"){throw"OnSystemMessageReceived is not defined or is not a function"}else{_onSystemMessageReceived=callbacks.OnSystemMessageReceived}if(typeof callbacks.OnErrorOccurred!=="function"){throw"OnErrorOccurred is not defined or is not a function"}else{_onErrorOccured=callbacks.OnErrorOccurred}if(typeof callbacks.OnAgentsNotAvailable!=="function"){throw"OnAgentsNotAvailable is not defined or is not a function"}else{_onAgentsNotAvailable=callbacks.OnAgentsNotAvailable}if(typeof callbacks.OnGetQueueCurrentStatus!=="function"){}else{_onGetQueueCurrentStatus=callbacks.OnGetQueueCurrentStatus}if(typeof callbacks.OnConnectionPaused!=="function"){}else{_onConnectionPaused=callbacks.OnConnectionPaused}if(typeof callbacks.OnConnectionResumed!=="function"){}else{_onConnectionResumed=callbacks.OnConnectionResumed}if(typeof callbacks.OnServerNotificationReceived!=="function"){}else{_onServerNotificationReceived=callbacks.OnServerNotificationReceived}if(typeof callbacks.OnConnectionAttached!=="function"){}else{_onConnectionAttached=callbacks.OnConnectionAttached}if(typeof callbacks.OnConnectionAttachedFailure!=="function"){}else{_onConnectionAttachedFailure=callbacks.OnConnectionAttachedFailure}if(typeof callbacks.OnDockConnectionAttachedFailure!=="function"){}else{_onDockConnectionAttachedFailure=callbacks.OnDockConnectionAttachedFailure}if(typeof callbacks.OnMessagePropertyLoad!=="function"){}else{_onMessagePropertyLoad=callbacks.OnMessagePropertyLoad}if(typeof callbacks.OnDuplicateSession!=="function"){}else{_onDuplicateSession=callbacks.OnDuplicateSession}if(typeof callbacks.OnNetworkDisconnect!=="function"){}else{_onNetworkDisconnect=callbacks.OnNetworkDisconnect}if(typeof callbacks.OnNetworkReconnect!=="function"){}else{_onNetworkReconnect=callbacks.OnNetworkReconnect}if(typeof callbacks.OnTimeToReconnectExpired!=="function"){}else{_onTimeToReconnectExpired=callbacks.OnTimeToReconnectExpired}}catch(err){throw err}};var validateCustomer=function(customer){var isValidCustomer=false;if(customer.PrimaryKey.Name!==""){if(customer.PrimaryKey.Name===customer.PrimaryKeyParams.PRIMARY_KEY_EMAIL){var skipValidation=false;for(var itemIndex=0;itemIndex<customer.CustomerParameters.length;itemIndex++){if(customer.CustomerParameters[itemIndex].eGainAttribute==="email_address"&&(typeof customer.CustomerParameters[itemIndex].secureAttribute!=="undefined"&&customer.CustomerParameters[itemIndex].secureAttribute==="1")){skipValidation=true;isValidCustomer=true}}var re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\ ".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA -Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;if(!skipValidation&&re.test(customer.PrimaryKey.Value)){isValidCustomer=true}}if(customer.PrimaryKey.Name===customer.PrimaryKeyParams.PRIMARY_KEY_PHONE){var skipValidation=false;for(var itemIndex=0;itemIndex<customer.CustomerParameters.length;itemIndex++){if(customer.CustomerParameters[itemIndex].eGainAttribute==="phone_number"&&(typeof customer.CustomerParameters[itemIndex].secureAttribute!=="undefined"&&customer.CustomerParameters[itemIndex].secureAttribute==="1")){skipValidation=true;isValidCustomer=true}}if(!skipValidation&&customer.PrimaryKey.Value.match(/[^0-9 \-\(\)]/)===null){isValidCustomer=true}}if(!isValidCustomer){throw"Customer not correctly initialized. Valid Email or Phone needs to be set as Pimary Key"}}};var _buildLoginParameters=function(customerObject){var returnValue=[];for(var itemIndex=0;itemIndex<customerObject.CustomerParameters.length;itemIndex++){var currentParam={};currentParam.paramName=customerObject.CustomerParameters[itemIndex].eGainParamName;currentParam.objectName=customerObject.CustomerParameters[itemIndex].eGainParentObject+"::"+customerObject.CustomerParameters[itemIndex].eGainChildObject;currentParam.attributeName=customerObject.CustomerParameters[itemIndex].eGainAttribute;currentParam.attributeValue=customerObject.CustomerParameters[itemIndex].eGainValue;currentParam.primaryKey=customerObject.CustomerParameters[itemIndex].eGainPrimaryKey;currentParam.minLength=customerObject.CustomerParameters[itemIndex].eGainMinLength;currentParam.maxLength=customerObject.CustomerParameters[itemIndex].eGainMaxLength;currentParam.required=customerObject.CustomerParameters[itemIndex].eGainRequired;currentParam.fieldType=customerObject.CustomerParameters[itemIndex].eGainFieldType;currentParam.validationString=customerObject.CustomerParameters[itemIndex].eGainValidationString;currentParam.secureAttribute=customerObject.CustomerParameters[itemIndex].secureAttribute;if(currentParam.secureAttribute==="1"||currentParam.secureAttribute==="2")currentParam.egainAttributeName=customerObject.CustomerParameters[itemIndex].providerAttributeName;if(customerObject.PrimaryKey.Name===customerObject.PrimaryKeyParams.PRIMARY_KEY_EMAIL&&currentParam.attributeValue==="email_address"){currentParam.objectName="casemgmt::email_address_contact_point_data";currentParam.attributeValue="email_address";currentParam.primaryKey="1"}else if(customerObject.PrimaryKey.Name===customerObject.PrimaryKeyParams.PRIMARY_KEY_PHONE&&currentParam.attributeValue==="phone_number"){currentParam.objectName="casemgmt::phone_number_data";currentParam.attributeValue="phone_number";currentParam.primaryKey="1"}returnValue.push(currentParam)}return returnValue};var decodeMessage=function(htmlMessage){htmlMessage=htmlMessage.replace(/\\u/g,"%u");htmlMessage=htmlMessage.replace(/\^/g,"%");htmlMessage=unescape(htmlMessage);htmlMessage=$.trim(htmlMessage);return htmlMessage};var replaceHexToASCII=function(str){if(str==="")return"";var caretIdx=str.indexOf("^");if(caretIdx<=-1)return str;var leftStr=str.substring(0,caretIdx);var hexStr=str.substring(caretIdx+1,caretIdx+3);var hexToASC=String.fromCharCode(parseInt(hexStr,16));var rightStr=str.substring(caretIdx+3);rightStr=replaceHexToASCII(rightStr);return leftStr+hexToASC+rightStr};var getArticleAttachmentName=function(message){var nodes=$.parseHTML(message);for(var i=0;i<nodes.length;i++){var node=nodes[i];if(node.tagName&&node.tagName.toLowerCase()==="a"){return node.innerHTML}}return""};var submitMessage=function(htmlMessage,messageType,command){if($.trim(htmlMessage.replace(/<br ?\/?>/g,"").replace(/&nbsp;/g,"")).length===0){return}htmlMessage=htmlMessage.replace(/<a\b/g,'<a target="_blank"');htmlMessage=htmlMessage.replace(/\n/g," ");if(!messageType){messageType="chat"}if(typeof command!="undefined"){_connection.send($msg({type:messageType}).c("body").t(htmlMessage).up().c("egainCommand",{xmlns:"http://bindings.egain.com/chat"}).c("subcmd").t(command).tree())}else{_connection.send($msg({type:messageType}).c("body").t(htmlMessage).tree())}return true};this.SetCustomer=function(customerObject){var _customerObject;if(customerObject===null){_customerObject=new this.Datatype.CustomerObject}else{_customerObject=customerObject}validateCustomer(_customerObject);var email;for(var itemIndex=0;itemIndex<_customerObject.CustomerParameters.length;itemIndex++){if(_customerObject.CustomerParameters[itemIndex].eGainAttribute==="email_address"){email=_customerObject.CustomerParameters[itemIndex].eGainValue}}var from=email?email:"anonymous@egain.com";_connection.from=from.replace(/'/g,"&apos;");_connection.entryPointId=_entryPointId;var languageCode=_customerObject.Locale.Language||"en";var countryCode=_customerObject.Locale.Country||"US";_connection.lang=languageCode+"-"+countryCode;_connection.eGainLoginParameters=_buildLoginParameters(_customerObject)};this.SetSamlResponse=function(samlResponse){_connection.samlResponse=samlResponse};this.SetEscalationData=function(escalationData){_connection.escalationData=escalationData};this.SetXEgainSession=function(xEgainSessionId){if(xEgainSessionId){if(_connection){_connection.xEgainEscalationHeader=xEgainSessionId}_egainLib.xEgainEscalationHeader=xEgainSessionId}};this.SetChatExtendedTimeout=function(timeout){_connection.chatExtendedTimeout=timeout};this.SetVisitorHistoryInformation=function(accountID,userId,oneTagSessionId){_connection.vhtIds={aId:accountID,sId:oneTagSessionId,uId:userId}};this.SetTabID=function(tabId){if(tabId&&_connection){_connection.tabId=tabId}};this.GetQueueCurrentStatus=function(queueDepthRequired){var QUEUE_STATUS_URL=_corsHost+"/egain/chat/entrypoint/sessionStatistics";var inputXML="<sessionStatistics xmlns='http://bindings.egain.com/chat'><sid>";inputXML+=_connection.sid;inputXML+="</sid>";if(typeof queueDepthRequired!=="undefined"&&(true===queueDepthRequired||false===queueDepthRequired)){inputXML+="<queueDepthRequired>"+queueDepthRequired+"</queueDepthRequired>"}inputXML+="</sessionStatistics>";var getQueueLiveStatusArgs={};$.ajax({type:"POST",url:QUEUE_STATUS_URL,data:inputXML,contentType:"text/XML",headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},dataType:"xml",success:function(xml){var queueDepth=$(xml).find("ns2\\:queueDepth, queueDepth").text();var altEngmtTime=$(xml).find("ns2\\:altEngmtTime, altEngmtTime").text();var waittime=$(xml).find("ns2\\:waitTime, waitTime").text();waittime=Math.ceil(parseFloat(waittime)/60);altEngmtTime=parseInt(altEngmtTime);getQueueLiveStatusArgs.QueueDepth=queueDepth;getQueueLiveStatusArgs.WaitTime=waittime;getQueueLiveStatusArgs.AltEngmtTime=altEngmtTime;if(_onGetQueueCurrentStatus)_onGetQueueCurrentStatus(getQueueLiveStatusArgs)}})};this.HandleFailoverError=function(xhr,originalRequest){var retryInterval=_retryIntervalInSec?_retryIntervalInSec*1e3:5e3;var deferred=$.Deferred();if(originalRequest.retryLimit>0&&(xhr.status===502||xhr.status===503||xhr.status===504)){originalRequest.retryCount++;if(originalRequest.retryCount<=originalRequest.retryLimit){setTimeout(function(){$.ajax(originalRequest)},retryInterval)}else{deferred.resolve()}}else{deferred.resolve()}};var Masker=function(){this.maskingPatterns=[]};Masker.prototype.SetMaskingPatternData=function(patterns,htmlTagMatcherRegex,htmlTagMatcherIncr){this.maskingPatterns=patterns;this.htmlTagMatcherRegex=htmlTagMatcherRegex;this.htmlTagMatcherIncr=htmlTagMatcherIncr};Masker.prototype.MaskData=function(htmlData,textData){var patterns=this.maskingPatterns;var htmlTagMatcherRegex=this.htmlTagMatcherRegex;var groupNumIncr=this.htmlTagMatcherIncr;var replacementArr=[];var maskHtmlData=function maskHtmlData(replacementArr,htmlData,htmlTagMatcherRegex,groupNumIncr){var maskedHtml=htmlData;if(replacementArr.length>0){for(var i=0;i<replacementArr.length;i++){var maskedStrArr=[];var start=0;var idx=0;var replacementObj=replacementArr[i];var replacementKey=replacementObj.orig;replacementKey=enhanceReplacementKey(replacementKey,htmlTagMatcherRegex,replacementObj.startBoundary,replacementObj.endBoundary);var regEx=new RegExp(replacementKey,"g");var match=regEx.exec(maskedHtml);while(match){if(match.index+match[0].length===start){break}var replacementValue=replacementObj.replaced;replacementValue=enhanceReplacementValue(replacementValue,groupNumIncr,match);maskedStrArr[idx++]=maskedHtml.substring(start,match.index)+replacementValue;start=match.index+match[0].length;match=regEx.exec(maskedHtml)}maskedStrArr[idx++]=maskedHtml.substring(start,maskedHtml.length);maskedHtml=maskedStrArr.join("")}}return maskedHtml};var enhanceReplacementKey=function(replacementKey,regex,startBoundary,endBoundary){var enhancedKeyArr=[];var specialCharArray=["(",")","*","$","^","\\","-","+","|",".","[","]"];var indx=0;if(startBoundary){enhancedKeyArr[indx++]="\\b"}for(var i=0;i<replacementKey.length;i++){if(replacementKey.charAt(i)==="\r"||replacementKey.charAt(i)==="\n"){continue}else if(specialCharArray.indexOf(replacementKey.charAt(i))>-1){enhancedKeyArr[indx++]="\\";enhancedKeyArr[indx++]=replacementKey.charAt(i)}else if(replacementKey.charAt(i)==="&"){enhancedKeyArr[indx++]="&amp;"}else enhancedKeyArr[indx++]=replacementKey.charAt(i);if(i!==replacementKey.length-1){enhancedKeyArr[indx++]=regex}}if(endBoundary){enhancedKeyArr[indx++]="\\b"}var enhancedKey=enhancedKeyArr.join("").replace(/ /g,"(?: | |&nbsp;)").replace(/\u00A0/g,"(?: | |&nbsp;)");return enhancedKey};var enhanceReplacementValue=function(replacementValue,groupNumIncr,match){var groupNum=1;var enhancedValueArr=[];var indx=0;for(var i=0;i<replacementValue.length;i++){if(replacementValue.charAt(i)==="\r"||replacementValue.charAt(i)==="\n"){continue}if(replacementValue.charAt(i)===" "){enhancedValueArr[indx++]="&nbsp;"}else{enhancedValueArr[indx++]=replacementValue.charAt(i)}if(i!==replacementValue.length-1){enhancedValueArr[indx++]=match[groupNum];groupNum=groupNum+groupNumIncr}}return enhancedValueArr.join("")};var maskMatchingPatterns=function(str,re,maskingChar,numCharsToUnmaskFromRight,numCharsToUnmaskFromLeft,applyLunhAlgo,replacementArr){var match=re.exec(str);if(!match){return str}var maskedStrArr=[];var start=0;var idx=0;var maskedStr="";var prependValue="";var appendValue="";var startWordBoundary=false;var endWordBoundary=false;while(match){prependValue="";appendValue="";startWordBoundary=false;endWordBoundary=false;if(match.index+match[0].length===start){break}maskedStr=maskChars(match[0],maskingChar,numCharsToUnmaskFromLeft,numCharsToUnmaskFromRight,applyLunhAlgo);maskedStrArr[idx++]=str.substring(start,match.index)+maskedStr;if(replacementArr&&maskedStr!==match[0]){if(match.index>0&&match.index<str.length){prependValue=str.charAt(match.index-1);if(!isWordCharacter(prependValue)){prependValue="";startWordBoundary=true}}else startWordBoundary=true;if(re.lastIndex<match.input.length&&re.lastIndex<=str.length){appendValue=str.charAt(re.lastIndex);if(!isWordCharacter(appendValue)){appendValue="";endWordBoundary=true}}else{endWordBoundary=true}replacementArr[replacementArr.length]={orig:prependValue+match[0]+appendValue,replaced:prependValue+maskedStr+appendValue,startBoundary:startWordBoundary,endBoundary:endWordBoundary}}start=match.index+match[0].length;match=re.exec(str)}maskedStrArr[idx++]=str.substring(start,str.length);return maskedStrArr.join("")};var isWordCharacter=function(s){return/\w/.test(s)};var maskChars=function(matchStr,maskingChar,numCharsToUnmaskFromLeft,numCharsToUnmaskFromRight,applyLunhAlgo){if(applyLunhAlgo&&!isValidCreditCard(matchStr)){return matchStr}var maskedArr=[];var strLength=matchStr.length;numCharsToUnmaskFromLeft=numCharsToUnmaskFromLeft<=strLength?numCharsToUnmaskFromLeft:strLength;numCharsToUnmaskFromRight=numCharsToUnmaskFromRight<=strLength?numCharsToUnmaskFromRight:strLength;for(var j=strLength-1;j>=strLength-numCharsToUnmaskFromRight;j--){if(matchStr.charAt(j)==="\n"||matchStr.charAt(j)==="\r"){numCharsToUnmaskFromRight++}}for(var k=0;k<numCharsToUnmaskFromLeft;k++){if(matchStr.charAt(k)==="\n"||matchStr.charAt(k)==="\r"){numCharsToUnmaskFromLeft++}}var len=strLength-numCharsToUnmaskFromRight;var i=numCharsToUnmaskFromLeft;for(;i<len;i++){if(matchStr.charAt(i)==="\n"||matchStr.charAt(i)==="\r"){maskedArr[i]=matchStr.charAt(i)}else{maskedArr[i]=maskingChar}}var retStr=matchStr.substring(0,numCharsToUnmaskFromLeft)+maskedArr.join("")+matchStr.substring(i,strLength);return retStr};var isValidCreditCard=function(value){if(/[^0-9-\s\.]+/.test(value))return false;var nCheck=0,nDigit=0,bEven=false;value=value.replace(/\D/g,"");for(var n=value.length-1;n>=0;n--){var cDigit=value.charAt(n),nDigit=parseInt(cDigit,10);if(bEven){if((nDigit*=2)>9){nDigit-=9}}nCheck+=nDigit;bEven=!bEven}return nCheck%10===0};for(var i=0;i<patterns.length;i++){var patternObj=patterns[i];if(typeof textData!=="undefined"&&textData!==htmlData){textData=maskMatchingPatterns(textData,patternObj.compiledRegEx,patternObj.maskingChar,patternObj.charToRetainRight,patternObj.charToRetainLeft,parseInt(patternObj.luhnAlgo)===1,replacementArr)}else{htmlData=maskMatchingPatterns(htmlData,patternObj.compiledRegEx,patternObj.maskingChar,patternObj.charToRetainRight,patternObj.charToRetainLeft,parseInt(patternObj.luhnAlgo)===1)}}if(typeof textData!=="undefined"&&textData!==htmlData){htmlData=maskHtmlData(replacementArr,htmlData,htmlTagMatcherRegex,groupNumIncr)}return htmlData};this.Masker=new Masker;var Connection=function(){var _connectToBosh=function(jid,wait,onConnectCallback){if(_connection.eGainMessagingProperty!==null&&_connection.eGainMessagingProperty!==undefined){_connection.connect(jid,"",onConnectCallback,wait)}else{setTimeout(function(){_connectToBosh(jid,wait,onConnectCallback)},10);return}};this.InitializeConnectionObject=function(boshServiceURL,messagingPropertyUrl,maskingUrl,customMessagingPropertyUrl){var connectionUrl=boshServiceURL;var additionalParamsStr="";if(_egainLib.ConnectionParameters.length>0){for(var i=0;i<_egainLib.ConnectionParameters.length;i++){var paramName=Object.keys(_egainLib.ConnectionParameters[i])[0];var paramValue=_egainLib.ConnectionParameters[i][paramName];additionalParamsStr+="&"+paramName+"="+encodeURIComponent(paramValue)}}connectionUrl+=additionalParamsStr;var timezoneoffset=(new Date).getTimezoneOffset()*-1;connectionUrl=connectionUrl+"&custtimeoffset="+timezoneoffset;if(_video){connectionUrl+="&"+_videoURLParam;if(_avmode){connectionUrl+="&"+_avmodeURLParam}}if(typeof Utils!=="undefined"&&typeof Utils.IsMobileOrTablet==="function"&&Utils.IsMobileOrTablet()){if(typeof Utils.UpdateQueryStringParameter==="function"){connectionUrl=Utils.UpdateQueryStringParameter(connectionUrl,"smallDevice","1");maskingUrl=Utils.UpdateQueryStringParameter(maskingUrl,"smallDevice","1")}else{connectionUrl+="&"+"smallDevice=1";maskingUrl+="?"+"smallDevice=1"}}_connection=new Strophe.Connection(connectionUrl);_connection.eGainOnError=_onErrorOccured;if(typeof this._loadMessagingProperties=="function"){this._loadMessagingProperties(messagingPropertyUrl,customMessagingPropertyUrl)}_egainLib.SetXEgainSession(_egainLib.xEgainEscalationHeader);$.ajax({type:"GET",url:maskingUrl,dataType:"json",retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},success:function(json,textStatus,jqXHR){if(jqXHR.getResponseHeader("X-egain-session")){json.XEgainSession=jqXHR.getResponseHeader("X-egain-session");_egainLib.SetXEgainSession(json.XEgainSession)}var maskingPatterns=json.maskingPatterns.maskingPattern;if(maskingPatterns){var pattern={},patterns=[];for(var j=0;j<maskingPatterns.length;j++){var pattern=maskingPatterns[j];pattern.compiledRegEx=new RegExp(pattern.regEx,"gi");patterns[j]=pattern}_egainLib.Masker.SetMaskingPatternData(patterns,json.htmlTagMatcherRegEx,json.htmlTagMatcherIncr)}if(_onConnectionInitialized!==null&&_onConnectionInitialized!==undefined){_onConnectionInitialized(json)}_connection.chatExtendedTimeout=json.chatReconnectTimeout||0},error:function(_jqXHR,_textStatus,_errorThrown){$.when(_egainLib.HandleFailoverError(_jqXHR,this)).then(function(){if(_onConnectionInitialized!==null&&_onConnectionInitialized!==undefined){_onConnectionInitialized(null)}},function(){},function(){})}})};this.Start=function(onConnectCallback){var jid="egain@egain.com";var wait=null;if(_isDevelopmentModeOn===true){wait=60*5}_connectToBosh(jid,wait,onConnectCallback)}};var Chat=function(){var connectionObj=new Connection;var _onAgentMessageReceived;var _onAgentJoined;var _onChatTransfer;var _onAgentStartTyping;var _onAgentStopTyping;var _onTranscriptFetched;var _onCobrowseInviteReceived;var _onCustomerInitiateVideo;var _onAgentInitiateVideo;var _onStartVideo;var _onStopVideo;var _onVideoChatTokenReceived;var _onAgentAutoRejectVideo;var _onCustomerAutoRejectVideo;var _onVideoChatCapable;var _onVideoChatMaxEscalation;var _onAudioChatEnabled;var _onAcceptVideoChat;var _onDeclineVideoChat;var _onGetMediaServerDetails;var _onInitiateVideoChat;var _onAttachmentAcceptedByCustomer;var _onAttachmentRejectedByCustomer;var _onAttachmentAcceptedByAgent;var _onAttachmentRejectedByAgent;var _onAttachmentInviteReceived;var _onCustomerAttachmentNotificationSent;var _onGetAttachment;var _onGetAttachmentImageThumbnail;var _onAttachmentUploadedByCustomer;var _onCallBackMessagePropertyLoad;var _onApplicationFailOverSuccess;var _onAcceptAuthRequest;var _onDeclineAuthRequest;var _onCustomerBlocked;var AVacceptRejectMsgSent=false;var acceptRejectAuthRequestSent=false;var ChatEventHandlers=function(){this.OnAgentMessageReceived={};this.OnAgentJoined={};this.OnChatTransfer={};this.OnAgentStartTyping={};this.OnAgentStopTyping={};this.OnTranscriptFetched={};this.OnCobrowseInviteReceived={};this.OnCustomerInitiateVideo={};this.OnAgentInitiateVideo={};this.OnStartVideo={};this.OnStopVideo={};this.OnVideoChatTokenReceived={};this.OnAgentAutoRejectVideo={};this.OnCustomerAutoRejectVideo={};this.OnVideoChatCapable={};this.OnVideoChatMaxEscalation={};this.OnAudioChatEnabled={};this.OnAcceptVideoChat={};this.OnDeclineVideoChat={};this.OnGetMediaServerDetails={};this.OnInitiateVideoChat={};this.OnCustomerAttachmentNotificationSent={};this.OnGetAttachment={};this.OnAttachmentAcceptedByCustomer={};this.OnAttachmentUploadedByCustomer={};this.OnAttachmentRejectedByCustomer={};this.OnAttachmentAcceptedByAgent={};this.OnAttachmentRejectedByAgent={};this.OnAttachmentInviteReceived={};this.OnGetAttachmentImageThumbnail={};this.OnApplicationFailOverSuccess={};this.OnAcceptAuthRequest={};this.OnDeclineAuthRequest={};this.OnCustomerBlocked={}};var validateChatEventHandlers=function(eventHandlers){if(typeof eventHandlers.OnAgentMessageReceived!=="function"){}else{_onAgentMessageReceived=eventHandlers.OnAgentMessageReceived}if(typeof eventHandlers.OnAgentJoined!=="function"){}else{_onAgentJoined=eventHandlers.OnAgentJoined}if(typeof eventHandlers.OnChatTransfer!=="function"){}else{_onChatTransfer=eventHandlers.OnChatTransfer}if(typeof eventHandlers.OnAgentStartTyping!=="function"){}else{_onAgentStartTyping=eventHandlers.OnAgentStartTyping}if(typeof eventHandlers.OnAgentStopTyping!=="function"){}else{_onAgentStopTyping=eventHandlers.OnAgentStopTyping}if(typeof eventHandlers.OnTranscriptFetched!=="function"){}else{_onTranscriptFetched=eventHandlers.OnTranscriptFetched}if(typeof eventHandlers.OnCobrowseInviteReceived!=="function"){}else{_onCobrowseInviteReceived=eventHandlers.OnCobrowseInviteReceived}if(typeof eventHandlers.OnCustomerInitiateVideo!=="function"){}else{_onCustomerInitiateVideo=eventHandlers.OnCustomerInitiateVideo}if(typeof eventHandlers.OnAgentInitiateVideo!=="function"){}else{_onAgentInitiateVideo=eventHandlers.OnAgentInitiateVideo}if(typeof eventHandlers.OnStartVideo!=="function"){}else{_onStartVideo=eventHandlers.OnStartVideo}if(typeof eventHandlers.OnStopVideo!=="function"){}else{_onStopVideo=eventHandlers.OnStopVideo}if(typeof eventHandlers.OnVideoChatTokenReceived!=="function"){}else{_onVideoChatTokenReceived=eventHandlers.OnVideoChatTokenReceived}if(typeof eventHandlers.OnAgentAutoRejectVideo!=="function"){}else{_onAgentAutoRejectVideo=eventHandlers.OnAgentAutoRejectVideo}if(typeof eventHandlers.OnCustomerAutoRejectVideo!=="function"){}else{_onCustomerAutoRejectVideo=eventHandlers.OnCustomerAutoRejectVideo}if(typeof eventHandlers.OnAgentAutoRejectVideo!=="function"){}else{_onAgentAutoRejectVideo=eventHandlers.OnAgentAutoRejectVideo}if(typeof eventHandlers.OnVideoChatCapable!=="function"){}else{_onVideoChatCapable=eventHandlers.OnVideoChatCapable}if(typeof eventHandlers.OnVideoChatMaxEscalation!=="function"){}else{_onVideoChatMaxEscalation=eventHandlers.OnVideoChatMaxEscalation}if(typeof eventHandlers.OnAudioChatEnabled!=="function"){}else{_onAudioChatEnabled=eventHandlers.OnAudioChatEnabled}if(typeof eventHandlers.OnAcceptVideoChat!=="function"){}else{_onAcceptVideoChat=eventHandlers.OnAcceptVideoChat}if(typeof eventHandlers.OnDeclineVideoChat!=="function"){}else{_onDeclineVideoChat=eventHandlers.OnDeclineVideoChat}if(typeof eventHandlers.OnGetMediaServerDetails!=="function"){}else{_onGetMediaServerDetails=eventHandlers.OnGetMediaServerDetails}if(typeof eventHandlers.OnInitiateVideoChat!=="function"){}else{_onInitiateVideoChat=eventHandlers.OnInitiateVideoChat}if(typeof eventHandlers.OnAttachmentAcceptedByCustomer!=="function"){}else{_onAttachmentAcceptedByCustomer=eventHandlers.OnAttachmentAcceptedByCustomer}if(typeof eventHandlers.OnAttachmentRejectedByCustomer!=="function"){}else{_onAttachmentRejectedByCustomer=eventHandlers.OnAttachmentRejectedByCustomer}if(typeof eventHandlers.OnAttachmentAcceptedByAgent!=="function"){}else{_onAttachmentAcceptedByAgent=eventHandlers.OnAttachmentAcceptedByAgent}if(typeof eventHandlers.OnAttachmentUploadedByCustomer!=="function"){}else{_onAttachmentUploadedByCustomer=eventHandlers.OnAttachmentUploadedByCustomer}if(typeof eventHandlers.OnAttachmentRejectedByAgent!=="function"){}else{_onAttachmentRejectedByAgent=eventHandlers.OnAttachmentRejectedByAgent}if(typeof eventHandlers.OnAttachmentInviteReceived!=="function"){}else{_onAttachmentInviteReceived=eventHandlers.OnAttachmentInviteReceived}if(typeof eventHandlers.OnCustomerAttachmentNotificationSent!=="function"){}else{_onCustomerAttachmentNotificationSent=eventHandlers.OnCustomerAttachmentNotificationSent}if(typeof eventHandlers.OnGetAttachment!=="function"){}else{_onGetAttachment=eventHandlers.OnGetAttachment}if(typeof eventHandlers.OnGetAttachmentImageThumbnail!=="function"){}else{_onGetAttachmentImageThumbnail=eventHandlers.OnGetAttachmentImageThumbnail}if(typeof eventHandlers.OnApplicationFailOverSuccess!=="function"){}else{_onApplicationFailOverSuccess=eventHandlers.OnApplicationFailOverSuccess}if(typeof eventHandlers.OnAcceptAuthRequest!=="function"){}else{_onAcceptAuthRequest=eventHandlers.OnAcceptAuthRequest}if(typeof eventHandlers.OnDeclineAuthRequest!=="function"){}else{_onDeclineAuthRequest=eventHandlers.OnDeclineAuthRequest}if(typeof eventHandlers.OnCustomerBlocked!=="function"){}else{_onCustomerBlocked=eventHandlers.OnCustomerBlocked}};var onConnect=function(status,condition){switch(status){case Strophe.Status.ERROR:break;case Strophe.Status.CONNECTING:break;case Strophe.Status.CONNFAIL:if(typeof customWrapUpMessagesHook==="function"){var returnVal=customWrapUpMessagesHook(condition,_connection.eGainMessagingProperty);if(returnVal===true){connectionFailure=true;break}}var chatConnectionFailureEventArgs=new _egainLib.Datatype.ResultObject;chatConnectionFailureEventArgs.IsSuccess=false;chatConnectionFailureEventArgs.StatusCode="CONNECT_FAIL";chatConnectionFailureEventArgs.StatusMessage="CONNECTION FAILURE";switch(condition){case"system-shutdown":connectionFailure=true;var agentsNotAvailableEventArgs=chatConnectionFailureEventArgs;agentsNotAvailableEventArgs.IsSuccess=false;agentsNotAvailableEventArgs.StatusCode="AGENTS_UNAVAILABLE";agentsNotAvailableEventArgs.StatusMessage="AGENTS UNAVAILABLE";_onAgentsNotAvailable(agentsNotAvailableEventArgs);break;case"other-request":connectionFailure=true;var duplicateSessionEventArgs=chatConnectionFailureEventArgs;duplicateSessionEventArgs.IsSuccess=false;duplicateSessionEventArgs.StatusCode="DUPLICATE_SESSION";duplicateSessionEventArgs.StatusMessage="DUPLICATE_SESSION";_onDuplicateSession(duplicateSessionEventArgs);break;default:if(condition.indexOf("remote-connection-failed")!=-1){connectionFailure=true;var errorCode=condition.split(":");var chatConnectionErrorEventArgs=chatConnectionFailureEventArgs;chatConnectionErrorEventArgs.StatusCode="REMOTE_CONNECTION_FAILURE";chatConnectionErrorEventArgs.StatusMessage=errorCode[1];_onConnectionFailure(chatConnectionFailureEventArgs)}else if(!_connection.disconnecting&&condition!=="unknown"){connectionFailure=true;chatConnectionFailureEventArgs.StatusMessage=condition;_onConnectionFailure(chatConnectionFailureEventArgs)}break}break;case Strophe.Status.AUTHENTICATING:break;case Strophe.Status.AUTHFAIL:break;case Strophe.Status.DISCONNECTING:break;case Strophe.Status.ATTACHED:_connected=true;_connection.addHandler(notifyUser,null,null,null,null,null);if(_onConnectionAttached!==null&&_onConnectionAttached!==undefined){_onConnectionAttached()}break;case Strophe.Status.CONNECTED:_connection.addHandler(notifyUser,null,null,null,null,null);var chatConnectEventArgs={};chatConnectEventArgs.ChatID=_connection.sid.split("_")[0];chatConnectEventArgs.SessionID=_connection.sid;if(_connection.name){chatConnectEventArgs.name=_connection.name;delete _connection.name}if(_connection.subject){chatConnectEventArgs.subject=_connection.subject;delete _connection.subject}_onConnectSuccess(chatConnectEventArgs);_connected=true;break;case Strophe.Status.DISCONNECTED:_connected=false;if(connectionFailure!==true){_onConnectionComplete()}break;default:break}};var notifyUser=function(messageObjectFromServer){_connected=true;var messageType=messageObjectFromServer.getAttribute("type");var messageAuthor=messageObjectFromServer.getAttribute("from");var msgId=messageObjectFromServer.getAttribute("id");if(messageType&&messageAuthor&&messageAuthor=="system"){if(_onServerNotificationReceived!==null&&_onServerNotificationReceived!==undefined){var serverNotificationReceivedEntArgs={MessageFromServer:messageObjectFromServer};_onServerNotificationReceived(serverNotificationReceivedEntArgs)}}if(messageType=="terminate"){_onCustTerminateSuccess();return true}for(var i=0;i<messageObjectFromServer.childNodes.length;i++){if(!messageObjectFromServer.childNodes[i].tagName){continue}if(messageObjectFromServer.childNodes[i].tagName.indexOf(":widget")>0){continue}if(messageObjectFromServer.childNodes[i].tagName.indexOf(":body")<0){}var htmlMessage=messageObjectFromServer.childNodes[i].textContent;if(htmlMessage==="undefined"){htmlMessage=messageObjectFromServer.childNodes[i].text}if(typeof messageObjectFromServer.childNodes[i].baseName!=="undefined"&&messageObjectFromServer.childNodes[i].baseName!==null&&messageObjectFromServer.childNodes[i].baseName==="egainCommand"||typeof messageObjectFromServer.childNodes[i].localName!=="undefined"&&messageObjectFromServer.childNodes[i].localName!==null&&messageObjectFromServer.childNodes[i].localName.trim()==="egainCommand"){var egainCmd=null;if(typeof messageObjectFromServer.childNodes[i].text!=="undefined"&&messageObjectFromServer.childNodes[i].text!==null)egainCmd=messageObjectFromServer.childNodes[i].text;else if(typeof messageObjectFromServer.childNodes[i].textContent!=="undefined"&&messageObjectFromServer.childNodes[i].textContent!==null)egainCmd=messageObjectFromServer.childNodes[i].textContent.trim();if(egainCmd!==null&&egainCmd!==""){htmlMessage="";if("custinitiatevideo"===egainCmd&&"function"===typeof _onCustomerInitiateVideo){_onCustomerInitiateVideo()}else if("agentinitiatevideo"===egainCmd&&"function"===typeof _onAgentInitiateVideo){_onAgentInitiateVideo()}else if("startVideo"===egainCmd&&"function"===typeof _onStartVideo){_onStartVideo()}else if("stopVideo"===egainCmd&&"function"===typeof _onStopVideo){_onStopVideo()}else if(egainCmd.indexOf("egainCBCmd_")===0){if(_onCobrowseInviteReceived!==null&&_onCobrowseInviteReceived!==undefined){var cbCmd=egainCmd.substring(11);cbCmd=replaceHexToASCII(cbCmd);var cmd=eval("("+cbCmd+")");var action;var sessionId;var customerName;if(typeof cmd!=="undefined"&&cmd.action==="add_anchor"){action=cmd.action;sessionId=cmd.sessionId;customerName=cmd.custName}var cobrowseInviteReceivedEventArgs={};cobrowseInviteReceivedEventArgs.Action=action;cobrowseInviteReceivedEventArgs.Session=sessionId;cobrowseInviteReceivedEventArgs.CustomerName=customerName;cobrowseInviteReceivedEventArgs.MsgId=msgId;_onCobrowseInviteReceived(cobrowseInviteReceivedEventArgs)}}if(messageObjectFromServer.childNodes[i].childNodes){var arr={};var addtionalParams=messageObjectFromServer.childNodes[i];$(addtionalParams).find("ns2\\:egainAdditionalParam,egainAdditionalParam").each(function(){arr[$(this).find("ns2\\:paramKey,paramKey").text()]=$(this).find("ns2\\:paramValue,paramValue").text()});egainCmd=$(addtionalParams).find("ns2\\:subcmd,subcmd").text();if(egainCmd!==null){if(egainCmd=="backstoppingtriggered"||egainCmd=="VIDEO_CHAT_TOKEN"||egainCmd=="custattachmentuploaded"||egainCmd=="acceptcustattachment"||egainCmd=="custacceptattachment"||egainCmd=="custrejectattachment"||egainCmd=="rejectcustattachment"||egainCmd=="agentinitiateattachment"){if(egainCmd=="backstoppingtriggered"){}else if(egainCmd=="custattachmentuploaded"){if(_onAttachmentUploadedByCustomer!==null&&_onAttachmentUploadedByCustomer!==undefined){var attachmentUploadedByCustomerEventArgs={};attachmentUploadedByCustomerEventArgs.status=200;attachmentUploadedByCustomerEventArgs.attachmentId=arr.attachmentId;attachmentUploadedByCustomerEventArgs.attachmentName=arr.attachmentName;attachmentUploadedByCustomerEventArgs.attachmentInternalName=arr.attachmentInternalName;attachmentUploadedByCustomerEventArgs.MsgId=msgId;_onAttachmentUploadedByCustomer(attachmentUploadedByCustomerEventArgs)}}else if(egainCmd==="custacceptattachment"){if(_onAttachmentAcceptedByCustomer!==null&&_onAttachmentAcceptedByCustomer!==undefined){var attachmentAcceptedByAgentEventArgs={};attachmentAcceptedByAgentEventArgs.FileId=arr.attachmentId;attachmentAcceptedByAgentEventArgs.FileName=arr.attachmentName;attachmentAcceptedByAgentEventArgs.CustomerName=arr.agentName;attachmentAcceptedByAgentEventArgs.MsgId=msgId;_onAttachmentAcceptedByCustomer(attachmentAcceptedByAgentEventArgs)}}else if(egainCmd==="custrejectattachment"){if(_onAttachmentRejectedByCustomer!==null&&_onAttachmentRejectedByCustomer!==undefined){var attachmentRejectedByAgentEventArgs={};attachmentRejectedByAgentEventArgs.fileId=arr.attachmentId;attachmentRejectedByAgentEventArgs.FileName=arr.attachmentName;attachmentRejectedByAgentEventArgs.agentName=arr.agentName;attachmentRejectedByAgentEventArgs.MsgId=msgId;_onAttachmentRejectedByCustomer(attachmentRejectedByAgentEventArgs)}}else if(egainCmd==="acceptcustattachment"){if(_onAttachmentAcceptedByAgent!==null&&_onAttachmentAcceptedByAgent!==undefined){var attachmentAcceptedByAgentEventArgs={};attachmentAcceptedByAgentEventArgs.agentName=arr.agentName;attachmentAcceptedByAgentEventArgs.uniqueFileId=arr.filekey;attachmentAcceptedByAgentEventArgs.fileName=arr.fileName;attachmentAcceptedByAgentEventArgs.MsgId=msgId;_onAttachmentAcceptedByAgent(attachmentAcceptedByAgentEventArgs)}}else if(egainCmd=="rejectcustattachment"){if(_onAttachmentRejectedByAgent!==null&&_onAttachmentRejectedByAgent!==undefined){var attachmentRejectedByAgentEventArgs={};attachmentRejectedByAgentEventArgs.uniqueFileId=arr.filekey;attachmentRejectedByAgentEventArgs.MsgId=msgId;_onAttachmentRejectedByAgent(attachmentRejectedByAgentEventArgs)}}else if(egainCmd=="agentinitiateattachment"){if(_onAttachmentInviteReceived!==null&&_onAttachmentInviteReceived!==undefined){var attachmentInvitedAgentEventArgs={};var Attachment=new Object;Attachment.Id=arr.attachmentId;Attachment.Name=arr.attachmentName;Attachment.AgentName=arr.agentName;Attachment.Type=arr.attachmentType;Attachment.AttachmentSize=arr.attachmentSize;attachmentInvitedAgentEventArgs.Attachment=Attachment;attachmentInvitedAgentEventArgs.MsgId=msgId;_onAttachmentInviteReceived(attachmentInvitedAgentEventArgs)}}else{var onVideoChatTokenReceivedEventArgs={};onVideoChatTokenReceivedEventArgs.avmode=arr["VIDEO_CHAT_AVMODE"];onVideoChatTokenReceivedEventArgs.vendor=arr["VIDEO_CHAT_VENDOR"];if("opentok"===arr["VIDEO_CHAT_VENDOR"]){onVideoChatTokenReceivedEventArgs.openTokParams=arr}onVideoChatTokenReceivedEventArgs.MsgId=msgId;_onVideoChatTokenReceived(onVideoChatTokenReceivedEventArgs)}}else if("agentautoreject"===egainCmd&&"function"===typeof _onAgentAutoRejectVideo){_onAgentAutoRejectVideo()}else if("custautoreject"===egainCmd&&"function"===typeof _onCustomerAutoRejectVideo){_onCustomerAutoRejectVideo()}else if("failOverSucceed"===egainCmd&&"function"===typeof _onApplicationFailOverSuccess){_onApplicationFailOverSuccess()}}}}}var subCmd=$(messageObjectFromServer).find("ns2\\:subcmd,subcmd").text();if(messageType&&subCmd!="drasr"){htmlMessage=unescape(htmlMessage);htmlMessage=decodeMessage(htmlMessage)}if(htmlMessage&&htmlMessage.length&&htmlMessage.length>0){if(messageAuthor){messageAuthor=decodeMessage(messageAuthor)}if(messageType==="normal"){if(htmlMessage==="typing_message"){var agentStartTypingEventArgs={};agentStartTypingEventArgs.AgentScreenName=messageAuthor;agentStartTypingEventArgs.MsgId=msgId;if(_onAgentStartTyping!==null&&_onAgentStartTyping!==undefined){_onAgentStartTyping(agentStartTypingEventArgs)}}else{var agentStopTypingEventArgs={};agentStopTypingEventArgs.AgentScreenName=messageAuthor;agentStopTypingEventArgs.MsgId=msgId;if(_onAgentStopTyping!==null&&_onAgentStopTyping!==undefined){_onAgentStopTyping(agentStopTypingEventArgs)}}return true}if("ActivitySubtypeChangedToVideoChat"===htmlMessage||"AgentInitiateAttachment"===htmlMessage){continue}if(messageType==="chat"&&messageAuthor!=="system"){var agentMessageReceivedEventArgs={};agentMessageReceivedEventArgs.Message=htmlMessage;agentMessageReceivedEventArgs.AgentScreenName=messageAuthor;agentMessageReceivedEventArgs.PagePushMessage="pagePushLink"===subCmd;agentMessageReceivedEventArgs.MsgId=msgId;_onAgentMessageReceived(agentMessageReceivedEventArgs)}else{var systemMessageReceivedEventArgs={};systemMessageReceivedEventArgs.Message=htmlMessage;if(subCmd!==null){var arr={};$(messageObjectFromServer).find("ns2\\:egainAdditionalParam,egainAdditionalParam").each(function(){arr[$(this).find("ns2\\:paramKey,paramKey").text()]=$(this).find("ns2\\:paramValue,paramValue").text()});if(subCmd==="visitorBanned"){_onCustomerBlocked()}if(subCmd==="agentPickup"){var agentJoinedEventArgs={};systemMessageReceivedEventArgs.AgentJoinedMessage=true;if("agentName"in arr){var agentName=arr["agentName"];agentJoinedEventArgs.AgentName=agentName;agentJoinedEventArgs.MsgId=msgId}if(_onAgentJoined!==null&&_onAgentJoined!==undefined){_onAgentJoined(agentJoinedEventArgs)}}if(subCmd==="activityTransfer"){systemMessageReceivedEventArgs.ChatTransferMessage=true;var chatTransferEventArgs={};if("eglvtransfertype"in arr){var transType=arr["eglvtransfertype"];if(parseInt(transType)>0){chatTransferEventArgs.TransferType=transType}}if("eglvtransferEntityName"in arr){var transferEntityName=arr["eglvtransferEntityName"];if(transferEntityName){chatTransferEventArgs.TransferEntityName=transferEntityName}}if("chatAttachment"in arr){var chatAttachmentEnabled=arr["chatAttachment"]==1||arr["chatAttachment"]==3;chatTransferEventArgs.ChatAttachmentEnabled=chatAttachmentEnabled}if("chatReconnectTimeout"in arr){chatTransferEventArgs.chatExtendedTimeout=parseInt(arr["chatReconnectTimeout"]);_egainLib.SetChatExtendedTimeout(chatTransferEventArgs.chatExtendedTimeout)}chatTransferEventArgs.MsgId=msgId;if(_onChatTransfer!==null&&_onChatTransfer!==undefined){_onChatTransfer(chatTransferEventArgs)}}if(subCmd==="attachment"){systemMessageReceivedEventArgs.ArticleAttachmentMessage=true;if("articleAttachmentId"in arr){var attachmentId=arr["articleAttachmentId"];if(parseInt(attachmentId)>0){systemMessageReceivedEventArgs.Attachment={};systemMessageReceivedEventArgs.Attachment["Id"]=attachmentId;systemMessageReceivedEventArgs.Attachment["Name"]=getArticleAttachmentName(systemMessageReceivedEventArgs.Message)}}}if("vchatCapable"in arr&&"function"===typeof _onVideoChatCapable){var onVideoChatCapableArgs={};var vchatCapable=arr["vchatCapable"];if("2"===transType||"1"===transType){onVideoChatCapableArgs.isVideoChatEnabled=vchatCapable==="1";onVideoChatCapableArgs.showVideoButton=true}else{onVideoChatCapableArgs.showVideoButton=vchatCapable==="1"}onVideoChatCapableArgs.MsgId=msgId;_onVideoChatCapable(onVideoChatCapableArgs)}if("vchatMaxEscalation"in arr&&"function"===typeof _onVideoChatMaxEscalation){var onVideoChatMaxEscalationArgs={};onVideoChatMaxEscalationArgs.videoChatMaxEscalation=parseInt(arr["vchatMaxEscalation"]);onVideoChatMaxEscalationArgs.isDirectVideoChatEnabled=onVideoChatMaxEscalationArgs.videoChatMaxEscalation===3||onVideoChatMaxEscalationArgs.videoChatMaxEscalation>4;onVideoChatMaxEscalationArgs.MsgId=msgId;_onVideoChatMaxEscalation(onVideoChatMaxEscalationArgs)}if("enableDirectAudioChat"in arr&&"function"===typeof _onAudioChatEnabled){var onAudioChatEnabledArgs={};onAudioChatEnabledArgs.isDirectAudioChatEnabled=arr["enableDirectAudioChat"]==="1";onAudioChatEnabledArgs.MsgId=msgId;_onAudioChatEnabled(onAudioChatEnabledArgs)}if(subCmd==="acceptcustattachment"){systemMessageReceivedEventArgs.AttachmentAcceptedMsg=true;systemMessageReceivedEventArgs.uniqueFileId=arr.filekey;systemMessageReceivedEventArgs.FileName=arr.fileName}if(subCmd==="midchatauthenticate"){systemMessageReceivedEventArgs.AuthenticationRequestMsg={};systemMessageReceivedEventArgs.AuthenticationRequestMsg.SenderName=messageAuthor}if(subCmd==="custmidchatauthsuccess"){systemMessageReceivedEventArgs.AuthenticationRequestSuccessMsg={};systemMessageReceivedEventArgs.AuthenticationRequestSuccessMsg.custName=arr.custName}}systemMessageReceivedEventArgs.MsgId=msgId;_onSystemMessageReceived(systemMessageReceivedEventArgs)}}}return true};this._getEventHandlers=function(){var _chatEventListeners=new ChatEventHandlers;var _connectionEventListeners=new _this.Datatype.EventHandlers;for(var i in _connectionEventListeners){if(!_chatEventListeners.hasOwnProperty(i)){_chatEventListeners[i]=_connectionEventListeners[i]}}return _chatEventListeners}();this._initialize=function(entryPointId,language,country,eventHandlers,templateName,version,serverURL,video,avmode,isAvailabilityInfoRequired){var _chatInitResult=new _this.Datatype.ResultObject;var languageCode=language?language:"en";var countryCode=country?country:"US";var _templateName=templateName?templateName:"";var _version=version?version:"";_entryPointId=entryPointId;_video=video;_videoURLParam=true===_video?"videoChat=1":_videoURLParam;_avmode=avmode;_avmodeURLParam=null!==_avmode&&"number"===typeof _avmode?"avmode="+_avmode:_avmodeURLParam;initializeApplicationState(entryPointId,language,country,templateName,version,serverURL);BOSH_SERVICE=_corsHost+"/egain/chat/entrypoint?entryPointId="+entryPointId+"&templateName="+_templateName+"&languageCode="+languageCode+"&countryCode="+countryCode+"&ver="+_version;MESSAGING_URL=_eGainContextPath+"l10n/messaging_"+languageCode+"_"+countryCode+".properties";CUSTOM_CHAT_URL=_eGainContextPath+"l10n/custom_chat_"+languageCode+"_"+countryCode+".properties";var initializeAPIPath="/egain/chat/entrypoint/initialize";if(typeof isAvailabilityInfoRequired!=="undefined"&&false===isAvailabilityInfoRequired){initializeAPIPath="/egain/chat/entrypoint/initializeDock"}MASKING_URL=_corsHost+initializeAPIPath+"/"+entryPointId+(_video?"?videoChat=1":"");validateEventHandlers(eventHandlers);validateChatEventHandlers(eventHandlers);connectionObj.InitializeConnectionObject.call(this,BOSH_SERVICE,MESSAGING_URL,MASKING_URL,CUSTOM_CHAT_URL);return _chatInitResult};this._loadMessagingProperties=function(messagingPropertyUrl,customChatPropertyUrl){$.ajax({url:messagingPropertyUrl,type:"GET",dataType:"text",retryCount:0,retryLimit:_retryCountLimit,success:function(data){_connection.eGainMessagingProperty=data;if(_onMessagePropertyLoad!==null&&_onMessagePropertyLoad!==undefined){_onMessagePropertyLoad(data);$.ajax({url:customChatPropertyUrl,type:"GET",dataType:"text",success:function(data){HooksFactory.LoadProperties(data);_connection.eGainMessagingProperty=_connection.eGainMessagingProperty+"\n"+data;if(_onCallBackMessagePropertyLoad!==undefined&&_onCallBackMessagePropertyLoad!==null){_onCallBackMessagePropertyLoad(data)}}})}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})};this._loadCustomMessagingProperties=function(customChatPropertyUrl){var url=_eGainContextPath?_eGainContextPath+"/"+customChatPropertyUrl:customChatPropertyUrl;$.ajax({url:url,type:"GET",dataType:"text",success:function(data){HooksFactory.LoadProperties(data)}})};this._start=function(){connectionObj.Start(onConnect)};this._end=function(reason){if(_connection!==null&&_connected===true){_connection.disconnect(reason)}};this._sendBeaconToEndChat=function(){if(_connection!==null&&_connected===true){var url=_corsHost+"/egain/chat/entrypoint/endChat";var requestBody=new FormData;requestBody.append("sid",_connection.sid);requestBody.append("event","browser_unload");if(navigator.sendBeacon){var queued=navigator.sendBeacon(url,requestBody);_connection.disconnectAfterUnload()}}};this._sendMessageToAgent=function(htmlMessage,isMessageOffRecord){if(htmlMessage==="")return;if(!isMessageOffRecord){isMessageOffRecord=false}var origHTMLMsg=htmlMessage;var maskedMessage=origHTMLMsg;if(!isMessageOffRecord){maskedMessage=_egainLib.Masker.MaskData(htmlMessage)}submitMessage(maskedMessage);return maskedMessage};this._sendMaskedMessageToAgent=function(maskedMessage){if(maskedMessage==="")return;submitMessage(maskedMessage);return maskedMessage};this._sendSystemMessage=function(htmlMessage,cmd){if(typeof cmd==="undefined"){submitMessage(htmlMessage,"headline")}else{submitMessage(htmlMessage,"headline",cmd)}};this._sendCustomerStartTyping=function(){_connection.send($msg({type:"normal"}).c("body").t("1").tree())};this._sendCustomerStopTyping=function(){_connection.send($msg({type:"normal"}).c("body").t("0").tree())};this._getTranscript=function(){var TRANSCRIPT_URL=_corsHost+"/egain/chat/entrypoint/transcript";var inputXML="<chatSession xmlns='http://bindings.egain.com/chat'><sid>";inputXML+=_connection.sid;inputXML+="</sid></chatSession>";var getTranscriptArgs={};$.ajax({type:"POST",url:TRANSCRIPT_URL,data:inputXML,retryCount:0,retryLimit:_retryCountLimit,contentType:"application/xml",headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},dataType:"json",success:function(response){if(response){if(response.customerName){getTranscriptArgs.CustomerName=response.customerName}if(response.subject){getTranscriptArgs.Subject=response.subject}if(response.assignedTo){getTranscriptArgs.Assignee=response.assignedTo}if(response.startTime){getTranscriptArgs.StartTime=response.startTime}if(response.hasOwnProperty("enableChatAttachment")){getTranscriptArgs.EnableChatAttachment=response.enableChatAttachment}if(response.hasOwnProperty("enableOffRecord")){getTranscriptArgs.EnableOffRecord=response.enableOffRecord}if(response.hasOwnProperty("enableVideoChat")){getTranscriptArgs.EnableVideoChat=response.enableVideoChat}if(response.hasOwnProperty("isBannedCustomer")){getTranscriptArgs.BannedCustomer=response.isBannedCustomer}if(Array.isArray&&Array.isArray(response.message)&&response.message.length>0){getTranscriptArgs.Messages=[];for(var i=0;i<response.message.length;i++){var messageObj={};var msg=response.message[i];messageObj.Body=msg["body"];var sender=msg["sender"];if(sender){messageObj.SenderName=sender.name;messageObj.SenderType=sender.type}var invitation=msg["invitation"];if(invitation){messageObj.InvitationMedia=invitation.media;messageObj.InvitationStatus=invitation.status}messageObj.Timestamp=msg.timeStamp;messageObj.OffRecord=msg.offRecord;if(msg.attachment){messageObj.Attachment={};messageObj.Attachment.MimeType=msg.attachment.mimeType;if(msg.attachment.internalName){messageObj.Attachment.AttachmentInternalName=msg.attachment.internalName;messageObj.Attachment.SenderName=typeof response.customerName=="undefined"?"Customer":response.customerName;messageObj.Attachment.SenderType="Customer"}else{messageObj.Attachment.SenderName=response.assignedTo;messageObj.Attachment.SenderType="Agent"}messageObj.Attachment.Name=msg.attachment.name;messageObj.Attachment.AttachmentSize=msg.attachment.size;messageObj.Attachment.Status=msg.attachment.status;messageObj.Attachment.Id=msg.attachment.url?msg.attachment.url.substring(msg.attachment.url.lastIndexOf("/")+1):null}if(msg.authenticationRequest){messageObj.authenticationRequest={};messageObj.authenticationRequest.id=msg.authenticationRequest.id;messageObj.authenticationRequest.status=msg.authenticationRequest.status}messageObj.MsgId=msg.id;getTranscriptArgs.Messages.push(messageObj)}}}if(_onTranscriptFetched)_onTranscriptFetched(getTranscriptArgs)},error:function(_jqXHR,_textStatus,_errorThrown){if(_jqXHR.status===400){var dummyTranscript={};dummyTranscript.responseStatus=_jqXHR.status;_onTranscriptFetched(dummyTranscript)}_egainLib.HandleFailoverError(_jqXHR,this)}})};this._pause=function(){var connection=_connection;if(connection.connected&&connection.paused===false){connection.flush();var chatPauseDuration=librarySettings?librarySettings.ChatPauseInSec:30;var body=connection._buildBody().attrs({pause:chatPauseDuration});var req=new Strophe.Request(body.tree(),connection._onRequestStateChange.bind(connection).prependArg(connection._dataRecv.bind(connection)),body.tree().getAttribute("rid"));connection._requests.push(req);connection._processRequest(_connection._requests.length-1);connection.pause();connection._throttledRequestHandler();var chatPausedEventArgs={};chatPausedEventArgs.requestID=_connection.rid;chatPausedEventArgs.sessionID=_connection.sid;if(_onConnectionPaused){_onConnectionPaused(chatPausedEventArgs)}}};this._attach=function(sessionID,requestID){var jid="egain@egain.com";var attachConnectionUrl=_corsHost+"/egain/chat/entrypoint/attachConnection";$.ajax({type:"POST",url:attachConnectionUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:sessionID},dataType:"text",success:function(string){_connection.attach(jid,sessionID,requestID,onConnect)},error:function(jqXHR){$.when(_egainLib.HandleFailoverError(jqXHR,this)).then(function(){if(_onConnectionAttachedFailure){_onConnectionAttachedFailure(jqXHR.status)}},function(){},function(){})}})};this._attachDock=function(sessionID,requestID,tabID){var jid="egain@egain.com";var attachConnectionUrl=_corsHost+"/egain/chat/entrypoint/attachDockConnection";$.ajax({type:"POST",url:attachConnectionUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:sessionID,sourceId:tabID},dataType:"text",success:function(string){_connection.attach(jid,sessionID,requestID,onConnect)},error:function(jqXHR){$.when(_egainLib.HandleFailoverError(jqXHR,this)).then(function(){if(_onDockConnectionAttachedFailure){_onDockConnectionAttachedFailure(jqXHR.status)}},function(){},function(){})}})};this._resume=function(){var connection=_connection;if(connection.connected&&connection.paused){connection.resume();if(_onConnectionResumed){_onConnectionResumed()}}};this._acceptVideoChat=function(sessionID,userId,avmode){var convertVideoChatUrl=_corsHost+"/egain/chat/entrypoint/convertvideochat";if(!AVacceptRejectMsgSent){AVacceptRejectMsgSent=true;$.ajax({type:"POST",url:convertVideoChatUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:sessionID,userId:userId,entryPointId:_entryPointId,avmode:avmode},dataType:"text",success:function(string){AVacceptRejectMsgSent=false;if("function"===typeof _onAcceptVideoChat){_onAcceptVideoChat(string==="true")}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})}};this._declineVideoChat=function(sessionID,userId,avmode){var rejectVideoChatUrl=_corsHost+"/egain/chat/entrypoint/rejectvideochat";if(!AVacceptRejectMsgSent){AVacceptRejectMsgSent=true;$.ajax({type:"POST",url:rejectVideoChatUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:sessionID,userId:userId,avmode:avmode},dataType:"text",success:function(string){AVacceptRejectMsgSent=false;if("function"===typeof _onDeclineVideoChat){_onDeclineVideoChat(string==="true")}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})}};this._getMediaServerDetails=function(){$.ajax({type:"GET",url:_corsHost+"/egain/chat/entrypoint/mediaServer",headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},dataType:"xml",retryCount:0,retryLimit:_retryCountLimit,success:function(xml){var mediaServerObj={};var mediaServer=$(xml).find("mediaServer");mediaServerObj.mediaServerURL=mediaServer.attr("mediaServerURL");mediaServerObj.mediaServerSecEnabled=mediaServer.attr("mediaServerSecEnabled");mediaServerObj.mediaServerSecToken=mediaServer.attr("mediaServerSecToken");mediaServerObj.mediaServerSecConnectParam=mediaServer.attr("mediaServerSecConnectParam");mediaServerObj.mediaServerSecPlayParam=mediaServer.attr("mediaServerSecPlayParam");mediaServerObj.mediaServerSecPublishParam=mediaServer.attr("mediaServerSecPublishParam");if("function"===typeof _onGetMediaServerDetails){_onGetMediaServerDetails(mediaServerObj)}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})};this._initiateVideoChat=function(sessionID){var initiateVideoChatUrl=_corsHost+"/egain/chat/entrypoint/initiatevideochat";var customerIdent="Customer";$.ajax({type:"POST",url:initiateVideoChatUrl,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:sessionID,entryPointId:_entryPointId,customerIdent:customerIdent},dataType:"text",success:function(response){if("function"===typeof _onInitiateVideoChat){var onInitiateVideoChatResponse={statusCode:0,statusText:"EG_VIDEO_AGENT_NOT_AVAILABLE"};if("1"===response){onInitiateVideoChatResponse.statusCode=1;onInitiateVideoChatResponse.statusText="OK"}else if("-1"===response){onInitiateVideoChatResponse.statusCode=-1;onInitiateVideoChatResponse.statusText="EG_VIDEO_INVITE_ALREADY_SENT"}_onInitiateVideoChat(onInitiateVideoChatResponse)}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})};this._uploadAttachment=function(file,agentName){var xhr;if(file!==-1){var chatAttachmentUrl=_corsHost+"/egain/chat/entrypoint"+"/uploadAttachments?language="+languageCode+"&country="+countryCode;var uploadAttachmentArgs={};uploadAttachmentArgs.uniqueFileId=file.uniqueFileId;var formData=new FormData;formData.append("sid",_connection.sid);formData.append("agentName",agentName);formData.append("fileSize",file.size);formData.append("fileId",file.uniqueFileId);formData.append(file.newName,file);xhr=new XMLHttpRequest;xhr.retryCount=0;xhr.retryLimit=_retryCountLimit?_retryCountLimit:0;xhr.onload=function(evt){var retryInterval=_retryIntervalInSec?_retryIntervalInSec*1e3:5e3;if(evt.target.responseText!=parseInt(evt.target.responseText)){if(this.retryLimit>0&&(502===evt.target.status||503===evt.target.status||504===evt.target.status)){this.retryCount++;if(this.retryCount<=this.retryLimit){setTimeout(function(){xhr.open("post",chatAttachmentUrl,true);xhr.send(formData)},retryInterval)}else{uploadAttachmentArgs.status="failed-failover";uploadAttachmentArgs.message=evt.target.responseText;_onAttachmentUploadedByCustomer(uploadAttachmentArgs)}}else{uploadAttachmentArgs.status=502===evt.target.status?"failed-failover":"failed";uploadAttachmentArgs.message=evt.target.responseText;_onAttachmentUploadedByCustomer(uploadAttachmentArgs)}}};xhr.open("post",chatAttachmentUrl,true);xhr.setRequestHeader("X-egain-session",_egainLib.xEgainEscalationHeader);xhr.send(formData)}return xhr};this._getAttachment=function(fileId,uniqueFileId){var xhr;if(fileId!==-1){var agentAttachmentArgs={};agentAttachmentArgs.fileId=fileId;agentAttachmentArgs.uniqueFileId=uniqueFileId;var chatAttachmentUrl=_corsHost+"/egain/chat/entrypoint"+"/getattachment/"+fileId;xhr=new XMLHttpRequest;xhr.open("post",chatAttachmentUrl,true);xhr.setRequestHeader("X-egain-session",_egainLib.xEgainEscalationHeader);xhr.responseType="arraybuffer";xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8");xhr.retryCount=0;xhr.retryLimit=_retryCountLimit?_retryCountLimit:0;xhr.onload=function(e){var retryInterval=_retryIntervalInSec?_retryIntervalInSec*1e3:5e3;if(this.retryLimit>0&&(502===e.target.status||503===e.target.status||504===e.target.status)){this.retryCount++;if(this.retryCount<=this.retryLimit){setTimeout(function(){xhr.open("post",chatAttachmentUrl,true);xhr.send("sid="+_connection.sid)},retryInterval)}else{agentAttachmentArgs.data=null;agentAttachmentArgs.originalUrl="";if(_onGetAttachment!==null&&typeof _onGetAttachment!=="undefined"){_onGetAttachment(agentAttachmentArgs)}}}else{agentAttachmentArgs.data=this.response;agentAttachmentArgs.originalUrl=chatAttachmentUrl;if(_onGetAttachment!==null&&typeof _onGetAttachment!=="undefined"){_onGetAttachment(agentAttachmentArgs)}}};xhr.send("sid="+_connection.sid)}return xhr};this._getArticleAttachment=function(fileName){fileName=escape(fileName);fileName=decodeMessage(fileName);var attachmentUrl=_corsHost+"/egain/chat/entrypoint/getattachment/"+encodeURIComponent(fileName);if(typeof document.formAttachment=="undefined"||document.formAttachment===null){var formAttachment=document.createElement("form");formAttachment.setAttribute("name","formAttachment");formAttachment.setAttribute("method","POST");var i=document.createElement("input");i.setAttribute("type","hidden");i.setAttribute("name","sid");var s=document.createElement("input");s.setAttribute("type","hidden");s.setAttribute("name","setCacheHeaders");formAttachment.appendChild(i);formAttachment.appendChild(s);document.body.appendChild(formAttachment)}if(fileName){document.formAttachment.action=attachmentUrl;document.formAttachment.sid.value=_connection.sid;document.formAttachment.target="attachmenttarget";document.formAttachment.setCacheHeaders.value="false";document.formAttachment.submit()}};this._getAttachmentImage=function(attachmentId,uniqueFileId){var data=null;var attachmentThumbnailArgs={};$.ajax({type:"POST",url:_corsHost+"/egain/chat/entrypoint/getImageThumbnail",headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:_connection.sid,fileId:attachmentId},dataType:"text",retryCount:0,retryLimit:_retryCountLimit,success:function(responseText){if(responseText){data=responseText;if(_onGetAttachmentImageThumbnail!==null&&typeof _onGetAttachmentImageThumbnail!=="undefined"){attachmentThumbnailArgs.data=data;attachmentThumbnailArgs.fileId=attachmentId;if(typeof uniqueFileId!=="undefined"&&uniqueFileId!==null)attachmentThumbnailArgs.uniqueFileId=uniqueFileId;_onGetAttachmentImageThumbnail(attachmentThumbnailArgs)}}},error:function(_jqXHR,_textStatus,_errorThrown){$.when(_egainLib.HandleFailoverError(_jqXHR,this)).then(function(){},function(){},function(){return null})}})};this._sendCustomerAttachmentNotification=function(files,customerName){var timeStamp=(new Date).getTime();var errorOccured=false;for(var i=0;i<files.length;i++){(function(i){var file=files[i];var uniqueFileId=timeStamp+""+i;file.newName=uniqueFileId+"_"+file.name;file.uniqueFileId=uniqueFileId;$.ajax({type:"POST",url:_corsHost+"/egain/chat/entrypoint/sendCustAttachmentNotificaiton",headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:_connection.sid,customerIdentity:customerName,attachmentName:file.name,attachmentInternalName:file.newName,attachmentId:uniqueFileId,attachmentSize:file.size},dataType:"text",file:file,retryCount:0,retryLimit:_retryCountLimit,success:function(rettext){var customerAttachmentNotificationSentEventArgs={};if(rettext==="attachmentSettingDisabledForCustomer"||rettext==="0"){customerAttachmentNotificationSentEventArgs.status="failed";customerAttachmentNotificationSentEventArgs.message=rettext;if(!errorOccured){_onCustomerAttachmentNotificationSent(customerAttachmentNotificationSentEventArgs);errorOccured=true}}else if(_onCustomerAttachmentNotificationSent!==null&&typeof _onCustomerAttachmentNotificationSent!=="undefined"){var File={};File.filename=file.name;File.size=file.size;File.uniqueFileId=uniqueFileId;customerAttachmentNotificationSentEventArgs.status="success";customerAttachmentNotificationSentEventArgs.File=File;_onCustomerAttachmentNotificationSent(customerAttachmentNotificationSentEventArgs)}},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})})(i)}};this._sendAcceptChatAttachmentNotification=function(fileId,fileName,customerName){var attachmentAcceptUrl=_corsHost+"/egain/chat/entrypoint/acceptattachment/"+encodeURIComponent(fileId);if(!this.acceptRejectAttachSent){this.acceptRejectAttachSent=true;$.ajax({type:"POST",url:attachmentAcceptUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:_connection.sid,customerIdentity:customerName,entryPointId:_entryPointId,fileId:fileId,fileName:fileName},dataType:"text",success:function(string){},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})}this.acceptRejectAttachSent=false};this._sendRejectChatAttachmentNotification=function(fileId,fileName,customerName){var rejectAttachmenttUrl=_corsHost+"/egain/chat/entrypoint/rejectattachment/"+encodeURIComponent(fileId);if(!this.acceptRejectAttachSent){this.acceptRejectAttachSent=true;$.ajax({type:"POST",url:rejectAttachmenttUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},data:{sid:_connection.sid,customerIdentity:customerName,entryPointId:_entryPointId,fileId:fileId,fileName:fileName},dataType:"text",success:function(string){},error:function(_jqXHR,_textStatus,_errorThrown){_egainLib.HandleFailoverError(_jqXHR,this)}})}this.acceptRejectAttachSent=false};this._acceptAuthRequest=function(sessionID,requestId){var authRequestUrl=_corsHost+"/egain/chat/entrypoint/authenticate";var providerId=null;var jsonData={sid:sessionID,requestId:requestId,providerId:providerId,requestType:"ACCEPT"};var acceptAuthReqArgs={};acceptAuthReqArgs.requestId=requestId;if(!acceptRejectAuthRequestSent){acceptRejectAuthRequestSent=true;$.ajax({type:"POST",url:authRequestUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},contentType:"application/json",dataType:"json",data:JSON.stringify(jsonData),success:function(response,textStatus,jqXHR){acceptRejectAuthRequestSent=false;if(response){if(response.samlRequest){acceptAuthReqArgs.samlRequest=response.samlRequest}if(response.idpLoginUrl){acceptAuthReqArgs.idpLoginUrl=response.idpLoginUrl}if(response.relayState){acceptAuthReqArgs.relayState=response.relayState}}if("function"===typeof _onAcceptAuthRequest){_onAcceptAuthRequest(true,acceptAuthReqArgs,jqXHR.status)}},error:function(_jqXHR,_textStatus,_errorThrown){acceptRejectAuthRequestSent=false;$.when(_egainLib.HandleFailoverError(_jqXHR,this)).then(function(){if("function"===typeof _onAcceptAuthRequest){_onAcceptAuthRequest(false,acceptAuthReqArgs,_jqXHR.status)}},function(){},function(){})}})}};this._declineAuthRequest=function(sessionID,requestId){var authRequestUrl=_corsHost+"/egain/chat/entrypoint/authenticate";var providerId=null;var jsonData={sid:sessionID,requestId:requestId,providerId:providerId,requestType:"REJECT"};var declineAuthReqArgs={};declineAuthReqArgs.requestId=requestId;if(!acceptRejectAuthRequestSent){acceptRejectAuthRequestSent=true;$.ajax({type:"POST",url:authRequestUrl,retryCount:0,retryLimit:_retryCountLimit,headers:{"X-egain-session":_egainLib.xEgainEscalationHeader},contentType:"application/json",dataType:"json",data:JSON.stringify(jsonData),success:function(response,textStatus,jqXHR){acceptRejectAuthRequestSent=false;if(jqXHR.status=="204"){if("function"===typeof _onDeclineAuthRequest){_onDeclineAuthRequest(true,declineAuthReqArgs,jqXHR.status)}}},error:function(_jqXHR,_textStatus,_errorThrown){acceptRejectAuthRequestSent=false;$.when(_egainLib.HandleFailoverError(_jqXHR,this)).then(function(){if("function"===typeof _onDeclineAuthRequest){_onDeclineAuthRequest(false,declineAuthReqArgs,_jqXHR.status)}},function(){},function(){})}})}}};Chat.prototype={GetEventHandlers:function(){return this._getEventHandlers},Initialize:function(entryPointId,language,country,eventHandlers,templateName,version,serverURL,video,avmode,isAvailabilityInfoRequired){this._initialize(entryPointId,language,country,eventHandlers,templateName,version,serverURL,video,avmode,isAvailabilityInfoRequired)},LoadMessagingProperties:function(messagingPropertyUrl){this._loadMessagingProperties(messagingPropertyUrl)},LoadCustomMessagingProperties:function(customMessagingPropertyUrl){this._loadCustomMessagingProperties(customMessagingPropertyUrl)},Start:function(){this._start()},SendMessageToAgent:function(htmlMessage,isMessageOffRecord){return this._sendMessageToAgent(htmlMessage,isMessageOffRecord)},SendMaskedMessageToAgent:function(maskedMessage){return this._sendMaskedMessageToAgent(maskedMessage)},SendSystemMessage:function(htmlMessage,cmd){this._sendSystemMessage(htmlMessage,cmd)},SendCustomerStartTyping:function(){this._sendCustomerStartTyping()},SendCustomerStopTyping:function(){this._sendCustomerStopTyping()},GetTranscript:function(){this._getTranscript()},End:function(reason){this._end(reason)},SendBeaconToEndChat:function(){this._sendBeaconToEndChat()},Pause:function(){this._pause()},Attach:function(sessionID,requestID){this._attach(sessionID,requestID)},AttachDock:function(sessionID,requestID,tabID){this._attachDock(sessionID,requestID,tabID)},Resume:function(){this._resume()},AcceptVideoChat:function(sessionID,userId,avmode){this._acceptVideoChat(sessionID,userId,avmode)},DeclineVideoChat:function(sessionID,userId,avmode){this._declineVideoChat(sessionID,userId,avmode)},GetMediaServerDetails:function(){this._getMediaServerDetails()},InitiateVideoChat:function(sessionID){this._initiateVideoChat(sessionID)},UploadAttachment:function(file,agentName){this._uploadAttachment(file,agentName)},GetAttachment:function(fileId,uniqueFileId){this._getAttachment(fileId,uniqueFileId)},GetArticleAttachment:function(fileName){this._getArticleAttachment(fileName)},GetAttachmentImage:function(attachmentId,uniqueFileId){this._getAttachmentImage(attachmentId,uniqueFileId)},SendCustomerAttachmentNotification:function(files,customerName){this._sendCustomerAttachmentNotification(files,customerName)},SendAcceptChatAttachmentNotification:function(fileId,fileName,customerName){this._sendAcceptChatAttachmentNotification(fileId,fileName,customerName)},SendRejectChatAttachmentNotification:function(fileId,fileName,customerName){this._sendRejectChatAttachmentNotification(fileId,fileName,customerName)},AcceptAuthRequest:function(sessionID,requestId){this._acceptAuthRequest(sessionID,requestId)},DeclineAuthRequest:function(sessionID,requestId){this._declineAuthRequest(sessionID,requestId)}};this.Chat=Chat;var Callback=function(){Chat.call(this);var connectionObj=new Connection;var _onCallBackInitialized;var _onCallBackMessagePropertyLoad;var _onCallBackConnectionFailure;var _onDuplicateSession;var _onCallBackCompletion;var _onSystemMessageReceived;var _onCallBackErrorOccurred;var _onAgentsNotAvailable;var _onGetQueueCurrentStatus;var _onServerNotificationReceived;var _onCallBackConnectSuccess;var _onCallBackSucceeded;var validateCallbackEventHandlers=function(eventHandlers){try{if(typeof eventHandlers!=="object"){throw"The library cannot be initialized without providing an eGainCallBackCallbacks Object as parameter."}if(typeof eventHandlers.OnCallBackInitialized!=="function"){}else{_onCallBackInitialized=eventHandlers.OnCallBackInitialized}if(typeof eventHandlers.OnCallBackConnectSuccess!=="function"){throw"OnCallBackConnectSuccess is not defined or is not a function"}else{_onCallBackConnectSuccess=eventHandlers.OnCallBackConnectSuccess}if(typeof eventHandlers.OnCallBackSucceeded!=="function"){throw"OnCallBackSucceeded is not defined or is not a function"}else{_onCallBackSucceeded=eventHandlers.OnCallBackSucceeded}if(typeof eventHandlers.OnCallBackConnectionFailure!=="function"){throw"OnCallBackConnectionFailure is not defined or is not a function"}else{_onCallBackConnectionFailure=eventHandlers.OnCallBackConnectionFailure}if(typeof eventHandlers.OnCallBackCompletion!=="function"){throw"OnCallBackCompletion is not defined or is not a function"}else{_onCallBackCompletion=eventHandlers.OnCallBackCompletion}if(typeof eventHandlers.OnSystemMessageReceived!=="function"){throw"OnSystemMessageReceived is not defined or is not a function"}else{_onSystemMessageReceived=eventHandlers.OnSystemMessageReceived}if(typeof eventHandlers.OnCallBackErrorOccurred!=="function"){}else{_onCallBackErrorOccurred=eventHandlers.OnCallBackErrorOccurred}if(typeof eventHandlers.OnAgentsNotAvailable!=="function"){throw"OnAgentsNotAvailable is not defined or is not a function"}else{_onAgentsNotAvailable=eventHandlers.OnAgentsNotAvailable}if(typeof eventHandlers.OnGetQueueCurrentStatus!=="function"){}else{_onGetQueueCurrentStatus=eventHandlers.OnGetQueueCurrentStatus}if(typeof eventHandlers.OnServerNotificationReceived!=="function"){}else{_onServerNotificationReceived=eventHandlers.OnServerNotificationReceived}if(typeof eventHandlers.OnCallBackMessagePropertyLoad!=="function"){}else{_onCallBackMessagePropertyLoad=eventHandlers.OnCallBackMessagePropertyLoad}if(typeof eventHandlers.OnDuplicateSession!=="function"){}else{_onDuplicateSession=eventHandlers.OnDuplicateSession}}catch(err){throw err}};var onConnect=function(status,condition){switch(status){case Strophe.Status.CONNFAIL:if(typeof customWrapUpMessagesHook==="function"){var returnVal=customWrapUpMessagesHook(condition,_connection.eGainMessagingProperty);if(returnVal===true){connectionFailure=true;break}}var chatConnectionFailureEventArgs=new _egainLib.Datatype.ResultObject;chatConnectionFailureEventArgs.IsSuccess=false;chatConnectionFailureEventArgs.StatusCode="CONNECT_FAIL";chatConnectionFailureEventArgs.StatusMessage="CONNECTION FAILURE";switch(condition){case"system-shutdown":connectionFailure=true;var agentsNotAvailableEventArgs=chatConnectionFailureEventArgs;agentsNotAvailableEventArgs.IsSuccess=false;agentsNotAvailableEventArgs.StatusCode="AGENTS_UNAVAILABLE";agentsNotAvailableEventArgs.StatusMessage="AGENTS UNAVAILABLE";_onAgentsNotAvailable(agentsNotAvailableEventArgs);break;case"other-request":connectionFailure=true;var duplicateSessionEventArgs=chatConnectionFailureEventArgs;duplicateSessionEventArgs.IsSuccess=false;duplicateSessionEventArgs.StatusCode="DUPLICATE_SESSION";duplicateSessionEventArgs.StatusMessage="DUPLICATE SESSION";_onDuplicateSession(duplicateSessionEventArgs);break;case"L10N_EXIT_TXT":connectionFailure=false;_connected=true;var callbackSuccessEventArgs=chatConnectionFailureEventArgs;callbackSuccessEventArgs.IsSuccess=true;callbackSuccessEventArgs.StatusCode="CALLBACK_SUCCESS";callbackSuccessEventArgs.StatusMessage="CALLBACK_SUCCESS";_onCallBackSucceeded(callbackSuccessEventArgs);break;default:if(condition.indexOf("remote-connection-failed")!=-1){connectionFailure=true;var errorCode=condition.split(":");var chatConnectionErrorEventArgs=chatConnectionFailureEventArgs;chatConnectionErrorEventArgs.StatusCode=errorCode[1];_onCallBackConnectionFailure(chatConnectionFailureEventArgs)}else if(!_connection.disconnecting&&condition!=="unknown"){connectionFailure=true;chatConnectionFailureEventArgs.StatusCode=condition;_onCallBackConnectionFailure(chatConnectionFailureEventArgs)}break}break;case Strophe.Status.CONNECTED:_connection.addHandler(notifyUser,null,null,null,null,null);var chatConnectEventArgs={};chatConnectEventArgs.CallBackID=_connection.sid.split("_")[0];chatConnectEventArgs.SessionID=_connection.sid;if(_connection.name){chatConnectEventArgs.name=_connection.name;delete _connection.name}if(_connection.subject){chatConnectEventArgs.subject=_connection.subject;delete _connection.subject}_onCallBackConnectSuccess(chatConnectEventArgs);_connected=true;break;case Strophe.Status.DISCONNECTED:_connected=false;if(connectionFailure!==true){_onCallBackCompletion()}break;default:break}};var notifyUser=function(messageObjectFromServer){_connected=true;var messageType=messageObjectFromServer.getAttribute("type");var messageAuthor=messageObjectFromServer.getAttribute("from");if(messageType&&messageAuthor&&messageAuthor=="system"){if(_onServerNotificationReceived!==null&&_onServerNotificationReceived!==undefined){var serverNotificationReceivedEntArgs={MessageFromServer:messageObjectFromServer};_onServerNotificationReceived(serverNotificationReceivedEntArgs)}}for(var i=0;i<messageObjectFromServer.childNodes.length;i++){if(!messageObjectFromServer.childNodes[i].tagName){continue}if(messageObjectFromServer.childNodes[i].tagName.indexOf(":widget")>0){continue}if(messageObjectFromServer.childNodes[i].tagName.indexOf(":body")<0){}var htmlMessage=messageObjectFromServer.childNodes[i].textContent;if(htmlMessage==="undefined"){htmlMessage=messageObjectFromServer.childNodes[i].text}var transferParam=messageObjectFromServer.childNodes[i];var arr={};$(transferParam).find("ns2\\:egainAdditionalParam,egainAdditionalParam").each(function(){arr[$(this).find("ns2\\:paramKey,paramKey").text()]=$(this).find("ns2\\:paramValue,paramValue").text()});var transType="";if(messageType){htmlMessage=unescape(htmlMessage);htmlMessage=decodeMessage(htmlMessage)}if(htmlMessage&&htmlMessage.length&&htmlMessage.length>0){var systemMessageReceivedEventArgs={};systemMessageReceivedEventArgs.Message=htmlMessage;_onSystemMessageReceived(systemMessageReceivedEventArgs)}}return true};this._loadMessagingProperties=function(messagingPropertyUrl,customMessagingPropertyUrl){$.ajax({url:messagingPropertyUrl,type:"GET",dataType:"text",success:function(data){_connection.eGainMessagingProperty=data;$.ajax({url:customMessagingPropertyUrl,type:"GET",dataType:"text",success:function(data){_connection.eGainMessagingProperty=_connection.eGainMessagingProperty+"\n"+data;if(_onCallBackMessagePropertyLoad!==null&&_onCallBackMessagePropertyLoad!==undefined){_onCallBackMessagePropertyLoad(data)}}})}})};this._initialize=function(entryPointId,language,country,eventHandlers,templateName,version,subActivity,serverURL){var _chatInitResult=new _this.Datatype.ResultObject;var languageCode=language?language:"en";var countryCode=country?country:"US";var _templateName=templateName?templateName:"";var _version=version?version:"";_entryPointId=entryPointId;initializeApplicationState(entryPointId,language,country,templateName,version,serverURL);BOSH_SERVICE=_corsHost+"/egain/chat/entrypoint?subActivity="+subActivity+"&entryPointId="+entryPointId+"&templateName="+_templateName+"&languageCode="+languageCode+"&countryCode="+countryCode+"&ver="+_version;MESSAGING_URL=_eGainContextPath+"l10n/callback_"+languageCode+"_"+countryCode+".properties";CUSTOM_CHAT_URL=_eGainContextPath+"l10n/custom_chat_"+languageCode+"_"+countryCode+".properties";CUSTOM_MESSAGING_URL=_eGainContextPath+"l10n/custom_callback_"+languageCode+"_"+countryCode+".properties";MASKING_URL=_corsHost+"/egain/chat/entrypoint/initialize"+"/"+entryPointId;validateCallbackEventHandlers(eventHandlers);connectionObj.InitializeConnectionObject.call(this,BOSH_SERVICE,MESSAGING_URL,MASKING_URL,CUSTOM_MESSAGING_URL);return _chatInitResult};this._start=function(){connectionObj.Start(onConnect)}};Callback.prototype=Object.create(Chat.prototype);Callback.prototype.constructor=Callback;Callback.prototype.Initialize=function(entryPointId,language,country,eventHandlers,templateName,version,subActivity,serverURL){this._initialize(entryPointId,language,country,eventHandlers,templateName,version,subActivity,serverURL)};this.Callback=Callback};window.eGainLibrary=eGainLibrary;Strophe.log=function(level,msg){try{if(level===Strophe.LogLevel.ERROR||level===Strophe.LogLevel.FATAL||eGainLibrary.debug){if(this.eGainOnError){this.eGainOnError({message:msg})}if(eGainLibrary.eGainLog){eGainLibrary.eGainLog(msg)}else{console.log(msg)}}}catch(e){}};Strophe.SECONDARY_TIMEOUT=99;Strophe.Connection.prototype.chatExtendedTimeout=0;Strophe.Connection.prototype._timeToReconnectExpired=false;Strophe.Connection.prototype._isWaitingForCustReconnection=false;Strophe.Connection.prototype._timerToWaitForCustReconnection=null;Strophe.Connection.prototype.connect=function(jid,pass,callback,wait,hold){this.jid=jid;this.pass=pass;this.connect_callback=callback;this.disconnecting=false;this.connected=false;this.authenticated=false;this.errors=0;this.wait=wait||this.wait;this.hold=hold||this.hold;this.domain=Strophe.getDomainFromJid(this.jid);var attributes={to:this.entryPointId,from:this.from,authId:0,"xml:lang":this.lang,wait:this.wait,hold:this.hold,content:"text/xml; charset=utf-8",ver:"1.6","xmlns:xmpp":Strophe.NS.BOSH,"xmpp:version":"1.0"};var body=this._buildBody().attrs(attributes);var $egainParams=body.c("egainParams",{xmlns:"http://bindings.egain.com/chat"});if(this.eGainLoginParameters&&this.eGainLoginParameters.length>0){for(var i=0;i<this.eGainLoginParameters.length;i++){eGainLibrary.addParamXml($egainParams,this.eGainLoginParameters[i])}}if(typeof this.vhtIds!="undefined"&&this.vhtIds){body.c("visitorIdentifier").c("aId").t(this.vhtIds.aId).up().c("sId").t(this.vhtIds.sId).up().c("uId").t(this.vhtIds.uId).up().up()}if(typeof App!="undefined"&&App&&typeof App.eGainCustomParams!="undefined"&&App.eGainCustomParams&&typeof App.eGainCustomParams.backStoppingTime!="undefined"&&App.eGainCustomParams.backStoppingTime&&typeof App.eGainCustomParams.backStoppingAction!="undefined"&&App.eGainCustomParams.backStoppingAction){body.c("backStoppingParams").c("time").t(new String(App.eGainCustomParams.backStoppingTime)).up().c("action").t(App.eGainCustomParams.backStoppingAction).up().up()}if(typeof App!="undefined"&&App&&typeof App.eGainCustomParams!="undefined"&&App.eGainCustomParams&&typeof App.eGainCustomParams.eglvcaseid!="undefined"&&App.eGainCustomParams.eglvcaseid){body.c("caseId").t(new String(App.eGainCustomParams.eglvcaseid)).up()}body.c("messagingData","<![CDATA["+this.eGainMessagingProperty+"]]>").up();if(this.samlResponse||this.tabId){body.c("authenticationData");if(this.samlResponse){body.c("SAMLResponse").t(this.samlResponse).up();delete this.samlResponse}if(this.tabId){body.c("sourceId").t(new String(this.tabId)).up();delete this.tabId}body.up()}if(typeof this.escalationData!="undefined"&&this.escalationData!="null"){body.c("escalationData").c("vaDomain").t(this.escalationData.vaDomain).up().c("vaTenantId").t(this.escalationData.vaTenantId).up().c("vaSessionId").t(this.escalationData.vaSessionId).up().c("vaBotName").t(this.escalationData.vaBotName).up().up();delete this.escalationData}this._changeConnectStatus(Strophe.Status.CONNECTING,null);this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this).prependArg(this._connect_cb.bind(this)),body.tree().getAttribute("rid")));document.cookie="egain-last-request-id="+body.tree().getAttribute("rid");this._throttledRequestHandler()};eGainLibrary.addParamXml=function($egainParameters,parameterDefinition){var attribName=parameterDefinition.attributeName;if(!attribName)return;var attributeValue=null;if(typeof App!="undefined")attributeValue=App.session.get(attribName);else attributeValue=parameterDefinition.attributeValue;attributeValue=eGainLibrary.escapeXML(attributeValue);if(attributeValue.constructor!=Array){attributeValue=attributeValue.replace(/[\r\n]/g,"<br />")}else{for(var i=0;i<attributeValue.length;i++){attributeValue[i]=attributeValue[i].replace(/[\r\n]/g,"<br />")}}$egainParameters.c("param",{name:parameterDefinition.paramName}).c("mapping");if(parameterDefinition.egainAttributeName!="undefined"&&parameterDefinition.egainAttributeName){$egainParameters.c("egainAttributeName").t(parameterDefinition.egainAttributeName).up()}$egainParameters.c("attributeName").t(parameterDefinition.attributeName).up().c("objectName").t(parameterDefinition.objectName).up().c("attributeValue").t(attributeValue).up().c("validationString").t(parameterDefinition.validationString).up().c("primaryKey").t(parameterDefinition.primaryKey).up();if(parameterDefinition.secureAttribute!="undefined"&&parameterDefinition.secureAttribute){$egainParameters.c("secureAttribute").t(parameterDefinition.secureAttribute).up()}$egainParameters.c("minLength").t(parameterDefinition.minLength).up().c("maxLength").t(parameterDefinition.maxLength).up().c("required").t(parameterDefinition.required).up().c("fieldType").t(parameterDefinition.fieldType).up().up().up()};eGainLibrary.escapeXML=function(str){if(!str)return"";if(str.constructor!=Array){str=str.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;").replace(/[\r\n]/g,"<br />")}else{for(var i=0;i<str.length;i++){str[i]=str[i].replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;").replace(/[\r\n]/g,"<br />")}}return str};var xmlEscape=eGainLibrary.escapeXML;Strophe.Connection.prototype._connect_cb=function(req){Strophe.info("_connect_cb was called");this.connected=true;var bodyWrap=req.getResponse();if(!bodyWrap){return}this.xmlInput(bodyWrap);this.rawInput(Strophe.serialize(bodyWrap));var typ=bodyWrap.getAttribute("type");var cond,conflict,errorCode;if(typ!==null&&typ=="terminate"){cond=bodyWrap.getAttribute("condition");conflict=bodyWrap.getElementsByTagName("conflict");for(var mindex=0;mindex<bodyWrap.childNodes.length;mindex++){var errorMsg=bodyWrap.childNodes[mindex];if(errorMsg.tagName&&errorMsg.tagName.indexOf("error")!=-1){for(var i=0;i<errorMsg.childNodes.length;i++){if(errorMsg.childNodes[i].tagName){if(errorMsg.childNodes[i].tagName.indexOf("code")!=-1){errorCode=Strophe.getText(errorMsg.childNodes[i])}}}}}if(cond!==null){if(cond=="remote-stream-error"&&conflict.length>0){cond="conflict"}else if(cond=="remote-connection-failed"&&typeof errorCode!="undefined"){cond=cond+":"+errorCode}this._changeConnectStatus(Strophe.Status.CONNFAIL,cond)}else{this._changeConnectStatus(Strophe.Status.CONNFAIL,"unknown")}return}else{var formValues={};for(var mindex=0;mindex<bodyWrap.childNodes.length;mindex++){var egainResponseParams=bodyWrap.childNodes[mindex];if(egainResponseParams.tagName&&egainResponseParams.tagName.indexOf("egainResponseParams")!=-1){for(var responseParamCounter=0;responseParamCounter<egainResponseParams.childNodes.length;responseParamCounter++){var responseParam=egainResponseParams.childNodes[responseParamCounter];if(responseParam.tagName&&responseParam.tagName.indexOf("responseParam")!=-1){for(var reseponseParamMappingCounter=0;reseponseParamMappingCounter<responseParam.childNodes.length;reseponseParamMappingCounter++){var responseParamMapping=responseParam.childNodes[reseponseParamMappingCounter];if(responseParamMapping.tagName&&responseParamMapping.tagName.indexOf("responseParamMapping")!=-1){if(window.navigator.userAgent.indexOf("MSIE")!=-1&&(window.navigator.userAgent.indexOf("Trident/4.0")!=-1||window.navigator.userAgent.indexOf("Trident/5.0")!=-1)){if(Strophe.getText(responseParamMapping.childNodes[0])=="full_name"){this.name=Strophe.getText(responseParamMapping.childNodes[1])}else if(Strophe.getText(responseParamMapping.childNodes[0])=="subject"){this.subject=Strophe.getText(responseParamMapping.childNodes[1])}else if(Strophe.getText(responseParamMapping.childNodes[0])=="first_name"||Strophe.getText(responseParamMapping.childNodes[0])=="last_name"){this.name=this.name?this.name+" "+Strophe.getText(responseParamMapping.childNodes[1]):Strophe.getText(responseParamMapping.childNodes[1])}}else{for(var i=0;i<responseParamMapping.childNodes.length;i++){if(responseParamMapping.childNodes[i].tagName&&responseParamMapping.childNodes[i].tagName.indexOf("attributeName")!=-1){if(Strophe.getText(responseParamMapping.childNodes[i])=="full_name"){this.name=Strophe.getText(responseParamMapping.childNodes[i+2]);i=i+2}else if(Strophe.getText(responseParamMapping.childNodes[i])=="subject"){this.subject=Strophe.getText(responseParamMapping.childNodes[i+2]);i=i+2}else if(Strophe.getText(responseParamMapping.childNodes[i])=="first_name"||Strophe.getText(responseParamMapping.childNodes[i])=="last_name"){this.name=this.name?this.name+" "+Strophe.getText(responseParamMapping.childNodes[i+2]):Strophe.getText(responseParamMapping.childNodes[i+2]);i=i+2}}}}}}}}}}}if(!this.sid){this.sid=bodyWrap.getAttribute("sid")}if(!this.stream_id){this.stream_id=bodyWrap.getAttribute("authid")}var wind=bodyWrap.getAttribute("requests");if(wind){this.window=parseInt(wind,10)}var hold=bodyWrap.getAttribute("hold");if(hold){this.hold=parseInt(hold,10)}var wait=bodyWrap.getAttribute("wait");if(wait){this.wait=parseInt(wait,10)}this.authenticated=true;this._changeConnectStatus(Strophe.Status.CONNECTED,null)};Strophe.Connection.prototype._buildBody=function(){var bodyWrap=$build("body",{rid:this.rid++,xmlns:Strophe.NS.HTTPBIND});var payLoad={Method:"SET",Key:"EgainLastRequestId",Value:this.rid,Caller:"EGLV_DOCK_CALLER_SET"};if(this.connected){if(window.parent&&window.parent.postMessage){window.parent.postMessage(JSON.stringify(payLoad),"*")}if(window.opener&&!window.opener.closed&&window.opener.postMessage){window.opener.postMessage(JSON.stringify(payLoad),"*")}document.cookie="egain-last-request-id="+this.rid}if(this.sid!==null){bodyWrap.attrs({sid:this.sid})}return bodyWrap};Strophe.Connection.prototype._processRequest=function(i,sync){var req=this._requests[i];var reqStatus=-1;try{if(req.xhr.readyState==4){reqStatus=req.xhr.status}}catch(e){Strophe.error("caught an error in _requests["+i+"], reqStatus: "+reqStatus)}if(typeof reqStatus=="undefined"){reqStatus=-1}var time_elapsed=req.age();var primaryTimeout=!isNaN(time_elapsed)&&time_elapsed>Math.floor(Strophe.TIMEOUT*this.wait);var secondaryTimeout=req.dead!==null&&req.timeDead()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait);var requestCompletedWithServerError=req.xhr.readyState==4&&(reqStatus<1||reqStatus>=500);if(primaryTimeout||secondaryTimeout||requestCompletedWithServerError){if(secondaryTimeout){Strophe.error("Request "+this._requests[i].id+" timed out (secondary), restarting")}req.abort=true;req.xhr.abort();req.xhr.onreadystatechange=function(){};this._requests[i]=new Strophe.Request(req.xmlData,req.origFunc,req.rid,req.sends);document.cookie="egain-last-request-id="+req.rid;req=this._requests[i]}if(req.xhr.readyState===0){Strophe.debug("request id "+req.id+"."+req.sends+" posting");req.date=new Date;try{var sync="boolean"===typeof req.syncRequest?req.syncRequest:"boolean"===typeof this.syncRequest?this.syncRequest:false;req.xhr.open("POST",this.service,!sync)}catch(e2){Strophe.error("XHR open failed: "+e2.message);if(!this.connected){this._changeConnectStatus(Strophe.Status.CONNFAIL,"bad-service")}this.disconnect();return}req.xhr.setRequestHeader("X-egain-session",this.xEgainEscalationHeader);var sendFunc=function(){req.xhr.setRequestHeader("Content-Type","application/xml");req.xhr.send(req.data)};if(req.sends>1&&!this._isWaitingForCustReconnection&&true!==this._timeToReconnectExpired){var backoff=Math.pow(req.sends,3)*1e3;setTimeout(sendFunc,backoff)}else{sendFunc()}req.sends++;this.xmlOutput(req.xmlData);this.rawOutput(req.data)}else{Strophe.debug("_processRequest: "+(i===0?"first":"second")+" request has readyState of "+req.xhr.readyState)}};Strophe.Connection.prototype._hitError=function(reqStatus){if(typeof App=="undefined"){if(typeof clearPollQueueStatusTimer=="function")clearPollQueueStatusTimer()}else App.connection.clearPollQueueStatusTimer();this.errors++;Strophe.warn("request errored, status: "+reqStatus+", number of errors: "+this.errors);if(this.errors>4){if("function"===typeof this.eGainOnError){this.eGainOnError({status:"error",message:"Should be abandoned. "+reqStatus})}this._onDisconnectTimeout()}else{if("function"===typeof this.eGainOnError){this.eGainOnError({status:"log",message:"Retrying. "+reqStatus})}}};Strophe.Connection.prototype._onRequestStateChange=function(func,req){try{Strophe.debug("request id "+req.id+"."+req.sends+" state changed to "+req.xhr.readyState)}catch(e){}if(req.abort){req.abort=false;return}var reqStatus;if(req.xhr.readyState==4){reqStatus=0;try{reqStatus=req.xhr.status}catch(e){}if(typeof reqStatus=="undefined"){reqStatus=0}if(this.disconnecting){if(reqStatus>=400){this._hitError(reqStatus);return}}var reqIs0=this._requests[0]==req;var reqIs1=this._requests[1]==req;if(reqStatus>0&&reqStatus<500||req.sends>30){this._removeRequest(req);try{Strophe.debug("request id "+req.id+" should now be removed")}catch(e){}}if(reqStatus==200){if(this._networkDisconnect){if(typeof eGainLibrary.onNetworkReconnect==="function"){eGainLibrary.onNetworkReconnect()}}if(reqIs1||reqIs0&&this._requests.length>0&&this._requests[0].age()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait)){this._restartRequest(0)}document.cookie="egain-last-success-request-id="+req.rid;try{Strophe.debug("request id "+req.id+"."+req.sends+" got 200")}catch(e){}func(req);this.errors=0;this._isWaitingForCustReconnection=false;if(this._timerToWaitForCustReconnection!==null){clearTimeout(this._timerToWaitForCustReconnection);this._timerToWaitForCustReconnection=null}this._networkDisconnect=false}else{if("function"===typeof this.eGainOnError){this.eGainOnError({status:"error",message:"Should be abandoned. "+reqStatus})}else{Strophe.error("request id "+req.id+"."+req.sends+" error "+reqStatus+" happened")}if(reqStatus===0||reqStatus>=400&&reqStatus<600||reqStatus>=12e3){if((reqStatus===0||reqStatus===502||reqStatus===503||reqStatus===504)&&!this._networkDisconnect){this._networkDisconnect=true;if(typeof eGainLibrary.onNetworkDisconnect==="function"){eGainLibrary.onNetworkDisconnect()}}if(reqStatus==0||reqStatus===502||reqStatus===503||reqStatus===504){if(!this._timerToWaitForCustReconnection){if(this.chatExtendedTimeout>0){this._isWaitingForCustReconnection=true}var resetWaitFlag=function(){if(this._isWaitingForCustReconnection){this._isWaitingForCustReconnection=false}if(typeof eGainLibrary.onTimeToReconnectExpired==="function"){eGainLibrary.onTimeToReconnectExpired()}this._timeToReconnectExpired=true;this.disconnect()};this._timerToWaitForCustReconnection=setTimeout(resetWaitFlag.bind(this),(this.chatExtendedTimeout+2)*60*1e3)}}if(!this._isWaitingForCustReconnection){this._hitError(reqStatus)}if(reqStatus>=400&&reqStatus<500){this._changeConnectStatus(Strophe.Status.DISCONNECTING,null);this._doDisconnect()}}}if(!(reqStatus>0&&reqStatus<1e4||req.sends>30)&&!this._isWaitingForCustReconnection){this._throttledRequestHandler()}}};Strophe.Connection.prototype._dataRecv=function(req){try{var elem=req.getResponse()}catch(e){if(e!="parsererror"){throw e}this.disconnect("strophe-parsererror")}if(elem===null){return}this.xmlInput(elem);try{this.rawInput(Strophe.serialize(elem))}catch(e){}var i,hand;while(this.removeHandlers.length>0){hand=this.removeHandlers.pop();i=this.handlers.indexOf(hand);if(i>=0){this.handlers.splice(i,1)}}while(this.addHandlers.length>0){this.handlers.push(this.addHandlers.pop())}var isCustTerminateReq=req.xmlData.getAttribute("type")=="terminate";if(isCustTerminateReq&&this.handlers.length>0){var i,newList;newList=this.handlers;this.handlers=[];for(i=0;i<newList.length;i++){var hand=newList[i];if(hand.isMatch(elem)&&(this.authenticated||!hand.user)){if(hand.run(elem)){this.handlers.push(hand)}}else{this.handlers.push(hand)}}}if(this.disconnecting&&this._requests.length===0){this.deleteTimedHandler(this._disconnectTimeout);this._disconnectTimeout=null;this._doDisconnect();return}var typ=elem.getAttribute("type");var cond,conflict;if(typ!==null&&typ=="terminate"){cond=elem.getAttribute("condition");conflict=elem.getElementsByTagName("conflict");if(cond!==null){if(cond=="remote-stream-error"&&conflict.length>0){cond="conflict"}this._changeConnectStatus(Strophe.Status.CONNFAIL,cond)}else{this._changeConnectStatus(Strophe.Status.CONNFAIL,"unknown")}this.disconnect();return}var self=this;try{Strophe.forEachChild(elem,null,function(child){var i,newList;newList=self.handlers;self.handlers=[];for(i=0;i<newList.length;i++){var hand=newList[i];if(hand.isMatch(child)&&(self.authenticated||!hand.user)){if(hand.run(child)){self.handlers.push(hand)}}else{self.handlers.push(hand)}}})}catch(e){}};eGainLibrary.xmlOutput=function(elem){console.log("eGainLibrary.xmlOutput: "+elem)};eGainLibrary.xmlInput=function(elem){console.log("eGainLibrary.xmlInput: "+elem);if(false){try{for(var mindex=0;mindex<elem.childNodes.length;mindex++){var msg=elem.childNodes[mindex];for(var i=0;i<msg.childNodes.length;i++){if(!msg.childNodes[i].tagName||msg.childNodes[i].tagName.indexOf("body")<0){continue}var messageHtml=msg.childNodes[i].textContent;if(!messageHtml){messageHtml=msg.childNodes[i].text}messageHtml=unescape(messageHtml);messageHtml=messageHtml.replace(/\^/g,"%");messageHtml=unescape(messageHtml);messageHtml=$.trim(messageHtml);if(messageHtml.length>0){transcribe(transcriptEntry(agentIdent,messageHtml),"xmlInput")}}}}catch(e){alert(e.message)}}};eGainLibrary.rawOutput=function(data){console.log("eGainLibrary.rawOutput: "+data)};eGainLibrary.rawInput=function(data){console.log("eGainLibrary.rawInput: "+data)}})(jQuery.noConflict(true));
var eGainVALibrary = function (librarySettings) {
    var _corsHost = librarySettings.CORSHost;
    var _fixedParameters = '';
    if (_corsHost != null) {
        var index = _corsHost.indexOf('?');
        if (index != -1) {
            if (_corsHost.length > (index + 1)) {
                _fixedParameters = _corsHost.substring(index + 1).trim();
                if (_fixedParameters.indexOf("&") != 0)
                    _fixedParameters = '&' + _fixedParameters
            }
            _corsHost = _corsHost.substring(0, index);
        }
    }
    this.GetVAHost = function () {
        return _corsHost;
    };

    this.SendMessageToVA = function (tenantToken, botName, sessionId, question, action, callback, customerParameters) {
        // Exchange message with VA
        var requestURL = _corsHost + "/egain/va/v1/bot/" + botName;
        var payload = {};

        if (_fixedParameters != null && _fixedParameters != '') {
            var parirs = _fixedParameters.split('&');
            parirs.forEach(function (pair) {
                pair = pair.split('=');
                payload[pair[0]] = decodeURIComponent(pair[1] || '');
            });
        }
        payload.type = 'json';
        payload.sid = sessionId;

        if (typeof action !== 'undefined' && action !== null) {
            payload[".action"] = action;
        }

        if (typeof question !== 'undefined' && question !== null) {
            payload.ask = question;
        }
        // add customer parameters to only first request
        if (customerParameters && (typeof sessionId == 'undefined' || sessionId == null || sessionId.trim() == "")) {
            for (var customerParam in customerParameters) {
                if (customerParameters.hasOwnProperty(customerParam)) {
                    payload[customerParam] = customerParameters[customerParam];
                }
            }
        }
        eGain$.ajax({
            type: 'POST',
            url: requestURL,
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(payload),
            xhrFields: {
                withCredentials: true
            },
            headers: {
                'X-tenant-token': tenantToken
            },
            success: function (data) {
                var eventData = {};
                eventData.originalMessage = question;
                /* var validAnswersHtml = '';
                    if (data.validAnswer && data.validAnswer.length > 0 && data.text != "") {
                        validAnswersHtml = " <div id='va-options-div'>";
                        for (var i = 0; i < data.validAnswer.length; i++) {
                            var validAnswer = data.validAnswer[i];
                            if (!validAnswer.isInvisible) {
                                var optionValue = validAnswer.text;
                                if (optionValue && optionValue.trim() != '') {
                                    optionValue = optionValue.replace(/"/g, '&quot;');
                                    validAnswersHtml += '   <div><input type="radio" id="va-radio-options-' + i + '" value="' + optionValue + '">';
                                    validAnswersHtml += '   <label for="va-radio-options-' + i + '">' + optionValue + '</label> </div>';
                                }
                            }
                        }
                        validAnswersHtml += ' </div> ';
                    } */
                eventData.Message = data.text;
                if (eventData.Message.indexOf('id="va-options-div"') != -1 || eventData.Message.indexOf('id="va-text"') != -1) {
                    var optionMsgBody = "";
                    var isOptionsEmpty = data.validAnswer.length == 0;
                    var wrapper = document.createElement("div");
                    wrapper.innerHTML = eventData.Message;

                    for (var i = 0; i < wrapper.childElementCount; i++) {
                        if (wrapper.children[i].id == "va-options-div") {
                            optionMsgBody = wrapper.children[i].outerHTML;
                            for (var j = 0; j < wrapper.children[i].children.length; j++) {
                                if (isOptionsEmpty) {
                                    var answerObj = {};
                                    answerObj.text = wrapper.children[i].children[j].children[0].innerText;
                                    data.validAnswer.push(answerObj);
                                }
                            }
                        } else if (wrapper.children[i].outerHTML.indexOf('id="va-text"') != -1) {
                            for (var j = 0; j < wrapper.children[i].children.length; j++) {
                                if (isOptionsEmpty && wrapper.children[i].children[j].outerHTML.indexOf('id="va-text"') != -1) {
                                    optionMsgBody = optionMsgBody + (wrapper.children[i].children[j].outerHTML.indexOf('</p>') > -1 ? wrapper.children[i].children[j].outerHTML : wrapper.children[i].outerHTML);
                                    var answerObj = {};
                                    answerObj.text = wrapper.children[i].children[j].innerText;
                                    data.validAnswer.push(answerObj);
                                }
                            }
                        }
                    }
                }
                // else if (eventData.Message.indexOf('id="va-text"') != -1) {
                //     var optionMsgBody = '';
                //     eGain$(eventData.Message).find('a').each(function() {
                //         if (eGain$(this).attr('href').indexOf("javascript:") > -1) {
                //             optionMsgBody = optionMsgBody + ('<p>' + eGain$(this)[0].outerHTML + '</p>');
                //             var answerObj = {};
                //             answerObj.text = eGain$(this)[0].innerText;
                //             data.validAnswer.push(answerObj);
                //         }
                //     });
                // }
                eventData.Message = eventData.Message.replace(optionMsgBody, "");
                eventData.validAnswer = data.validAnswer;
                eventData.avatar = _corsHost + data.emotion;
                eventData.url = data.url;
                eventData.escalate = data.escalate;
                eventData.AgentScreenName = data.botname;
                eventData.entryPointId = data.entryPointId;
                eventData.chatServerURL = data.chatServerURL;
                eventData.sid = data.sid;
                eventData.customer = data.customer;
                eventData.slideouttype = data.slideouttype;
                eventData.slideouturl = data.slideouturl;
                if (callback) {
                    // if (eventData.validAnswer && eventData.validAnswer.length > 0 && eventData.Message != "") {
                    //     var serializedObject = JSON.stringify(eventData);
                    //     localStorage.setItem("MISSING_OPTION", serializedObject);
                    // } else {
                    //     localStorage.setItem("MISSING_OPTION", null);
                    // }
                    callback(eventData);
                }
            }
        });
    };
    this.GetLaunchImage = function (tenantToken, botName, callback) {
        // Exchange message with VA
        eGain$.ajax({
            type: 'GET',
            url: _corsHost + "/egain/va/v1/assistant/launchImage/" + botName,
            dataType: "json",
            xhrFields: {
                withCredentials: true
            },
            headers: {
                'X-tenant-token': tenantToken,
                "Accept": "application/json"
            },
            success: function (data) {
                var result = {};
                result.launchImage = data.launchImage;
                if (callback)
                    callback(result);
            }
        });
    };
    this.ParseHtmlJson = function (data) {
        return parseHtmlJson(data);
    };
    var parseHtmlJson = function (data) {
        if (data && data.Message && (data.Message.indexOf("ORDER1") != -1 || data.Message.indexOf("DATE1") != -1)) {
            var pResult = data.Message.match(/<p>(.*?)<\/p>/g).map(function (val) {
                return val.replace(/<\/?p>/g, '');
            });
            var resultRemider = data.Message.replace(/<p>(.*?)<\/p>/g, "");
            pResult = angular.element("<div/>").html(pResult).text()
            pResult = jQuery.parseJSON(pResult);
            var template = '<div index="INDEX" uib-slide="">' +
                '<div style=""><img src="IMAGEURL" style="margin: auto" /></div>' +
                '<div class="carousel-caption">' +
                '<a href="#" va-carousel-select="SELECTEDOPTION"><span class="eg-carousel-higlight">ORDERNO</span> - Ordered on DATE ' +
                'Total price: <span class="eg-carousel-higlight">TOTAL</span></a>' +
                '</div>' +
                '</div>';
            var finalTemplate = '<div class="eg-carousel-custom"><div active="0" interval="0" uib-carousel="" >';
            for (var i = 0; i < pResult.length; i++) {
                var currentObject = pResult[i];
                var currentResponseValue = data.validAnswer != undefined ? data.validAnswer[i] != undefined ? data.validAnswer[i].text : (i + 1) : (i + 1);
                finalTemplate += template.replace(/IMAGEURL/g, currentObject["IMAGE" + (i + 1)]).replace(/INDEX/g, i).replace(/ORDERNO/g, currentObject["ORDER" + (i + 1)]).replace(/DATE/g, currentObject["DATE" + (i + 1)]).replace(/TOTAL/g, currentObject["TOTAL" + (i + 1)]).replace(/SELECTEDOPTION/g, currentResponseValue);
            }
            finalTemplate += "</div></div>";
            data.carousel = finalTemplate;
            data.Message = resultRemider;
            console.log("final template", finalTemplate);
            return data;
        }
        return data;
    };
    this.GetVATranscript = function (tenantToken, sessionId, isVAEscalated, callback) {
        var transcript = {};
        transcript.Messages = [];
        transcript.isVATranscript = true;
        transcript.isVAEscalated = isVAEscalated;
        // Get all exchanges is session
        eGain$.ajax({
            type: 'GET',
            url: _corsHost + "/egain/va/v1/exchange/" + sessionId + '/all',
            dataType: "json",
            xhrFields: {
                withCredentials: true
            },
            headers: {
                'X-tenant-token': tenantToken
            },
            success: function (response) {
                for (var k = 0; k < response.exchange.length; k++) {
                    var exchange = response.exchange[k];
                    if (exchange.response) {
                        if (exchange.response.indexOf('id="va-options-div"') != -1 || exchange.response.indexOf('id="va-text"') != -1) {
                            var optionMsgBody = "";
                            var wrapper = document.createElement("div");
                            wrapper.innerHTML = exchange.response;
        
                            for (var i = 0; i < wrapper.childElementCount; i++) {
                                if (wrapper.children[i].id == "va-options-div") {
                                    optionMsgBody = wrapper.children[i].outerHTML;
                                } else if (wrapper.children[i].outerHTML.indexOf('id="va-text"') != -1) {
                                    for (var j = 0; j < wrapper.children[i].children.length; j++) {
                                        if (wrapper.children[i].children[j].outerHTML.indexOf('id="va-text"') != -1) {
                                            optionMsgBody = optionMsgBody + (wrapper.children[i].children[j].outerHTML.indexOf('</p>') > -1 ? wrapper.children[i].children[j].outerHTML : wrapper.children[i].outerHTML);
                                        }
                                    }
                                }
                            }
                            exchange.response = exchange.response.replace(optionMsgBody, "");
                        }
                    }
                    if (exchange.ask) {
                        var messageObj = {};
                        messageObj.Body = exchange.ask;
                        messageObj.SenderName = '';
                        messageObj.SenderType = '';
                        messageObj.Timestamp = exchange.created;
                        messageObj.OffRecord = false;
                        transcript.Messages.push(messageObj);
                    }
                    if (exchange.response) {
                        var messageObj = {};
                        messageObj.SenderName = exchange.bot;
                        messageObj.SenderType = exchange.bot;
                        messageObj.Timestamp = exchange.created;
                        messageObj.OffRecord = false;
                        var mo = localStorage.getItem("MISSING_OPTION");
                        if (response.exchange.length - 1 == i && mo && mo != 'null') {
                            var msg = JSON.parse(localStorage.getItem("MISSING_OPTION"));
                            if (msg && msg.validAnswer) {
                                messageObj.validAnswers = msg.validAnswer;
                            }

                            var resp = parseHtmlJson(msg);
                            messageObj.Body = resp.Message.replace(/\s*\<\!\-\-((?!\-\-\>)[\s\S])*\-\-\>\s*/g, '').trim();
                            messageObj.Carousel = resp.carousel;
                        } else if (exchange.response.indexOf("ORDER1") != -1 || exchange.response.indexOf("DATE1") != -1) {
                            var msg = {};
                            msg.Message = exchange.response;
                            var resp = parseHtmlJson(msg);
                            messageObj.Body = resp.Message.replace(/\s*\<\!\-\-((?!\-\-\>)[\s\S])*\-\-\>\s*/g, '').trim();
                            messageObj.Carousel = resp.carousel;
                        } else {
                            messageObj.Body = exchange.response.replace(/\s*\<\!\-\-((?!\-\-\>)[\s\S])*\-\-\>\s*/g, '').trim();
                        }
                        transcript.Messages.push(messageObj);
                    }
                }
                if (callback)
                    callback(transcript);
            }
        });
    };
};
window.eGainVALibrary = eGainVALibrary;
/*! egain-angular-services 03-01-2019 */
app.factory("ChatService",["$http","$q","$rootScope",function(a,b,c){function d(a){var b="";return angular.isDefined(a)&&angular.forEach(a,function(a,c){b+=a+","}),b.substring(0,b.length-1)}var e={},f={"CHAT-100":"Entry Point ID is blank or missing","CHAT-101":"Invalid value for entry point","CHAT-102":"Entry Point ID provided does not exist","CHAT-103":"User not authorized to access the resource","CHAT-105":"Internal server error","CHAT-107":"CORS support is not enabled","CHAT-201":"Question Text is blank or missing","CHAT-202":"Answer Text is missing","CHAT-300":"Portal ID used is invalid","CHAT-301":"User type used is invalid","CHAT-302":"Casebase ID used is invalid","CHAT-303":"User is not authorized to access the resource","CHAT-304":"Portal ID does not exist","CHAT-305":"Casebase ID does not exist","CHAT-306":"Usertype provided does not match with existing usertype","CHAT-307":"Quick picks can only be created for Live releases","CHAT-308":"Cannot process request as SP authentication is enabled"};e.IsAgentAvailable=function(a,c){var d=b.defer();return g(a,d,c),d.promise},e.GetAgentCapacity=function(a,c){var d=b.defer();return h(a,d,c),d.promise},e.GetCurrentLoadOnQueue=function(a,c){var d=b.defer();return i(a,d,c),d.promise},e.GetWaitTime=function(a,c){var d=b.defer();return j(a,d,c),d.promise},e.GetStatusForQueueDepthAndAgentAvailability=function(a,c,d,e){var f=b.defer();return k(a,c,d,f,e),f.promise},e.EntryPointIsHealthy=function(a,c){var d=b.defer();return l(a,d,c),d.promise},e.SubmitSurvey=function(a,c,d){var e=b.defer();return m(a,c,e,d),e.promise},e.GetAttributesInfo=function(a,c,d,e){var f=b.defer();return n(a,c,d,f,e),f.promise},e.SearchPriorToEscalation=function(a,c,d,e,f,g,h,i,j,k,l,m){var n=b.defer();return o(a,c,d,e,f,g,n,h,i,j,k,l,m),n.promise},e.AvertEscalation=function(a,c,d){var e=b.defer();return q(a,c,d,e),e.promise},e.GetArticle=function(a,c,d,e,f,g,h,i){var j=b.defer();return p(a,c,d,e,f,g,h,i,j),j.promise},e.InitiateSession=function(a,c){var d=b.defer();return r(a,c,d),d.promise},e.AddQuickpick=function(a,c,d,e,f,g,h,i){var j=b.defer();return s(a,c,d,e,f,g,h,i,j),j.promise};var g=function(b,d,e){var f={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-100",f.errorObject.severity="LOW",d.resolve(f)):u(b)?a({method:"GET",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/agentAvailability/"+b,headers:{"X-egain-session":e}}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={},f.returnData=a.data,d.resolve(f)},function(a){switch(a.status){case-1:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-107",f.errorObject.severity="HIGH",d.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-105",f.errorObject.severity="HIGH",d.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-101",f.errorObject.severity="LOW",d.resolve(f))},h=function(b,d,e){var f={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-100",f.errorObject.severity="LOW",d.resolve(f)):u(b)?a({method:"GET",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/capacity/"+b,headers:{"X-egain-session":e}}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={};var b=eGainJsUtilities.xmlToJson((new DOMParser).parseFromString(a.data,"text/xml"));f.returnData.agentCapacity=b.availableSlots["ns2:count"]["#text"],d.resolve(f)},function(a){switch(a.status){case-1:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-107",f.errorObject.severity="HIGH",d.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-105",f.errorObject.severity="HIGH",d.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-101",f.errorObject.severity="LOW",d.resolve(f))},i=function(b,d,e){var f={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-100",f.errorObject.severity="LOW",d.resolve(f)):u(b)?a({method:"GET",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/liveSessionStatus/"+b,headers:{"X-egain-session":e}}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={},f.returnData.queueDepth=a.data.queueDepth,d.resolve(f)},function(a){switch(a.status){case-1:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-107",f.errorObject.severity="HIGH",d.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-105",f.errorObject.severity="HIGH",d.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-101",f.errorObject.severity="LOW",d.resolve(f))},j=function(b,d,e){var f={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-100",f.errorObject.severity="LOW",d.resolve(f)):u(b)?a({method:"GET",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/liveSessionStatus/"+b,headers:{"X-egain-session":e}}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={},f.returnData.waitTime=a.data.waitTime,d.resolve(f)},function(a){switch(a.status){case-1:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-107",f.errorObject.severity="HIGH",d.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-105",f.errorObject.severity="HIGH",d.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-101",f.errorObject.severity="LOW",d.resolve(f))},k=function(b,d,e,f,g){var h={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};if(t(b))return h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-100",h.errorObject.severity="LOW",f.resolve(h);if(!u(b))return h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-101",h.errorObject.severity="LOW",f.resolve(h);var i="";return d&&(i="?videoChat=1",null!==e&&"number"==typeof e&&(i+="&avmode="+e)),a({method:"GET",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/checkEligibility/"+b+i,headers:{"X-egain-session":g}}).then(function(a){h.isErrorPresent=!1,h.returnData={},h.errorObject={};var b=eGainJsUtilities.xmlToJson((new DOMParser).parseFromString(a.data,"text/xml")),c=b.checkEligibility["@attributes"].responseType;h.returnData.status="0"===c?"IS-OK":"1"===c?"AGENT-NOT-AVAILABLE":"2"===c?"MAX-QUEUE-DEPTH-EXCEEDED":"OTHER",h.returnData.responseCode=c,f.resolve(h)},function(a){switch(a.status){case-1:h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-107",h.errorObject.severity="HIGH",f.resolve(h);break;case 500:default:h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-105",h.errorObject.severity="HIGH",f.resolve(h)}})},l=function(b,d,e){var f={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-100",f.errorObject.severity="LOW",d.resolve(f)):u(b)?a({method:"GET",headers:{"Content-Type":"application/json","X-egain-session":e},url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/chatAllowed/"+b}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={};var b=eGainJsUtilities.xmlToJson((new DOMParser).parseFromString(a.data,"text/xml"));b.chatAllowed["@attributes"].allowed?f.returnData.isHealthy=!0:(f.returnData.isHealthy=!1,f.returnData.reason=b.chatAllowed["@attributes"].reason),d.resolve(f)},function(a){switch(a.status){case-1:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-107",f.errorObject.severity="HIGH",d.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-105",f.errorObject.severity="HIGH",d.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="CHAT-101",f.errorObject.severity="LOW",d.resolve(f))},m=function(b,d,e,f){var g={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}},h='<egainSurvey sid="'+b+'" xmlns="http://bindings.egain.com/chat">';return angular.forEach(d,function(a){if(!angular.isDefined(a.Question))return g.isErrorPresent=!0,g.errorObject.errorCode="CHAT-201",g.errorObject.severity="LOW",e.resolve(g);if(!angular.isDefined(a.Answer))return g.isErrorPresent=!0,g.errorObject.errorCode="CHAT-202",g.errorObject.severity="LOW",e.resolve(g);var b=w(a.Question);h=h+"<survey><question>"+b+"</question><answer>"+("string"==typeof a.Answer?"<![CDATA["+w(a.Answer)+"]]>":a.Answer)+"</answer></survey>"}),h+="</egainSurvey>",a({method:"POST",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/survey",headers:{"Content-Type":"text/XML","X-egain-session":f},data:h}).then(function(a){g.isErrorPresent=!1,g.returnData={},g.errorObject={},g.returnData=a.data,e.resolve(g)},function(a){switch(a.status){case-1:g.isErrorPresent=!0,g.errorObject.errorCode="CHAT-107",g.errorObject.severity="HIGH",e.resolve(g);break;case 500:default:g.isErrorPresent=!0,g.errorObject.errorCode="CHAT-105",g.errorObject.severity="HIGH",e.resolve(g)}})},n=function(b,d,e,f,g){var h={isErrorPresent:!1,returnData:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}},i="<attributesInfo languageCode='";i+=d||"en",i+="' countryCode='",i+=e||"US",i+="' xmlns = 'http://bindings.egain.com/chat' >";for(var j=0;j<b.length;j++){var k=b[j];i+="<attributeInfo>",i+="<attributeName>",i+=k.attributeName,i+="</attributeName>",i+="<objectName>",i+=k.objectName,i+="</objectName>",i+="</attributeInfo>"}return i+="</attributesInfo>",a({method:"POST",url:decodeURIComponent(c.apiPath)+"/egain/chat/entrypoint/attributesInfo",headers:{"Content-Type":"text/XML","X-egain-session":g},data:i}).then(function(a){function b(a,b,c){var d=a.getElementsByTagName("ns2:"+b)[0];return d&&null!=d||(d=a.getElementsByTagName(b)[0]),d&&null!=d||c&&(d=a.getElementsByTagNameNS(c,b)[0]),d}h.isErrorPresent=!1,h.returnData={},h.errorObject={};var c={};try{for(var d=new DOMParser,e=d.parseFromString(a.data,"text/xml"),g=e.getElementsByTagNameNS("*","attributeInfo"),i=0;i<g.length;i++){var j=g[i],k=b(j,"attributeName").textContent,l=b(j,"objectName").textContent,m=b(j,"internalValue").textContent,n=b(j,"defaultValue").textContent,o=b(j,"displayValue").textContent,p=[],q=m.split(","),r=o.split(",");if(q.length==r.length)for(var s=0;s<q.length;s++)p.push({internalValue:q[s],displayValue:r[s]});c[l+"::"+k]={attributeName:k,objectName:l,attributeOptions:p,defaultValue:n}}}catch(a){}h.returnData=c,f.resolve(h)},function(a){switch(a.status){case-1:h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-107",h.errorObject.severity="HIGH",f.resolve(h);break;case 500:default:h.isErrorPresent=!0,h.errorObject.errorCode="CHAT-105",h.errorObject.severity="HIGH",f.resolve(h)}})},o=function(b,e,f,g,h,i,j,k,l,m,n,o,p){var q="";null!==n&&(q=d(n));var r={usertype:"customer",portalId:b,entryPointId:g,subject:h,description:i,name:k,emailAddress:l,phone:m,maxResults:p,$attribute:q,$pagesize:o,$lang:e},s={isErrorPresent:!1,returnData:{},pagingInfo:{},errorObject:{serviceType:"ChatService",serviceName:"ChatService"}};return t(b)?(s.isErrorPresent=!0,s.errorObject.errorCode="100",s.errorObject.severity="LOW",j.resolve(s)):u(b)?t(h)?(s.isErrorPresent=!0,s.errorObject.errorCode="220",s.errorObject.severity="LOW",j.resolve(s)):t(i)?(s.isErrorPresent=!0,s.errorObject.errorCode="221",s.errorObject.severity="LOW",j.resolve(s)):a({method:"GET",url:decodeURIComponent(c.ssApiPath)+"/ws/v11/ss/escalate/search",headers:{Accept:"application/json","Content-Type":"application/json","X-egain-session":f},params:r}).then(function(a){s.isErrorPresent=!1,s.returnData={},s.pagingInfo={},s.errorObject={},s.xEgainSession=a.headers("X-egain-session"),s.returnData=a.data.article,s.pagingInfo=a.data.pagingInfo,j.resolve(s)},function(a){switch(a.status){case 401:s.isErrorPresent=!0,s.errorObject.errorCode="103",s.errorObject.severity="HIGH",j.resolve(s);break;case 404:s.isErrorPresent=!0,a.data.callInfo.message.indexOf("The portalId "+a.data.callInfo.portalId+" does not exist")>-1&&(s.errorObject.errorCode="102",s.errorObject.severity="LOW"),j.resolve(s);break;case 412:s.isErrorPresent=!0,s.errorObject.errorCode="217",s.errorObject.severity="HIGH",j.resolve(s);break;case 500:default:s.isErrorPresent=!0,s.errorObject.errorCode=a.status,s.errorObject.errorMessage=a.statusText,j.resolve(s)}}):(s.isErrorPresent=!0,s.errorObject.errorCode="106",s.errorObject.severity="LOW",j.resolve(s))},p=function(b,e,g,h,i,j,k,l,m){var n=d(j),o={isErrorPresent:!1,xEgainSession:"",returnData:{},pagingInfo:{},errorObject:{serviceType:"SelfService",serviceName:"ArticleService"}};if(t(b))return o.isErrorPresent=!0,o.errorObject.errorCode="100",o.errorObject.severity="LOW",o.errorObject.errorMessage=f[errorMessageLanguage][100],m.resolve(o);if(!u(b))return o.isErrorPresent=!0,o.errorObject.errorCode="106",o.errorObject.severity="LOW",o.errorObject.errorMessage=f[errorMessageLanguage][106],m.resolve(o);if(!v(g))return o.isErrorPresent=!0,o.errorObject.errorCode="101",o.errorObject.severity="LOW",o.errorObject.errorMessage=f[errorMessageLanguage][101],m.resolve(o);if(!x(i))return o.isErrorPresent=!0,o.errorObject.errorCode="206",o.errorObject.severity="LOW",o.errorObject.errorMessage=f[errorMessageLanguage][206],m.resolve(o);var p={portalId:b,usertype:g,$attribute:n,$lang:e};return k&&(p.q=k),l&&(p.context=l),a({method:"GET",url:decodeURIComponent(c.ssApiPath)+"/ws/v11/ss/article/"+i,headers:{Accept:"application/json","Content-Type":"application/json","X-egain-session":h},params:p}).then(function(a){o.isErrorPresent=!1,o.returnData={},o.errorObject={},o.returnData=a.data.article[0],o.returnData.articleEditions=[],angular.isDefined(a.data.article[0].availableEditions)&&(o.returnData.articleEditions=a.data.article[0].availableEditions),o.xEgainSession=a.headers("X-egain-session"),m.resolve(o)},function(a){switch(a.status){case-1:o.isErrorPresent=!0,o.errorObject.errorCode="107",o.errorObject.severity="HIGH",m.resolve(o);break;case 401:if(o.isErrorPresent=!0,!a.data.deploymentInfo.spAuthenticationEnabled){o.errorObject.errorCode="103",o.errorObject.severity="HIGH",m.resolve(o);break}SelfServiceAuthenticationService.RedirectToIDPServer(a,m);case 403:o.isErrorPresent=!0,a.data.callInfo.message.indexOf("Requested article '"+a.data.callInfo.resourceId+"' is not available")>-1?(o.errorObject.errorCode="201",o.errorObject.severity="LOW"):(o.errorObject.errorCode="103",o.errorObject.severity="HIGH"),m.resolve(o);break;case 404:o.isErrorPresent=!0,a.data.callInfo.message.indexOf("Requested article '"+a.data.callInfo.resourceId+"' is not available")>-1?(o.errorObject.errorCode="201",o.errorObject.severity="LOW"):a.data.callInfo.message.indexOf("The portalId "+a.data.callInfo.portalId+" does not exist")>-1&&(o.errorObject.errorCode="102",o.errorObject.severity="LOW"),m.resolve(o);break;case 500:default:o.isErrorPresent=!0,o.errorObject.errorCode="105",o.errorObject.severity="HIGH",m.resolve(o)}})},q=function(b,d,e,f){var g={isErrorPresent:!1,xEgainSession:"",returnData:{},pagingInfo:{},errorObject:{serviceType:"SelfService",serviceName:"EscalationService"}};return t(b)?(g.isErrorPresent=!0,g.errorObject.errorCode="100",g.errorObject.severity="LOW",f.resolve(g)):u(b)?a({method:"GET",url:decodeURIComponent(c.ssApiPath)+"/ws/v11/ss/escalate/avert",headers:{Accept:"application/json","Content-Type":"application/json","X-egain-session":e},params:{portalId:b,entryPointId:d,usertype:"customer",$lang:c.locale}}).then(function(a){g.isErrorPresent=!1,g.returnData={},g.errorObject={},g.xEgainSession=a.headers("X-egain-session"),g.returnData=a.data,f.resolve(g)},function(a){switch(a.status){case 401:g.isErrorPresent=!0,g.errorObject.errorCode="103",g.errorObject.severity="HIGH",f.resolve(g);break;case 404:g.isErrorPresent=!0,a.data.callInfo.message.indexOf("The portalId "+a.data.callInfo.portalId+" does not exist")>-1&&(g.errorObject.errorCode="102",g.errorObject.severity="LOW"),f.resolve(g);break;case 412:g.isErrorPresent=!0,g.errorObject.errorCode="217",g.errorObject.severity="HIGH",f.resolve(g);break;case 500:default:g.isErrorPresent=!0,g.errorObject.errorCode=a.status,g.errorObject.errorMessage=a.statusText,f.resolve(g)}}):(g.isErrorPresent=!0,g.errorObject.errorCode="106",g.errorObject.severity="LOW",f.resolve(g))},r=function(b,d,e){var f={isErrorPresent:!1,xEgainSession:"",returnData:{},pagingInfo:{},errorObject:{serviceType:"SelfService",serviceName:"AuthenticationService"}};return t(b)?(f.isErrorPresent=!0,f.errorObject.errorCode="100",f.errorObject.severity="LOW",e.resolve(f)):u(b)?a({method:"POST",url:decodeURIComponent(c.ssApiPath)+"/ws/v15/ss/portal/"+b+"/authentication/anonymous",headers:{Accept:"application/json","Content-Type":"application/json","Accept-Language":eGainJsUtilities.GetAcceptLanguageHeader(c.locale)}}).then(function(a){f.isErrorPresent=!1,f.returnData={},f.errorObject={},f.returnData=!0,f.xEgainSession=a.headers("X-egain-session"),e.resolve(f)},function(a){switch(a.status){case 401:f.isErrorPresent=!0,f.errorObject.errorCode="103",f.errorObject.severity="HIGH",e.resolve(f);break;case 404:f.isErrorPresent=!0,f.errorObject.errorCode="102",f.errorObject.severity="LOW",e.resolve(f);break;case 412:f.isErrorPresent=!0,f.errorObject.errorCode="217",f.errorObject.severity="HIGH",e.resolve(f);break;case 500:default:f.isErrorPresent=!0,f.errorObject.errorCode=a.status,f.errorObject.errorMessage=a.statusText,e.resolve(f)}}):(f.isErrorPresent=!0,f.errorObject.errorCode="106",f.errorObject.severity="LOW",e.resolve(f))},s=function(b,d,e,g,h,i,j,k,l){var m={isErrorPresent:!1,returnData:{},pagingInfo:{},errorObject:{serviceType:"GuidedHelp",serviceName:"ChatService"}};if(t(d))return m.isErrorPresent=!0,m.errorObject.errorCode="CHAT-300",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-300"],l.resolve(m);if(!u(d))return m.isErrorPresent=!0,m.errorObject.errorCode="CHAT-300",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-300"],l.resolve(m);if(!v(e))return m.isErrorPresent=!0,m.errorObject.errorCode="CHAT-301",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-301"],l.resolve(m);if(t(h))return m.isErrorPresent=!0,m.errorObject.errorCode="CHAT-302",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-302"],l.resolve(m);if(!u(h))return m.isErrorPresent=!0,m.errorObject.errorCode="CHAT-302",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-302"],l.resolve(m);var n={portalId:d,usertype:e,$lang:c.locale};k&&(n.linkToActivity="yes");var o={casebaseId:h};return i&&(o.name=i),j&&(o.comment=j),a({method:"POST",url:decodeURIComponent(b)+"/ws/v11/gh/quickpick",headers:{Accept:"application/json","Content-Type":"application/json","X-egain-session":g,"X-egain-activity-id":k},params:n,data:eGainJsUtilities.PostParams(o)}).then(function(a){m.xEgainSession=a.headers("X-egain-session"),m.isErrorPresent=!1,m.errorObject={},m.returnData=a.data.quickpick,l.resolve(m)},function(a){switch(a.status){case 401:m.isErrorPresent=!0,eGainJsUtilities.isRedirectToSSOServer(a)?(m.errorObject.errorCode="CHAT-308",m.errorObject.severity="HIGH",m.errorObject.errorMessage=f["CHAT-308"],l.resolve(m)):(m.errorObject.errorCode="CHAT-303",m.errorObject.severity="HIGH",m.errorObject.errorMessage=f["CHAT-303"],l.resolve(m));break;case 404:m.isErrorPresent=!0,a.data.callInfo.message.indexOf("The portalId "+a.data.callInfo.portalId+" does not exist")>-1?(m.errorObject.errorCode="CHAT-304",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-304"]):a.data.callInfo.message.indexOf("Casebase")>-1&&a.data.callInfo.message.indexOf("does not exist")>-1&&(m.errorObject.errorCode="CHAT-305",m.errorObject.severity="LOW",m.errorObject.errorMessage=f["CHAT-305"]),l.resolve(m);break;case 412:m.isErrorPresent=!0,a.data.callInfo.message.indexOf("The user type does not match the existing usertype")>-1?(m.errorObject.errorCode="CHAT-306",m.errorObject.severity="HIGH",m.errorObject.errorMessage=f["CHAT-306"]):a.data.callInfo.message.indexOf("Quick picks may only be created for Live releases")>-1&&(m.errorObject.errorCode="CHAT-307",m.errorObject.severity="HIGH",m.errorObject.errorMessage=f["CHAT-307"]),l.resolve(m);break;case 500:default:m.isErrorPresent=!0,m.errorObject.errorCode=a.status,m.errorObject.errorMessage=a.statusText,l.resolve(m)}})},t=function(a){return void 0===a||""===a},u=function(a){return!isNaN(a)&&!(!isNaN(a)&&a<0)},v=function(a){return"customer"===a||"agent"===a},w=function(a){if(!a)return"";if(a.constructor!=Array)a=a.replace(/\&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");else for(var b=0;b<a.length;b++)a[b]=a[b].replace(/\&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return a},x=function(a){var b=new RegExp("[0-9A-Z]{0,4}-[0-9]{4,}"),c=new RegExp("[0-9]{15}");return b.test(a)||c.test(a)};return e}]),function(a,b){a.GetCookie=function(a){for(var b=a+"=",c=document.cookie.split(";"),d=0;d<c.length;d++){for(var e=c[d];" "===e.charAt(0);)e=e.substring(1);if(0===e.indexOf(b))return e.substring(b.length,e.length)}return""},a.SetCookie=function(a,b){document.cookie=a+"="+b},a.PostParams=function(a){var b=[];for(var c in a)b.push(encodeURIComponent(c)+"="+encodeURIComponent(a[c]));return b.join("&")},a.xmlToJson=function(a){var b={};if(1==a.nodeType){if(a.attributes.length>0){b["@attributes"]={};for(var c=0;c<a.attributes.length;c++){var d=a.attributes.item(c);b["@attributes"][d.nodeName]=d.nodeValue}}}else 3==a.nodeType&&(b=a.nodeValue);if(a.hasChildNodes())for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes.item(e),g=f.nodeName;if(void 0===b[g])b[g]=this.xmlToJson(f);else{if(void 0===b[g].push){var h=b[g];b[g]=[],b[g].push(h)}b[g].push(this.xmlToJson(f))}}return b};var c={"en-US":"en-us","fr-FR":"fr-fr","es-ES":"es-es","it-IT":"it-it","de-DE":"de-de","nl-NL":"nl-nl","pt-BR":"pt-br","pt-PT":"pt-pt","da-DA":"da-dk","ru-RU":"ru-ru","fr-CA":"fr-ca","zh-CN":"zh-cn","ja-JA":"ja-jp","ko-KO":"ko-kr","sv-SE":"sv-se"};a.GetAcceptLanguageHeader=function(a){var b="en-us";return void 0!==c&&null!=c&&void 0!==c[a]&&null!=c[a]&&(b=c[a]),b},a.isRedirectToSSOServer=function(a){return!!(a.data.providers&&a.data.providers.provider&&a.data.providers.provider.length>0&&a.data.providers.provider[0].idp.idpLoginURL)||!(!a.data.deploymentInfo||!(a.data.deploymentInfo.idpURL||a.data.deploymentInfo.idpLoginURL||a.data.deploymentInfo.idpLogoutURL)||angular.equals("true",window.sessionStorage.getItem("ngStorage-isLocalLogin")))},a.GetAPIPath=function(){return window.sessionStorage.getItem("apiPath")},a.GetCurrentLocale=function(){return window.sessionStorage.getItem("locale")},a.getLogoutDetailsForSSOIDPServer=function(a){var b={action:null,samlRequest:null,relayState:null,success:!1};return a&&a.data&&a.data.idpLogoutUrl&&a.data.samlRequest&&(b.action=a.data.idpLogoutUrl,b.samlRequest=a.data.samlRequest,b.success=!0),b},a.getLogoutDetailsForSSOIDPServerForKnowledgePortal=function(a){var b,c={action:null,samlRequest:null,relayState:null,success:!1};if(a&&a.data&&(b=a.data.deploymentInfo)){var d=b.idpURL?b.idpURL:b.idpLogoutURL,e=b.samlToken?b.samlToken:b.samlRequest;d&&e&&(c.action=d,c.samlRequest=e,c.success=!0)}return c}}(window.eGainJsUtilities=window.eGainJsUtilities||{});
app.controller("AlternateContactOptionsController",["$scope","ConfigFactory","ApplicationFactory",function($scope,ConfigFactory,ApplicationFactory){$scope.alternateContactOptions=ConfigFactory.GetChatConfigurations().CallBackParams;$scope.page.ready=true;$scope.firstOptionBlurred=false;for(var i=0;i<$scope.alternateContactOptions.length;i++){if(i===0){$scope.alternateContactOptions[i]["ariaLabelledByWithHeading"]="aco-heading option-"+i}}}]);app.controller("AlternateEngagementOptionsController",["$scope","$translate","$timeout","ConfigFactory",function($scope,$translate,$timeout,ConfigFactory){$scope.alternateEngagementOptions=ConfigFactory.GetChatConfigurations().AlternateEngmtParams;$scope.page.ready=true;$scope.altEngMsg="";var showAlternateEngagementOptions,hideAlternateEngagementOptions;$translate(["APP.EG_ALTERNATE_ENGAGEMENT_OPTIONS_SHOW","APP.EG_ALTERNATE_ENGAGEMENT_OPTIONS_HIDE","APP.EG_ALTERNATE_ENGAGEMENT_MSG"]).then(function(translations){showAlternateEngagementOptions=translations["APP.EG_ALTERNATE_ENGAGEMENT_OPTIONS_SHOW"];hideAlternateEngagementOptions=translations["APP.EG_ALTERNATE_ENGAGEMENT_OPTIONS_HIDE"];$scope.title=hideAlternateEngagementOptions;$timeout(function(){$scope.altEngMsg=translations["APP.EG_ALTERNATE_ENGAGEMENT_MSG"]},100)});$scope.$watch("hideDetails",function(newValue,oldValue){if(newValue===true){$scope.page.showAlternateEngagementCollapsed=true;$timeout(function(){$scope.page.scrollToBottom();$scope.title=showAlternateEngagementOptions},400)}else if(newValue===false){$scope.page.showAlternateEngagementCollapsed=false;if(typeof $scope.page.scrollToBottom!=="undefined"){$timeout(function(){$scope.page.scrollToBottom();$scope.title=hideAlternateEngagementOptions},500)}}})}]);app.controller("ArticleContentController",["$scope","$stateParams","$sce","$rootScope","ChatService","ConfigFactory",function($scope,$stateParams,$sce,$rootScope,ChatService,ConfigFactory){$scope.page.progressbar.start();$scope.articleHasEditions=false;$scope.ghArticle=false;$scope.articleAttributes=["name,content,contentText"];$scope.articleId=$stateParams.articleId;var portalLanguage=$stateParams.portalLanguage?$stateParams.portalLanguage:applicationDefaults.eGainChatDefaultLocale;var getElementsByClassName=function(node,classname){var a=[];var re=new RegExp("(^| )"+classname+"( |$)");var els=node.getElementsByTagName("*");for(var i=0,j=els.length;i<j;i++)if(re.test(els[i].className))a.push(els[i]);return a};var chatConfig=ConfigFactory.GetChatConfigurations();var portalId=chatConfig.DeflectionPortalId?chatConfig.DeflectionPortalId:"";var xEgainSession=$scope.deflection.sessionId?$scope.deflection.sessionId:"";$scope.page.searchTerm=$stateParams.searchTerm;ChatService.GetArticle(portalId,portalLanguage,"customer",xEgainSession,$scope.articleId,$scope.articleAttributes,"","article_view_suggested").then(function(response){if(response.isErrorPresent){}else{if(angular.equals(response.returnData.articleType,1)){$scope.article=response.returnData;$scope.ghArticle=true;$scope.page.ready=true}else{$scope.article=response.returnData;$scope.highlightSearchTerms=false;if($scope.highlightSearchTerms&&$scope.article.textMetadata){var highlightMetadata=$scope.article.textMetadata.highlightMetadata;for(var i=0;i<highlightMetadata.length;i++){if(angular.equals(highlightMetadata[i].attributeName,"content")&&highlightMetadata[i].characterRange.length>0){var snippetCRs=highlightMetadata[i].characterRange}}if(angular.isDefined(snippetCRs)){$scope.article.highlightRange=snippetCRs}if($scope.highlightSearchTerms){$scope.article.content=highlightArticle($scope.article.content,$scope.article.highlightRange)}}var articleContentXml=angular.element("<div>"+$scope.article.content+"</div>");angular.forEach(getElementsByClassName(articleContentXml[0],"eGainArticleLink"),function(link){if(link.href){link.setAttribute("id",link.getAttribute("articleId"))}});$scope.article.content=$sce.trustAsHtml(articleContentXml[0].innerHTML);if(angular.isDefined(response.returnData.articleEditions.edition)&&response.returnData.articleEditions.edition.length>1){$scope.currentEditionId=response.returnData.articleEditions.edition[0].id;$scope.articleHasEditions=true}else{$scope.articleHasEditions=false}var oneTagEventInfo={EventName:"ChatKBArticleShow",ArticleId:$scope.article.id,ArticleName:$scope.article.name,Language:$rootScope.locale};eGainOneTagUtil.pushChatEvent("aac",oneTagEventInfo);$scope.page.ready=true}$scope.deflection.article=$scope.article;$scope.page.backButtonEnabled=true;$scope.page.progressbar.complete()}});var highlightArticle=function(origText,characterRanges){if(!angular.isDefined(characterRanges)||!angular.isDefined(characterRanges.length)){return origText}else{var newSnippet=[];var currentCRIndex=0;for(var i=0;i<origText.length;i++){var CR=characterRanges[currentCRIndex];if(angular.isDefined(CR)){if(i===CR.firstPos)newSnippet.push('<span class="egain-highlighted-content">');newSnippet.push(origText.charAt(i));if(i===CR.lastPos-1){newSnippet.push("</span>");if(characterRanges.length>currentCRIndex+1){currentCRIndex++}}}}var highlightedText=newSnippet.join("");return highlightedText}}}]);app.controller("ArticleToolbarController",["$scope","$state","ChatService","ConnectionFactory",function($scope,$state,ChatService,ConnectionFactory){$scope.$watch("page.ready",function(newValue,oldValue){if(newValue){$scope.article=$scope.deflection.article}})}]);app.controller("AttachmentReviewController",["$scope","$uibModalInstance","AttachmentFactory",function($scope,$uibModalInstance,AttachmentFactory){$scope.$on("application_service_validated_dropped_attachments",function(){$uibModalInstance.dismiss()});$scope.sendFiles=function(){$scope.submitted=true;var validFiles=[];angular.forEach($scope.droppedAttachmentQueue,function(file){if(!file.invalidFile){validFiles.push(file)}});AttachmentFactory.SendCustomerAttachmentNotification(validFiles);$uibModalInstance.dismiss()};$scope.closeAttachmentDialog=function(){$scope.attachmentCnt.valid=0;$uibModalInstance.dismiss()};$scope.cleanUpFileList=function(){$scope.droppedAttachmentQueue=[];$uibModalInstance.dismiss()};$scope.skipFileUploadForIndex=function(fileIndex,attachment){if(attachment.invalidFile==false){$scope.attachmentCnt.valid--}$scope.droppedAttachmentQueue.splice(fileIndex,1)};$scope.getAttachmentSizeUnit=function(bytes){return AttachmentFactory.GetAttachmentSizeUnit(bytes)}}]);app.controller("AttachmentController",["$scope","$translate","$filter","$uibModalInstance","AttachmentFactory",function($scope,$translate,$filter,$uibModalInstance,AttachmentFactory){$scope.selectedAttachmentQueue=[];$scope.attachmentCnt={valid:0,invalid:0};$scope.$on("application_service_validated_selected_attachments",function(evt,tempAttachments){$scope.selectedAttachmentQueue=$scope.selectedAttachmentQueue.concat(tempAttachments.attachmentQueue);$scope.attachmentCnt.valid+=tempAttachments.validCount;angular.element(document.getElementById("filesToUpload"))[0].value=""});$scope.$on("application_service_validated_dropped_attachments",function(evt,tempAttachments){angular.forEach(tempAttachments.attachmentQueue,function(file){if(file.invalidFile){$scope.attachmentCnt.valid=0;$uibModalInstance.dismiss()}})});$scope.attachFile=function(element){if(element&&element.files&&element.files.length===0){return}if($scope.selectedAttachmentQueue[$scope.selectedAttachmentQueue.length-1]&&$scope.selectedAttachmentQueue[$scope.selectedAttachmentQueue.length-1].maxNumberValidationFailed){$scope.selectedAttachmentQueue.splice($scope.selectedAttachmentQueue.length-1,1)}AttachmentFactory.ValidateAttachmentFiles(element.files,false,$scope.selectedAttachmentQueue.length)};$scope.sendFiles=function(){removeErrorMsgs();$scope.submitted=true;var validFiles=[];angular.forEach($scope.selectedAttachmentQueue,function(file){if(!file.invalidFile){validFiles.push(file)}});AttachmentFactory.SendCustomerAttachmentNotification(validFiles)};$scope.$on("application_service_attachment_notification_sent_event",function(evt,data){var $translateLocale=$filter("translate");if(data.status==="failed"){$scope.$apply(function(){$scope.error=true;if(data.message==="attachmentSettingDisabledForCustomer"){$scope.errorMsg=$translateLocale("APP.EG_QUEUE_ATTACHMENT_DISABLED_RESPONSE")}else{$scope.errorMsg=$translateLocale("APP.EG_SEND_ATTACHMENT_NOTIF_FAILED")}})}else{if($uibModalInstance.opened){$uibModalInstance.dismiss()}$scope.error=false}});$scope.closeAttachmentDialog=function(){$scope.attachmentCnt.valid=0;$uibModalInstance.dismiss()};$scope.cleanUpFileList=function(){$scope.selectedAttachmentQueue=[];$scope.closeAttachmentDialog()};$scope.skipFileUploadForIndex=function(fileIndex,attachment){if(attachment.invalidFile==false){$scope.attachmentCnt.valid--}$scope.selectedAttachmentQueue.splice(fileIndex,1)};$scope.getAttachmentSizeUnit=function(bytes){return AttachmentFactory.GetAttachmentSizeUnit(bytes)};var removeErrorMsgs=function(){$scope.selectedAttachmentQueue=$scope.selectedAttachmentQueue.filter(function(attachment){if(attachment&&attachment.invalidFile){return false}return true});$scope.errorMsg="";$scope.submitted=false};$scope.fileInputClicked=function(element){removeErrorMsgs()}}]);app.controller("ChatAttachController",["$scope","$window","ConnectionFactory","ApplicationFactory",function($scope,$window,ConnectionFactory,ApplicationFactory){ConnectionFactory.AttachToChat()}]);app.controller("ChatInitializeController",["$scope","$state","ApplicationFactory","ChatService",function($scope,$state,ApplicationFactory,ChatService){var entryPoint=ApplicationFactory.GetEntryPointId();var customLaunchButtonClicked="true"===ApplicationFactory.GetUrlParameter("chatLaunched")?true:false;var launchButtonSkipped=ApplicationFactory.IsDocked()===false||customLaunchButtonClicked;var chatOffHours=false,chatUnavailableCondition="";var initializeChat=function(){$scope.$on("application_service_chat_initialized_success_event",function(evt,response){onChatInitialized(response)});var isAvailabilityInfoRequired=false;ApplicationFactory.Chat(entryPoint,isAvailabilityInfoRequired)};var onChatInitialized=function(response){if(response.isOneTagOff){if(chatOffHours===false){proceedToChat(response)}else{$state.go("chat.chat-unavailable",{condition:chatUnavailableCondition})}}else if(response.oneTagAId&&response.oneTagServerDomainName){initializeOnetag(response);if(chatOffHours===false){proceedToChat(response)}else{$state.go("chat.chat-unavailable",{condition:chatUnavailableCondition})}}else{if(initializeChat){$state.go("chat.error",{errorCode:"ONETAG_FAILURE"})}else{$scope.page.OnetagFailure=true}}};var initializeOnetag=function(response){eGainOneTagUtil.disableTracker();eGainOneTagUtil.loadOneTag(response)};var proceedToChat=function(response){$state.go("chat.pre-chat")};var video="1"===ApplicationFactory.GetUrlParameter("video");var avmode=ApplicationFactory.GetUrlParameter("avmode");avmode=avmode?parseInt(avmode):null;if(ApplicationFactory.IsIEorEdge()&&video){$state.go("chat.error",{errorCode:"EG_VIDEO_CHAT_SUPPORT_ERROR"})}else{ChatService.GetStatusForQueueDepthAndAgentAvailability(entryPoint,video,avmode).then(function(response){if(true===response.isErrorPresent){$state.go("chat.error")}if(response.returnData&&response.returnData.responseCode){var isDocked=ApplicationFactory.IsDocked();var available=response.returnData.responseCode;switch(available){case"0":initializeChat();break;case"1":chatOffHours=true;chatUnavailableCondition="OFF_HOURS";initializeChat();break;case"2":chatOffHours=true;chatUnavailableCondition="MAX_QUEUE_DEPTH_EXCEEDED";initializeChat();break;default:ApplicationFactory.LoadCustomMessagingProperties();HooksFactory.integOffHoursMessage(isDocked,available);break}}else{$state.go("chat.error")}})}}]);app.controller("ChatUnavailableMessageController",["$scope","$timeout","ApplicationFactory",function($scope,$timeout,ApplicationFactory){$scope.page.ready=true;$scope.chatUnavailableMsg="";ApplicationFactory.Translate("APP.EG_CHAT_UNAVAILABLE").then(function(result){$timeout(function(){$scope.chatUnavailableMsg=result},100)})}]);app.controller("CobrowseController",["$scope","$window","ApplicationFactory","ConnectionFactory","SessionFactory",function($scope,$window,ApplicationFactory,ConnectionFactory,SessionFactory){$scope.page.ready=true;$scope.cobrowseInvites=SessionFactory.GetCobrowseSessionState().cobrowseInvites;$scope.page.eGainDockedChatCb={};$scope.page.eGainDockedChatCb.openCobrowseWindow=function(url,cbWndName,cbSessionId,locale){if($scope.cobrowseInvites[cbSessionId]){if(angular.equals("OPENED",$scope.cobrowseInvites[cbSessionId]["status"])){ApplicationFactory.Translate("APP.EG_COBROWSE_SESSION_OPENED").then(function(result){alert(result)})}else if(angular.equals("CLOSED",$scope.cobrowseInvites[cbSessionId]["status"])){ApplicationFactory.Translate("APP.EG_COBROWSE_SESSION_TERMINATED").then(function(result){alert(result)})}else if(angular.equals("EXPIRED",$scope.cobrowseInvites[cbSessionId]["status"])){ApplicationFactory.Translate("APP.EG_COBROWSE_SESSION_EXPIRED").then(function(result){alert(result)})}else{var sid=ConnectionFactory.GetConnection().sessionID;var egActId="";if(sid){egActId=sid.substr(0,sid.indexOf("_"))}if(url&&url.length>0){var delimiter=url.indexOf("?")>0?"&":"?";url=url+delimiter+"cbLocale="+locale}var isDocked=ApplicationFactory.IsDocked();var isPoppedOut=ApplicationFactory.isPoppedOut();var openCobrowseURLInParentWindow=true===isDocked||true===isPoppedOut&&$window.opener&&!$window.opener.closed;if(true===openCobrowseURLInParentWindow){if(url&&url.length>0){ApplicationFactory.PersistToStorage("egActId",egActId);ApplicationFactory.PersistToStorage("cbAutoSessionId",cbSessionId)}else{var postMessageDataObj={cbAutostart:true,egActId:egActId,cbAutoSessionId:cbSessionId,cbLocale:locale};ApplicationFactory.PersistToParentStorage("cbData",postMessageDataObj,"session")}var p=ApplicationFactory.CreatePayload("NOTIFY","COBROWSE_REQUEST",url,"EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(p,"*")}else{if(url&&url.length>0){ApplicationFactory.PersistToStorage("egActId",egActId);ApplicationFactory.PersistToStorage("cbAutoSessionId",cbSessionId);$window.open(url,"eGainCobrowse")}else{}}$scope.cobrowseInvites[cbSessionId]["status"]="OPENED";SessionFactory.SaveCobrowseSessionState($scope.cobrowseInvites)}}};$scope.page.eGainDockedChatCb.stopCobrowse=function(cbSessionId){$scope.cobrowseInvites[cbSessionId]["status"]="CLOSED";SessionFactory.SaveCobrowseSessionState($scope.cobrowseInvites)};$scope.$on("application_service_cobrowse_invite_received_event",function(evt,data){var sessionIds=Object.keys($scope.cobrowseInvites),length=sessionIds.length;for(var i=0;i<length;i++){if($scope.cobrowseInvites[sessionIds[i]].status=="NEW"){$scope.cobrowseInvites[sessionIds[i]].status="EXPIRED"}}$scope.cobrowseInvites[data.Session]={action:data.Action,customerName:data.CustomerName,status:"NEW"};SessionFactory.SaveCobrowseSessionState($scope.cobrowseInvites)});$scope.$on("application_service_chat_connection_completion_event",function(){var p=ApplicationFactory.CreatePayload("NOTIFY","COBROWSE_END_REQUEST","endsession","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(p,"*")});$window.addEventListener("message",function(event){try{var cbData=JSON.parse(event.data);if(cbData.caller==="EGLV_DOCK_CALLER_COBROWSE_STOP"){var cbDataValue=cbData.value;$scope.cobrowseInvites[cbDataValue]["status"]="CLOSED";SessionFactory.SaveCobrowseSessionState($scope.cobrowseInvites)}}catch(exception){}})}]);app.controller("ChatErrorMessageController",["$scope","$stateParams","ApplicationFactory",function($scope,$stateParams,ApplicationFactory){var errorCode=$stateParams.errorCode;var errorMsg=$stateParams.errorMsg;var minimizePage=$stateParams.minimizePage;if(errorCode){if(angular.equals("DUPLICATE_SESSION",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_DUPLICATE_SESSION_MSG").then(function(result){$scope.errorMessage=result})}else if(angular.equals("CONNECT_FAIL",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_CONNECTION_FAILURE").then(function(result){$scope.errorMessage=result})}else if(angular.equals("ONETAG_FAILURE",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_ONE_TAG_FAILURE").then(function(result){$scope.errorMessage=result})}else if(angular.equals("CUSTOMER_BLOCKED",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_CUSTOMER_BLOCKED_START_CHAT").then(function(result){$scope.errorMessage=result})}else if(angular.equals("EG_VIDEO_CHAT_SUPPORT_ERROR",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_VIDEO_CHAT_SUPPORT_ERROR").then(function(result){$scope.errorMessage=result})}else if(angular.equals("EG_CHATS_PER_HOUR_LIMIT_REACHED",$stateParams.errorCode)){ApplicationFactory.Translate("APP.EG_CHATS_PER_HOUR_LIMIT_REACHED").then(function(result){$scope.errorMessage=result})}else{ApplicationFactory.Translate("APP.EG_SESSION_CREATION_FAILURE",{errorCode:$stateParams.errorCode}).then(function(result){$scope.errorMessage=result})}$scope.page.ready=true;$scope.page.progressbar.complete();if(minimizePage)$scope.page.minimized=true}else if(errorMsg){$scope.errorMessage=errorMsg;$scope.page.ready=true;$scope.page.progressbar.complete();if(minimizePage)$scope.page.minimized=true}else{$scope.page.hide=true}}]);app.controller("EscalationSearchController",["$scope","$stateParams","$rootScope","$state","ConfigFactory","ChatService","ApplicationFactory","VAFactory",function($scope,$stateParams,$rootScope,$state,ConfigFactory,ChatService,ApplicationFactory,VAFactory){$scope.deflection.showSendEscalationMessage=false;var chatConfig=ConfigFactory.GetChatConfigurations();var portalId=chatConfig.DeflectionPortalId?chatConfig.DeflectionPortalId:"";var portalLanguage=applicationDefaults.eGainChatDefaultLocale;var portalMappings=chatConfig.ChatKBLanguageMap;if(portalMappings){var locale=ApplicationFactory.GetUrlParameter("locale");locale=ApplicationFactory.GetCaseSensitiveLocale(locale?locale:applicationDefaults.eGainChatDefaultLocale);portalLanguage=portalMappings[locale]?portalMappings[locale]:portalLanguage}var ssApiPath=chatConfig.DeflectionApiPath?chatConfig.DeflectionApiPath:"";$rootScope.ssApiPath=$rootScope.apiPath;$scope.portalLanguage=portalLanguage;if(ssApiPath){$rootScope.ssApiPath=ssApiPath}if($scope.deflection.articles===null){ApplicationFactory.RetrieveFromParentStorage("X-egain-session",onEscalationSessionReceiveFromParent,"session");if(VAFactory.IsVAEscalated()){$scope.deflection.wait=true}}else{$scope.page.ready=true;$scope.searchTerm=$scope.page.searchTerm;$scope.deflection.showSendEscalationMessage=true}function onEscalationSessionReceiveFromParent(response){var xEgainSession=response;if(xEgainSession===null){ChatService.InitiateSession(portalId,"customer").then(function(responseData){if(responseData.isErrorPresent){$scope.startChat()}else{$scope.xEgainSession=responseData.xEgainSession;searchForEscalationArticles(chatConfig)}})}else{$scope.xEgainSession=JSON.parse(xEgainSession);searchForEscalationArticles(chatConfig)}}var searchForEscalationArticles=function(chatConfig){var portalId=chatConfig.DeflectionPortalId?chatConfig.DeflectionPortalId:"";var attributes=chatConfig.AttributesForDeflection?chatConfig.AttributesForDeflection:["description","name"];var resultSize=chatConfig.NumberOfDeflectionArticlesToShow?chatConfig.NumberOfDeflectionArticlesToShow:5;$scope.isErrorPresent=false;$scope.more_articles=[];var xEgainSession=$scope.xEgainSession;var customer=$stateParams.customer;var subject="";var name="";var phone="";var emailAddress="";if(angular.isDefined(customer)){angular.forEach(customer.CustomerParameters,function(value,key){if(angular.equals("subject",value.eGainAttribute)){subject=ApplicationFactory.MaskMessage(value.eGainValue)}if(angular.equals("full_name",value.eGainAttribute)){name=value.eGainValue}if(angular.equals("email_address",value.eGainAttribute)){emailAddress=value.eGainValue}if(angular.equals("phone_number",value.eGainAttribute)){phone=value.eGainValue}})}var description=subject;$scope.searchTerm=subject;$scope.page.searchTerm=$scope.searchTerm;var oneTagEventInfo={EventName:"ChatKBSearchSubmit","Search-term":$scope.searchTerm};eGainOneTagUtil.pushChatEvent("aac",oneTagEventInfo);ChatService.SearchPriorToEscalation(portalId,portalLanguage,xEgainSession,ApplicationFactory.GetUrlParameter("entryPointId"),subject,description,name,emailAddress,phone,attributes,resultSize,resultSize).then(function(results){if(results.isErrorPresent){$scope.startChat()}else{if(results.pagingInfo.count===0){$scope.startChat()}else{$scope.deflection.articles=processResults(results.returnData);$scope.pagingInfo=results.pagingInfo;$scope.deflection.sessionId=results.xEgainSession;xEgainSession=$scope.deflection.sessionId;var oneTagEventInfo={EventName:"ChatKBSearchResults",NumResults:$scope.pagingInfo.count,TopArticleId:$scope.deflection.articles.length>0?$scope.deflection.articles[0].id:"",TopArticleName:$scope.deflection.articles.length>0?$scope.deflection.articles[0].name:"",PortalId:portalId,Language:$rootScope.locale};eGainOneTagUtil.pushChatEvent("aac",oneTagEventInfo);$scope.page.progressbar.complete();$scope.deflection.wait=false;$scope.page.ready=true;$scope.page.ariaLabel="APP.EG_ARIA_PAGE_HEADINGS.DEFLECTION";$scope.deflection.showSendEscalationMessage=true;if(results.pagingInfo.count===1){$state.go("chat.deflection.article",{articleId:$scope.deflection.articles[0].id,searchTerm:$scope.searchTerm,portalLanguage:$scope.portalLanguage})}}}})};var processResults=function(searchResults){if(!searchResults)return[];var articles=[];angular.forEach(searchResults,function(value,key){if(!value.textMetadata){articles.push(value)}else{if(value.articleType===1){}else{var highlightMetadata=value.textMetadata.highlightMetadata;for(var i=0;i<highlightMetadata.length;i++){if(highlightMetadata[i].attributeName==="snippet"){var snippetCRs=highlightMetadata[i].characterRange}}if(snippetCRs!=="undefined"){value.highlightRange=snippetCRs}}articles.push(value)}});searchResults=articles;return searchResults}}]);app.controller("GuidedHelpWindowController",["$scope","$sce","VAFactory","GHFactory","ApplicationFactory",function($scope,$sce,VAFactory,GHFactory,ApplicationFactory){var egGHUrl=ApplicationFactory.GetUrlParameter("egGHUrl");var egGHActive=ApplicationFactory.GetUrlParameter("egGHActive");var egGHSessionData=GHFactory.GetGHSessionData();if(VAFactory.IsVAEnabled()&&!VAFactory.IsVAActive()){GHFactory.CloseGHWindow(false)}else{$scope.$on("gh_url_update",function(event,data){if(data&&data.hasOwnProperty("GHUrl")&&data.GHUrl!==""){egGHUrl=data.GHUrl;if(egGHSessionData&&!data.Reload){egGHUrl+="&"+egGHSessionData}if(data.Reload){egGHUrl+="&time="+Date.now()}$scope.ghURL=$sce.trustAsResourceUrl(egGHUrl)}});$scope.ghUrlHome=GHFactory.GetGHUrl();if(egGHUrl){GHFactory.SetGHUrl(egGHUrl)}if(egGHActive==="true"){GHFactory.ExpandGHWindow(false)}if(egGHActive==="false"){GHFactory.CollapseGHWindow(false)}}$scope.CloseGHWindow=function(){GHFactory.CreateQuickPick().then(function(response){GHFactory.CloseGHWindow(true)})};$scope.ExpandGHWindow=function(){GHFactory.ExpandGHWindow(true)};$scope.CollapseGHWindow=function(){GHFactory.CollapseGHWindow(true)};$scope.OpenHomePage=function(){$scope.ghURL=$sce.trustAsResourceUrl($scope.ghUrlHome)}}]);app.controller("HeaderSmallController",["$scope","$rootScope","$state","$timeout","$stateParams","ApplicationFactory","ConfigFactory","ChatHeaderFactory","ConnectionFactory","SessionFactory","MessageFactory","VideoFactory","VAFactory","$filter",function($scope,$rootScope,$state,$timeout,$stateParams,ApplicationFactory,ConfigFactory,ChatHeaderFactory,ConnectionFactory,SessionFactory,MessageFactory,VideoFactory,VAFactory,$filter){$scope.$watch(function(){return $scope.page.menuexpanded},function(newValue,oldValue){if(newValue&&$rootScope.isRtl){eGain$(".ass-aside-menu").addClass("rtl-ass-aside-menu");eGain$(".ass-aside-menu-icon").addClass("rtl-ass-aside-menu-icon");eGain$(".ass-aside-menu-close").addClass("rtl-ass-aside-menu-close")}});$scope.$watch(function(){return ChatHeaderFactory.GetChatHeader()},function(newValue,oldValue){$scope.header=newValue});$scope.$watch(function(){return ChatHeaderFactory.GetChatHeaderImage()},function(newValue,oldValue){$scope.headerImage=newValue});$scope.$watch(function(){return VAFactory.IsVAActive()},function(newValue,oldValue){$scope.vaActive=newValue;if(true===$scope.vaActive){$scope.chatActive=false}else if(false===$scope.vaActive){if(true===oldValue){$timeout(function(){$scope.chatActive=true},300)}else{$scope.chatActive=true}}});$scope.$watch(function(){return VAFactory.GetBotName()},function(newValue,oldValue){if(oldValue!==newValue&&""!==newValue){$scope.botName=newValue}});var $translate=$filter("translate");$scope.showToolbarOptions=false;$scope.page.menuexpanded=false;$scope.page.previousArticles=[];$scope.offRecord=SessionFactory.GetSessionState().OffRecordBtnState?SessionFactory.GetSessionState().OffRecordBtnState:false;MessageFactory.SetOffRecordFlag($scope.offRecord);$scope.isDocked=ApplicationFactory.IsDocked();$scope.isDuplicateDockedSession=SessionFactory.GetDuplicateSessionFlag();$scope.toolbarItems=[];$scope.iconBackImageURL="components/header-small/icon_chevron_w.png";$scope.title=$translate("APP.EG_MORE_OPTIONS");$scope.close=$translate("APP.EG_CLOSE");$scope.expanded=$translate("APP.EG_NAVBAR_EXPANDED");$scope.collapsed=$translate("APP.EG_NAVBAR_COLLAPSED");$scope.sidebarSettings={close:true,closeIcon:"fa fa-times"};$scope.toolbarButtons={position:["video","audio","save","faq","offRecord","onRecord"],buttons:{video:{present:false,button:{name:"APP.EG_TOOLBAR_VIDEO_CHAT",link:"#",icon:"fa fa-video-camera",target:"",id:"egain-video-chat"}},audio:{present:false,button:{name:"APP.EG_TOOLBAR_AUDIO_CHAT",link:"#",icon:"fa fa-microphone",target:"",id:"egain-audio-chat"}},save:{present:false,button:{name:"APP.EG_TOOLBAR_SAVE_TRANSCRIPT",link:"#",icon:"fa fa-save",target:"",id:"egain-save-transcript"}},faq:{present:false,button:{name:"APP.EG_TOOLBAR_FAQ",link:"#",icon:"fa fa-question",target:"_blank",id:"egain-faq"}},offRecord:{present:false,button:{name:"APP.EG_TOOLBAR_OFF_RECORD",link:"#",icon:"fa fa-ban",target:"",id:"egain-off-record"}},onRecord:{present:false,button:{name:"APP.EG_TOOLBAR_ON_RECORD",link:"#",icon:"fa fa-ban",target:"",id:"egain-on-record"}}}};var addToolbarButton=function(button,position){var added=false;if(button){try{position="number"===typeof position?parseInt(position):-1}catch(e){position=-1}position=0>=$scope.toolbarItems.length||-1>position?-1:position;switch(position){case-1:$scope.toolbarItems.push(button);added=true;break;default:$scope.toolbarItems.splice(position,0,button);added=true;break}}return added};var removeToolbarButton=function(buttonId){var removed=false;if(buttonId&&"string"===typeof buttonId){$scope.toolbarItems=$scope.toolbarItems.filter(function(el){return el.id!==buttonId});removed=true}return removed};var determinePositionForAdding=function(toolbarItemName){var position=-1;var len=0;if($scope.toolbarButtons.position&&0<(len=$scope.toolbarButtons.position.length)&&toolbarItemName&&"string"===typeof toolbarItemName){if(-1<$scope.toolbarButtons.position.indexOf(toolbarItemName)){for(var i=0;i<len;i++){var listName=$scope.toolbarButtons.position[i];if(listName&&"string"===typeof listName){if(listName===toolbarItemName){position++;break}else{var listItem=$scope.toolbarButtons.buttons[listName];if(listItem&&true===listItem.present){position++}}}}}}return position};$scope.addRemoveToolbarButton=function(toolbarItemName,add){var toolbarItem=null;if(toolbarItemName&&"string"===typeof toolbarItemName&&(toolbarItem=$scope.toolbarButtons.buttons[toolbarItemName])){if(true===add){if(false===toolbarItem.present){var position=determinePositionForAdding(toolbarItemName);var added=addToolbarButton(toolbarItem.button,position);toolbarItem.present=added}}else{if(true===toolbarItem.present){var removed=removeToolbarButton(toolbarItem.button.id);toolbarItem.present=!removed}}}};$scope.addRemoveToolbarButton("save",true);var chatConfig=ConfigFactory.GetChatConfigurations();if(chatConfig.KnowledgeBaseUrl&&chatConfig.KnowledgeBaseUrl.length>0){$scope.addRemoveToolbarButton("faq",true)}$scope.goBack=function(){if($scope.page.previousArticles.length>0){$state.go("chat.deflection.article",{articleId:$scope.page.previousArticles.pop()})}else{$state.go("chat.deflection.escalation-results")}};$scope.$watch(function(){return ConnectionFactory.GetConnection().connected},function(newValue,oldValue){if(newValue){$scope.showToolbarOptions=true;ConnectionFactory.GetChatInitializationData().then(function(chatInitializationData){$scope.showOffRecord=chatInitializationData&&"boolean"===typeof chatInitializationData.isOffRecordEnabled?chatInitializationData.isOffRecordEnabled:false;showHideOnOffRecordButtons()})}else{$scope.showOffRecord=false;$timeout(function(){showHideOnOffRecordButtons()})}});var showHideOnOffRecordButtons=function(){if($scope.showOffRecord){if($scope.offRecord){$scope.addRemoveToolbarButton("offRecord",false);$scope.addRemoveToolbarButton("onRecord",true)}else{$scope.addRemoveToolbarButton("offRecord",true);$scope.addRemoveToolbarButton("onRecord",false)}}else{$scope.addRemoveToolbarButton("offRecord",false);$scope.addRemoveToolbarButton("onRecord",false)}};var showHideAVChatButtons=function(data){$scope.addRemoveToolbarButton("video",data.showVideoChatButton);$scope.addRemoveToolbarButton("audio",data.showAudioChatButton);$timeout(function(){$scope.$apply()})};$scope.$on("application_service_adjust_video_audio_chat_buttons",function(evt,data){showHideAVChatButtons(data)});var errorMessagePublished=false;$scope.$on("application_service_chat_error_message_published",function(evt,data){errorMessagePublished=true});var connectionErrorMsgListener=null;$scope.$on("application_service_network_disconnect_event",function(evt,data){connectionErrorMsgListener=$scope.$watch(function(){return errorMessagePublished},function(newValue,oldValue){if(newValue===true){disableEndChatBtn();connectionErrorMsgListener();connectionErrorMsgListener=null}});function disableEndChatBtn(){$scope.endChatBtnDisabled=true}});$scope.$on("application_service_network_reconnect_event",function(evt,data){$scope.endChatBtnDisabled=false;errorMessagePublished=false;if(typeof connectionErrorMsgListener==="function"){connectionErrorMsgListener();connectionErrorMsgListener=null}});$scope.$on("application_service_extended_timeout_expired",function(evt,data){$scope.endChatBtnDisabled=false});var checkAVChatButtonsState=function(){var data=VideoFactory.GetAVChatButtonsState();showHideAVChatButtons(data)};if(true===$stateParams.attachedChat){checkAVChatButtonsState()}$scope.enableAttachmentLink=function(flag){$rootScope.$broadcast("application_service_attachment_link_enable_disable",flag)};$rootScope.$on("application_service_transcript_fetched_event",function(evt,data){SessionFactory.GetSessionState().OffRecordBtnState=data.EnableOffRecord;$scope.offRecord=data.EnableOffRecord;MessageFactory.SetOffRecordFlag($scope.offRecord);showHideOnOffRecordButtons()})}]);app.controller("LaunchButtonController",["$scope","$stateParams","ChatHeaderFactory","ApplicationFactory","SessionFactory","VAFactory",function($scope,$stateParams,ChatHeaderFactory,ApplicationFactory,SessionFactory,VAFactory){$scope.isVaEnabled=$stateParams.launchVA;if($scope.isVaEnabled){var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_LAUNCH_VA","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);VAFactory.GetLaunchImage().then(function(response){$scope.launchImage=response})}else{var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_LAUNCH_CHAT","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);$scope.launchImage=applicationDefaults.eGainContextPath+"components/launch-button/launch-button.png"}$scope.$watch(function(){return ChatHeaderFactory.GetChatHeaderImage()},function(newValue,oldValue){$scope.headerImage=newValue})}]);app.controller("MessageInputController",["$scope","$rootScope","$sce","$uibModal","$translate","MessageFactory","ConfigFactory","ConnectionFactory","ApplicationFactory","$timeout",function($scope,$rootScope,$sce,$uibModal,$translate,MessageFactory,ConfigFactory,ConnectionFactory,ApplicationFactory,$timeout){$scope.typingAreaPlaceholder="";$scope.attachmentIconURL="components/message-input-horizontal/attachment_icon.png";$scope.focusTextArea=true;$scope.msgInputAriaLabel="";var typingAreaPlaceholder="";$translate(["APP.EG_TYPEAREA_PLACEHOLDER","APP.EG_MSG_INPUT_ARIA_LABEL"]).then(function(translations){$scope.typingAreaPlaceholder=translations["APP.EG_TYPEAREA_PLACEHOLDER"];typingAreaPlaceholder=$scope.typingAreaPlaceholder;$scope.msgInputAriaLabel=translations["APP.EG_MSG_INPUT_ARIA_LABEL"]});$scope.scp={customerTypingTimer:null};var isVAActive=ApplicationFactory.GetUrlParameter("VAActive")==="true"?true:false;if(true===isVAActive){$scope.isChatAttachmentEnabled=false}$scope.sendMessageToAgent=function(){$scope.scp.customerTypingTimer=null;MessageFactory.SendMessageToAgent($scope.customerMessage.trim());$scope.customerMessage=""};$scope.$on("application_service_chat_transfer_event",function(event,data){$scope.isChatAttachmentEnabled=data.ChatAttachmentEnabled});$scope.sendCustomerStartTypingStatus=function(){if(ConnectionFactory.GetConnection().connected){MessageFactory.SendCustomerStartTypingStatus()}};$scope.sendCustomerStopTypingStatus=function(){$scope.scp.customerTypingTimer=null;if(ConnectionFactory.GetConnection().connected){MessageFactory.SendCustomerStopTypingStatus();$scope.isCustomerTyping=false}};var audioAlertThreshold=2e3;var lastAudioAlert=0;var timeElapsedSinceLastAlert=0;var chatConfig=ConfigFactory.GetChatConfigurations();var audioUrl=chatConfig.CustomerAudioAlert;$scope.audioUrl=$sce.trustAsResourceUrl(audioUrl);$scope.maxInputLength=chatConfig.MaxMessageSize;$scope.$on("application_service_agent_message_received_event",function(evt,data){var currentTime=(new Date).getTime();timeElapsedSinceLastAlert=(new Date).getTime()-lastAudioAlert;if(audioUrl!=""&timeElapsedSinceLastAlert>audioAlertThreshold&!$scope.isEditiorFocussed){if($rootScope.isLargeDevice){document.getElementById("html5sound").play()}lastAudioAlert=currentTime}});$scope.$on("application_service_system_message_received_event",function(evt,data){var currentTime=(new Date).getTime();timeElapsedSinceLastAlert=(new Date).getTime()-lastAudioAlert;if(audioUrl!==""&timeElapsedSinceLastAlert>audioAlertThreshold&!$scope.isEditiorFocussed){if($rootScope.isLargeDevice){document.getElementById("html5sound").play()}lastAudioAlert=currentTime}});$scope.$on("application_service_chat_attached_event",function(evt,data){$scope.waitmessage=""});var errorMessagePublished=false;$scope.$on("application_service_chat_error_message_published",function(evt,data){errorMessagePublished=true});var connectionErrorMsgListener=null;$scope.$on("application_service_network_disconnect_event",function(evt,data){connectionErrorMsgListener=$scope.$watch(function(){return errorMessagePublished},function(newValue,oldValue){if(newValue===true){disableTypingArea();connectionErrorMsgListener();connectionErrorMsgListener=null}});function disableTypingArea(){$scope.page.inputDisabled=true;$scope.typingAreaPlaceholder=""}});$scope.$on("application_service_network_reconnect_event",function(evt,data){if(ApplicationFactory.GetCustomerBlocked()===true){return}$scope.page.inputDisabled=false;$scope.typingAreaPlaceholder=typingAreaPlaceholder;errorMessagePublished=false;if(typeof connectionErrorMsgListener==="function"){connectionErrorMsgListener();connectionErrorMsgListener=null}});$scope.$on("application_service_customer_block_event",function(evt,data){$scope.page.inputDisabled=true;$scope.typingAreaPlaceholder=""});$scope.openAttachmentDialog=function(){var attachmentOptions={animation:true,templateUrl:"components/attachment/attachment.html",size:"md",controller:"AttachmentController",appendTo:angular.element(document.getElementsByClassName("egain-chat-content")),scope:$scope};if(ApplicationFactory.IsVisitorIOSPhone()||ApplicationFactory.IsVisitorIOSTablet()){delete attachmentOptions.appendTo}if(!$scope.offRecordFlag){var modalInstance=$uibModal.open(attachmentOptions);modalInstance.result.then(function(selectedItem){},function(){})}};$scope.processAndSendMessage=function(event){$scope.customerMessage=ApplicationFactory.htmlEncode($scope.customerMessage);if($scope.customerMessage==="")return;if($scope.customerMessage.replace(/<br ?\/?>/g,"").replace(/&nbsp;/g,"").trim().length===0)return;$scope.customerMessage=$scope.customerMessage.replace(/<a\b/g,'<a target="_blank"');var messageLength=eGain$("<div>").html($scope.customerMessage.replace(/\n/g,"&crarr;")).text().length;var extraCharacters=messageLength-chatConfig.MaxMessageSize;if(extraCharacters>0){ApplicationFactory.Translate("APP.EG_MESSAGE_LENGTH_ERROR",{maxMessageLength:chatConfig.MaxMessageSize,extraCharacters:extraCharacters}).then(function(alertMessage){alert(alertMessage)});return}if(angular.isDefined($scope.customerMessage)&&!angular.equals($scope.customerMessage,"")){$scope.sendMessageToAgent();$scope.sendCustomerStopTypingStatus();if($rootScope.isSmallDevice&&event){event.target.blur()}}};$scope.sendMessage=function(){$scope.processAndSendMessage();$timeout(function(){$scope.focusTextArea=true;$scope.showTypingStatus=false})};$rootScope.$on("application_service_transcript_fetched_event",function(evt,data){$scope.isChatAttachmentEnabled=data.EnableChatAttachment===1||data.EnableChatAttachment===3?true:false})}]);app.controller("PostChatSurveyController",["$scope","ApplicationFactory","$state","ChatService","ConnectionFactory","ConfigFactory","ChatHeaderFactory","$translate",function($scope,ApplicationFactory,$state,ChatService,ConnectionFactory,ConfigFactory,ChatHeaderFactory,$translate){$scope.page.progressbar.start();var chatConfig=ConfigFactory.GetChatConfigurations();$scope.surveyQuestions=chatConfig.SurveyQuestions;$scope.maxSurveyTextSize=chatConfig.MaxSurveyTextSize;$translate(["APP.EG_SURVEY_RATING_1_TITLE","APP.EG_SURVEY_RATING_2_TITLE","APP.EG_SURVEY_RATING_3_TITLE","APP.EG_SURVEY_RATING_4_TITLE","APP.EG_SURVEY_RATING_5_TITLE"]).then(function(translations){$scope.titles=[translations["APP.EG_SURVEY_RATING_1_TITLE"],translations["APP.EG_SURVEY_RATING_2_TITLE"],translations["APP.EG_SURVEY_RATING_3_TITLE"],translations["APP.EG_SURVEY_RATING_4_TITLE"],translations["APP.EG_SURVEY_RATING_5_TITLE"]]});var cnt=0;angular.forEach($scope.surveyQuestions,function(value,key){ApplicationFactory.Translate(value.questionText).then(function(response){cnt++;value.questionText=response;if(angular.equals("STAR",value.controlType.toUpperCase())){value.rate=0}else if(angular.equals("TEXTAREA",value.controlType.toUpperCase())){value.answer=""}if(cnt===$scope.surveyQuestions.length){$scope.page.ready=true;$scope.page.ariaLabel="APP.EG_ARIA_PAGE_HEADINGS.POST_CHAT";$scope.page.progressbar.complete()}})});$scope.$watch("survey.submitted",function(newValue,oldValue){if(newValue){var surveyArray=[];angular.forEach($scope.surveyQuestions,function(value,key){if(angular.equals("STAR",value.controlType.toUpperCase())){if(!angular.isDefined(value.rate)){value.rate=0}surveyArray.push({Question:value.questionText,Answer:value.rate})}else if(angular.equals("TEXTAREA",value.controlType.toUpperCase())){if(!angular.isDefined(value.answer)){value.answer=""}surveyArray.push({Question:"surveyText",Answer:value.answer})}});var oneTagEventInfo={EventName:"ChatSurveySubmitted"};angular.forEach(surveyArray,function(param){if("surveyText".toUpperCase()!==param["Question"].toUpperCase()){oneTagEventInfo[param["Question"]]=param["Answer"]}});eGainOneTagUtil.pushChatEvent("aac",oneTagEventInfo);ChatService.SubmitSurvey(ConnectionFactory.GetConnection().sessionID,surveyArray,ApplicationFactory.GetXEgainSessionID()).then(function(response){if(response.isErrorPresent){$scope.survey.submitted=false}navigateToPage()},function(){$scope.survey.submitted=false;navigateToPage()})}});var navigateToPage=function(){$state.go("chat.thank-you")}}]);app.controller("PreChatParamsListController",["$state","$scope","$window","$filter","$timeout","$translate","$q","ApplicationFactory","ConfigFactory","ConnectionFactory","CustomerFactory","SessionFactory","ChatService","VAFactory","MessageFactory",function($state,$scope,$window,$filter,$timeout,$translate,$q,ApplicationFactory,ConfigFactory,ConnectionFactory,CustomerFactory,SessionFactory,ChatService,VAFactory,MessageFactory){var anonymousLogin=function(){var customerObject=CustomerFactory.CreateCustomer();customerObject.SetPrimaryKey(customerObject.PrimaryKeyParams.PRIMARY_KEY_EMAIL,"anonymous@egain.com");CustomerFactory.SetCustomer(customerObject);setEscalationDataAtLogin();if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){ApplicationFactory.SetTabIDInChatLibrary(ApplicationFactory.GetTabID())}ConnectionFactory.StartChat()};var setEscalationDataAtLogin=function(){if(VAFactory.IsVAEscalated()){var escalationData={vaDomain:VAFactory.GetVAHost(),vaTenantId:ApplicationFactory.GetUrlParameter("VATenantAccId"),vaSessionId:SessionFactory.GetVASessionId(),vaBotName:ApplicationFactory.GetUrlParameter("VAName")};CustomerFactory.SetEscalationData(escalationData)}};var areAllParamsSecure=function(){var allParamsSecure=false;for(var i=0;i<$scope.loginParameters.length;i++){var param=$scope.loginParameters[i];if(angular.isDefined(param.secureAttribute)&&param.secureAttribute=="1"){allParamsSecure=true}else{allParamsSecure=false;break}}return allParamsSecure};var autologin=function(){if($scope.preChatForm.loaded){processAutologin()}else{$scope.$watch("preChatForm.loaded",function(newValue){if(newValue){processAutologin()}})}function processAutologin(){angular.forEach($scope.loginParameters,function(param,key){param.pattern=unescape(param.validationPattern);var fieldName="";if(typeof param.providerAttributeName!="undefined"&&param.providerAttributeName!="null")fieldName=param.providerAttributeName;if(fieldName==="")var fieldName="fieldname_"+(key+1);var attributeFromUrl=ApplicationFactory.GetUrlParameter(fieldName);if(attributeFromUrl!==null){$scope.customer[param.eGainAttributeName]=decodeURI(attributeFromUrl)}else if($scope.useChatAttributes&&$scope.customerContextParameters&&angular.isDefined($scope.customerContextParameters[fieldName])){$scope.customer[param.eGainAttributeName]=$scope.customerContextParameters[fieldName]}else{$scope.customer[param.eGainAttributeName]=""}if(angular.isDefined(param.secureAttribute)&&param.secureAttribute=="1"){param.required=false}$scope.PreChatForm[param.eGainAttributeName].$setViewValue($scope.customer[param.eGainAttributeName]);$scope.PreChatForm[param.eGainAttributeName].$render();if(false===validateRequired(param,$scope.customer[param.eGainAttributeName])){$scope.PreChatForm[param.eGainAttributeName].$setValidity("required",false)}if(validateCrossSiteScripting($scope.customer[param.eGainAttributeName])){$scope.PreChatForm[param.eGainAttributeName].$setValidity("pattern",false)}});if($scope.customerContextParameters&&angular.isDefined($scope.customerContextParameters["SAMLResponse"]))CustomerFactory.SetSamlResponse($scope.customerContextParameters["SAMLResponse"]);$timeout(function(){if($scope.PreChatForm.$valid){$scope.preChatForm.submitted=true}else{$scope.page.hide=false;renderLoginPage().then(function(){validateFormFields($scope.PreChatForm)})}})}};var renderLoginPage=function(){var deferred=$q.defer();var array=[];for(var i=0;i<$scope.loginParameters.length;i++){var param=$scope.loginParameters[i];if(angular.equals("singleselect",param.controlType)||angular.equals("multiselect",param.controlType)){array.push({objectName:param.eGainParentObject+"::"+param.eGainChildObject,attributeName:param.eGainAttributeName})}}var locale=ApplicationFactory.GetUrlParameter("locale");var language=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]:"en";var country=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]:"US";if(array.length>0){ChatService.GetAttributesInfo(array,language,country,ApplicationFactory.GetXEgainSessionID()).then(function(attributesInfo){if(false===attributesInfo.isErrorPresent&&attributesInfo.returnData){proceedToFormDisplay(attributesInfo.returnData)}else{proceedToFormDisplay()}})}else{proceedToFormDisplay()}function proceedToFormDisplay(attributesInfo){if($scope.preChatForm.loaded){buildLoginFormDisplay(attributesInfo)}else{$scope.$watch("preChatForm.loaded",function(newValue){if(newValue){buildLoginFormDisplay(attributesInfo)}})}}function buildLoginFormDisplay(attributesInfo){for(var i=0;i<$scope.loginParameters.length;i++){var param=$scope.loginParameters[i];param.error=false;param.pattern=unescape(param.validationPattern);if(angular.equals("singleselect",param.controlType)||angular.equals("multiselect",param.controlType)){if(typeof attributesInfo!=="undefined"&&attributesInfo!==null){var attributeInfo=attributesInfo[param.eGainParentObject+"::"+param.eGainChildObject+"::"+param.eGainAttributeName];param.options=[];param.outputData=[];if(attributeInfo&&attributeInfo.attributeOptions){for(var j=0;j<attributeInfo.attributeOptions.length;j++){param.options.push({text:attributeInfo.attributeOptions[j].displayValue,displayText:""+attributeInfo.attributeOptions[j].displayValue,id:attributeInfo.attributeOptions[j].internalValue})}}}}var fieldName="";if(typeof param.providerAttributeName!="undefined"&&param.providerAttributeName!="null")fieldName=param.providerAttributeName;if(fieldName==="")fieldName="fieldname_"+(i+1);var attributeFromUrl=ApplicationFactory.GetUrlParameter(fieldName);if(ConfigFactory.GetChatConfigurations().EnableAutologin&&attributeFromUrl!==null){$scope.customer[param.eGainAttributeName]=decodeURI(attributeFromUrl);$scope.PreChatForm[param.eGainAttributeName].$setTouched()}else if($scope.useChatAttributes&&$scope.customerContextParameters&&angular.isDefined($scope.customerContextParameters[fieldName])){$scope.customer[param.eGainAttributeName]=$scope.customerContextParameters[fieldName];$scope.PreChatForm[param.eGainAttributeName].$setTouched()}else{$scope.customer[param.eGainAttributeName]=""}}$scope.preChatForm.show=true;$scope.preChatForm.wait=false;$scope.page.ariaLabel="APP.EG_ARIA_PAGE_HEADINGS.PRE_CHAT";$scope.page.progressbar.complete();deferred.resolve()}var oneTagEventInfo={EventName:"ChatFormDisplay"};eGainOneTagUtil.pushChatEvent("aac",oneTagEventInfo);return deferred.promise};var setCustomerParamsFromVA=function(){var vaCustomer=VAFactory.GetVACustomer();if($scope.customerContextParameters===null||typeof $scope.customerContextParameters==="undefined"){$scope.customerContextParameters={}}if(vaCustomer){for(var key=0;key<vaCustomer.length;key++){var value=vaCustomer[key];if(value&&value.trim()!=""){$scope.customerContextParameters["fieldname_"+(key+1)]=value.trim()}}$scope.useChatAttributes=true;return true}return false};var onChatParametersReceived=function(data){$scope.customerContextParameters=data;var vaAutoLogin=false;if(VAFactory.IsVAEscalated()){vaAutoLogin=setCustomerParamsFromVA()}if(ConfigFactory.GetChatConfigurations().EnableAutologin||vaAutoLogin){autologin()}else{renderLoginPage()}};var submitPreChat=function(){var oneTagCustomerInfo={};$scope.page.progressbar.start();$scope.customerObject=buildCustomerParameters(oneTagCustomerInfo);CustomerFactory.SetCustomer($scope.customerObject);MessageFactory.setPreChatTranscript(oneTagCustomerInfo);if(!ConfigFactory.GetChatConfigurations().IsDeflectionEnabled){$scope.page.ariaLabel="APP.EG_ARIA_CHAT_START";if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){ApplicationFactory.SetTabIDInChatLibrary(ApplicationFactory.GetTabID())}ConnectionFactory.StartChat(oneTagCustomerInfo)}else{$state.go("chat.deflection.escalation-results",{customer:$scope.customerObject,oneTagCustomerInfo:oneTagCustomerInfo})}};$scope.$on("application_service_chat_connect_success_event",function(evt,data){$state.go("chat.interaction",{chatConnectionInfo:data})});$scope.$on("application_service_chat_connection_failure_event",function(evt,data){$state.go("chat.error",{errorCode:"CONNECT_FAIL"})});$scope.$watch("preChatForm.submitted",function(newValue,oldValue){if(newValue===true){var form=$scope.PreChatForm;validateFormFields(form);if(form.$valid){submitPreChat()}else{$scope.preChatForm.submitted=false;form.$setPristine();$timeout(function(){setFocusOnErrorField(form)})}}});var validateCrossSiteScripting=function(inputvalue){var regex=/(<[\/\s]*script|<[\/\s]*img|<[\/\s]*iframe|javascript\s*:|on[a-zA-Z]*\s*=)/gi;return regex.test(inputvalue)};var validateRequired=function(param,inputvalue){if(false===param.required){return true}if(typeof inputvalue!=="undefined"&&inputvalue!==null){if("multiselect"===param.controlType||"singleselect"===param.controlType){return inputvalue.length>0}else{return inputvalue.trim().length>0}}return true};var validateFormFields=function(form,input){var $translateLocale=$filter("translate");if(angular.isDefined(input)&&input!==null){if(typeof formFieldsValidated!=="undefined"&&formFieldsValidated===true){if(angular.isDefined(input.secureAttribute)&&input.secureAttribute=="1"){param.required=false}validateFormField(input)}}else{if(typeof formFieldsValidated==="undefined"){formFieldsValidated=true}for(var count=0;count<$scope.loginParameters.length;count++){var param=$scope.loginParameters[count];if(angular.isDefined(param.secureAttribute)&&param.secureAttribute=="1"){param.required=false}validateFormField(param)}}if(input&&input.controlType=="singleselect"){setselectedOptionTitle(input,$scope.customer)}function setselectedOptionTitle(input,customer){$scope.selectTitleObj={};var selectedValue=customer[input.eGainAttributeName];var options=input.options;if(options){for(var i=0;i<options.length;i++){if(options[i].id===selectedValue){$scope.selectTitleObj[input.eGainAttributeName]=options[i].text}}}}function validateFormField(param){param.error=false;param.errorLabel="";if(false===validateRequired(param,$scope.customer[param.eGainAttributeName])){$timeout(function(){param.error=true});form[param.eGainAttributeName].$setValidity("required",false);param.errorLabel=$translateLocale("APP.EG_ERROR_REQUIRED",{FieldName:$translateLocale(param.label)});return}else{param.error=false;form[param.eGainAttributeName].$setValidity("required",true)}if(form[param.eGainAttributeName].$invalid){param.error=true;if(form[param.eGainAttributeName].$error.pattern){if(angular.equals("email_address",param.eGainAttributeName)){param.errorLabel=$translateLocale("APP.EG_EMAIL_ADDRESS_ERROR")}else if(angular.equals("phone_number",param.eGainAttributeName)){param.errorLabel=$translateLocale("APP.EG_PHONE_NUMBER_ERROR")}else{param.errorLabel=$translateLocale("APP.EG_ERROR_INVALID")}return}if(form[param.eGainAttributeName].$error.minlength){param.errorLabel=$translateLocale("APP.EG_ERROR_MINLENGTH",{MinLength:param.minLength});return}if(form[param.eGainAttributeName].$error.maxlength){param.errorLabel=$translateLocale("APP.EG_ERROR_MAXLENGTH",{MaxLength:param.maxLength});return}}else if(validateCrossSiteScripting($scope.customer[param.eGainAttributeName])){param.error=true;form[param.eGainAttributeName].$setValidity("pattern",false);form[param.eGainAttributeName].$setTouched();param.errorLabel=$translateLocale("APP.EG_ERROR_INVALID")}else{param.error=false}}};$scope.validateFormFields=validateFormFields;var setFocusOnErrorField=function(){for(var count=0;count<$scope.loginParameters.length;count++){var param=$scope.loginParameters[count];if(param.error){document.getElementById(param.eGainAttributeName).focus();return}}};var buildCustomerParameters=function(oneTagEventInfo){$scope.customerObject=CustomerFactory.CreateCustomer();angular.forEach($scope.loginParameters,function(value,key){var customerChatParameter=new ApplicationFactory.GetEgainChatParameter;customerChatParameter.eGainParamName=value.eGainAttributeName;customerChatParameter.eGainParentObject=value.eGainParentObject;customerChatParameter.eGainChildObject=value.eGainChildObject;customerChatParameter.eGainAttribute=value.eGainAttributeName;customerChatParameter.eGainMinLength=value.minLength;customerChatParameter.eGainMaxLength=value.maxLength;customerChatParameter.eGainRequired=value.required?"1":"0";customerChatParameter.eGainFieldType="1";customerChatParameter.eGainValidationString=value.validationPattern;customerChatParameter.secureAttribute=angular.isDefined(value.secureAttribute)?value.secureAttribute:"0";if(customerChatParameter.secureAttribute&&(customerChatParameter.secureAttribute=="1"||customerChatParameter.secureAttribute=="2")){customerChatParameter.providerAttributeName=value.providerAttributeName}if(angular.equals("subject",value.eGainAttributeName)){customerChatParameter.eGainValue=$scope.customer[value.eGainAttributeName];customerChatParameter.eGainValue=ApplicationFactory.MaskMessage(customerChatParameter.eGainValue);customerChatParameter.eGainValue=ApplicationFactory.htmlEncode(customerChatParameter.eGainValue);customerChatParameter.eGainValue=ApplicationFactory.ReplaceMultipleSpaces($scope.customer[value.eGainAttributeName]);customerChatParameter.eGainValue=customerChatParameter.eGainValue.replace(/\n/g,"<br/>")}else{customerChatParameter.eGainValue=$scope.customer[value.eGainAttributeName]}$scope.customerObject.AddCustomerParameter(customerChatParameter);oneTagEventInfo[customerChatParameter.eGainAttribute]=customerChatParameter.eGainValue;if(value.primaryKey){customerChatParameter.eGainPrimaryKey="1";var primaryKeyParamType;if(angular.equals("email_address",value.eGainAttributeName)){primaryKeyParamType=$scope.customerObject.PrimaryKeyParams.PRIMARY_KEY_EMAIL}else{primaryKeyParamType=$scope.customerObject.PrimaryKeyParams.PRIMARY_KEY_PHONE}$scope.customerObject.SetPrimaryKey(primaryKeyParamType,$scope.customer[value.eGainAttributeName])}else{customerChatParameter.eGainPrimaryKey="0"}});$scope.customerObject["name"]=$scope.customerObject["full_name"];if(!$scope.customerObject["name"]){$scope.customerObject["name"]=$scope.customerObject["first_name"];$scope.customerObject["name"]=$scope.customerObject["name"]?$scope.customerObject["last_name"]?$scope.customerObject["first_name"]+" "+$scope.customerObject["last_name"]:$scope.customerObject["name"]:$scope.customerObject["last_name"]}$scope.customerObject["name"]=$scope.customerObject["name"]||CustomerFactory.GetCustomerScreenName();return $scope.customerObject};var getCustomerParamsFromStorage=function(){if($window.localStorage&&$window.localStorage.getItem("egainChatParameters")){var egainChatParams=$window.localStorage.getItem("egainChatParameters");$window.localStorage.removeItem("egainChatParameters")}else if($window.localStorage&&!$window.localStorage.windowRefreshed&&$window.location.protocol=="https:"){setTimeout(function(){$window.location.reload()},100);$window.localStorage.windowRefreshed=true}else{var localStorageWindow=null;try{localStorageWindow=$window.open("","egainChatDomainFrame");var egainChatParams=localStorageWindow?localStorageWindow.getChatParameters():null}catch(e){localStorageWindow.close();$state.go("chat.error",{errorCode:"400-112"})}}if(egainChatParams){onChatParametersReceived(JSON.parse(egainChatParams))}else{renderLoginPage()}};eGainOneTagUtil.pushChatEvent("aac",{EventName:"ChatEntry"});$scope.page.ready=true;$scope.page.progressbar.start();$scope.customer={};$scope.loginParameters=ConfigFactory.GetChatConfigurations().LoginParameters;$scope.isVisitorIOSPhone=false;if(ApplicationFactory.IsVisitorIOSPhone()){$scope.isVisitorIOSPhone=true}setEscalationDataAtLogin();var showPrechatForm=true;if($scope.loginParameters.length==0){showPrechatForm=false;anonymousLogin()}else if(!ConfigFactory.GetChatConfigurations().EnableAutologin&&areAllParamsSecure()){showPrechatForm=false;autologin()}else if(VAFactory.IsVAEscalated()){if(!VAFactory.GetShowPreChatOnEscalation()){if(VAFactory.GetVACustomer()){ApplicationFactory.RetrieveFromParentStorage("EgainChatParameter",onChatParametersReceived)}else{anonymousLogin()}showPrechatForm=false;$scope.preChatForm.wait=true}}if(showPrechatForm){$scope.useChatAttributes=ApplicationFactory.GetUrlParameter("postChatAttributes")==="true"?true:false;if($scope.useChatAttributes){if(MobileInterface){MobileInterface.GetCustomerData(onChatParametersReceived)}else{if(ApplicationFactory.IsUndocked()&&($window.navigator.userAgent.indexOf("Trident")!==-1||$window.navigator.userAgent.indexOf("Edge")!==-1)){getCustomerParamsFromStorage()}else{ApplicationFactory.RetrieveFromParentStorage("EgainChatParameter",onChatParametersReceived)}}}else{if(ConfigFactory.GetChatConfigurations().EnableAutologin){$timeout(function(){autologin()})}else{renderLoginPage()}}}}]);app.controller("StatusBarController",["$rootScope","$stateParams","$scope","$timeout","ConfigFactory","ChatHeaderFactory","ApplicationFactory",function($rootScope,$stateParams,$scope,$timeout,ConfigFactory,ChatHeaderFactory,ApplicationFactory){var typingStatusTimer=null;$scope.typingStatusMessage="";$scope.isIOSDevice=ApplicationFactory.IsVisitorIOSPhone()||ApplicationFactory.IsVisitorIOSTablet();$scope.scrollToBottom=function(){if($scope.page.showNewMessageSign){$scope.page.scrollToBottom();$scope.page.showNewMessageSign=false}};$scope.$on("application_service_agent_message_received_event",function(evt,data){if(typingStatusTimer){clearTimeout(typingStatusTimer)}$scope.$apply(function(){$scope.showTypingStatus=false;$scope.typingStatusMessage=""})});$scope.$on("application_service_agent_start_typing_event",function(evt,data){$scope.$apply(function(){$scope.showTypingStatus=true;$scope.agentScreenName=data.AgentScreenName;ApplicationFactory.Translate("APP.EG_AGENT_TYPING",{agentScreenName:$scope.agentScreenName}).then(function(result){$scope.typingStatusMessage=result})});typingStatusTimer=setTimeout(function(){$scope.$apply(function(){$scope.showTypingStatus=false;$scope.typingStatusMessage=""})},4e4)});$scope.$on("application_service_agent_stop_typing_event",function(evt,data){$scope.$apply(function(){$scope.showTypingStatus=false;$scope.typingStatusMessage=""})});var errorMessagePublished=false;$scope.$on("application_service_chat_error_message_published",function(evt,data){errorMessagePublished=true});var connectionErrorMsgListener=null;$scope.$on("application_service_network_disconnect_event",function(evt,data){connectionErrorMsgListener=$scope.$watch(function(){return errorMessagePublished},function(newValue,oldValue){if(newValue===true){showReconnectingStatus();connectionErrorMsgListener();connectionErrorMsgListener=null}});function showReconnectingStatus(){if($scope.showTypingStatus){$scope.showTypingStatus=false;$scope.typingStatusMessage=""}$scope.showReconnectingStatus=true}});$scope.$on("application_service_network_reconnect_event",function(evt,data){$scope.showReconnectingStatus=false;errorMessagePublished=false;if(typeof connectionErrorMsgListener==="function"){connectionErrorMsgListener();connectionErrorMsgListener=null}});$scope.$on("application_service_extended_timeout_expired",function(evt,data){$scope.showReconnectingStatus=false});$scope.$watch(function(){return ChatHeaderFactory.GetChatHeader()},function(newValue,oldValue){$scope.page.waitTimeMessage=newValue})}]);app.controller("ThanksMessagesController",["$scope","$timeout","ApplicationFactory","ConfigFactory",function($scope,$timeout,ApplicationFactory,ConfigFactory){var isShowSurvey=ConfigFactory.GetChatConfigurations().SurveyPageOn;var agentJoined=ApplicationFactory.GetAgentJoined();var alternateEngagementOptions=ConfigFactory.GetChatConfigurations().AlternateEngmtParams;$scope.thanksMessage="";if(agentJoined===false){var supportEmail="";if(alternateEngagementOptions){for(var i=0;i<alternateEngagementOptions.length;i++){if(alternateEngagementOptions[i].label==="APP.EG_ALT_ENGMT_EMAIL"){supportEmail=alternateEngagementOptions[i].url.split("mailto:")[1]}}}ApplicationFactory.Translate("APP.EG_AGENT_NOT_JOINED_THANKS_MSG",{supportEmail:supportEmail}).then(function(result){$timeout(function(){$scope.thanksMessage=result},100)})}else{if(isShowSurvey){ApplicationFactory.Translate("APP.EG_THANKS_SURVEY_MESSAGE").then(function(result){$timeout(function(){$scope.thanksMessage=result},100)})}else{ApplicationFactory.Translate("APP.EG_THANKS_CHAT_MESSAGE").then(function(result){$timeout(function(){$scope.thanksMessage=result},100)})}}}]);app.controller("TranscriptController",["$state","$scope","$stateParams","$filter","$rootScope","$window","$timeout","ConfigFactory","MessageFactory","CustomerFactory","ApplicationFactory","ChatHeaderFactory","ConnectionFactory","AttachmentFactory","VAFactory","TranscriptFactory","GHFactory",function($state,$scope,$stateParams,$filter,$rootScope,$window,$timeout,ConfigFactory,MessageFactory,CustomerFactory,ApplicationFactory,ChatHeaderFactory,ConnectionFactory,AttachmentFactory,VAFactory,TranscriptFactory,GHFactory){$scope.transcript={Messages:[]};var additionalRealTimeMessages=[];var msgIdsFromTranscript={};var customerName;var transcriptFromServer;var settings=ConfigFactory.GetChatConfigurations();var $translate=$filter("translate");$scope.page.badgeCount=MessageFactory.GetBadgeCount();$scope.iOSDevice=window.navigator.userAgent.match(/(iPhone|iPad)/)!=null;$scope.attachedChat=$stateParams.attachedChat;if($scope.attachedChat){$scope.page.progressbar.start()}var egainChatLibrary=ApplicationFactory.GetEgainChatLibrary();var transcriptLoaded=false;var applicationFailoverSuccess=false;var agentMsgEvtId=ApplicationFactory.GetParameterFromUrlOrStorage("egAgentMsg")?parseInt(ApplicationFactory.GetParameterFromUrlOrStorage("egAgentMsg")):0;var systemMsgEvtId=ApplicationFactory.GetParameterFromUrlOrStorage("egSystemMsg")?parseInt(ApplicationFactory.GetParameterFromUrlOrStorage("egSystemMsg")):0;$scope.$watch(function(){return ChatHeaderFactory.GetChatHeader()},function(newValue,oldValue){$scope.page.waitTimeMessage=newValue});var message=function(message,messageType,author,time,avatar,attachment,attachmentThumbnail,attachmentLink,showAcceptReject,authRequest){this.Body=message;this.SenderType=messageType;this.SenderName=author;this.Timestamp=time;this.OffRecord=false;this.Avatar=avatar;this.Hidden=false;this.AgentInvitation="";this.Attachment=attachment;this.AttachmentThumbnail=attachmentThumbnail;this.AttachmentLink=attachmentLink;this.showAcceptReject=showAcceptReject;this.AuthenticationRequest=authRequest};var processTranscriptCallback=function(response){transcriptFromServer=response;if(transcriptFromServer.isVATranscript)loadVATranscript(transcriptFromServer);else loadTranscript(transcriptFromServer);if(!transcriptFromServer.isVATranscript){if(typeof transcriptFromServer.Assignee==="undefined"){delete $scope.transcript.Assignee;checkQueueStatus()}else{$scope.transcript.Assignee=transcriptFromServer.Assignee;$scope.page.showWaitTime=false;$scope.page.waitTimeMessage="";$scope.page.showAlternateEngagementOptions=false}}};var processTranscriptAfterFallback=function(response){var transcriptFromServer=response;if(typeof transcriptFromServer.Assignee==="undefined"){delete $scope.transcript.Assignee;checkQueueStatus()}else{$scope.transcript.Assignee=transcriptFromServer.Assignee;$scope.page.showWaitTime=false;$scope.page.waitTimeMessage="";$scope.page.showAlternateEngagementOptions=false}mergeTranscripts(transcriptFromServer)};var getTranscripts=function(forceAPICall){if(VAFactory.IsVAActive()){if($stateParams.attachedChat){$scope.interactionPage.wait=true;VAFactory.GetVATranscript(false).then(function(response){processTranscriptCallback(response)})}else{transcriptLoaded=true;VAFactory.SendVaMessage("")}}else{if(VAFactory.IsVAEscalated()){$scope.interactionPage.wait=true;sendQuickpickData();VAFactory.GetVATranscript(true).then(function(response){processTranscriptCallback(response)})}else{MessageFactory.GetChatTranscript(forceAPICall).then(function(response){if(applicationFailoverSuccess){processTranscriptAfterFallback(response)}else{processTranscriptCallback(response)}})}}};getTranscripts();$scope.$on("application_service_agent_message_received_event",function(evt,data){var currentTime=MessageFactory.GetFormattedTime(new Date);var messageType=MessageFactory.GetAgentMessageType(data.AgentScreenName);var msgObject=new message(data.Message,messageType,data.AgentScreenName,currentTime);msgObject.MsgId=data.MsgId;msgObject.PagePushMessage=data.PagePushMessage;pushToTranscript(msgObject);$scope.$apply();if(VAFactory.IsVAActive()){customerName=data.customer!=undefined&&data.customer[0]!=""&&data.customer[0]!=undefined?data.customer[0]:$translate("APP.EG_CUSTOMER");CustomerFactory.SetCustomerScreenName(customerName);$scope.transcript.CustomerName=customerName;if(angular.isDefined(data.avatar)&&0<data.avatar.length){ChatHeaderFactory.SetChatHeaderImage(data.avatar,false)}}if(angular.isDefined(data.url)&&0<data.url.length){var p=ApplicationFactory.CreatePayload("PAGEPUSH","UrlToPush",data.url,"EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(p,"*")}if(data.escalate){$timeout(function(){VAFactory.SetVAActive(false);VAFactory.SetVAEscalated(true);if(true===GHFactory.GetGHActive()){GHFactory.CreateQuickPick().then(function(response){GHFactory.CloseGHWindow(false)})}escalateToChat()},2e3,false)}});var msgObject,agentJoined=false;$scope.$on("application_service_system_message_received_event",function(evt,data){var currentTime=MessageFactory.GetFormattedTime(new Date);var attachmentSendingCancelled=false;if(data.AgentJoinedMessage){$scope.page.showWaitTime=false;$scope.page.waitTimeMessage="";agentJoined=true;afterAgentJoinedOrActivityTransferred();if(ApplicationFactory.IsUndocked()){ApplicationFactory.PersistToStorage("agentJoined",true,"local")}else{ApplicationFactory.PersistToParentStorage("agentJoined",true,"local")}}if(data.AuthenticationRequestSuccessMsg){customerName=data.AuthenticationRequestSuccessMsg.custName?data.AuthenticationRequestSuccessMsg.custName:customerName;CustomerFactory.SetCustomerScreenName(customerName);$scope.transcript.CustomerName=customerName}if(data.AttachmentAcceptedMsg){attachmentSendingCancelled=isAttachmentSendingCancelled(data.uniqueFileId)}if(data.Attachment){if(data.ArticleAttachmentMessage){var attachmentLink="<a id='eg-attachment-link' eg-attachment-id='"+data.Attachment.Id+"'>"+data.Attachment.Name+"</a>";data.Message=ApplicationFactory.GetFormattedMessage($rootScope.messagingProperty.attachment_msg,[attachmentLink]);msgObject=new message(data.Message,"System","",currentTime)}else{var attachmentMessage=new message($translate("APP.EG_PENDING"),"System",data.Attachment.AgentName,currentTime,"",data.Attachment,"components/transcript/icon_upload_32.gif","",true);msgObject=attachmentMessage}}else if(data.AuthenticationRequestMsg){var authReqMsg=new message(data.Message,"System","",currentTime,"",null,"","",false,data.AuthenticationRequestMsg);msgObject=authReqMsg}else{msgObject=new message(data.Message,"System","",currentTime)}msgObject.MsgId=data.MsgId;if(!attachmentSendingCancelled)pushToTranscript(msgObject);$scope.$apply()});$scope.$on("application_service_chat_connection_failure_event",function(evt,data){var msgObject=new message($translate("APP.EG_CONNECTION_FAILURE"),"System");pushToTranscript(msgObject);$scope.$apply()});$scope.$on("application_service_extended_timeout_expired",function(evt,data){var msgObject=new message($translate("APP.EG_CONNECTION_FAILURE"),"System");pushToTranscript(msgObject);$scope.$apply()});$scope.$on("application_failover_success_event",function(){applicationFailoverSuccess=true;getTranscripts(true)});$scope.$on("application_service_send_system_message_event",function(evt,data,isHidden){var msgObject=new message(data,"System","",MessageFactory.GetFormattedTime(new Date));if("undefined"!==typeof isHidden){msgObject.Hidden=isHidden}if(!isAttachmentSendingCancellationMsg(data)){if(isHidden){pushToTranscript(msgObject,false)}else{pushToTranscript(msgObject,true)}}});$scope.$on("application_service_send_message_to_agent_event",function(evt,data){var currentTime=MessageFactory.GetFormattedTime(new Date);var msgObject=new message(data.sentMessage,"Customer",customerName,currentTime);msgObject.OffRecord=MessageFactory.GetOffRecordFlag();pushToTranscript(msgObject);if(!angular.equals(data.sentMessage,data.originalMessage)){MessageFactory.SendSystemMessage($translate("APP.EG_SENSITIVE_DATA_NOTIFICATION"))}});$scope.$on("application_service_chat_transfer_event",function(){delete $scope.transcript.Assignee;agentJoined=false;afterAgentJoinedOrActivityTransferred();checkQueueStatus()});$scope.$on("application_service_server_notification_received_event",function(evt,data){var clearPollQueueStatusTimerVar=true;if(typeof systemMessageIntegHook==="function"){clearPollQueueStatusTimerVar=systemMessageIntegHook(data.MessageFromServer)}if(clearPollQueueStatusTimerVar){stopQueueStatusCheck()}});$scope.$on("application_service_attachment_notification_sent_event",function(evt,data){if(data.status===$translate("APP.EG_FAILED").toLowerCase()){}else{var file=data.File;file.Id=file.uniqueFileId;file.Name=file.filename;file.AttachmentSize=file.size;var currentTime=MessageFactory.GetFormattedTime(new Date);var msgObject=new message($translate("APP.EG_WAITING"),"Customer",customerName,currentTime,"",file,"components/transcript/icon_upload_32.gif","");pushToTranscript(msgObject,true);TranscriptFactory.IncreasePendingAttachmentCount();$scope.$apply()}});$scope.onDownloadAttachment=function(fileId){};$scope.$on("application_service_get_attachment_event",function(evt,agentAttachmentArgs){$scope.scrollToBottom=false;var fileId;if(agentAttachmentArgs.uniqueFileId){fileId=agentAttachmentArgs.uniqueFileId}else{fileId=agentAttachmentArgs.fileId}var fileName;angular.forEach($scope.transcript.Messages,function(msg,key){if(msg.Attachment&&angular.equals(fileId,msg.Attachment.Id)){var data=agentAttachmentArgs.data;fileName=msg.Attachment.Name;if(MobileInterface){msg.AttachmentLink=agentAttachmentArgs.originalUrl}else{var blob=new Blob([data]);url=$window.URL||$window.webkitURL;var fileUrl=url.createObjectURL(blob);msg.AttachmentLink=fileUrl;msg.Attachment.attachmentId=agentAttachmentArgs.fileId}if(typeof fileName!=="undefined"&&fileName!==null){if(/\.(gif|jpg|jpeg|tiff|png)$/i.test(fileName)){if($scope.page.isScrolledToBottom()){$scope.scrollToBottom=true}msg.AttachmentThumbnail=AttachmentFactory.GetImageThumbnail(agentAttachmentArgs.fileId,agentAttachmentArgs.uniqueFileId)}}}});MessageFactory.SetTranscript($scope.transcript);$scope.$apply()});$scope.$on("application_service_get_attachment_image_thumbnail_event",function(evt,attachmentThumbnailArgs){var fileId;if(attachmentThumbnailArgs.uniqueFileId){fileId=attachmentThumbnailArgs.uniqueFileId}else{fileId=attachmentThumbnailArgs.fileId}angular.forEach($scope.transcript.Messages,function(msg,key){if(msg.Attachment&&angular.equals(fileId,msg.Attachment.Id)){msg.AttachmentThumbnail=attachmentThumbnailArgs.data}});MessageFactory.SetTranscript($scope.transcript);if($scope.page.isScrolledToBottom()){$timeout(function(){$scope.page.scrollToBottom()},200)}$scope.$apply()});$scope.onClickAcceptChatAttachment=function(file,name){AttachmentFactory.SendAcceptChatAttachmentNotification(file,name);angular.element(document.getElementById(file)).children()[0].focus();angular.element(document.getElementById(file)).children()[0].tabIndex=0};$scope.onClickRejectChatAttachment=function(file,name){AttachmentFactory.SendRejectChatAttachmentNotification(file,name)};$scope.$on("application_service_attachment_accepted_notification_sent",function(evt,data){var args=new Array;var currentTime=MessageFactory.GetFormattedTime(new Date);args[1]=data.FileName;args[0]=data.CustomerName;var customerAcceptedAttachmentMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.accepted_chat_attachment+'"'));var msgObject=new message(ApplicationFactory.GetFormattedMessage(customerAcceptedAttachmentMsg,args),"System","",currentTime);msgObject.Hidden=true;msgObject.MsgId=data.MsgId;updateAttachmentStatus(data.FileId,$translate("APP.EG_RECIEVED"),"components/transcript/icon_attachment_32.gif");AttachmentFactory.GetAttachment(data.FileId);pushToTranscript(msgObject)});$scope.$on("application_service_attachment_rejected_notification_sent",function(evt,data){var args=new Array;var currentTime=MessageFactory.GetFormattedTime(new Date);args[1]=data.FileName;args[0]=customerName;var customerRejectedAttachmentMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.rejected_chat_attachment+'"'));var msgObject=new message(ApplicationFactory.GetFormattedMessage(customerRejectedAttachmentMsg,args),"System","",currentTime);msgObject.Hidden=true;msgObject.MsgId=data.MsgId;pushToTranscript(msgObject);updateAttachmentStatus(data.fileId,$translate("APP.EG_REJECTED"),"components/transcript/icon_reject.gif")});var attachmentDisabledResponse="";ApplicationFactory.Translate("APP.EG_QUEUE_ATTACHMENT_DISABLED_RESPONSE").then(function(result){attachmentDisabledResponse=result});var currentAttachmentId="";$scope.$on("application_service_attachment_uploaded_by_customer_event",function(evt,data){if("failed"===data.status){if(angular.equals("attachmentSettingDisabledForCustomer",data.message)){data.message=attachmentDisabledResponse}updateAttachmentStatus(data.uniqueFileId,$translate("APP.EG_FAILED")+"("+data.message+")","components/transcript/icon_reject.gif")}else if("failed-failover"===data.status){updateAttachmentStatus(data.uniqueFileId,$translate("APP.EG_FAILED"),"components/transcript/icon_reject.gif")}else{var fileName=data.attachmentName;var fileInternalName=data.attachmentInternalName;var uniqueFileId=fileInternalName?fileInternalName.substr(0,fileInternalName.indexOf(fileName)-1):"";currentAttachmentId=data.attachmentId;if(typeof data.status!="undefined"&&data.status==200){updateAttachmentStatus(uniqueFileId,$translate("APP.EG_SENT"),"components/transcript/icon_attachment_32.gif");AttachmentFactory.GetAttachment(data.attachmentId,uniqueFileId);TranscriptFactory.DecreasePendingAttachmentCount()}else{updateAttachmentStatus(uniqueFileId,$translate("APP.EG_FAILED"),"components/transcript/icon_reject.gif")}}});$scope.$on("application_service_attachment_rejected_by_agent_event",function(evt,data){updateAttachmentStatus(data.uniqueFileId,$translate("APP.EG_REJECTED"),"components/transcript/icon_reject.gif");TranscriptFactory.DecreasePendingAttachmentCount()});$scope.$on("$destroy",function(){stopQueueStatusCheck()});$scope.getAttachmentSizeUnit=function(bytes){if(bytes>=1048576){bytes=Math.floor(bytes*10/1048576)/10+" MB"}else if(bytes>=1024){bytes=Math.floor(bytes*10/1024)/10+" KB"}else if(bytes>1){bytes=bytes+" bytes"}else if(bytes==1){bytes=bytes+" byte"}else{bytes="0 byte"}return bytes};var checkQueueStatusPollOn=false;var queueStatusPollTimer;var waitTimeStart;var chatCompleted=false;var networkDisconnected=false;var waitTimeAgentMsgTimer,waitTimeLongerMsgTimer,waitTimePatienceMsgTimer;var decrementTimeout=60*1e3,agentMsgTimeout=120*1e3,longerWaitTimeMsgTimeout=30*1e3;var cancelTimeouts=function(){$timeout.cancel(waitTimeAgentMsgTimer);$timeout.cancel(waitTimeLongerMsgTimer);$timeout.cancel(waitTimePatienceMsgTimer)};var afterAgentJoinedOrActivityTransferred=function(){ChatHeaderFactory.SetChatHeader("");cancelTimeouts();ApplicationFactory.RemoveFromParentStorage("waitTimeStart","session");$scope.page.showAlternateEngagementOptions=false};var showWaitTimeLongerMsg=function(){if(agentJoined||networkDisconnected){return}ChatHeaderFactory.SetChatHeader("APP.EG_WAITTIME_LONGER_MSG");waitTimePatienceMsgTimer=$timeout(showWaitTimePatienceMsg,longerWaitTimeMsgTimeout)};var showWaitTimePatienceMsg=function(){if(agentJoined||networkDisconnected){return}ChatHeaderFactory.SetChatHeader("APP.EG_WAITTIME_PATIENCE_MSG");waitTimeLongerMsgTimer=$timeout(showWaitTimeLongerMsg,longerWaitTimeMsgTimeout)};$scope.$on("application_service_chat_connection_completion_event",function(){ApplicationFactory.RemoveFromParentStorage("waitTimeStart","session");chatCompleted=true});$scope.$on("application_service_network_disconnect_event",function(){ChatHeaderFactory.SetChatHeader("");$scope.page.showAlternateEngagementOptions=false;networkDisconnected=true});$scope.$on("application_service_network_reconnect_event",function(){networkDisconnected=false;if(agentJoined===false){checkQueueStatus()}});var handleWaitTimeMessage=function(waitTime,calculateFromStorage){if(ApplicationFactory.IsUndocked()){var waitTimeStartFromStorage=ApplicationFactory.RetrieveFromStorage("waitTimeStart","session");CalculateWaitTime(waitTimeStartFromStorage)}else{ApplicationFactory.RetrieveFromParentStorage("waitTimeStart",CalculateWaitTime,"session")}function CalculateWaitTime(waitTimeStartFromStorage){if(calculateFromStorage){if(waitTimeStartFromStorage){var now=Date.now();var currentWaitTime=(now-waitTimeStartFromStorage)/(1e3*60);waitTime=Math.ceil(waitTime-currentWaitTime)}else{if(ApplicationFactory.IsUndocked()){ApplicationFactory.PersistToStorage("waitTimeStart",waitTimeStart,"session")}else{ApplicationFactory.PersistToParentStorage("waitTimeStart",waitTimeStart,"session")}}}if(waitTime>0){if(waitTime===1){ChatHeaderFactory.SetChatHeader("APP.EG_WAIT_TIME_SINGULAR")}else{ChatHeaderFactory.SetChatHeader("APP.EG_WAIT_TIME",{waitTime:waitTime})}waitTimeAgentMsgTimer=$timeout(function(){if(agentJoined||networkDisconnected){return}waitTime=waitTime-1;handleWaitTimeMessage(waitTime,false)},decrementTimeout)}else{ChatHeaderFactory.SetChatHeader("APP.EG_WAITTIME_AGENT_MSG");$timeout(showWaitTimeLongerMsg,agentMsgTimeout)}}};var checkQueueStatus=function(){if(settings.DisplayForChatWaitingSatus===""){ChatHeaderFactory.SetChatHeader("");return}if(!checkQueueStatusPollOn){var d=new Date;waitTimeStart=d.getTime()}checkQueueStatusPollOn=true;ConnectionFactory.GetQueueCurrentStatus().then(function(queueStatus){if(true===checkQueueStatusPollOn){$timeout(function(){if(true===checkQueueStatusPollOn){var queuePosition=queueStatus.QueueDepth;var waitTime=queueStatus.WaitTime;var altEngmtTime=queueStatus.AltEngmtTime;if(ApplicationFactory.IsUndocked()){var waitTimeStartFromStorage=ApplicationFactory.RetrieveFromStorage("waitTimeStart","session");WaitTimeStartFromStorageCallback(waitTimeStartFromStorage)}else{ApplicationFactory.RetrieveFromParentStorage("waitTimeStart",WaitTimeStartFromStorageCallback,"session")}function WaitTimeStartFromStorageCallback(waitTimeStartFromStorage){var agentNotJoinedAndNetworkNotDisconnected=agentJoined===false&&networkDisconnected===false;if(settings.DisplayForChatWaitingSatus==="QUEUE_POSITION"&&agentNotJoinedAndNetworkNotDisconnected){ChatHeaderFactory.SetChatHeader("APP.EG_QUEUE_POSITION",{queuePosition:queuePosition});if(!waitTimeStartFromStorage){if(ApplicationFactory.IsUndocked()){ApplicationFactory.PersistToStorage("waitTimeStart",waitTimeStart,"session")}else{ApplicationFactory.PersistToParentStorage("waitTimeStart",waitTimeStart,"session")}}}else if(settings.DisplayForChatWaitingSatus==="WAIT_TIME"&&agentNotJoinedAndNetworkNotDisconnected){if(ChatHeaderFactory.GetChatHeader()===""){handleWaitTimeMessage(waitTime,true)}if(waitTime>0){$scope.page.showWaitTime=true}else{$scope.page.showWaitTime=false}}if(altEngmtTime>-1&&agentNotJoinedAndNetworkNotDisconnected){var day=new Date;var currTime=day.getTime();if(waitTimeStartFromStorage){waitTimeStart=waitTimeStartFromStorage}if((currTime-waitTimeStart)/6e4>=altEngmtTime){$scope.page.showAlternateEngagementOptions=true}}else{$scope.page.showAlternateEngagementOptions=false}}}});queueStatusPollTimer=$timeout(checkQueueStatus,30*1e3)}})};var stopQueueStatusCheck=function(){if(true===checkQueueStatusPollOn&&true!==ApplicationFactory.GetMailLinkClicked()){$timeout(function(){if(true===checkQueueStatusPollOn&&true!==ApplicationFactory.GetMailLinkClicked()){$scope.page.showAlternateEngagementOptions=false;$scope.page.showWaitTime=false;$timeout.cancel(queueStatusPollTimer);checkQueueStatusPollOn=false;if(agentJoined===false&&chatCompleted===false){checkQueueStatus()}}})}};$scope.$on("application_service_chat_error_occurred_event",function(evt,data){stopQueueStatusCheck()});var pushToTranscript=function(msgObject,forceScrollToBottom){if(msgObject.Body){var msgObjectCopy=angular.copy(msgObject);if(false===transcriptLoaded){additionalRealTimeMessages.push(msgObjectCopy)}else if(true===isMessageUnique(msgObjectCopy)){pushOnetagEvents(msgObjectCopy);$scope.transcript.Messages.push(msgObjectCopy);$scope.lastMessageIndex=$scope.transcript.Messages.length}updateScrollPosition(msgObject,forceScrollToBottom)}};var updateScrollPosition=function(msgObject,forceScrollToBottom){if(!$scope.page.minimized){if(angular.isDefined($scope.page.isScrollingOn)){if($scope.page.isScrollingOn()===false||forceScrollToBottom===true){$timeout(function(){$scope.page.scrollToBottom()})}else{if(VAFactory.IsVAActive()){$timeout(function(){$scope.page.scrollToBottom()})}else{if(msgObject.SenderType==="Customer"){$timeout(function(){$scope.page.scrollToBottom()})}else if($scope.page.isScrolledToBottom()){$timeout(function(){$scope.page.scrollToBottom()})}else{if(!msgObject.Hidden){$scope.page.showNewMessageSign=true}}$rootScope.$broadcast("application_service_add_to_transcript_event",msgObject);MessageFactory.SetTranscript($scope.transcript)}}}}if($scope.page.minimized===true){$scope.page.badgeCount++;MessageFactory.SetBadgeCount($scope.page.badgeCount)}};var loadVATranscript=function(transcript){angular.forEach(transcript.Messages,function(msg,key){var messageType=msg.SenderType===""?$translate("APP.EG_CUSTOMER"):MessageFactory.GetAgentMessageType(msg.SenderType);if(messageType=="Customer"&&(msg.SenderName==""||msg.SenderName==undefined)){msg.SenderName=CustomerFactory.GetCustomerScreenName()}var msgObj=new message(msg.Body,messageType,msg.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)));$scope.transcript.Messages.push(msgObj)});if(transcript.isVAEscalated){MessageFactory.GetChatTranscript().then(function(response){processTranscriptCallback(response)})}else{mergeAdditionalRealTimeMessages();transcriptLoaded=true}$scope.interactionPage.wait=false;$scope.page.ready=true;$scope.page.progressbar.complete();$timeout(function(){$scope.page.scrollToBottom()})};var processMessage=function(msg){var hidden=false;var offRecord=false;var messageType=msg.SenderType;if(angular.equals("System",msg.SenderType)){if(isCustomerAttachmentAcceptedMessage(msg.Body,customerName)||isCustomerAttachmentRejectedMessage(msg.Body,customerName)||isQuickPickMessage(msg.Body)||msg.authenticationRequest&&("rejected"===msg.authenticationRequest.status||"accepted"===msg.authenticationRequest.status)){hidden=true}}if(angular.equals("Agent",msg.SenderType)){messageType=MessageFactory.GetAgentMessageType(msg.SenderName)}var msgObj;if(msg.Attachment){msgObj=processAttachmentsFromTranscript(msg)}else{if(msg.authenticationRequest){var authenticationRequestMsg={};authenticationRequestMsg.SenderName=msg.SenderName;msgObj=new message(msg.Body,messageType,msg.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp),msg.Timestamp),"",null,"","",false,authenticationRequestMsg)}else{msgObj=new message(msg.Body,messageType,msg.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp),msg.Timestamp))}msgObj.OffRecord=msg.OffRecord;msgObj.Hidden=hidden;msgObj.OffRecord=offRecord}msgObj.MsgId=msg.MsgId;addMsgId(msgObj.MsgId);if(msg.InvitationMedia){msgObj.InvitationMedia=msg.InvitationMedia}if(msg.InvitationStatus){msgObj.InvitationStatus=msg.InvitationStatus}pushOnetagEvents(msg);return msgObj};var disableAuthRequestMessage=function(requestId,disableMsg){var selector="A[authReqId='"+requestId+"']";var authReqButtonParentElement=angular.element(document.querySelectorAll(selector)[0]).parent();if(authReqButtonParentElement){if(true===disableMsg){authReqButtonParentElement.children().addClass("disabled")}else if(false===disableMsg){authReqButtonParentElement.children().removeClass("disabled")}}};var hideAuthRequestMessage=function(requestId,hideMsg){var selector="A[authReqId='"+requestId+"']";var authReqButtonParentElement=angular.element(document.querySelectorAll(selector)[0]).parent();if(authReqButtonParentElement){if(true===hideMsg){authReqButtonParentElement.parent().addClass("hidedetails")}else if(false===hideMsg){authReqButtonParentElement.parent().removeClass("hidedetails")}}};$scope.$on("application_service_auth_request_not_processed",function(evt,data){disableAuthRequestMessage(data,false)});$scope.$on("application_service_auth_request_processed",function(evt,data){hideAuthRequestMessage(data,true)});var mergeTranscripts=function(transcriptFromServer){if($scope.transcript.Messages.length===0){loadTranscript(transcriptFromServer);return}var transcriptMesgIdArr=[];angular.forEach($scope.transcript.Messages,function(mesg){if(mesg.Attachment){if(mesg.Attachment.SenderType!=="Customer"){transcriptMesgIdArr.push(mesg.Attachment.Id)}else{transcriptMesgIdArr.push(mesg.Attachment.Id+"_"+mesg.Attachment.name)}}else if(mesg.SenderType!=="Customer"){transcriptMesgIdArr.push(mesg.MsgId)}});angular.forEach(transcriptFromServer.Messages,function(mesgFromAPI){if(mesgFromAPI.Attachment&&mesgFromAPI.Attachment.SenderType==="Agent"){if(transcriptMesgIdArr.indexOf(mesgFromAPI.Attachment.Id)===-1){var msgObj=processMessage(mesgFromAPI);if(!isAttachmentSendingCancellationMsg(mesgFromAPI.Body)){$scope.transcript.Messages.push(msgObj)}}}else if(!mesgFromAPI.Attachment&&mesgFromAPI.SenderType!=="Customer"&&transcriptMesgIdArr.indexOf(mesgFromAPI.MsgId)===-1){var msgObj=processMessage(mesgFromAPI);if(!isAttachmentSendingCancellationMsg(mesgFromAPI.Body)&&mesgFromAPI.MsgId.indexOf("cust")===-1){$scope.transcript.Messages.push(msgObj)}}});$scope.lastMessageIndex=$scope.transcript.Messages.length};var loadTranscript=function(transcript){if(!VAFactory.IsVAEscalated())$scope.transcript.Messages=[];customerName=transcript.CustomerName?transcript.CustomerName:$translate("APP.EG_CUSTOMER");CustomerFactory.SetCustomerScreenName(customerName);var subject=transcript.Subject?transcript.Subject:"";$rootScope.subject=subject;$scope.transcript.CustomerName=customerName;$scope.transcript.Subject=subject;var lastAVChatInvitationMedia=null;var lastAVChatInvitationStatus=null;angular.forEach(transcript.Messages,function(msg,key){var msgObj=processMessage(msg);if(msg.InvitationMedia){lastAVChatInvitationMedia=msg.InvitationMedia}if(msg.InvitationStatus){lastAVChatInvitationStatus=msg.InvitationStatus}if(!isAttachmentSendingCancellationMsg(msg.Body))$scope.transcript.Messages.push(msgObj)});mergeAdditionalRealTimeMessages();MessageFactory.SetTranscript($scope.transcript);MessageFactory.SetLastAVChatInvitationDetails(lastAVChatInvitationMedia,lastAVChatInvitationStatus);transcriptLoaded=true;$scope.interactionPage.wait=false;$scope.page.ready=true;$scope.page.ariaLabel="APP.EG_ARIA_PAGE_HEADINGS.INTERACTION";$scope.page.progressbar.complete();ApplicationFactory.transcriptLoaded();$timeout(function(){$scope.page.scrollToBottom()})};var addMsgId=function(messageId){if(messageId&&"string"===typeof messageId&&msgIdsFromTranscript){msgIdsFromTranscript[messageId]=true}};var isMessageUnique=function(realTimeMessage){var isUnique=realTimeMessage&&(!realTimeMessage.MsgId||true!==msgIdsFromTranscript[realTimeMessage.MsgId]);return isUnique};var pushOnetagEvents=function(msg){try{if(msg.SenderType.toLowerCase().indexOf("agent")!==-1){if(parseInt(msg.MsgId.split("$")[2])>agentMsgEvtId){if(!msg.OffRecord){eGainOneTagUtil.pushChatAgentMsg(msg.Body)}ApplicationFactory.PersistToParentStorage("egAgentMsg",msg.MsgId.split("$")[2])}}else if(msg.SenderType.toLowerCase().indexOf("system")!==-1){if(parseInt(msg.MsgId.split("$")[2])>systemMsgEvtId){eGainOneTagUtil.pushChatSystemMsg(msg.Body);ApplicationFactory.PersistToParentStorage("egSystemMsg",msg.MsgId.split("$")[2])}}}catch(e){}};var mergeAdditionalRealTimeMessages=function(){if(additionalRealTimeMessages&&0<additionalRealTimeMessages.length){additionalRealTimeMessages.forEach(function(realTimeMessage){if(true===isMessageUnique(realTimeMessage)){$scope.transcript.Messages.push(realTimeMessage);if(angular.equals("System",realTimeMessage.type)){eGainOneTagUtil.pushChatSystemMsg(realTimeMessage.Message)}}})}additionalRealTimeMessages=[];$scope.lastMessageIndex=$scope.transcript.Messages.length};var customerAttachmentAcceptedMsg;if(typeof $rootScope.messagingProperty!=="undefined"&&$rootScope.messagingProperty!==null){customerAttachmentAcceptedMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.accepted_chat_attachment+'"'))}var customerAttachmentRejectedMsg;if(typeof $rootScope.messagingProperty!=="undefined"&&$rootScope.messagingProperty!==null){customerAttachmentRejectedMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.rejected_chat_attachment+'"'))}var quickPickMsg;ApplicationFactory.Translate("APP.EG_QUICKPICK_MSG").then(function(response){quickPickMsg=response});var articleAttachmentMsg;if(typeof $rootScope.messagingProperty!=="undefined"&&$rootScope.messagingProperty!==null){articleAttachmentMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.attachment_msg+'"'))}var attachmentSendingCancellationMsg;if(typeof $rootScope.messagingProperty!=="undefined"&&$rootScope.messagingProperty!==null){attachmentSendingCancellationMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.attachment_sending_cancelled+'"'))}var isCustomerAttachmentAcceptedMessage=function(message,customerName){if(VAFactory.IsVAActive())return false;else{var customerAttachmentAccepted=customerAttachmentAcceptedMsg.replace("{0}",customerName);customerAttachmentAccepted=customerAttachmentAccepted.substr(0,customerAttachmentAccepted.indexOf("{1}")-1);if(message.indexOf(customerAttachmentAccepted)===0){return true}}return false};var isCustomerAttachmentRejectedMessage=function(message,customerName){if(VAFactory.IsVAActive())return false;else{var customerAttachmentRejected=customerAttachmentRejectedMsg.replace("{0}",customerName);customerAttachmentRejected=customerAttachmentRejected.substr(0,customerAttachmentRejected.indexOf("{1}")-1);if(message.indexOf(customerAttachmentRejected)===0){return true}}return false};var isQuickPickMessage=function(message){if(VAFactory.IsVAActive())return false;else{if(angular.equals(message,quickPickMsg)){return true}}return false};var isArticleAttachmentMsg=function(message,attachmentName){if(VAFactory.IsVAActive())return false;else{var articleAttachmentRecieved=articleAttachmentMsg.replace("{0}",attachmentName);if(message.indexOf(articleAttachmentRecieved)===0){return true}}return false};var isAttachmentSendingCancellationMsg=function(message){if(VAFactory.IsVAActive())return false;else{if(angular.equals(message,attachmentSendingCancellationMsg)){return true}}return false};var updateAttachmentStatus=function(fileId,newStatus,newThumbnail){angular.forEach($scope.transcript.Messages,function(msg,key){if(msg.Attachment&&angular.equals(fileId,msg.Attachment.Id)){msg.Body=newStatus;msg.AttachmentThumbnail=newThumbnail;msg.showAcceptReject=false;msg.Attachment.attachmentId=currentAttachmentId}});MessageFactory.SetTranscript($scope.transcript);$scope.$apply()};var createObjectURL=function(file){if(window.webkitURL){return window.webkitURL.createObjectURL(file)}else if(window.URL&&window.URL.createObjectURL){return window.URL.createObjectURL(file)}else{return null}};var processAttachmentsFromTranscript=function(msg){var msgObj;if(!isArticleAttachmentMsg(msg.Body,msg.Attachment.Name)){if(msg.Attachment.SenderType==="Customer"){var fileName=msg.Attachment.Name;var fileInternalName=msg.Attachment.AttachmentInternalName;var uniqueFileId=fileInternalName.substr(0,fileInternalName.indexOf(fileName)-1);var size=msg.Attachment.AttachmentSize;if(msg.Attachment.Status==="pending"){var file={};file.Id=uniqueFileId;file.Name=fileName;file.AttachmentSize=size;msgObj=new message($translate("APP.EG_CANCELLED"),"Customer",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",file,"components/transcript/icon_reject.gif","")}if(msg.Attachment.Status==="accepted"){var file={};file.Id=uniqueFileId;file.Name=fileName;file.AttachmentSize=size;msgObj=new message($translate("APP.EG_SENT"),"Customer",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",file,"components/transcript/icon_attachment_32.gif","");AttachmentFactory.GetAttachment(msg.Attachment.Id,uniqueFileId);$scope.scrollToBottom=true}if(msg.Attachment.Status==="rejected"){var file={};file.Id=uniqueFileId;file.Name=fileName;file.AttachmentSize=size;msgObj=new message($translate("APP.EG_REJECTED"),"Customer",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",file,"components/transcript/icon_reject.gif","")}}else{if(msg.Attachment.Status==="accepted"){var msgObj=new message($translate("APP.EG_RECIEVED"),"System",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",msg.Attachment,"components/transcript/icon_attachment_32.gif","",false);AttachmentFactory.GetAttachment(msg.Attachment.Id)}if(msg.Attachment.Status==="rejected"){msgObj=new message($translate("APP.EG_REJECTED"),"System",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",msg.Attachment,"components/transcript/icon_reject.gif","",false)}if(msg.Attachment.Status==="pending"){msgObj=new message($translate("APP.EG_PENDING"),"System",msg.Attachment.SenderName,MessageFactory.GetFormattedTime(new Date(msg.Timestamp)),"",msg.Attachment,"components/transcript/icon_upload_32.gif","",true)}}}else{var attachmentLink="<a id='eg-attachment-link' eg-attachment-id='"+msg.Attachment.Id+"'>"+msg.Attachment.Name+"</a>";msg.Body=ApplicationFactory.GetFormattedMessage($rootScope.messagingProperty.attachment_msg,[attachmentLink]);msgObj=new message(msg.Body,"System","",MessageFactory.GetFormattedTime(new Date(msg.Timestamp)))}return msgObj};var escalateToChat=function(){var entryPoint=ApplicationFactory.GetEntryPointId();$scope.$on("application_service_chat_initialized_success_event",function(evt,response){if(response.isOneTagOff){proceedToEscalatedChat(response)}else if(response.oneTagAId&&response.oneTagServerDomainName){proceedToEscalatedChat(response)}else{$state.go("chat.error",{errorCode:"ONETAG_FAILURE"})}});ApplicationFactory.Chat(entryPoint)};var proceedToEscalatedChat=function(response){var available=response.checkEligibility.responseType;var showPreChat=VAFactory.GetShowPreChatOnEscalation();if(available===0){$state.go("chat.pre-chat",{VAEscalated:true,VAShowPreChat:showPreChat})}else if(available===1){$state.go("chat.chat-unavailable",{VAEscalated:true,VAShowPreChat:showPreChat})}else if(available===2){$state.go("chat.chat-unavailable",{VAEscalated:true,VAShowPreChat:showPreChat})}};var isAttachmentSendingCancelled=function(fileId){var statusCancelled=false;angular.forEach($scope.transcript.Messages,function(msg,key){if(msg.Attachment&&angular.equals(fileId,msg.Attachment.Id)){statusCancelled=msg.Body==$translate("APP.EG_CANCELLED")}});return statusCancelled};if(ApplicationFactory.IsDocked()){$window.onbeforeunload=function(){var pendingAttachmentCount=TranscriptFactory.GetPendingAttachmentCount();if(pendingAttachmentCount>0)return""};$scope.$on("$destroy",function(){$window.onbeforeunload=null})}function sendQuickpickData(){var quickPickData=GHFactory.GetQuickPick();if(quickPickData!==null){var subCommandObj={QuickPick:quickPickData};ApplicationFactory.Translate("APP.EG_QUICKPICK_MSG").then(function(response){quickPickMsg=response;var subCommand="quickpickdata"+"$$"+JSON.stringify(subCommandObj);var systemMsg=quickPickMsg?quickPickMsg:"";MessageFactory.SendSystemMessage(systemMsg,subCommand,true)})}}$scope.downloadAttachment=function(item){if(MobileInterface){MobileInterface.DownloadAttachment(item.AttachmentLink);return}function downloadFile(sid){if(item.Attachment&&item.Attachment.attachmentId){var attachmentId=item.Attachment.attachmentId;var url=applicationDefaults.eGainChatApiPath+"/egain/chat/entrypoint/getattachment/"+attachmentId;document.attachmentForm.action=url;document.attachmentForm.sid.value=sid;if($scope.iOSDevice){document.attachmentForm.target="attachmenttarget"}ApplicationFactory.SetAttachmentClicked(true);$timeout(function(){ApplicationFactory.SetAttachmentClicked(false)},100);document.attachmentForm.submit()}}if(ApplicationFactory.IsUndocked()){var sid=ApplicationFactory.RetrieveFromStorage("egSessionId");downloadFile(sid)}else{ApplicationFactory.RetrieveFromParentStorage("egSessionId",downloadFile)}}}]);app.controller("VideoController",["$scope","$timeout","$stateParams","ApplicationFactory","VideoFactory",function($scope,$timeout,$stateParams,ApplicationFactory,VideoFactory){$scope.openTokAngular={show:false,videoToken:null,avChatFrameMaximised:false};$scope.cleanupAVAfterEnded=function(){$scope.openTokAngular.videoToken=null;$scope.openTokAngular.show=false;$scope.page.isAVChatInProgress=false;$scope.openTokAngular.avChatFrameMaximised=false};$scope.showAVAfterStart=function(){$scope.openTokAngular.show=true;$scope.page.isAVChatInProgress=true;$scope.openTokAngular.avChatFrameMaximised=false};$scope.toggleAVChatMaximise=function(maximised){$scope.openTokAngular.avChatFrameMaximised="boolean"===typeof maximised?maximised:!$scope.openTokAngular.avChatFrameMaximised};var startAVChat=function(data){if(data&&!angular.equals(data,$scope.openTokAngular.videoToken)){$scope.openTokAngular.videoToken=data;$scope.showAVAfterStart();VideoFactory.AddAVChatIframe("flash-wrap-id");VideoFactory.InitializeVideo();$timeout(function(){$scope.page.scrollToBottom()},700)}};$scope.$on("application_service_video_chat_token_received",function(evt,data){$scope.$apply(function(){startAVChat(data)})});$scope.$on("application_service_avchat_ended",function(evt,ended){if(true===ended){$timeout(function(){$scope.cleanupAVAfterEnded()})}});$scope.$on("application_service_avchat_maximised",function(evt,maximised){$timeout(function(){$scope.toggleAVChatMaximise(maximised)})});ApplicationFactory.onceTranscriptLoaded().then(function(){VideoFactory.UpdateAVChatInvitation();if(VideoFactory.IsWindowReadyForAVChat()){var videoToken=VideoFactory.GetVideoToken();if(videoToken){startAVChat(videoToken)}}})}]);app.controller("WaitScreenController",[function(){}]);app.controller("ChatDeflectionPageController",["$scope","$state","$stateParams","$window","ChatService","ConfigFactory","ConnectionFactory","ApplicationFactory",function($scope,$state,$stateParams,$window,ChatService,ConfigFactory,ConnectionFactory,ApplicationFactory){$scope.deflection={articles:null,sessionId:null,showSendEscalationMessage:false,wait:false};var oneTagCustomerInfo=$stateParams.oneTagCustomerInfo;$scope.$watch(function(){return $state.current.name},function(newValue,oldValue){if(angular.equals("chat.deflection.article",newValue)){$scope.isArticleContentPage=true}else{$scope.isArticleContentPage=false}});$scope.avertEscalation=function(){var oneTagEventInfo={EventName:"ChatKBDeflected"};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);$scope.submitted=true;ChatService.AvertEscalation(ConfigFactory.GetChatConfigurations().DeflectionPortalId,ApplicationFactory.GetUrlParameter("entryPointId"),$scope.deflection.sessionId).then(function(response){if(response.isErrorPresent){console.log("AvertEscalation error occurred")}else{$scope.deflection.showSendEscalationMessage=false}if(true===ApplicationFactory.IsDocked()){var p=ApplicationFactory.CreatePayload("NOTIFY","","CHAT_CLOSED","EGLV_DOCK_CALLER_APP");ApplicationFactory.PostMessageToParent(p,"*");ApplicationFactory.ResetChat()}else{$window.close()}})};$scope.startChat=function(){var oneTagEventInfo={EventName:"ChatKBNotDeflected"};eGainOneTagUtil.pushChatEvent("uac",oneTagEventInfo);$scope.submitted=true;if(angular.isDefined($scope.deflection.sessionId)){ApplicationFactory.SetXEgainSessionIDInChatLibrary($scope.deflection.sessionId)}if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){ApplicationFactory.SetTabIDInChatLibrary(ApplicationFactory.GetTabID())}$scope.page.ariaLabel="APP.EG_ARIA_CHAT_START";ConnectionFactory.StartChat(oneTagCustomerInfo)};$scope.$on("application_service_chat_connect_success_event",function(evt,data){$state.go("chat.interaction")})}]);app.controller("ChatLandingPageController",["$scope","$state","ApplicationFactory",function($scope,$state,ApplicationFactory){var customLaunchButtonClicked="true"===ApplicationFactory.GetUrlParameter("chatLaunched")?true:false;var launchButtonSkipped=ApplicationFactory.IsDocked()===false||customLaunchButtonClicked;$scope.showLaunchButton=!launchButtonSkipped;$scope.page={};if(launchButtonSkipped){$state.go("initialize")}}]);app.controller("ChatMainPageController",["$scope","$window","$stateParams","$timeout","ngProgressFactory","ChatHeaderFactory","ApplicationFactory","VAFactory","ConnectionFactory","SessionFactory","GHFactory",function($scope,$window,$stateParams,$timeout,ngProgressFactory,ChatHeaderFactory,ApplicationFactory,VAFactory,ConnectionFactory,SessionFactory,GHFactory){$scope.page={ready:false,hide:false,visible:false,backButtonEnabled:false,waitTimeMessage:""};$scope.page.progressbar=ngProgressFactory.createInstance();$scope.page.progressbar.setAbsolute();$scope.page.ariaLabel="";ChatHeaderFactory.SetChatHeaderImage("");$scope.$on("$stateChangeStart",function(){$scope.page.ready=false;$scope.page.hide=false;$scope.page.backButtonEnabled=false});$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){if(!angular.equals(toState,"chat.wait-screen")){if(VAFactory.IsVAActive()){var launchImage=ApplicationFactory.GetUrlParameter("vaLastAvatar");if(launchImage===null||launchImage===""){imageUrl=VAFactory.GetLaunchImage()}ChatHeaderFactory.SetChatHeaderImage(launchImage)}else{ChatHeaderFactory.SetChatHeaderImage("components/header-small/icon_agent.png")}}});$scope.$watch(function(){return GHFactory.GetGHActive()},function(newValue,oldValue){if(newValue===true){$scope.ghActive=true}else if(newValue===false){$scope.ghActive=false}else{$scope.ghActive=null}});var confirmMessage="";ApplicationFactory.Translate("APP.EG_CONFIRM_CLOSE_CHAT").then(function(confirmMsg){confirmMessage=confirmMsg});var addWindowEventHandlersForUndocked=function(){$window.addEventListener("unload",function(){var isInProgressFlagInSession=$window.sessionStorage.getItem("isUnDockedChatInProgress")==="true";var isInProgressFlagInLocal=$window.localStorage.getItem("isUnDockedChatInProgress")==="true";if(isInProgressFlagInSession&&isInProgressFlagInLocal){$window.localStorage.setItem("isUnDockedChatInProgress",false)}if(ApplicationFactory.IsVisitorIOSPhone()||ApplicationFactory.IsVisitorIOSTablet()){}else{ConnectionFactory.EndChat("browser_unload")}});$scope.$on("application_service_chat_connect_success_event",function(evt,data){$window.onbeforeunload=function(){if(ApplicationFactory.GetMailLinkClicked()===true||ApplicationFactory.GetAttachmentClicked()===true){return}else{return confirmMessage}}});if($stateParams.attachedChat){$window.onbeforeunload=function(){if(ApplicationFactory.GetMailLinkClicked()===true||ApplicationFactory.GetAttachmentClicked()===true){return}else{return confirmMessage}}}$scope.$on("application_service_chat_connection_completion_event",function(){$window.onbeforeunload=null});$scope.$on("application_service_chat_connection_failure_event",function(){$window.onbeforeunload=null})};var addWindowEventHandlersForPopout=function(){$window.onunload=function(){SessionFactory.ClearSessionState();ConnectionFactory.EndChat("browser_unload");ApplicationFactory.PersistToParentStorage("egPopoutWindow","false","session")};if($stateParams.attachedChat){ApplicationFactory.PersistToStorage("egSessionId",SessionFactory.GetSessionState().sessionID,"session");$window.onbeforeunload=function(){if(ApplicationFactory.GetMailLinkClicked()===true||ApplicationFactory.GetAttachmentClicked()===true){return}else{return confirmMessage}}}$scope.$on("application_service_chat_connect_success_event",function(evt,data){ApplicationFactory.PersistToStorage("egSessionId",data.SessionID,"session");$window.onbeforeunload=function(){if(ApplicationFactory.GetMailLinkClicked()===true||ApplicationFactory.GetAttachmentClicked()===true){return}else{return confirmMessage}}});$scope.$on("application_service_chat_connection_completion_event",function(){$window.onbeforeunload=null});$scope.$on("application_service_chat_connection_failure_event",function(){$window.onbeforeunload=null})};var addWindowEventHandlersForDocked=function(){$window.addEventListener("message",function(event){var data=JSON.parse(event.data);if(data.key==="maximize"){$timeout(function(){$scope.page.minimized=false})}})};if(ApplicationFactory.IsUndocked()){addWindowEventHandlersForUndocked()}if(true===ApplicationFactory.isPoppedOut()){addWindowEventHandlersForPopout()}if(ApplicationFactory.IsDocked()){addWindowEventHandlersForDocked()}}]);app.controller("ChatUnavailablePageController",["$scope","$stateParams","$timeout","ConfigFactory","ChatHeaderFactory",function($scope,$stateParams,$timeout,ConfigFactory,ChatHeaderFactory){if($stateParams.condition!==null&&angular.equals("MAX_QUEUE_DEPTH_EXCEEDED",$stateParams.condition)){$scope.showCallbackOptions=true}else{$timeout(function(){eGainOneTagUtil.pushChatEvent("aac",{EventName:"ChatOutOfHours"})},100);$scope.showCallbackOptions=ConfigFactory.GetChatConfigurations().ShowCallBackPageDuringOffHours}}]);app.controller("ErrorPageController",[function(){}]);app.controller("InteractionPageControllerCustom",["$scope","$rootScope","$uibModal","$filter","ApplicationFactory","ConnectionFactory","AttachmentFactory","SessionFactory","ChatHeaderFactory",function($scope,$rootScope,$uibModal,$filter,ApplicationFactory,ConnectionFactory,AttachmentFactory,SessionFactory,ChatHeaderFactory){$scope.dropText="";$scope.droppedAttachmentQueue=[];$scope.isChatAttachmentEnabled=false;var $translate=$filter("translate");$scope.review_attachment_msg=$translate("APP.EG_REVIEW_ATTACHMENT");$scope.drop_not_allowed_msg=$translate("APP.EG_ATTACHMENT_NOT_ALLOWED_MSG");$scope.off_record_msg=$translate("APP.EG_OFF_RECORD_ATTACHMENT_DISABLED_MSG");$scope.add_attachments=$translate("APP.EG_ATTACHMENT_HEADER");$scope.select_files=$translate("APP.EG_SELECT_FILES");$scope.send=$translate("APP.EG_SEND");$scope.cancel=$translate("APP.EG_ATTACHMENT_CANCEL");$scope.browse=$translate("APP.EG_BROWSE");$scope.offRecordFlag=SessionFactory.GetSessionState().OffRecordBtnState?SessionFactory.GetSessionState().OffRecordBtnState:false;$scope.interactionPage={wait:false};$scope.attachmentCnt={valid:0,invalid:0};ConnectionFactory.GetChatInitializationData().then(function(chatInitializationData){if(SessionFactory.GetChatTransferredFlag()){$scope.isChatAttachmentEnabled=SessionFactory.GetChatAttachmentEnabledFlag()}else{$scope.isChatAttachmentEnabled=chatInitializationData.isChatAttachmentEnabled}});$scope.$on("application_service_validated_dropped_attachments",function(evt,tempAttachments){$scope.droppedAttachmentQueue=tempAttachments.attachmentQueue;$scope.attachmentCnt.valid=tempAttachments.validCount;sendFiles()});$scope.$on("application_service_chat_transfer_event",function(event,data){$scope.isChatAttachmentEnabled=data.ChatAttachmentEnabled});var sendFiles=function(){var validFiles=[];var invalidFiles=[];angular.forEach($scope.droppedAttachmentQueue,function(file){if(!file.invalidFile){validFiles.push(file)}else{invalidFiles.push(file)}});if(invalidFiles.length>0||!$scope.isChatAttachmentEnabled||$scope.offRecordFlag){openAttachmentDialog(validFiles,invalidFiles)}else AttachmentFactory.SendCustomerAttachmentNotification(validFiles)};var openAttachmentDialog=function(validFiles,invalidFiles){var attachmentOptions={animation:true,templateUrl:"components/attachment-review/attachment-review.html",size:"md",controller:"AttachmentReviewController",appendTo:angular.element(document.getElementsByClassName("egain-chat-content")),scope:$scope,resolve:{droppedAttachmentQueue:function(){return $scope.droppedAttachmentQueue}}};if(ApplicationFactory.IsVisitorIOSPhone()){delete attachmentOptions.appendTo}$uibModal.open(attachmentOptions)};$rootScope.$on("application_service_attachment_link_enable_disable",function(evt,data){$scope.offRecordFlag=data});$rootScope.$on("application_service_transcript_fetched_event",function(evt,data){$scope.offRecordFlag=data.EnableOffRecord});var waittimeLongerMsg="",waittimePatienceMsg="";ApplicationFactory.Translate("APP.EG_WAITTIME_LONGER_MSG").then(function(result){waittimeLongerMsg=result});ApplicationFactory.Translate("APP.EG_WAITTIME_PATIENCE_MSG").then(function(result){waittimePatienceMsg=result});$scope.$watch(function(){return ChatHeaderFactory.GetChatHeader()},function(newValue,oldValue){if((waittimeLongerMsg||waittimePatienceMsg)&&(newValue===waittimeLongerMsg||newValue===waittimePatienceMsg)){$scope.multilineStatus=true}else{$scope.multilineStatus=false}})}]);app.controller("PostChatPageController",["$scope","ConfigFactory",function($scope,ConfigFactory){$scope.showSurveyPage=ConfigFactory.GetChatConfigurations().SurveyPageOn;$scope.survey={submitted:false}}]);app.controller("PreChatPageController",["$scope","$stateParams","ApplicationFactory","ConfigFactory","ChatHeaderFactory",function($scope,$stateParams,ApplicationFactory,ConfigFactory,ChatHeaderFactory){$scope.preChatForm={submitted:false,show:false,wait:false};$scope.settings={}}]);app.controller("ThanksPageController",[function(){}]);app.controller("VALandingPageController",["$scope","$state","VAFactory","ApplicationFactory",function($scope,$state,VAFactory,ApplicationFactory){var customLaunchButtonClicked="true"===ApplicationFactory.GetUrlParameter("chatLaunched")?true:false;$scope.showLaunchButton=!customLaunchButtonClicked;if(!$scope.showLaunchButton){VAFactory.SetVAActive(true);$state.go("chat.interaction")}}]);app.controller("WaitScreenPageController",[function(){}]);
app.factory("ApplicationFactory",["$q","$injector","$window","$rootScope","$translate","ConfigFactory",function($q,$injector,$window,$rootScope,$translate,ConfigFactory){var factory={};var egainChatLibrary;var egainChat;var applicationCallbacks;var VAFactory=null;var agentName="";var translationLanguageSet=false;factory.transcriptLoadedDeferred=$q.defer();factory["X-egain-session"]=null;factory.LoadCustomMessagingProperties=function(){var locale=factory.GetUrlParameter("locale");var languageCode=factory.GetCaseSensitiveLocale(locale).split("-")[0]?factory.GetCaseSensitiveLocale(locale).split("-")[0]:"en";var countryCode=factory.GetCaseSensitiveLocale(locale).split("-")[1]?factory.GetCaseSensitiveLocale(locale).split("-")[1]:"US";var cust_chat_url="l10n/custom_chat_"+languageCode+"_"+countryCode+".properties";egainChat.LoadCustomMessagingProperties(cust_chat_url)};factory.InitializeApplicationState=function(){initializeEgainChatLibrary();var isVAEnabled=factory.GetUrlParameter("VAEnabled")==="true"?true:false;if(VAFactory===null){VAFactory=$injector.get("VAFactory");if(isVAEnabled)VAFactory.initializeVALibrary()}var providerid=factory.GetUrlParameter("providerId");if(providerid!==null){egainChatLibrary.AddConnectionParameter("providerId",providerid)}addOffersParametersToUrl();eGainOneTagUtil.cleanIFrameUrl();$translate.use(factory.GetCaseSensitiveLocale(factory.GetUrlParameter("locale"))).then(function(){translationLanguageSet=true})};factory.ValidateApplicationState=function(){return ConfigFactory.GetApplicationConfigurations().then(function(applicationConfig){if(angular.isDefined(applicationConfig))var userAgent=navigator.userAgent;var browserArray=applicationConfig.SUPPORTED_BROWSERS;var isBrowserValid=false;for(var i=0;i<browserArray.length;i++){if(userAgent.indexOf(browserArray[i])>-1){isBrowserValid=true}}if(!isBrowserValid){return false}else{console.log("App Service: validateAppState: resolving promise to True");return true}})};factory.CheckMobile=function(){var check=false;(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check=true})(navigator.userAgent||navigator.vendor||window.opera);return check};factory.IsVisitorAndroid=function(){var ua=navigator.userAgent;return ua.match(/Android/)};factory.IsVisitorIOSPhone=function(){var ua=navigator.userAgent;return ua.match(/(iPhone|iPod)/)};factory.IsVisitorIOSTablet=function(){var ua=navigator.userAgent;return ua.match(/iPad/)};factory.GetEgainChat=function(){return egainChat};factory.GetEgainChatLibrary=function(){return egainChatLibrary};factory.GetEgainChatCallbacks=function(){return applicationCallbacks};factory.SetEgainChatCallbacks=function(callbacks){applicationCallbacks=callbacks};factory.GetEgainChatParameter=function(){var chatParameter=new egainChatLibrary.Datatype.CustomerParameter;return chatParameter};factory.GetParameterFromUrlOrStorage=function(name,storageType){var retVal=factory.GetUrlParameter(name);if(null===retVal&&true===factory.IsUndocked()){retVal=factory.RetrieveFromStorage(name,storageType);retVal=null!==retVal?""+retVal:null}return retVal};factory.GetUrlParameter=function(name){name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var results=new RegExp("[\\?&]"+name+"=([^&#]*)").exec($window.location.href);return results?results[1]:null};factory.GetCaseSensitiveLocale=function(locale){var localeRegex=/^([a-z]{2})-([a-z]{2})$/i;if(localeRegex.test(locale)){locale=locale.replace(localeRegex,function(match,language,country,offset,str){return language.toLowerCase()+"-"+country.toUpperCase()})}else{locale=applicationDefaults.eGainChatDefaultLocale}return locale};factory.GetTimeZoneOffset=function(){var d=new Date;var offset=-1*d.getTimezoneOffset();var sign;if(offset>0){sign="%2B"}else{sign="-"}offset=Math.abs(offset);var minutes=offset%60;if(minutes/10<1){minutes="0"+minutes}var tzone=sign+Math.floor(offset/60)+minutes;return tzone};factory.GetEntryPointId=function(){return factory.GetUrlParameter("entryPointId")};factory.ResetChat=function(){var p=factory.CreatePayload("RESET_CHAT","","","EGLV_DOCK_CALLER_RESET");factory.PostMessageToParent(p)};factory.MaskMessage=function(message){return egainChatLibrary.Masker.MaskData(message)};factory.GetFormattedMessage=function(message,args){if(message&&args&&args.length){var replaceToken=null;for(var i=0;i<args.length&&typeof args[i]!="undefined"&&args[i]!=null;i++){replaceToken="{"+i+"}";if(message.indexOf(replaceToken)!=-1){message=message.replace(replaceToken,args[i])}}}return message};factory.GetAgentName=function(){return agentName};factory.SetAgentName=function(agent){agentName=agent};factory.Translate=function(str,values){if(translationLanguageSet){if(values){return $translate(str,values).then(function(result){return result},function(translationId){return translationId})}else{return $translate(str).then(function(result){return result},function(translationId){return translationId})}}else{var translatePromise=$q.defer();$rootScope.$watch(function(){return translationLanguageSet},function(newValue,oldValue){if(true===newValue){if(values){return $translate(str,values).then(function(result){translatePromise.resolve(result)},function(translationId){translatePromise.resolve(translationId)})}else{return $translate(str).then(function(result){translatePromise.resolve(result)},function(translationId){translatePromise.resolve(translationId)})}}});return translatePromise.promise}};var Payload=function(method,key,value,caller,storageType){this.Method=method;this.Key=key;this.Value=value;this.Caller=caller;this.StorageType=storageType};factory.PostMessageToParent=function(message){if(isDocked){$window.parent.postMessage(JSON.stringify(message),"*")}else if(isPoppedOut){switch(factory.popoutOpenedBy){case"egainiframe":{if($window.opener&&!$window.opener.closed&&$window.opener.parent&&$window.opener.parent.postMessage){$window.opener.parent.postMessage(JSON.stringify(message),"*")}break}case"customerpage":default:{if($window.opener&&!$window.opener.closed&&$window.opener.postMessage){$window.opener.postMessage(JSON.stringify(message),"*")}break}}}};factory.CreatePayload=function(method,key,value,caller,storageType){return new Payload(method,key,value,caller,storageType)};factory.Chat=function(entryPoint,isAvailabilityInfoRequired){var templateName=factory.GetUrlParameter("templateName");var version=factory.GetUrlParameter("ver");var locale=factory.GetUrlParameter("locale");var video="1"===factory.GetUrlParameter("video");var avmode=factory.GetUrlParameter("avmode");avmode=avmode?parseInt(avmode):null;var language=factory.GetCaseSensitiveLocale(locale).split("-")[0]?factory.GetCaseSensitiveLocale(locale).split("-")[0]:"en";var country=factory.GetCaseSensitiveLocale(locale).split("-")[1]?factory.GetCaseSensitiveLocale(locale).split("-")[1]:"US";var chatServer=null;if(VAFactory.IsVAEscalated()){if(VAFactory.GetVAChatServerURL()!="")chatServer=VAFactory.GetVAChatServerURL();var vaEntryPointId=VAFactory.GetVAEntryPointId();if(vaEntryPointId!=null&&vaEntryPointId!="")entryPoint=vaEntryPointId}egainChat.Initialize(entryPoint,language,country,applicationCallbacks,templateName,version,chatServer,video,avmode,isAvailabilityInfoRequired)};factory.PersistToParentStorage=function(key,value,storageType){if(false===factory.IsUndocked()){var payLoad;if(angular.equals("session",storageType)){payLoad=factory.CreatePayload("SET",key,value,"EGLV_DOCK_CALLER_SET","session")}else{payLoad=factory.CreatePayload("SET",key,value,"EGLV_DOCK_CALLER_SET")}factory.PostMessageToParent(payLoad)}else{if("object"===typeof value){factory.PersistToStorageKeyValuePairs(value,storageType)}else{factory.PersistToStorage(key,value,storageType)}}};factory.PersistToStorageKeyValuePairs=function(keyValuePairs,storageType){if(keyValuePairs&&"object"===typeof keyValuePairs){var keys=Object.keys(keyValuePairs);keys.forEach(function(key){factory.PersistToStorage(key,keyValuePairs[key],storageType)})}};factory.PersistToStorage=function(key,value,storageType){if(key){var storage="session"===storageType?"sessionStorage":"localStorage";try{var tempData=typeof value!=="string"?JSON.stringify(value):value;$window[storage].setItem(key,tempData)}catch(e){}}};factory.RetrieveFromStorage=function(key,storageType){var retVal=null;if(key){var storage="session"===storageType?"sessionStorage":"localStorage";var _getItem=function(ke){var val=null;try{val=$window[storage].getItem(ke)}catch(e){val=null}return val};if(Array.isArray(key)){retVal={};key.forEach(function(k){if(k){retVal[k]=_getItem(k)}})}else{retVal=_getItem(key)}}return retVal};factory.RemoveFromStorage=function(key,storageType){if(key){var storage="session"===storageType?"sessionStorage":"localStorage";if(Array.isArray(key)){key.forEach(function(k){if(k){$window[storage].removeItem(k)}})}else{$window[storage].removeItem(key)}}};var responsesQ={};var timerQ={};var retryCountIfValueNotRetrieved=applicationDefaults.retryCountIfValueNotRetrieved?applicationDefaults.retryCountIfValueNotRetrieved:0;var retryIntervalIfValueNotRetrieved=applicationDefaults.retryIntervalIfValueNotRetrieved?applicationDefaults.retryIntervalIfValueNotRetrieved:5e3;factory.RetrieveFromParentStorage=function(key,callback,storageType){var domainRegex=new RegExp(ChatConfigurations.domain);try{var payLoad;var retryCounter=0;responsesQ[key]=false;var _messageListener=function(event,data){if(!domainRegex.test(event.origin)){return}else{var parentData=JSON.parse(event.data);if(angular.equals("EGLV_DOCK_CALLER_GET",parentData.caller)&&(factory.IsUndocked()&&typeof parentData.key==="undefined"||key===parentData.key)){responsesQ[key]=true;retryCounter=0;clearTimeout(timerQ[key]);callback(parentData.value);$window.removeEventListener("message",_messageListener)}}};$window.addEventListener("message",_messageListener);if(angular.equals("session",storageType)){payLoad=factory.CreatePayload("GET",key,null,"EGLV_DOCK_CALLER_GET","session")}else{payLoad=factory.CreatePayload("GET",key,null,"EGLV_DOCK_CALLER_GET")}if(isDocked){$window.parent.postMessage(JSON.stringify(payLoad),"*")}else{switch(factory.popoutOpenedBy){case"egainiframe":{if($window.opener&&!$window.opener.closed&&$window.opener.parent&&$window.opener.parent.postMessage){$window.opener.parent.postMessage(JSON.stringify(payLoad),"*")}break}case"customerpage":default:{if($window.opener&&!$window.opener.closed&&$window.opener.postMessage){$window.opener.postMessage(JSON.stringify(payLoad),"*")}break}}}timerQ[key]=setTimeout(function notifyIfMessageNotReceived(){if(retryCounter>=retryCountIfValueNotRetrieved&&!responsesQ[key]){retryCounter=0;callback(null);$window.removeEventListener("message",_messageListener);clearTimeout(timerQ[key])}else{retryCounter++;setTimeout(notifyIfMessageNotReceived,retryIntervalIfValueNotRetrieved)}},retryIntervalIfValueNotRetrieved)}catch(e){callback(null)}};factory.RemoveFromParentStorage=function(dataToremove,storageType){if(false===factory.IsUndocked()){var payLoad;if(angular.equals("session",storageType)){payLoad=factory.CreatePayload("REMOVE",dataToremove,null,"EGLV_DOCK_CALLER_REMOVE","session")}else{payLoad=factory.CreatePayload("REMOVE",dataToremove,null,"EGLV_DOCK_CALLER_REMOVE")}factory.PostMessageToParent(payLoad)}else{factory.RemoveFromStorage(dataToremove,storageType)}};factory.NotifyParent=function(){};var mailLinkClicked=false;factory.SetMailLinkClicked=function(mailClicked){mailLinkClicked=mailClicked};factory.GetMailLinkClicked=function(){return mailLinkClicked};var attachmentClicked=false;factory.SetAttachmentClicked=function(value){attachmentClicked=value};factory.GetAttachmentClicked=function(){return attachmentClicked};var customerBlocked=false;factory.SetCustomerBlocked=function(value){customerBlocked=value};factory.GetCustomerBlocked=function(){return customerBlocked};var agentJoined=false;factory.SetAgentJoined=function(value){agentJoined=value};factory.GetAgentJoined=function(){return agentJoined};factory.IsIEorEdge=function(){return $window.navigator.userAgent.indexOf("Trident")!==-1||$window.navigator.userAgent.indexOf("Edge")>-1};function initializeEgainChatLibrary(){$rootScope.eGainContextPath=applicationDefaults.eGainContextPath;var librarySettings=new eGainLibrarySettings;librarySettings.CORSHost=applicationDefaults.eGainChatApiPath;librarySettings.IsDevelopmentModeOn=applicationDefaults.IsDevelopmentModeOn?applicationDefaults.IsDevelopmentModeOn:false;librarySettings.eGainContextPath=applicationDefaults.eGainContextPath?applicationDefaults.eGainContextPath:"";librarySettings.ChatPauseInSec=ConfigFactory.GetChatConfigurations().ChatPauseInSec?ConfigFactory.GetChatConfigurations().ChatPauseInSec:"30";librarySettings.IsDebugOn=factory.GetUrlParameter("debug")?factory.GetUrlParameter("debug")==="true":false;librarySettings.RetryCount=applicationDefaults.retryCount?applicationDefaults.retryCount:7;librarySettings.RetryIntervalInSec=applicationDefaults.retryIntervalInSec?applicationDefaults.retryIntervalInSec:5;egainChatLibrary=new eGainLibrary(librarySettings);egainChat=new egainChatLibrary.Chat;applicationCallbacks=egainChat.GetEventHandlers()}factory.GetCookie=function(name){var cookieVal=null;if(name&&"string"===typeof name){var allCookiesString=document.cookie;var cookiesString="; "+allCookiesString;var parts=cookiesString.split("; "+name+"=");parts.shift();if(1<=parts.length){cookieVal=parts.shift().split(";").shift()}}return cookieVal};function addOffersParametersToUrl(){var ofrsessionid=factory.GetUrlParameter("offercorrelationid");if(ofrsessionid!==null){egainChatLibrary.AddConnectionParameter("offercorrelationid",ofrsessionid)}var interactionid=factory.GetUrlParameter("interactionid");if(interactionid!==null){egainChatLibrary.AddConnectionParameter("interactionid",interactionid)}var aId=factory.GetUrlParameter("aId");if(aId!==null){egainChatLibrary.AddConnectionParameter("aId",aId)}var sId=factory.GetUrlParameter("sId");if(sId!==null){egainChatLibrary.AddConnectionParameter("sId",sId)}var uId=factory.GetUrlParameter("uId");if(uId!==null){egainChatLibrary.AddConnectionParameter("uId",uId)}var eglvrefname=factory.GetUrlParameter("eglvrefname");if(eglvrefname!==null){egainChatLibrary.AddConnectionParameter("eglvrefname",eglvrefname)}var eglvPriorityChat=factory.GetUrlParameter("eglvPriorityChat");if(eglvPriorityChat!==null){egainChatLibrary.AddConnectionParameter("eglvPriorityChat",eglvPriorityChat)}var referer=factory.GetUrlParameter("referer");if(referer!==null){egainChatLibrary.AddConnectionParameter("referer",referer)}var eglvcaseid=factory.GetUrlParameter("eglvcaseid");if(eglvcaseid!==null){egainChatLibrary.AddConnectionParameter("eglvcaseid",eglvcaseid)}var clientKey=factory.GetUrlParameter("clientKey");if(clientKey!==null){egainChatLibrary.AddConnectionParameter("clientKey",clientKey)}}var isDocked=factory.GetUrlParameter("docked")==="true"?true:false;var isPoppedOut=factory.GetUrlParameter("popout")==="true"?true:false;var isUndocked=false===isDocked&&false===isPoppedOut;factory.popoutOpenedBy=factory.GetUrlParameter("popoutOpenedBy");factory.isPoppedOut=function(){return isPoppedOut};factory.IsDocked=function(){return isDocked};factory.IsUndocked=function(){return isUndocked};var popoutButtonClicked=false;factory.isPopoutButtonClicked=function(isClicked){if(angular.isDefined(isClicked)){popoutButtonClicked=isClicked}return popoutButtonClicked};factory.transcriptLoaded=function(){var resolved=false;if(factory.transcriptLoadedDeferred){factory.transcriptLoadedDeferred.resolve(true);resolved=true}return resolved};factory.onceTranscriptLoaded=function(){var promise=null;if(factory.transcriptLoadedDeferred){promise=factory.transcriptLoadedDeferred.promise}return promise};factory.isDescendent=function(parent,child){var node=child.parentNode;while(node&&node!==null){if(node.className&&(node.className.indexOf(parent)>=0||parent===child.className||child.className.indexOf(parent)>=0||node.id===parent)){return true}node=node.parentNode}return false};factory.htmlEncode=function(value){return angular.element("<div/>").text(value).html()};factory.htmlDecode=function(value){return angular.element("<div/>").html(value).text()};factory.ReplaceMultipleSpaces=function(str){if(!str){return""}return str.replace(/[ ]{2,}/gm,function(match){var result="";for(var i=0;i<match.length-1;i++){result=result+"&nbsp;"}result=result+" ";return result})};factory.addBaseURL=function(url,baseURL){var retURL=url;if(url&&baseURL&&"string"===typeof url&&"string"===typeof baseURL){var hasServerNameRegex=/^(http:|https:)?\/\//i;retURL=!hasServerNameRegex.test(url)?baseURL+url:retURL}return retURL};factory.SendMultiSubDomainSupportConfigToParent=function(){var chatConfig=ConfigFactory.GetChatConfigurations();if(chatConfig&&chatConfig.MultiSubDomainSupport){var p=factory.CreatePayload("SUB_DOMAIN_SUPPORT","MultiSubDomainSupportConfig",JSON.stringify(chatConfig.MultiSubDomainSupport),"EGLV_DOCK_CALLER_SUBDOMAIN");factory.PostMessageToParent(p)}};factory.SetXEgainSessionID=function(sessionId){factory["X-egain-session"]=sessionId};factory.GetXEgainSessionID=function(){return factory["X-egain-session"]};factory.GetTabID=function(){return factory["egTabId"]};factory.SetTabID=function(tabId){factory["egTabId"]=tabId};var rtlLanguages=["ar","he","iw"];factory.isRtl=function(){var languageKey=factory.GetUrlParameter("locale");for(var i=0;i<rtlLanguages.length;i+=1){if(languageKey.indexOf(rtlLanguages[i])>-1)return true}return false};factory.SetXEgainSessionIDInChatLibrary=function(sessionId){egainChatLibrary.SetXEgainSession(sessionId)};factory.SetXEgainSessionIDOnInitialised=function(sessionId){factory.SetXEgainSessionID(sessionId);if(factory.IsUndocked()){factory.PersistToStorage("egXEgainSession",sessionId,"session")}else{factory.PersistToParentStorage("egXEgainSession",sessionId,"session")}};factory.GetXEgainSessionIDOnLoad=function(){var sessionId=null;if(factory.IsUndocked()){sessionId=factory.RetrieveFromStorage("egXEgainSession","session");factory.SetXEgainSessionID(sessionId);factory.SetXEgainSessionIDInChatLibrary(sessionId)}else{factory.RetrieveFromParentStorage("egXEgainSession",function(data){sessionId=data;factory.SetXEgainSessionID(sessionId);factory.SetXEgainSessionIDInChatLibrary(sessionId)},"session")}};factory.SetTabIDInChatLibrary=function(tabId){egainChatLibrary.SetTabID(tabId)};factory.SetTabIDOnInitialised=function(tabId){if(true===factory.IsDocked()||true===factory.isPoppedOut()){factory.SetTabID(tabId);factory.PersistToParentStorage("egTabId",tabId,"session")}};factory.GetTabIDOnLoad=function(){if(true===factory.IsDocked()||true===factory.isPoppedOut()){factory.RetrieveFromParentStorage("egTabId",function(tabId){if(tabId){factory.SetTabID(tabId)}else{factory.SetTabIDOnInitialised(Math.abs(Math.round(9999999999*Math.random())))}},"session")}};return factory}]);app.factory("AttachmentFactory",["$filter","$rootScope","ApplicationFactory","ConnectionFactory","CustomerFactory","MessageFactory",function($filter,$rootScope,ApplicationFactory,ConnectionFactory,CustomerFactory,MessageFactory){var factory={};var egainChat=ApplicationFactory.GetEgainChat();var appCallbacks=ApplicationFactory.GetEgainChatCallbacks();var customerAttachmentQueue=[];var $translate=$filter("translate");appCallbacks.OnCustomerAttachmentNotificationSent=function(customerAttachmentNotificationSentEventArgs){$rootScope.$broadcast("application_service_attachment_notification_sent_event",customerAttachmentNotificationSentEventArgs)};appCallbacks.OnAttachmentAcceptedByAgent=function(attachmentAcceptedByAgentEventArgs){var fileToUpload;var agentName={};if(typeof customerAttachmentQueue!=="undefined"||customerAttachmentQueue!==null){angular.forEach(customerAttachmentQueue,function(file){if(angular.equals(attachmentAcceptedByAgentEventArgs.uniqueFileId,file.uniqueFileId)){fileToUpload=file;agentName=attachmentAcceptedByAgentEventArgs.agentName}})}if(typeof fileToUpload==="undefined"||fileToUpload===null){var msg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.attachment_sending_cancelled+'"'));MessageFactory.SendSystemMessage(msg,"cancelattachment",true)}else{factory.UploadAttachment(fileToUpload,agentName)}};appCallbacks.OnAttachmentRejectedByAgent=function(attachmentRejectedByAgentEventArgs){$rootScope.$broadcast("application_service_attachment_rejected_by_agent_event",attachmentRejectedByAgentEventArgs)};appCallbacks.OnAttachmentUploadedByCustomer=function(attachmentUploadedByCustomerEventArgs){$rootScope.$broadcast("application_service_attachment_uploaded_by_customer_event",attachmentUploadedByCustomerEventArgs)};appCallbacks.OnAttachmentInviteReceived=function(attachmentInvitedAgentEventArgs){$rootScope.$broadcast("application_service_system_message_received_event",attachmentInvitedAgentEventArgs)};appCallbacks.OnAttachmentAcceptedByCustomer=function(attachmentAcceptedByCustomerEventArgs){$rootScope.$broadcast("application_service_attachment_accepted_notification_sent",attachmentAcceptedByCustomerEventArgs)};appCallbacks.OnAttachmentRejectedByCustomer=function(attachmentRejectedByCustomerEventArgs){$rootScope.$broadcast("application_service_attachment_rejected_notification_sent",attachmentRejectedByCustomerEventArgs)};appCallbacks.OnGetAttachment=function(getAgentAttachmentEventArgs){$rootScope.$broadcast("application_service_get_attachment_event",getAgentAttachmentEventArgs)};appCallbacks.OnGetAttachmentImageThumbnail=function(attachmentThumbnailArgs){$rootScope.$broadcast("application_service_get_attachment_image_thumbnail_event",attachmentThumbnailArgs)};factory.GetAttachment=function(filename,uniqueFileId){egainChat.GetAttachment(filename,uniqueFileId)};factory.GetArticleAttachment=function(filename){egainChat.GetArticleAttachment(filename)};factory.SendCustomerAttachmentNotification=function(files){egainChat.SendCustomerAttachmentNotification(files,CustomerFactory.GetCustomerScreenName())};factory.SendAcceptChatAttachmentNotification=function(fileId,filename){egainChat.SendAcceptChatAttachmentNotification(fileId,filename,CustomerFactory.GetCustomerScreenName())};factory.SendRejectChatAttachmentNotification=function(fileId,filename){egainChat.SendRejectChatAttachmentNotification(fileId,filename,CustomerFactory.GetCustomerScreenName())};factory.UploadAttachment=function(files,agentName){egainChat.UploadAttachment(files,agentName)};factory.GetImageThumbnail=function(fileId,uniqueFileId){egainChat.GetAttachmentImage(fileId,uniqueFileId)};factory.ValidateAttachmentFiles=function(files,isDropped,attachmentCount){ConnectionFactory.GetChatInitializationData().then(function(chatInitializationData){attachmentCount=isDropped===true?0:attachmentCount;var allowAllType;var tempAttachments={attachmentQueue:[],invalidCount:0,validCount:0};var tempAttachmentQueue=[];if(chatInitializationData&&chatInitializationData.listValue){allowAllType=chatInitializationData.listValue}else{allowAllType=true}for(var i=0;i<files.length;i++){var currentFile=files[i];currentFile.invalidFile=false;tempAttachments.validCount++;currentFile.maxNumberValidationFailed=false;if(files.length+attachmentCount>10){currentFile.invalidFile=true;tempAttachments.validCount--;tempAttachments.invalidCount++;currentFile.attachmentValidationError=$translate("APP.EG_MAXIMUM_ATTACHMENT_NUMBER_EXCEEDED");currentFile.maxNumberValidationFailed=true;tempAttachments.attachmentQueue.push(currentFile);break}var fileExtension="."+currentFile.name.split(".").pop();if(chatInitializationData.maxChatAttachmentSize<currentFile.size/(1024*1024)){currentFile.attachmentValidationError=$translate("APP.EG_ATTACHMENT_SIZE_FAIL_MESSAGE",{fileName:currentFile.name,maxAttachmentSize:chatInitializationData.maxChatAttachmentSize});currentFile.invalidFile=true;tempAttachments.validCount--;tempAttachments.invalidCount++}else if(allowAllType!==true){var isBlackListType=chatInitializationData.isBlackListType?chatInitializationData.isBlackListType:false;if(isBlackListType&&chatInitializationData.listValue.split(",").indexOf(fileExtension.toLowerCase())!==-1){currentFile.attachmentValidationError=$translate("APP.EG_FILE_BLACKLIST_MESSAGE",{fileName:currentFile.name});currentFile.invalidFile=true;tempAttachments.validCount--;tempAttachments.invalidCount++}else if(!isBlackListType&&chatInitializationData.listValue.split(",").indexOf(fileExtension.toLowerCase())===-1){currentFile.attachmentValidationError=$translate("APP.EG_FILE_NOT_IN_WHITE_LIST",{fileName:currentFile.name});currentFile.invalidFile=true;tempAttachments.validCount--;tempAttachments.invalidCount++}}currentFile.isDropped=isDropped;currentFile.isPending=true;tempAttachments.attachmentQueue.push(currentFile)}if(isDropped){$rootScope.$broadcast("application_service_validated_dropped_attachments",tempAttachments)}else{$rootScope.$broadcast("application_service_validated_selected_attachments",tempAttachments)}customerAttachmentQueue=customerAttachmentQueue.concat(tempAttachments.attachmentQueue)})};factory.GetAttachmentSizeUnit=function(bytes){if(bytes>=1048576){bytes=Math.floor(bytes*10/1048576)/10+" MB"}else if(bytes>=1024){bytes=Math.floor(bytes*10/1024)/10+" KB"}else if(bytes>1){bytes=bytes+" bytes"}else if(bytes===1){bytes=bytes+" byte"}else{bytes="0 byte"}return bytes};return factory}]);app.factory("AuthenticationFactory",["$window","$rootScope","ApplicationFactory","ConfigFactory","MessageFactory","ConnectionFactory","CustomerFactory",function($window,$rootScope,ApplicationFactory,ConfigFactory,MessageFactory,ConnectionFactory,CustomerFactory){var factory={state:{customerAcceptedAuthRequest:false,customerRejectedAuthRequest:false}};var connection=ConnectionFactory.GetConnection();var egainChat=ApplicationFactory.GetEgainChat();var appCallbacks=ApplicationFactory.GetEgainChatCallbacks();appCallbacks.OnAcceptAuthRequest=function(accepted,acceptAuthReqArgs,reqStatus){if(true===accepted){var param={SAMLRequest:acceptAuthReqArgs.samlRequest,RelayState:acceptAuthReqArgs.relayState};var windowFeatures="top=0,left=0,height=650,width=450,resizable=yes,scrollbars=yes,toolbar=no";var windowName="authWindow";factory.OpenWindowWithPost(acceptAuthReqArgs.idpLoginUrl,windowFeatures,windowName,param);factory.state.customerAcceptedAuthRequest=true;$rootScope.$broadcast("application_service_auth_request_processed",acceptAuthReqArgs.requestId);ApplicationFactory.Translate("APP.EG_AUTH_CUSTOMER_STARTED_AUTH_REQUEST",{AgentName:ApplicationFactory.GetAgentName()}).then(function(msg){MessageFactory.AddSystemMessageToTranscript(msg)})}else{if($rootScope.authWindow){$rootScope.authWindow.close()}if(reqStatus===0||reqStatus>400&&reqStatus<600||reqStatus>=12e3){$rootScope.$broadcast("application_service_auth_request_not_processed",acceptAuthReqArgs.requestId)}}};appCallbacks.OnDeclineAuthRequest=function(declined,declineAuthReqArgs,reqStatus){if(true===declined){factory.state.customerRejectedAuthRequest=true;$rootScope.$broadcast("application_service_auth_request_processed",declineAuthReqArgs.requestId);ApplicationFactory.Translate("APP.EG_AUTH_CUSTOMER_REJECTED_AUTH_REQUEST",{AgentName:ApplicationFactory.GetAgentName()}).then(function(msg){MessageFactory.AddSystemMessageToTranscript(msg)})}else{if(reqStatus===0||reqStatus>400&&reqStatus<600||reqStatus>=12e3){$rootScope.$broadcast("application_service_auth_request_not_processed",declineAuthReqArgs.requestId)}}};ApplicationFactory.SetEgainChatCallbacks(appCallbacks);factory.AcceptAuthRequest=function(requestId){egainChat.AcceptAuthRequest(connection.sessionID,requestId)};factory.DeclineAuthRequest=function(requestId){egainChat.DeclineAuthRequest(connection.sessionID,requestId)};factory.OpenWindowWithPost=function(url,windowoption,name,params){var form=angular.element("<form/>");form.attr("method","post");form.attr("id","sendRequestToIDPForm");form.attr("target",name);form.attr("action",url);for(var i in params){if(params.hasOwnProperty(i)){var input=angular.element("<input/>");input.attr("name",i);input.attr("type","hidden");input.attr("value",params[i]);form.append(input)}}angular.element(document).find("body").append(form);var map=window.open("",name,windowoption);if(map){angular.element(form)[0].submit()}else{factory.Alert("You must allow popups for authentication to work")}return map};factory.Alert=function(msg,debugMsg){if(msg){alert(msg);debugMsg=debugMsg||msg;console.log(debugMsg)}};factory.AlertL10N=function(l10nKey){if(l10nKey){ApplicationFactory.Translate("APP."+l10nKey).then(function(msg){factory.Alert(msg)})}};return factory}]);app.factory("ConfigFactory",["$http",function($http){var factory={};var chatConfig;var applicationConfig;chatConfig=ChatConfigurations;applicationConfig=$http.get(applicationDefaults.eGainContextPath+"application/application-config.json").then(function(configresponse){return configresponse.data.Settings});factory.GetChatConfigurations=function(){return chatConfig};factory.GetApplicationConfigurations=function(){return applicationConfig};return factory}]);app.factory("ConnectionFactory",["$timeout","$rootScope","$q","$window","$state","ApplicationFactory","ConfigFactory","SessionFactory","MessageFactory","TranscriptFactory","VAFactory","ChatService",function($timeout,$rootScope,$q,$window,$state,ApplicationFactory,ConfigFactory,SessionFactory,MessageFactory,TranscriptFactory,VAFactory,ChatService){var factory={};var connection={connected:false,sessionID:0};var egainChatLibrary=ApplicationFactory.GetEgainChatLibrary();var egainChat=ApplicationFactory.GetEgainChat();var appCallbacks=ApplicationFactory.GetEgainChatCallbacks();var entryPointId=ApplicationFactory.GetUrlParameter("entryPointId");var chatInitializationDataDeferred=$q.defer();var errorMessageAdded=false;var queueDepthRequired=false;var networkDisconnected=false;if("QUEUE_POSITION"===ConfigFactory.GetChatConfigurations().DisplayForChatWaitingSatus){queueDepthRequired=true}appCallbacks.OnConnectionInitialized=function(ChatInitializedEventArgs){var chatInitializationData=ChatInitializedEventArgs;if(null===chatInitializationData){ApplicationFactory.Translate("APP.EG_CHAT_INITIALIZATION_ERROR").then(function(result){$state.go("chat.error",{errorMsg:result})});return}if(chatInitializationData){chatInitializationDataDeferred.resolve(chatInitializationData)}if(chatInitializationData.XEgainSession){ApplicationFactory.SetXEgainSessionIDOnInitialised(chatInitializationData.XEgainSession)}ApplicationFactory.RetrieveFromParentStorage("VhtIDs",function(data){if(data){egainChatLibrary.SetVisitorHistoryInformation(data.aId,data.uId,data.sId)}});$rootScope.$broadcast("application_service_chat_initialized_success_event",ChatInitializedEventArgs)};appCallbacks.OnMessagePropertyLoad=function(ChatMessagePropertyLoadEventArgs){eGainOneTagUtil.parseMessages(ChatMessagePropertyLoadEventArgs);$rootScope.messagingProperty=parseMessages(ChatMessagePropertyLoadEventArgs);function parseMessages(messagingPropertyStr){var messagingPropertyObj={};if(messagingPropertyStr){var mesagingPropertyVariables=messagingPropertyStr.split("\n");for(i=0;i<mesagingPropertyVariables.length;i++){var keyValuePair=mesagingPropertyVariables[i].split("=");if(keyValuePair.constructor===Array&&keyValuePair.length>1){var key=keyValuePair[0].trim();var value=keyValuePair[1].trim();messagingPropertyObj[key]=value}}}return messagingPropertyObj}};appCallbacks.OnConnectSuccess=function(ChatConnectSuccessEventArgs){connection.connected=true;connection.sessionID=ChatConnectSuccessEventArgs.SessionID;ApplicationFactory.PersistToParentStorage("egSessionId",connection.sessionID);ApplicationFactory.PersistToParentStorage("egChatInProgress","true","session");if(ApplicationFactory.IsUndocked()){ApplicationFactory.PersistToStorage("egSessionId",connection.sessionID);ApplicationFactory.PersistToStorage("isUnDockedChatInProgress",true);ApplicationFactory.PersistToStorage("isUnDockedChatInProgress",true,"session")}if(ApplicationFactory.IsDocked()){ApplicationFactory.PersistToParentStorage("egFetchFromStorage",true)}TranscriptFactory.GetTranscriptTemplate().then(function(response){TranscriptFactory.CheckTranscriptFileVersion(response)});if(MobileInterface){MobileInterface.SendChatStarted(connection.sessionID);MobileInterface.SetSID(connection.sessionID)}$rootScope.$broadcast("application_service_chat_connect_success_event",ChatConnectSuccessEventArgs)};appCallbacks.OnConnectionComplete=function(){};appCallbacks.OnCustTerminateSuccess=function(){SessionFactory.ClearSessionState();if(ApplicationFactory.IsUndocked()){$window.sessionStorage.setItem("isUnDockedChatInProgress",false)}connection.connected=false;eGainOneTagUtil.pushChatEvent("aac",{EventName:"ChatSurveyEntry"});if(MobileInterface){MobileInterface.SendChatEnded()}if(typeof integWrapUpFlag==="undefined"||!integWrapUpFlag){if(ApplicationFactory.IsUndocked()){var agentJoinedValueFromStorage=ApplicationFactory.RetrieveFromStorage("agentJoined","local");AgentJoinedCallback(agentJoinedValueFromStorage)}else{ApplicationFactory.RetrieveFromParentStorage("agentJoined",AgentJoinedCallback,"local")}function AgentJoinedCallback(agentJoinedValueFromStorage){agentJoinedValueFromStorage=agentJoinedValueFromStorage==="true";ApplicationFactory.SetAgentJoined(agentJoinedValueFromStorage);$rootScope.$broadcast("application_service_chat_connection_completion_event");if(ApplicationFactory.GetCustomerBlocked()===false&&agentJoinedValueFromStorage){ApplicationFactory.RemoveFromParentStorage("agentJoined","local");$state.go("chat.post-chat")}else if(ApplicationFactory.GetCustomerBlocked()===true){ApplicationFactory.ResetChat();if(!ApplicationFactory.IsDocked()){if(ApplicationFactory.isPoppedOut()){ApplicationFactory.PersistToParentStorage("egPopoutWindow","false","session")}}$window.close()}else{$state.go("chat.thank-you")}}}};appCallbacks.OnConnectionFailure=function(ChatConnectFailureEventArgs){connection.connected=false;SessionFactory.ClearSessionState();if(angular.equals("REMOTE_CONNECTION_FAILURE",ChatConnectFailureEventArgs.StatusCode)){if(ChatConnectFailureEventArgs.StatusMessage==="403-101"){$state.go("chat.error",{errorCode:"CUSTOMER_BLOCKED"})}else if(ChatConnectFailureEventArgs.StatusMessage==="403-201"){$state.go("chat.error",{errorCode:"EG_CHATS_PER_HOUR_LIMIT_REACHED"})}else{$state.go("chat.error",{errorCode:ChatConnectFailureEventArgs.StatusMessage})}}else if(angular.equals("CONNECT_FAIL",ChatConnectFailureEventArgs.StatusCode)){$rootScope.$broadcast("application_service_chat_connection_failure_event",ChatConnectFailureEventArgs)}};appCallbacks.OnCustomerBlocked=function(){ApplicationFactory.SetCustomerBlocked(true);$rootScope.$broadcast("application_service_customer_block_event")};appCallbacks.OnNetworkDisconnect=function(){networkDisconnected=true;$timeout(function(){if(networkDisconnected){$rootScope.$broadcast("application_service_network_disconnect_event")}})};appCallbacks.OnNetworkReconnect=function(){networkDisconnected=false;errorMessageAdded=false;$timeout(function(){$rootScope.$broadcast("application_service_network_reconnect_event")})};appCallbacks.OnTimeToReconnectExpired=function(){connection.connected=false;SessionFactory.ClearSessionState();$rootScope.$broadcast("application_service_extended_timeout_expired")};appCallbacks.OnAgentJoined=function(AgentJoinedEventArgs){if(AgentJoinedEventArgs.AgentName){ApplicationFactory.SetAgentName(AgentJoinedEventArgs.AgentName)}$rootScope.$broadcast("application_service_agent_joined_event",AgentJoinedEventArgs)};appCallbacks.OnDuplicateSession=function(DuplicateSessionEventArgs){connection.connected=false;if(!(ConfigFactory.GetChatConfigurations()&&ConfigFactory.GetChatConfigurations().MultiSubDomainSupport&&ConfigFactory.GetChatConfigurations().MultiSubDomainSupport.IsRequired)){ApplicationFactory.PersistToParentStorage("egDuplicateSession","true","session")}$state.go("chat.error",{errorCode:DuplicateSessionEventArgs.StatusCode})};appCallbacks.OnErrorOccurred=function(OnErrorOccurredEventArgs){factory.ErrorHandler(OnErrorOccurredEventArgs);$rootScope.$broadcast("application_service_chat_error_occurred_event",OnErrorOccurredEventArgs)};appCallbacks.OnAgentsNotAvailable=function(agentsNotAvailableEventArgs){eGainOneTagUtil.pushChatEvent("aac",{EventName:"ChatOutOfHours"});$state.go("chat.chat-unavailable")};appCallbacks.OnConnectionAttached=function(){connection.connected=true;var sessionData=SessionFactory.GetSessionState();if(sessionData){factory.GetChatInitializationData().then(function(chatInitializationData){eGainOneTagUtil.disableTracker();eGainOneTagUtil.loadOneTag(chatInitializationData)});connection.sessionID=sessionData.sessionID;MessageFactory.SetBadgeCount(ApplicationFactory.GetUrlParameter("egBadgeCount"));TranscriptFactory.GetTranscriptTemplate();ApplicationFactory.PersistToStorage("egSessionId",connection.sessionID);ApplicationFactory.PersistToParentStorage("egChatInProgress","true","session");$state.go("chat.interaction",{attachedChat:true})}$rootScope.$broadcast("application_service_chat_attach_success_event");if(ApplicationFactory.IsUndocked()){ApplicationFactory.PersistToStorage("isUnDockedChatInProgress",true);ApplicationFactory.PersistToStorage("isUnDockedChatInProgress",true,"session")}};appCallbacks.OnConnectionAttachedFailure=function(responseStatus){connection.connected=false;SessionFactory.ClearSessionState();ApplicationFactory.ResetChat();if(!ApplicationFactory.IsDocked()&&responseStatus==400){$state.go("launch-chat",{launchChat:true})}};appCallbacks.OnDockConnectionAttachedFailure=function(responseStatus){var chatConfig=ConfigFactory.GetChatConfigurations();var hideDockedChatIconForDuplicateChat=chatConfig&&chatConfig.HideDockedChatIconForDuplicateChat;if(hideDockedChatIconForDuplicateChat){factory.CheckLastDockConnectionAttachedFailureTime(true)}else{factory.SetDuplicateChat()}};factory.CheckLastDockConnectionAttachedFailureTime=function(updateFailureTimeForTheFirstTime){connection.connected=false;if(updateFailureTimeForTheFirstTime){ApplicationFactory.PersistToParentStorage("egLastDuplicateSessionFailureTime",Date.now());$timeout(function(){factory.CheckLastDockConnectionAttachedFailureTime(false)},3e4)}else{ApplicationFactory.RetrieveFromParentStorage("egLastDuplicateSessionFailureTime",function(lastFailureTimeStamp){var now=Date.now();if(lastFailureTimeStamp){var elapsedTime=now-lastFailureTimeStamp;if(elapsedTime>3e4){ApplicationFactory.ResetChat()}else if(elapsedTime>0){var retryAfter=3e4-elapsedTime;$timeout(function(){factory.CheckLastDockConnectionAttachedFailureTime(false)},retryAfter)}else{}}else{$timeout(function(){factory.CheckLastDockConnectionAttachedFailureTime(false)},1e4)}})}};appCallbacks.OnChatTransfer=function(transType){SessionFactory.SetChatTransferredFlag(true);ApplicationFactory.PersistToParentStorage("isChatAttachmentEnabled",transType.ChatAttachmentEnabled);$rootScope.$broadcast("application_service_chat_transfer_event",transType)};var queueStatusPromise=null;var chatAwaitingEvtDone="true"===ApplicationFactory.GetParameterFromUrlOrStorage("egAwaitingEvtDone","session")?true:false;eGainOneTagUtil.chatAwaitingAgentCaptured=chatAwaitingEvtDone;appCallbacks.OnGetQueueCurrentStatus=function(getQueueLiveStatusArgs){if(eGainOneTagUtil.pushChatAwaitingMsg(getQueueLiveStatusArgs.WaitTime)){ApplicationFactory.PersistToParentStorage("egAwaitingEvtDone","true","session")}if(queueStatusPromise){queueStatusPromise.resolve(getQueueLiveStatusArgs)}};appCallbacks.OnApplicationFailOverSuccess=function(){console.log("Application failover success event called..");$rootScope.$broadcast("application_failover_success_event",{})};ApplicationFactory.SetEgainChatCallbacks(appCallbacks);factory.GetConnection=function(){return connection};factory.GetChatInitializationData=function(){return chatInitializationDataDeferred.promise};factory.StartChat=function(oneTagCustomerInfo){var oneTagEventInfo={};oneTagEventInfo["EventName"]="ChatRequested";eGainOneTagUtil.pushChatEvent("aev",oneTagEventInfo);if(ApplicationFactory.IsUndocked()){var aId=ApplicationFactory.GetUrlParameter("aId");var sId=ApplicationFactory.GetUrlParameter("sId");var uId=ApplicationFactory.GetUrlParameter("uId");if(aId&&sId&&uId){egainChatLibrary.SetVisitorHistoryInformation(aId,uId,sId)}}egainChat.Start()};factory.EndChat=function(reason){if(reason==="browser_unload"&&navigator.sendBeacon&&(ApplicationFactory.IsUndocked()||ApplicationFactory.isPoppedOut())){egainChat.SendBeaconToEndChat(reason)}else{egainChat.End(reason)}};factory.SetDuplicateChat=function(){connection.connected=false;if(!(ConfigFactory.GetChatConfigurations()&&ConfigFactory.GetChatConfigurations().MultiSubDomainSupport&&ConfigFactory.GetChatConfigurations().MultiSubDomainSupport.IsRequired)){ApplicationFactory.PersistToParentStorage("egDuplicateSession","true","session")}SessionFactory.SetDuplicateSessionFlag(true);$state.go("chat.error",{errorCode:"DUPLICATE_SESSION",minimizePage:true})};var isChatPaused=false;factory.PauseChat=function(){if(angular.isDefined(egainChat)&&angular.isDefined(egainChat.Pause)&&!isChatPaused){isChatPaused=true;egainChat.Pause()}};factory.AttachToChat=function(){if(VAFactory.IsVAActive()){var vaSessionId=SessionFactory.GetVASessionId();if(vaSessionId){$state.go("chat.interaction",{attachedChat:true})}return}var sessionData=SessionFactory.GetSessionState();if(sessionData){var templateName=ApplicationFactory.GetUrlParameter("templateName");var version=ApplicationFactory.GetUrlParameter("ver");var locale=ApplicationFactory.GetUrlParameter("locale");var video="1"===ApplicationFactory.GetUrlParameter("video");var avmode=ApplicationFactory.GetUrlParameter("avmode");var language=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]:"en";var country=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]:"US";if(VAFactory.GetVAChatServerURL()!==""){egainChat.Initialize(VAFactory.GetVAEntryPointId(),language,country,appCallbacks,templateName,version,VAFactory.GetVAChatServerURL(),video,avmode);factory.GetChatInitializationData().then(function(){if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){egainChat.AttachDock(sessionData.sessionID,parseInt(sessionData.lastRequestId),ApplicationFactory.GetTabID())}else{egainChat.Attach(sessionData.sessionID,parseInt(sessionData.lastRequestId))}})}else{egainChat.Initialize(ApplicationFactory.GetUrlParameter("entryPointId"),language,country,appCallbacks,templateName,version,null,video,avmode);factory.GetChatInitializationData().then(function(){if(true===ApplicationFactory.IsDocked()||true===ApplicationFactory.isPoppedOut()){egainChat.AttachDock(sessionData.sessionID,parseInt(sessionData.lastRequestId),ApplicationFactory.GetTabID())}else{egainChat.Attach(sessionData.sessionID,parseInt(sessionData.lastRequestId))}})}}};factory.ResumeChat=function(){if(angular.isDefined(egainChat)&&angular.isDefined(egainChat)&&isChatPaused){isChatPaused=false;egainChat.Resume()}};factory.GetQueueCurrentStatus=function(){queueStatusPromise=$q.defer();egainChatLibrary.GetQueueCurrentStatus(queueDepthRequired);return queueStatusPromise.promise};factory.IsNetworkConnectionActive=function(){return ChatService.IsAgentAvailable(entryPointId,ApplicationFactory.GetXEgainSessionID()).then(function(response){if(true===response.isErrorPresent&&"CHAT-107"===response.errorObject.errorCode){return false}return true})};var errorMessage="";ApplicationFactory.Translate("APP.EG_ERROR_CONNECTION").then(function(result){errorMessage=result});factory.ErrorHandler=function(error){if(ApplicationFactory.GetMailLinkClicked()===true||ApplicationFactory.GetAttachmentClicked()===true){return}if(true===factory.GetConnection().connected&&error&&!errorMessageAdded&&"string"===typeof error.status){$timeout(function(){if(networkDisconnected){factory.ShowConnectionErrorMessage()}},5e3)}};factory.ShowConnectionErrorMessage=function(){if(!errorMessageAdded){errorMessageAdded=true;MessageFactory.AddSystemMessageToTranscript(errorMessage);$rootScope.$broadcast("application_service_chat_error_message_published")}};if(egainChatLibrary&&ApplicationFactory.GetUrlParameter("debug")==="true"){var loggerMessageCount=0;var logs=[];ApplicationFactory.GetEgainChatLibrary().logger=function(msg){if(msg){var msgObject={data:{index:loggerMessageCount,from:"logger",message:msg,type:"logger"}}}logs.push(msgObject);MessageFactory.SetTranscript(MessageFactory.GetTranscript().concat(logs));loggerMessageCount++}}return factory}]);app.factory("CustomerFactory",["$rootScope","ApplicationFactory",function($rootScope,ApplicationFactory){var factory={};var customer;var customerScreenName;ApplicationFactory.Translate("APP.EG_CUSTOMER").then(function(result){customerScreenName=result});var egainChatLibrary=ApplicationFactory.GetEgainChatLibrary();factory.CreateCustomer=function(){if(!customer)customer=new egainChatLibrary.Datatype.CustomerObject;return customer};factory.SetCustomer=function(customerObj){if(!customerObj){customer=new egainChatLibrary.Datatype.CustomerObject}else{customer=customerObj}var locale=ApplicationFactory.GetUrlParameter("locale");customer.Locale.Language=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[0]:"en";customer.Locale.Country=ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]?ApplicationFactory.GetCaseSensitiveLocale(locale).split("-")[1]:"US";egainChatLibrary.SetCustomer(customer);$rootScope.customer=customer};factory.SetSamlResponse=function(samlResponse){if(samlResponse)egainChatLibrary.SetSamlResponse(samlResponse)};factory.SetEscalationData=function(escalationData){if(escalationData){egainChatLibrary.SetEscalationData(escalationData)}};factory.GetCustomer=function(){return customer};factory.GetCustomerScreenName=function(){return customerScreenName};factory.SetCustomerScreenName=function(customerName){customerScreenName=customerName};return factory}]);app.factory("GHFactory",["$window","$rootScope","$injector","$q","ChatService","ApplicationFactory",function($window,$rootScope,$injector,$q,ChatService,ApplicationFactory){var factory={};var ghUrl=null;var ghDomain=null;var ghActive=null;var ghSolutionAcknowledged=false;var ghQuickPick=null;var VAFactory=null;var GH_EVENT_TRACKER={queue:[],processQ:function(){if(VAFactory===null){VAFactory=$injector.get("VAFactory")}var event=GH_EVENT_TRACKER.queue.pop();if(event.EventName==="GH_SOLUTION_ACCEPTED"||event.EventName==="GH_SOLUTION_REJECTED"){ghSolutionAcknowledged=true}VAFactory.SendVaMessage(null,event.EventName)},push:function(evt){GH_EVENT_TRACKER.queue.push(evt);GH_EVENT_TRACKER.processQ()}};factory.OpenGHWindow=function(url,type,logEvent){if(url){if("gh"===type){url=addParameterToURL(url,"vaInitiated=true");url=addParameterToURL(url,"ghReload=true")}ghUrl=url;ghDomain=getDomain(ghUrl);$rootScope.$broadcast("gh_url_update",{GHUrl:ghUrl,Reload:true});ghActive=true;ghSolutionAcknowledged=false;if(typeof logEvent==="undefined"){logEvent=true}if(logEvent){factory.LogEvent({EventName:"SLIDEOUT_MAXIMIZED"})}ApplicationFactory.PersistToParentStorage("egGHUrl",url,"session");var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_GH_ACTIVE","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);ApplicationFactory.PersistToParentStorage("egGHActive",true,"session")}};factory.CloseGHWindow=function(logEvent){ghActive=null;if(typeof logEvent==="undefined"){logEvent=true}if(logEvent){GH_EVENT_TRACKER.push({EventName:"SLIDEOUT_EXITED"})}if(!ghSolutionAcknowledged){if(logEvent){GH_EVENT_TRACKER.push({EventName:"GH_SESSION_ABORTED"});ghSolutionAcknowledged=false}}var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_GH_CLOSED","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);ApplicationFactory.RemoveFromParentStorage("egGHUrl","session");ApplicationFactory.RemoveFromParentStorage("egGHActive","session");postMessageToGH("EGLV_GH_WINDOW_CLOSED")};factory.ExpandGHWindow=function(logEvent){ghActive=true;if(typeof logEvent==="undefined"){logEvent=true}if(logEvent){factory.LogEvent({EventName:"SLIDEOUT_MAXIMIZED"})}var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_GH_ACTIVE","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);ApplicationFactory.PersistToParentStorage("egGHActive",true,"session")};factory.CollapseGHWindow=function(logEvent){ghActive=false;if(typeof logEvent==="undefined"){logEvent=true}if(true===logEvent){factory.LogEvent({EventName:"SLIDEOUT_MINIMIZED"})}var resize=ApplicationFactory.CreatePayload("RESIZE_WINDOW","EG_GH_COLLAPSED","","EGLV_DOCK_CALLER_SET");ApplicationFactory.PostMessageToParent(resize);ApplicationFactory.PersistToParentStorage("egGHActive",false,"session")};factory.SetGHUrl=function(url){ghUrl=url;ghDomain=getDomain(ghUrl);$rootScope.$broadcast("gh_url_update",{GHUrl:ghUrl})};factory.GetGHUrl=function(){return ghUrl};factory.GetGHActive=function(){return ghActive};factory.SetGHActive=function(active){ghActive=active};factory.GetGHSessionData=function(){var ghSessionDataStr=null;var url=decodeURIComponent($window.location.href);if(url.indexOf("gh-data-start")>0){ghSessionDataStr=url.substring(url.indexOf("gh-data-start")+13,url.indexOf("gh-data-end"))}return ghSessionDataStr};factory.LogEvent=function(evt){if(evt&&evt.EventName){GH_EVENT_TRACKER.push(evt)}};factory.CreateQuickPick=function(){var deferred=$q.defer();var createQuickPickResponse={statusCode:"FAILURE",errorMessage:""};var quickPickQueryParams=null;var onGHSessionDataReceived=function(ghSessionData){if(ghSessionData===null||typeof ghSessionData==="undefined"||ghSessionData===""){createQuickPickResponse.errorMessage="Quickpick Query params is not available";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse)}try{quickPickQueryParams=ghSessionData}catch(e){createQuickPickResponse.errorMessage="Quickpick Query params is not valid";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse)}linkQuickpick()};var quickPickPortalData=null;var onQuickPickDataReceived=function(quickpickData){if(quickpickData===null||typeof quickpickData==="undefined"||quickpickData===""){createQuickPickResponse.errorMessage="Quickpick portal data is not available";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse)}try{quickPickPortalData=JSON.parse(quickpickData)}catch(e){createQuickPickResponse.errorMessage="Quickpick portal data is not valid";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse)}ApplicationFactory.RetrieveFromParentStorage("GH_SESSION_DATA",onGHSessionDataReceived,"session")};var linkQuickpick=function(){try{if(quickPickPortalData===null||quickPickQueryParams===null){return}if(quickPickPortalData===null&&quickPickQueryParams===null){createQuickPickResponse.errorMessage="Error in fetching quickpick data";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse);return}var ghPortalID=quickPickPortalData.portalId;var ghCasebaseId=quickPickPortalData.casebaseId;if(ghPortalID&&ghCasebaseId&&quickPickQueryParams){ghQuickPick={};ghQuickPick.PortalId=ghPortalID;ghQuickPick.CasebaseId=ghCasebaseId;ghQuickPick.QueryParams=quickPickQueryParams;console.info("Quickpick created successfully");deferred.resolve(createQuickPickResponse)}else{createQuickPickResponse.errorMessage="Quickpick data is not valid";console.info(createQuickPickResponse.errorMessage);deferred.resolve(createQuickPickResponse)}}catch(e){createQuickPickResponse.errorMessage="Failed to create quick pick data";console.error(createQuickPickResponse.errorMessage+"::"+e);deferred.resolve(createQuickPickResponse)}};ApplicationFactory.RetrieveFromParentStorage("GH_QUICKPICK_DATA",onQuickPickDataReceived,"session");return deferred.promise};factory.GetQuickPick=function(){return ghQuickPick};var ghWindow=null;var windowMessageListeners=function(event){if(ghDomain&&event.origin===ghDomain){switch(event.data.action){case"SAVE_GH_SESSION_DATA":ghWindow=event.source;var key=event.data.content.key;var value=event.data.content.value;ApplicationFactory.PersistToParentStorage(key,value,"session");break;case"DELETE_GH_SESSION_DATA":ghWindow=event.source;var key=event.data.content.key;ApplicationFactory.RemoveFromParentStorage(key,"session");break;case"LOG_EVENT":ghWindow=event.source;var eventData=event.data.content.eventData;GH_EVENT_TRACKER.push(eventData);break;default:break}}};if($window.addEventListener){$window.addEventListener("message",windowMessageListeners,false)}else{$window.attachEvent("message",windowMessageListeners)}var postMessageToGH=function(action){if(ghWindow){var event={action:action};ghWindow.postMessage(event,"*")}};var addParameterToURL=function(url,param){var _url=url;_url+=(_url.split("?")[1]?"&":"?")+param;return _url};var domainRegex=/^((?:https?:\/\/)?(?:www\.)?([^\/]+))/i;var getDomain=function(serverURL){var domainResult=domainRegex.exec(serverURL);return domainResult!==null?domainResult[0]:$window.location.origin};return factory}]);app.factory("ChatHeaderFactory",["ApplicationFactory","VAFactory",function(ApplicationFactory,VAFactory){var factory={};var header="";var imageUrl=ApplicationFactory.GetUrlParameter("vaLastAvatar");if(imageUrl===null||imageUrl===""){imageUrl=VAFactory.GetLaunchImage()}factory.SetChatHeader=function(string,args,isTranslated){if(isTranslated){header=string}else{if(args){ApplicationFactory.Translate(string,args).then(function(result){header=result;if(args.hasOwnProperty("queuePosition")&&args.queuePosition<=0){header=""}})}else{ApplicationFactory.Translate(string).then(function(result){header=result})}}};factory.SetChatHeaderImage=function(url,relative){if(relative){imageUrl=applicationDefaults.eGainContextPath+url}else{imageUrl=url}};factory.GetChatHeader=function(){return header};factory.GetChatHeaderImage=function(){return imageUrl};return factory}]);app.factory("HooksFactory",["$rootScope","$state",function($rootScope,$state){var factory={};factory.ShowError=function(errorMessage){if(errorMessage){$state.go("chat.error",{errorMsg:errorMessage})}else{return}};factory.LoadProperties=function(ChatMessagePropertyLoadEventArgs){$rootScope.integCustomProperty=parseMessages(ChatMessagePropertyLoadEventArgs);function parseMessages(messagingPropertyStr){var messagingPropertyObj={};if(messagingPropertyStr){var mesagingPropertyVariables=messagingPropertyStr.split("\n");for(i=0;i<mesagingPropertyVariables.length;i++){var keyValuePair=mesagingPropertyVariables[i].split("=");if(keyValuePair.constructor===Array&&keyValuePair.length>1){var key=keyValuePair[0].trim();var value=keyValuePair[1].trim();messagingPropertyObj[key]=value}}}return messagingPropertyObj}};factory.integOffHoursMessage=function(isDocked,response){if(response=="3"){if($rootScope.integCustomProperty==undefined)setTimeout(this.integOffHoursMessage,2e3,isDocked,response);else{errorMessage=$rootScope.integCustomProperty["L10N_LINES_ARE_BUSY"];$state.go("chat.error",{errorMsg:errorMessage})}}};return factory}]);app.factory("HttpInterceptorFactory",["$q","$injector","$timeout",function($q,$injector,$timeout){var _502Map={};var myInterceptor={request:function(request){return request},response:function(response){if(_502Map[response.config.url]){var mapData=_502Map[response.config.url];delete _502Map[response.config.url];mapData.deferred.resolve(response)}return response},responseError:function(error){if(angular.equals(502,error.status)||angular.equals(503,error.status)||angular.equals(504,error.status)){var deferred=$q.defer();if(_502Map[error.config.url]){_502Map[error.config.url].count+=1}else{_502Map[error.config.url]={request:error.config,deferred:deferred,count:0}}if(_502Map[error.config.url].count>=applicationDefaults.retryCount){_502Map={};var $state=$injector.get("$state");$state.go("chat.error",{errorCode:"CONNECT_FAIL"})}else{var httpService=$injector.get("$http");$timeout(function(){httpService(error.config)},applicationDefaults.retryIntervalInSec*1e3);return deferred.promise}}return $q.reject(error)}};return myInterceptor}]);app.factory("MessageFactory",["$rootScope","$q","$window","$filter","ApplicationFactory","SessionFactory","ConfigFactory","VAFactory",function($rootScope,$q,$window,$filter,ApplicationFactory,SessionFactory,ConfigFactory,VAFactory){var factory={};var transcript;var preChatTranscript;var messageBadge=0;var offRecordFlag=false;var egainChat=ApplicationFactory.GetEgainChat();var appCallbacks=ApplicationFactory.GetEgainChatCallbacks();var transcriptPromise;var messageBadge=ApplicationFactory.GetUrlParameter("egBadgeCount");if(messageBadge){messageBadge=parseInt(messageBadge);if(isNaN(messageBadge)){messageBadge=0}}else{messageBadge=0}appCallbacks.OnAgentMessageReceived=function(agentMessageReceivedEventArgs){$rootScope.$broadcast("application_service_agent_message_received_event",agentMessageReceivedEventArgs)};appCallbacks.OnAgentStartTyping=function(agentStartTypingEventArgs){$rootScope.$broadcast("application_service_agent_start_typing_event",agentStartTypingEventArgs)};appCallbacks.OnAgentStopTyping=function(agentStopTypingEventArgs){$rootScope.$broadcast("application_service_agent_stop_typing_event",agentStopTypingEventArgs)};appCallbacks.OnSystemMessageReceived=function(systemMessageReceivedEventArgs){$rootScope.$broadcast("application_service_system_message_received_event",systemMessageReceivedEventArgs)};appCallbacks.OnServerNotificationReceived=function(serverNotificationReceivedEntArgs){$rootScope.$broadcast("application_service_server_notification_received_event",serverNotificationReceivedEntArgs)};appCallbacks.OnCobrowseInviteReceived=function(cobrowseInviteReceivedEventArgs){$rootScope.$broadcast("application_service_cobrowse_invite_received_event",cobrowseInviteReceivedEventArgs)};appCallbacks.OnTranscriptFetched=function(transcriptArgs){if(transcriptArgs.isVAEscalated){transcript=null}else if(transcriptArgs.responseStatus===400){transcript=preChatTranscript;transcriptArgs=preChatTranscript}else{transcript=transcriptArgs}transcriptPromise.resolve(transcriptArgs);factory.sendTranscriptFetchedEvent(transcriptArgs);if(transcriptArgs.BannedCustomer===true){ApplicationFactory.SetCustomerBlocked(true);$rootScope.$broadcast("application_service_customer_block_event")}};ApplicationFactory.SetEgainChatCallbacks(appCallbacks);factory.sendTranscriptFetchedEvent=function(transcriptArgs){$rootScope.$broadcast("application_service_transcript_fetched_event",transcriptArgs)};factory.SendSystemMessage=function(data,command,isHidden,addToTranscript){if(!command){egainChat.SendSystemMessage(data)}else{egainChat.SendSystemMessage(data,command)}if(addToTranscript!==false){factory.AddSystemMessageToTranscript(data,isHidden)}};factory.AddSystemMessageToTranscript=function(data,isHidden){$rootScope.$broadcast("application_service_send_system_message_event",data,isHidden)};factory.SendMessageToAgent=function(data,isOffRecord){var eventData={originalMessage:data};if(VAFactory.IsVAActive()){eventData.sentMessage=data;if(data.length>0){$rootScope.$broadcast("application_service_send_message_to_agent_event",eventData)}VAFactory.SendVaMessage(data)}else{var maskedMessage=data;if(!offRecordFlag){maskedMessage=ApplicationFactory.htmlDecode(maskedMessage);maskedMessage=ApplicationFactory.MaskMessage(maskedMessage);maskedMessage=ApplicationFactory.htmlEncode(maskedMessage)}maskedMessage=ApplicationFactory.ReplaceMultipleSpaces(maskedMessage);maskedMessage=maskedMessage.replace(/\n/g,"<br/>");eventData.originalMessage=ApplicationFactory.ReplaceMultipleSpaces(eventData.originalMessage);eventData.originalMessage=eventData.originalMessage.replace(/\n/g,"<br/>");var sentMessage=egainChat.SendMaskedMessageToAgent(maskedMessage);eventData.sentMessage=sentMessage;if(!offRecordFlag){eGainOneTagUtil.pushChatCustomerMsg(sentMessage)}$rootScope.$broadcast("application_service_send_message_to_agent_event",eventData)}};factory.SendCustomerStartTypingStatus=function(){if(!VAFactory.IsVAActive()){egainChat.SendCustomerStartTyping()}};factory.SendCustomerStopTypingStatus=function(){if(!VAFactory.IsVAActive()){egainChat.SendCustomerStopTyping()}};factory.SetTranscript=function(chatTranscript){if(typeof transcript==="undefined"){transcript=chatTranscript}else{angular.forEach(Object.keys(chatTranscript),function(keyName,key){transcript[keyName]=chatTranscript[keyName]})}};factory.SetLastAVChatInvitationDetails=function(lastAVChatInvitationMedia,lastAVChatInvitationStatus){if(lastAVChatInvitationMedia){factory.lastAVChatInvitationMedia=lastAVChatInvitationMedia}if(lastAVChatInvitationStatus){factory.lastAVChatInvitationStatus=lastAVChatInvitationStatus}};factory.SetBadgeCount=function(badgeCount){if(typeof badgeCount!=="undefined"){messageBadge=badgeCount}ApplicationFactory.PersistToParentStorage("egBadgeCount",messageBadge)};factory.GetBadgeCount=function(){return messageBadge};factory.GetChatTranscript=function(forceAPICall){transcriptPromise=$q.defer();if(!forceAPICall&&typeof transcript!=="undefined"&&transcript!==null){transcriptPromise.resolve(transcript)}else{transcript={};egainChat.GetTranscript()}return transcriptPromise.promise};factory.SetOffRecordFlag=function(flag){offRecordFlag=flag};factory.GetOffRecordFlag=function(){return offRecordFlag};var agentMessageTypes=["agent","agent1","agent2","agent3"];var agentTemplate=[];factory.GetAgentMessageType=function(agentName){var agentMsgTemplate;if(!angular.isDefined(agentTemplate[agentName])){var size=0;for(t in agentTemplate){size++}agentMsgTemplate=agentMessageTypes[size%agentMessageTypes.length];agentTemplate[agentName]=agentMsgTemplate}else{agentMsgTemplate=agentTemplate[agentName]}return agentMsgTemplate};function isInt(value){return!isNaN(value)&&parseInt(Number(value))==value&&!isNaN(parseInt(value,10))}factory.setPreChatTranscript=function(obj){preChatTranscript={};preChatTranscript.CustomerName=obj.full_name;preChatTranscript.Subject=obj.subject;preChatTranscript.StartTime=new Date;preChatTranscript.Messages=[];var messageObj={};messageObj.Body=obj.subject;messageObj.Timestamp=this.GetFormattedTime(new Date);messageObj.SenderName=obj.full_name;messageObj.SenderType="Customer";preChatTranscript.Messages.push(messageObj)};factory.GetFormattedTime=function(date,messageTimestamp){var currentTime=$filter("date")(date,ConfigFactory.GetChatConfigurations().ChatMessagesTimeFormat);var invalidDate=false;if(!(Object.prototype.toString.call(currentTime)==="[object String]")){invalidDate=true}if(invalidDate){if(date&&"function"===typeof date.getHours&&isInt(date.getHours())&&"function"===typeof date.getMinutes&&isInt(date.getMinutes())&&"function"===typeof date.getSeconds&&isInt(date.getSeconds())){var hours=date.getHours();var minutes=date.getMinutes();var seconds=date.getSeconds();var ampm=hours>=12?"PM":"AM";hours=hours%12;hours=hours?hours:12;minutes=minutes<10?"0"+minutes:minutes;seconds=seconds<10?"0"+seconds:seconds;var strTime=hours+":"+minutes+":"+seconds+" "+ampm;currentTime=strTime}else if(messageTimestamp){currentTime=messageTimestamp}else{currentTime=""}}return currentTime};return factory}]);var MobileInterfaceObj=function(){var MobileInstance;if(typeof AndroidInterface!=="undefined"){MobileInstance=new AndroidSDK}else if(typeof webkit!="undefined"&&webkit.messageHandlers&&webkit.messageHandlers.IOSInterface){MobileInstance=new IOS_SDK}this._getInstance=function(){return MobileInstance};this._sendChatStarted=function(sid){MobileInstance.SendChatStarted(sid)};this._sendCloseButtonClicked=function(){MobileInstance.SendCloseButtonClicked()};this._sendChatEnded=function(){MobileInstance.SendChatEnded()};this._saveTranscript=function(data){MobileInstance.SaveTranscript(data)};this._closeChat=function(){MobileInstance.CloseChat()};this._getCustomerData=function(callback){MobileInstance.GetCustomerData(callback)};this._onCustomerDataReceived=function(data){if(MobileInstance.OnCustomerDataReceived){MobileInstance.OnCustomerDataReceived(data)}else{return false}};this._downloadAttachment=function(url){if(MobileInstance.DownloadAttachment){MobileInstance.DownloadAttachment(url)}};this._setSID=function(sid){MobileInstance.SetSID(sid)};this._showCloseButton=function(flag){MobileInstance.ShowCloseButton(flag)}};MobileInterfaceObj.prototype.GetInstance=function(){return this._getInstance()};MobileInterfaceObj.prototype.SendChatStarted=function(sid){this._sendChatStarted(sid)};MobileInterfaceObj.prototype.SendCloseButtonClicked=function(){this._sendCloseButtonClicked()};MobileInterfaceObj.prototype.SendChatEnded=function(){this._sendChatEnded()};MobileInterfaceObj.prototype.CloseChat=function(){this._closeChat()};MobileInterfaceObj.prototype.SaveTranscript=function(data){this._saveTranscript(data)};MobileInterfaceObj.prototype.GetCustomerData=function(callback){this._getCustomerData(callback)};MobileInterfaceObj.prototype.OnCustomerDataReceived=function(data){this._onCustomerDataReceived(data)};MobileInterfaceObj.prototype.SetSID=function(sid){this._setSID(sid)};MobileInterfaceObj.prototype.DownloadAttachment=function(attachmentUrl){this._downloadAttachment(attachmentUrl)};MobileInterfaceObj.prototype.ShowCloseButton=function(flag){this._showCloseButton(flag)};MobileInterfaceObj.prototype.IsCloseButtonVisible=function(){this._isCloseButtonVisible()};var AndroidSDK=function(){this.SendChatStarted=function(sid){if(typeof AndroidInterface.onChatStarted==="function")AndroidInterface.onChatStarted(sid)};this.SendCloseButtonClicked=function(){AndroidInterface.onChatClosed("Chat button clicked")};this.SendChatEnded=function(){if(typeof AndroidInterface.onChatEnded==="function")AndroidInterface.onChatEnded()};this.GetCustomerData=function(callback){var data={};try{data=JSON.parse(AndroidInterface.getCustomerData())}catch(e){console.log("Error in geting customer details from app")}if(typeof callback==="function"){callback(data)}};this.SaveTranscript=function(data){AndroidInterface.saveTranscript(data)};this.SetSID=function(sid){AndroidInterface.setSId(sid)};this.CloseChat=function(){document.getElementById("chat-close-btn").click()};this.ShowCloseButton=function(flag){if(flag===false){document.getElementById("chat-close-btn").style.display="none"}}};var IOS_SDK=function(){this.SendChatStarted=function(sid){webkit.messageHandlers.IOSChatStarted.postMessage(sid)};this.SendCloseButtonClicked=function(){webkit.messageHandlers.IOSChatClosed.postMessage("Chat button clicked")};this.SendChatEnded=function(){webkit.messageHandlers.IOSChatEnded.postMessage()};var callbackFunc;this.GetCustomerData=function(callback){callbackFunc=callback;webkit.messageHandlers.IOSGetCustomerData.postMessage("Get customer data")};this.SaveTranscript=function(data){webkit.messageHandlers.IOSSaveTranscript.postMessage(data)};this.DownloadAttachment=function(url){webkit.messageHandlers.IOSDownloadAttachment.postMessage(url)};this.SetSID=function(sid){webkit.messageHandlers.IOSSetSessionId.postMessage(sid)};this.CloseChat=function(){document.getElementById("chat-close-btn").click()};this.OnCustomerDataReceived=function(data){if(callbackFunc){callbackFunc(JSON.parse(data))}};this.ShowCloseButton=function(flag){if(flag===false){document.getElementById("chat-close-btn").style.display="none"}}};var MobileInterface=(new MobileInterfaceObj).GetInstance();app.factory("SessionFactory",["ApplicationFactory",function(ApplicationFactory){var factory={};var session={};var cobrowseSession={};var vaSessionId="";var isChatAttachmentEnabled=false;var isChatTransferred=false;var isDuplicateSession=false;factory.SetSessionState=function(chatSessionData,lastRequestId){if(session){session=chatSessionData}if(lastRequestId){session.lastRequestId=lastRequestId}};factory.SetVASessionId=function(sid){vaSessionId=sid};factory.GetVASessionId=function(){return vaSessionId};factory.GetSessionState=function(){return session};factory.ClearSessionState=function(){session.data={};var dataToremove=["egSessionId","egChatWindowState","egBadgeCount","EgainLastRequestId","egChatInProgress","egOffRecordBtnState","egChatStateBeforeUnload","egChatEngaged","egAgentMsg","egSystemMsg","egFetchFromStorage"];ApplicationFactory.RemoveFromParentStorage(dataToremove);var dataToremove=["egAwaitingEvtDone","egChatInProgress"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"session");var dataToremove=["vaSessionId","vaActive","VAEnabled","vaChatServerURL","vaEscalated","vaChatEntryPointId"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"session");if(ApplicationFactory.isPoppedOut()===false){var dataToremove=["egPopoutWindow","egPopoutUrl"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"session");var dataToremove=["egPopoutWindowTimestamp"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"local")}var dataToremove=["EGAIN_AV_CHAT_STATE_DATA"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"local");var dataToremove=["egGHActive","egGHUrl"];ApplicationFactory.RemoveFromParentStorage(dataToremove,"session");factory.SetVASessionId("");try{ApplicationFactory.RemoveFromStorage("egCobrowseSessionData","local")}catch(err){console.log("Failed to clear Cobrowse Session Data.")}ApplicationFactory.RemoveFromParentStorage("waitTimeStart","session")};factory.SaveCobrowseSessionState=function(cobrowseInvites){cobrowseSession.cobrowseInvites=cobrowseInvites;ApplicationFactory.PersistToStorage("egCobrowseSessionData",cobrowseSession,"local")};factory.GetCobrowseSessionState=function(){if(!cobrowseSession||!cobrowseSession.cobrowseInvites){var cobrowseSessionData=ApplicationFactory.RetrieveFromStorage("egCobrowseSessionData","local");if(cobrowseSessionData){cobrowseSession=JSON.parse(cobrowseSessionData)}else{cobrowseSession={};cobrowseSession.cobrowseInvites={}}}return cobrowseSession};factory.SetChatAttachmentEnabledFlag=function(flag){isChatAttachmentEnabled=flag};factory.GetChatAttachmentEnabledFlag=function(){return isChatAttachmentEnabled};factory.SetChatTransferredFlag=function(flag){isChatTransferred=flag};factory.GetChatTransferredFlag=function(){return isChatTransferred};factory.SetDuplicateSessionFlag=function(flag){isDuplicateSession=flag};factory.GetDuplicateSessionFlag=function(){return isDuplicateSession};return factory}]);app.factory("TranscriptFactory",["$q","$http","$rootScope","$translate","$filter","ApplicationFactory","MessageFactory","SessionFactory","VAFactory",function($q,$http,$rootScope,$translate,$filter,ApplicationFactory,MessageFactory,SessionFactory,VAFactory){var factory={};var template;var transcriptTemplate;var pendingAttachmentCount=0;var templateName=ApplicationFactory.GetUrlParameter("templateName");registerHandlebarsHelpers();factory.GetTranscriptTemplate=function(){if(transcriptTemplate){return $q.when(transcriptTemplate)}else{if(templateName){return $http.get(applicationDefaults.eGainContextPath+"transcript/transcript.properties").then(function(response){transcriptTemplate=response.data;template=Handlebars.compile(response.data);return response.data})}}};factory.CheckTranscriptFileVersion=function(data){var hash=CryptoJS.MD5(data);var chatServerURL=VAFactory.GetVAChatServerURL();chatServerURL=chatServerURL!=null&&chatServerURL!=""?chatServerURL:applicationDefaults.eGainChatApiPath;$http({method:"POST",url:chatServerURL+"/egain/chat/entrypoint/checktranscriptfileversion/"+templateName,headers:{"Content-Type":"application/x-www-form-urlencoded","X-egain-session":ApplicationFactory.GetXEgainSessionID()},data:postParams({md5:hash.toString()}),dataType:"text"}).then(function(response){if(response.data=="false"){factory.PostTranscriptTemplate(data,hash.toString())}})};factory.PostTranscriptTemplate=function(transcript,md5){var chatServerURL=VAFactory.GetVAChatServerURL();chatServerURL=chatServerURL!=null&&chatServerURL!=""?chatServerURL:applicationDefaults.eGainChatApiPath;$http({method:"POST",url:chatServerURL+"/egain/chat/entrypoint/posttranscripttemplate/"+templateName,headers:{"Content-Type":"application/x-www-form-urlencoded","X-egain-session":ApplicationFactory.GetXEgainSessionID()},data:postParams({transcript:transcript,md5:md5})})};factory.GetTranscript=function(){return $q.all([getChatTranscript(),getCobrowseTranscript()]).then(function(transcripts){return transcripts[0]+transcripts[1]})};function registerHandlebarsHelpers(){Handlebars.registerHelper("ifCustomer",function(options){if(!this.attributes){return options.inverse(this)}if(this.attributes.type=="Customer"){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifAgent1",function(options){if(!this.attributes){return options.inverse(this)}if(this.attributes.type=="agent"){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifAgent2",function(options){if(!this.attributes){return options.inverse(this)}if(this.attributes.type=="agent1"){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifAgent3",function(options){if(!this.attributes){return options.inverse(this)}if(this.attributes.type=="agent2"){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifAgent4",function(options){if(!this.attributes){return options.inverse(this)}if(this.attributes.type=="agent3"){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifSystem",function(options){if(this.attributes==null){return options.fn(this)}else{return options.inverse(this)}});Handlebars.registerHelper("ifIsRtl",function(options){if(ApplicationFactory.isRtl()){return options.fn(this)}else{return options.inverse(this)}})}function getChatTranscript(){var chatTranscript="";var title="";var footer="";var footerByEgain="";var offRecordMessage="";var printTitle="";var messages=[];return $translate(["APP.EG_TRANSCRIPT_HEADER","APP.EG_TRANSCRIPT_FOOTER","APP.EG_POWERED_BY_BRAND","APP.EG_OFF_RECORD_MESSAGE_REMOVED","APP.EG_PRINT"]).then(function(translations){title=translations["APP.EG_TRANSCRIPT_HEADER"];footer=translations["APP.EG_TRANSCRIPT_FOOTER"];footerByEgain=translations["APP.EG_POWERED_BY_BRAND"];offRecordMessage=translations["APP.EG_OFF_RECORD_MESSAGE_REMOVED"];printTitle=translations["APP.EG_PRINT"];return MessageFactory.GetChatTranscript().then(function(response){angular.forEach(response.Messages,function(messageObject){var newMessageObject={};if(messageObject.SenderType==="System"||messageObject.SenderType==="logger"){if(messageObject.Attachment){var args=new Array;args[1]=messageObject.Attachment.Name;args[0]=messageObject.SenderName;var agentInitiatedAttachmentMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.attachment_to_chat_customer+'"'));agentInitiatedAttachmentMsg=ApplicationFactory.GetFormattedMessage(agentInitiatedAttachmentMsg,args);newMessageObject.body=agentInitiatedAttachmentMsg;newMessageObject.time=messageObject.Timestamp}else if(messageObject.AuthenticationRequest){var args=new Array;args[0]=messageObject.AuthenticationRequest.SenderName;var agentInitiatedAuthRequestMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.agent_requested_for_mid_chat_authentication+'"'));agentInitiatedAuthRequestMsg=ApplicationFactory.GetFormattedMessage(agentInitiatedAuthRequestMsg,args);newMessageObject.body=agentInitiatedAuthRequestMsg;newMessageObject.time=messageObject.Timestamp}else{newMessageObject.body=messageObject.Body;newMessageObject.time=messageObject.Timestamp}}else{if(messageObject.Attachment){var args=new Array;args[1]=messageObject.Attachment.Name;args[0]=messageObject.SenderName;var agentInitiatedAttachmentMsg=decodeURIComponent(JSON.parse('"'+$rootScope.messagingProperty.attachment_to_chat_customer+'"'));agentInitiatedAttachmentMsg=ApplicationFactory.GetFormattedMessage(agentInitiatedAttachmentMsg,args);newMessageObject.body=agentInitiatedAttachmentMsg;newMessageObject.time=messageObject.Timestamp}else{newMessageObject.attributes={author:messageObject.SenderName,type:messageObject.SenderType,time:messageObject.Timestamp};if(messageObject.OffRecord===true){newMessageObject.attributes.body=offRecordMessage}else{newMessageObject.attributes.body=messageObject.Body}}}messages.push(newMessageObject)});return $translate("APP.EG_TRANSCRIPT_START_TIME",{chatStartTime:$filter("date")(new Date(response.StartTime),"medium")}).then(function(result){var content={title:title,liveChat:title,transcript:"transcript",chatStartedAt:result,footerLiveChat:footer,footerByEgain:footerByEgain,isMailTranscript:false,messages:messages,isOffRecordMsgReplaced:false,imageUrl:[window.location.protocol,"//",window.location.host,applicationDefaults.eGainChatApiPath,"/templates/chat/",templateName,"/image"].join(""),printTitle:printTitle,isRtl:ApplicationFactory.isRtl()};chatTranscript=template(content);return chatTranscript})})})}var getCobrowseTranscript=function(){var cobrowseTranscript="";var promises=new Array;var tzone=ApplicationFactory.GetTimeZoneOffset();var cobrowseSessionData=SessionFactory.GetCobrowseSessionState();if(cobrowseSessionData&&cobrowseSessionData.cobrowseInvites){for(var cbSessionId in cobrowseSessionData.cobrowseInvites){var cobrowseInvite=cobrowseSessionData.cobrowseInvites[cbSessionId];if(cobrowseInvite&&cobrowseInvite.status=="CLOSED"){var customerName=cobrowseInvite.customerName;var promise=$http.get(applicationDefaults.eGainChatApiPath+"/web/view/collaboration/agent/fetchTranscript.jsp?sessionId="+cbSessionId+"&consumer=CUSTOMER&custName="+customerName+"&tzone="+tzone,{cache:true});promises.push(promise)}}}if(promises.length>0){return $q.all(promises).then(function(cobrowseTranscriptData){angular.forEach(cobrowseTranscriptData,function(cobrowseTranscriptDataEle){if(cobrowseTranscriptDataEle&&cobrowseTranscriptDataEle.data){cobrowseTranscript+=cobrowseTranscriptDataEle.data}});return cobrowseTranscript},function(){return $q.when(cobrowseTranscript)})}else{return $q.when(cobrowseTranscript)}};var postParams=function(obj){var str=[];for(var p in obj)str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")};factory.IncreasePendingAttachmentCount=function(){pendingAttachmentCount++};factory.DecreasePendingAttachmentCount=function(){pendingAttachmentCount--};factory.GetPendingAttachmentCount=function(){return pendingAttachmentCount};return factory}]);app.factory("VAFactory",["$rootScope","$q","ApplicationFactory","SessionFactory","GHFactory",function($rootScope,$q,ApplicationFactory,SessionFactory,GHFactory){var factory={};var isVAEnabled=ApplicationFactory.GetUrlParameter("VAEnabled")==="true"?true:false;var isVAActive=ApplicationFactory.GetUrlParameter("VAActive")==="true"?true:false;var isVAEscalated=ApplicationFactory.GetUrlParameter("VAEscalated")==="true"?true:false;var CustomerContextParameters={};var transcript;var transcriptPromise;var VALibrary;var VAChatServerURL="";var VAEntryPointId="";var launchImage="";var imageNameLoadedDeferred=$q.defer();var customer;var botName="";var validAnswersHtml="";var chatServerURL=ApplicationFactory.GetUrlParameter("vaChatServerURL");if(chatServerURL!==null)VAChatServerURL=chatServerURL;var chatEntryPointId=ApplicationFactory.GetUrlParameter("vaChatEntryPointId");if(chatEntryPointId!==null)VAEntryPointId=chatEntryPointId;factory.initializeVALibrary=function(){var librarySettings=new eGainLibrarySettings;ApplicationFactory.RetrieveFromParentStorage("EgainChatParameter",setCustomerContextParameters);ApplicationFactory.RetrieveFromParentStorage("validAnswersHtml",setValidAnswerHtml,"session");var vaApiPath=ApplicationFactory.GetUrlParameter("eGainVAApiPath");if(vaApiPath){vaConfigurations.eGainVAApiPath=vaApiPath}if(vaConfigurations.eGainVAApiPath===""){var domainRegex=/^((?:https?:\/\/)?(?:www\.)?([^\/]+))/i;var domainResult=domainRegex.exec(window.location.href);vaConfigurations.eGainVAApiPath=domainResult!=null?domainResult[0]:window.location.origin}librarySettings.CORSHost=vaConfigurations.eGainVAApiPath;VALibrary=new eGainVALibrary(librarySettings);var vaName=ApplicationFactory.GetUrlParameter("VAName");var vaLaunchImagePath=ApplicationFactory.GetUrlParameter("VALaunchImagePath");if(vaLaunchImagePath){launchImage=vaLaunchImagePath}else{launchImage=vaConfigurations[vaName+"_launchImage"]}if(typeof launchImage==="undefined"||launchImage===null||launchImage.trim()===""){VALibrary.GetLaunchImage(ApplicationFactory.GetUrlParameter("VATenantAccId"),ApplicationFactory.GetUrlParameter("VAName"),vaLaunchImageCallback)}else{imageNameLoadedDeferred.resolve(launchImage)}var ShowPreChatOnEscalation=ApplicationFactory.GetUrlParameter("ShowPreChatOnEscalation");if(ShowPreChatOnEscalation!=="undefined"&&ShowPreChatOnEscalation!==""){vaConfigurations.ShowPreChatOnEscalation=ShowPreChatOnEscalation=="true"}};var setCustomerContextParameters=function(data){CustomerContextParameters=data};var setValidAnswerHtml=function(data){validAnswersHtml=data};factory.SetVAEnabled=function(isEnabled){isVAEnabled=isEnabled};factory.IsVAEnabled=function(){return isVAEnabled===true};factory.SetVAActive=function(vaActive){isVAActive=vaActive;ApplicationFactory.PersistToParentStorage("vaActive",isVAActive,"session")};factory.IsVAActive=function(){return isVAActive===true};factory.SetVAEscalated=function(isEscalated){isVAEscalated=isEscalated;ApplicationFactory.PersistToParentStorage("vaEscalated",isEscalated,"session")};factory.IsVAEscalated=function(){return isVAEscalated};factory.GetVALibrary=function(){return VALibrary};factory.SetVAChatServerURL=function(url){VAChatServerURL=url};factory.GetVAChatServerURL=function(){return VAChatServerURL};factory.SetVAEntryPointId=function(id){VAEntryPointId=id};factory.GetVAEntryPointId=function(){return VAEntryPointId};factory.GetShowPreChatOnEscalation=function(){return vaConfigurations.ShowPreChatOnEscalation};factory.SendVaMessage=function(data,action){var sid=SessionFactory.GetVASessionId();sendMessageToVa(data,action,sid)};factory.SetLaunchImage=function(path){launchImage=path;imageNameLoadedDeferred.resolve(path)};factory.GetLaunchImage=function(reload){return imageNameLoadedDeferred.promise};factory.GetVAHost=function(reload){return VALibrary.GetVAHost()};factory.GetVACustomer=function(){return customer};factory.GetBotName=function(){return botName};var vaLaunchImageCallback=function(data){if(data.launchImage.indexOf("http")==-1)data.launchImage=factory.GetVAHost()+"/assistantIMG/"+data.launchImage+"/Emotions/launchImage.gif";factory.SetLaunchImage(data.launchImage)};factory.GetVATranscript=function(isVAEscalated){transcriptPromise=$q.defer();var sid=SessionFactory.GetVASessionId();VALibrary.GetVATranscript(ApplicationFactory.GetUrlParameter("VATenantAccId"),sid,isVAEscalated,vaTranscriptCallback);return transcriptPromise.promise};var sendMessageToVa=function(data,action,sessionId){if(typeof data!=="undefined"&&data!==null){data=ApplicationFactory.htmlDecode(data)}VALibrary.SendMessageToVA(ApplicationFactory.GetUrlParameter("VATenantAccId"),ApplicationFactory.GetUrlParameter("VAName"),sessionId,data,action,vaExchangeCallback,CustomerContextParameters)};var vaExchangeCallback=function(data){var postMessageDataObj={};if(data.escalate){if(data.entryPointId&&data.entryPointId!=""){VAEntryPointId=data.entryPointId;postMessageDataObj["vaChatEntryPointId"]=data.entryPointId}if(data.chatServerURL&&data.chatServerURL!=""){VAChatServerURL=data.chatServerURL;postMessageDataObj["vaChatServerURL"]=data.chatServerURL}if(data.customer){var i=0;for(i=0;i<data.customer.length;i++){data.customer[i]=eGain$("<textarea/>").html(data.customer[i]).text()}customer=data.customer}}if(data.avatar){postMessageDataObj["vaLastAvatar"]=data.avatar}if(data.validAnswersHtml!=null&&data.validAnswersHtml!=""){postMessageDataObj["validAnswersHtml"]=data.validAnswersHtml}else{postMessageDataObj["validAnswersHtml"]=""}if(data.AgentScreenName){botName=data.AgentScreenName}ApplicationFactory.PersistToParentStorage("vaData",postMessageDataObj,"session");if(SessionFactory.GetVASessionId()===""||SessionFactory.GetVASessionId()!==data.sid){SessionFactory.SetVASessionId(data.sid);ApplicationFactory.PersistToParentStorage("vaSessionId",data.sid,"session")}$rootScope.$broadcast("application_service_agent_message_received_event",data);if(data.slideouturl&&data.slideouturl.trim()!=""){GHFactory.OpenGHWindow(data.slideouturl,data.slideouttype,true)}};var vaTranscriptCallback=function(transcriptArgs){if(transcriptArgs.isVAEscalated)transcript=null;else transcript=transcriptArgs;if(transcript&&transcript.Messages){var total=transcript.Messages.length;if(total>0){botName=transcript.Messages[0].SenderName;if(validAnswersHtml!=null&&validAnswersHtml!=""){transcript.Messages[total-1].Body=transcript.Messages[total-1].Body+validAnswersHtml}}}transcriptPromise.resolve(transcriptArgs)};return factory}]);app.factory("VideoFactory",["$window","$rootScope","ApplicationFactory","ConfigFactory","MessageFactory","ConnectionFactory","CustomerFactory",function($window,$rootScope,ApplicationFactory,ConfigFactory,MessageFactory,ConnectionFactory,CustomerFactory){Number.isInteger=Number.isInteger||function(value){return typeof value==="number"&&isFinite(value)&&Math.floor(value)===value};var factory={AGENT_VIDEO_MODE:1,TWO_WAY_AUDIO_VIDEO_MODE:2,AGENT_AUDIO_MODE:3,TWO_WAY_AUDIO_MODE:4,TWO_WAY_AUDIO_AGENT_VIDEO_MODE:5,TWO_WAY_AUDIO_CUSTOMER_VIDEO_MODE:6,state:{agentInitiatedVideo:false,agentInvitationTime:0,audioCapable:false,audioPaused:false,AVinitialized:true,avmode:0,custInvitationTime:0,isAgentJoined:false,isDirectAudioChatEnabled:false,isDirectVideoChatEnabled:false,isVideoChatEnabled:false,isVideoChatLicensed:false,openTokParams:null,publisherInitialized:true,showVideoButton:false,subscriberInitialized:true,vendor:null,videoCapable:false,videochat:false,videoChatMaxEscalation:0,videoInitialized:false,videoPaused:false,videoShowing:false,videoStopped:false},showVideoChatButton:false,showAudioChatButton:false,avChatFrameMaximised:false,isChatTransferred:false};var _saveTop=-1;var _saveLeft=-1;var _saveHeight=-1;var _saveWidth=-1;var _popoutWindow=$window;factory.state.avmode=factory.TWO_WAY_AUDIO_VIDEO_MODE;var connection=ConnectionFactory.GetConnection();var egainChat=ApplicationFactory.GetEgainChat();var appCallbacks=ApplicationFactory.GetEgainChatCallbacks();$rootScope.$on("application_service_chat_initialized_success_event",function(evt,response){if(response){factory.state.isVideoChatLicensed="boolean"===typeof response.isVideoChatLicensed?response.isVideoChatLicensed:false;factory.state.isVideoChatEnabled="boolean"===typeof response.isVideoChatEnabled?response.isVideoChatEnabled:false;factory.state.videoChatMaxEscalation=response.videoChatMaxEscalation&&Number.isInteger(response.videoChatMaxEscalation)?response.videoChatMaxEscalation:5;factory.state.isDirectVideoChatEnabled=factory.state.videoChatMaxEscalation===3||factory.state.videoChatMaxEscalation>4;factory.state.isDirectAudioChatEnabled="boolean"===typeof response.isDirectAudioChatEnabled?response.isDirectAudioChatEnabled:false;factory.PersistStateData()}});appCallbacks.OnCustomerInitiateVideo=function(){factory.state.videochat=true;factory.PersistStateData()};appCallbacks.OnAgentInitiateVideo=function(){factory.state.agentInitiatedVideo=true;factory.state.agentInvitationTime=factory.state.videoStopped?Date.now():0;factory.PersistStateData()};appCallbacks.OnStartVideo=function(){};appCallbacks.OnStopVideo=function(){factory.state.custInvitationTime=0;if(factory.state.videoShowing){factory.Show()}else{factory.PersistStateData()}};appCallbacks.OnVideoChatTokenReceived=function(videoToken){factory.state.avmode=parseInt(videoToken.avmode);factory.state.vendor=videoToken.vendor;factory.state.openTokParams=videoToken.openTokParams;if(factory.IsWindowReadyForAVChat()){factory.InitiateAVChat()}else{factory.InitiatePopout()}};appCallbacks.OnAgentAutoRejectVideo=function(){factory.state.custInvitationTime=0;factory.PersistStateData()};appCallbacks.OnCustomerAutoRejectVideo=function(){factory.state.agentInitiatedVideo=false;factory.PersistStateData()};appCallbacks.OnVideoChatCapable=function(params){factory.state.isVideoChatEnabled="boolean"===typeof params.isVideoChatEnabled?params.isVideoChatEnabled:factory.state.isVideoChatEnabled;factory.state.showVideoButton="boolean"===typeof params.showVideoButton?params.showVideoButton:false;factory.CheckVideoAudioCapable(factory.state.showVideoButton)};appCallbacks.OnVideoChatMaxEscalation=function(params){factory.state.videoChatMaxEscalation=params.videoChatMaxEscalation&&Number.isInteger(params.videoChatMaxEscalation)?params.videoChatMaxEscalation:5;factory.state.isDirectVideoChatEnabled="boolean"===typeof params.isDirectVideoChatEnabled?params.isDirectVideoChatEnabled:false;factory.AdjustVideoAudioChatButtons()};appCallbacks.OnAudioChatEnabled=function(params){factory.state.isDirectAudioChatEnabled="boolean"===typeof params.isDirectAudioChatEnabled?params.isDirectAudioChatEnabled:false;factory.AdjustVideoAudioChatButtons()};appCallbacks.OnAcceptVideoChat=function(accepted){factory.state.agentInitiatedVideo=false;if(true===accepted){factory.state.videochat=true}else{ApplicationFactory.Translate("APP.EG_AV_INVITATION_BY_AGENT_EXPIRED").then(function(msg){MessageFactory.SendSystemMessage(msg)})}factory.PersistStateData()};appCallbacks.OnDeclineVideoChat=function(declined){factory.state.agentInitiatedVideo=false;if(true===declined){}else{ApplicationFactory.Translate("APP.EG_AV_INVITATION_BY_AGENT_EXPIRED").then(function(msg){MessageFactory.SendSystemMessage(msg)})}factory.PersistStateData()};appCallbacks.OnInitiateVideoChat=function(response){switch(response.statusCode){case 1:{factory.SendInviteMessage();break}case-1:case 0:default:{ApplicationFactory.Translate("APP."+response.statusText).then(function(msg){factory.Alert(msg)});break}}};ApplicationFactory.SetEgainChatCallbacks(appCallbacks);factory.IsPublishAudio=function(){var publish=true;var avmode=factory.GetAVMode();switch(avmode){case factory.AGENT_VIDEO_MODE:case factory.AGENT_AUDIO_MODE:{publish=false;break}}factory.state.audioPaused=!publish;return publish};factory.IsPublishVideo=function(){var publish=true;var avmode=factory.GetAVMode();switch(avmode){case factory.AGENT_VIDEO_MODE:case factory.AGENT_AUDIO_MODE:case factory.TWO_WAY_AUDIO_MODE:case factory.TWO_WAY_AUDIO_AGENT_VIDEO_MODE:{publish=false;break}}factory.state.videoPaused=!publish;return publish};factory.HideVideo=function(){var hidden=false;var videoChatMaxEscalation=factory.state.videoChatMaxEscalation;switch(videoChatMaxEscalation){case 2:case 4:{hidden=true;break}default:break}return hidden};factory.IsSubscribeAudio=function(){var subscribe=true;var avmode=factory.GetAVMode();switch(avmode){case factory.AGENT_VIDEO_MODE:{subscribe=false;break}}return subscribe};factory.IsSubscribeVideo=function(){var subscribe=true;var avmode=factory.GetAVMode();switch(avmode){case factory.AGENT_AUDIO_MODE:case factory.TWO_WAY_AUDIO_MODE:case factory.TWO_WAY_AUDIO_CUSTOMER_VIDEO_MODE:{subscribe=false;break}}return subscribe};factory.CheckVideoAudioCapable=function(usrLicence){factory.state.videoCapable=!ApplicationFactory.IsIEorEdge()&&usrLicence&&ConfigFactory.GetChatConfigurations().ShowVideoButton&&factory.state.isVideoChatEnabled&&factory.state.isVideoChatLicensed;factory.state.audioCapable=!ApplicationFactory.IsIEorEdge()&&usrLicence&&ConfigFactory.GetChatConfigurations().ShowAudioButton&&factory.state.isVideoChatEnabled&&factory.state.isVideoChatLicensed;if(true===factory.state.videoCapable||true===factory.state.audioCapable){factory.AdjustVideoAudioChatButtons()}else{factory.PersistStateData()}};factory.AdjustVideoAudioChatButtons=function(){factory.SaveButtonStateOnTransfer();var data=factory.GetAVChatButtonsState();$rootScope.$broadcast("application_service_adjust_video_audio_chat_buttons",data);factory.PersistStateData()};factory.GetAVChatButtonsStateWithoutTransferLogic=function(){var data={};data.showVideoChatButton=factory.state.isDirectVideoChatEnabled&&factory.state.videoCapable;data.showAudioChatButton=factory.state.isDirectAudioChatEnabled&&factory.state.audioCapable;factory.showVideoChatButton=data.showVideoChatButton;factory.showAudioChatButton=data.showAudioChatButton;return data};factory.GetAVChatButtonsState=function(){var data={};if(false===connection.connected||false===factory.state.isAgentJoined||true===factory.state.videoShowing){data.showVideoChatButton=false;data.showAudioChatButton=false}else if(factory.state.transfer&&factory.state.transfer.buttonState&&"boolean"===typeof factory.state.transfer.buttonState.showVideoChatButton&&"boolean"===typeof factory.state.transfer.buttonState.showAudioChatButton){data.showVideoChatButton=factory.state.transfer.buttonState.showVideoChatButton;data.showAudioChatButton=factory.state.transfer.buttonState.showAudioChatButton}else{data=factory.GetAVChatButtonsStateWithoutTransferLogic()}factory.showVideoChatButton=data.showVideoChatButton;factory.showAudioChatButton=data.showAudioChatButton;return data};factory.IsInvitationByAgentExpired=function(){var retVal=false;if(true===factory.state.videoShowing||factory.state.agentInvitationTime>0&&Date.now()-factory.state.agentInvitationTime>ConfigFactory.GetChatConfigurations().VideoReofferTimeout){ApplicationFactory.Translate("APP.EG_AV_INVITATION_BY_AGENT_EXPIRED").then(function(msg){MessageFactory.SendSystemMessage(msg)});retVal=true}else{factory.state.agentInvitationTime=Date.now()-ConfigFactory.GetChatConfigurations().VideoReofferTimeout;factory.PersistStateData()}return retVal};factory.AcceptVideoChat=function(userId,avmode){if(false===factory.IsInvitationByAgentExpired()){egainChat.AcceptVideoChat(connection.sessionID,userId,avmode)}};factory.DeclineVideoChat=function(userId,avmode){if(false===factory.IsInvitationByAgentExpired()){egainChat.DeclineVideoChat(connection.sessionID,userId,avmode)}};factory.Alert=function(msg,debugMsg){if(msg){alert(msg);debugMsg=debugMsg||msg;console.log(debugMsg)}};factory.VideoClick=function(){factory.PushOneTagEventForVideoClick();if(true===factory.state.isDirectVideoChatEnabled){if(true===factory.state.videoShowing){factory.ToggleVideo()}else{factory.state.avmode=factory.TWO_WAY_AUDIO_VIDEO_MODE;factory.Show()}}};factory.AudioClick=function(){factory.PushOneTagEventForAudioClick();if(true===factory.state.isDirectAudioChatEnabled){if(true===factory.state.videoShowing){factory.ToggleAudio()}else{factory.state.avmode=factory.TWO_WAY_AUDIO_MODE;factory.Show()}}};factory.VideoPausedState=function(videoPaused){if("boolean"===typeof videoPaused){factory.state.videoPaused=videoPaused;factory.PersistStateData()}return factory.state.videoPaused};factory.AudioPausedState=function(audioPaused){if("boolean"===typeof audioPaused){factory.state.audioPaused=audioPaused;factory.PersistStateData()}return factory.state.audioPaused};factory.ToggleVideo=function(publisherId){publisherId=publisherId||"eg-video-camera";if(true===factory.state.isDirectVideoChatEnabled&&true===factory.state.publisherInitialized){var videoFrame=factory.GetVideoChatFrame();if(videoFrame){videoFrame.contentWindow.webcam(factory.state.videoPaused)}factory.state.videoPaused=!factory.state.videoPaused;var notifyMsg="EG_VIDEO_RESUMED_BY_CUSTOMER";if(true===factory.state.videoPaused){notifyMsg="EG_VIDEO_PAUSED_BY_CUSTOMER"}ApplicationFactory.Translate("APP."+notifyMsg,{CustomerName:CustomerFactory.GetCustomerScreenName()}).then(function(msg){MessageFactory.SendSystemMessage(msg,"pauseresumevideo",true)})}};factory.ToggleAudio=function(publisherId){publisherId=publisherId||"eg-video-camera";if(true===factory.state.publisherInitialized){var videoFrame=factory.GetVideoChatFrame();if(videoFrame){videoFrame.contentWindow.mike(factory.state.audioPaused)}factory.state.audioPaused=!factory.state.audioPaused;var notifyMsg="EG_AV_AUDIO_UNMUTED_BY_CUSTOMER";if(true===factory.state.audioPaused){notifyMsg="EG_AV_AUDIO_MUTED_BY_CUSTOMER"}ApplicationFactory.Translate("APP."+notifyMsg,{CustomerName:CustomerFactory.GetCustomerScreenName()}).then(function(msg){MessageFactory.SendSystemMessage(msg,"muteunmuteaudio",true)})}};factory.Show=function(){if(connection.sessionID){if(true===factory.state.videoShowing){factory.EndAVChatByAgent()}else{if(factory.state.videoStopped){factory.ReInvite()}else if(factory.state.videoInitialized){factory.state.videoShowing=true;factory.AdjustVideoAudioChatButtons();ApplicationFactory.Translate("APP.EG_AV_CHAT_CONNECTED_WITH_CUSTOMER",{CustomerName:CustomerFactory.GetCustomerScreenName()}).then(function(msg){MessageFactory.SendSystemMessage(msg,"startVideo",true,false)});ApplicationFactory.Translate("APP.EG_AV_CHAT_CONNECTED_WITH_AGENT",{AgentName:ApplicationFactory.GetAgentName()}).then(function(msg){MessageFactory.AddSystemMessageToTranscript(msg)})}else{factory.InitiateVideoChat()}}}factory.PersistStateData()};factory.InitiateAVChat=function(){$rootScope.$broadcast("application_service_video_chat_token_received",factory.GetVideoToken())};factory.GetVideoToken=function(){var videoToken=null;if(factory.state&&factory.state.openTokParams&&factory.state.openTokParams["OT_apiKey"]&&factory.state.openTokParams["OT_sessionId"]&&factory.state.openTokParams["OT_token"]){videoToken={};videoToken.openTokParams={};videoToken.openTokParams["OT_apiKey"]=factory.state.openTokParams["OT_apiKey"];videoToken.openTokParams["OT_sessionId"]=factory.state.openTokParams["OT_sessionId"];videoToken.openTokParams["OT_token"]=factory.state.openTokParams["OT_token"]}return videoToken};factory.EndAVChatByCustomer=function(){factory.EndAVChat();factory.SendAVChatEndedMessageToAgent()};factory.EndAVChatByAgent=function(){factory.EndAVChat()};factory.AddAVChatIframe=function(wrapperId){if(wrapperId){var url=applicationDefaults.eGainContextPath+"libs/videochat/videochat.html";factory.videoWrapperElement=eGain$("#"+wrapperId);if(factory.videoWrapperElement){factory.videoWrapperElement.html('<iframe style="width:100%;height:100%;border:0;" id="videoChatFrame" src="'+url+'">')}}};factory.GetVideoChatFrame=function(){var videoFrame=document.getElementById("videoChatFrame");return videoFrame};factory.RemoveAVChatIframe=function(){var videoFrame=factory.GetVideoChatFrame();if(videoFrame){videoFrame.contentWindow.stopVideoChat();eGain$("iframe#videoChatFrame").load("","",function(){factory.videoShowing=false});videoFrame.style.display="none"}};factory.EndAVChat=function(){factory.state.videoStopped=true;factory.state.videoShowing=false;factory.state.openTokParams=null;factory.ToggleFrameMaximise(false);factory.AdjustVideoAudioChatButtons();factory.RemoveAVChatIframe();$rootScope.$broadcast("application_service_avchat_ended",true)};factory.OnChatCompletionHandler=function(){factory.EndAVChat();factory.RemoveStateData()};factory.SendAVChatEndedMessageToAgent=function(){var avmode=factory.GetAVMode();var isVideo=avmode===factory.TWO_WAY_AUDIO_VIDEO_MODE||avmode===factory.TWO_WAY_AUDIO_AGENT_VIDEO_MODE||avmode===factory.AGENT_VIDEO_MODE;var msg=isVideo?"EG_VIDEO_CHAT_ENDED_BY_CUSTOMER":"EG_AUDIO_CHAT_ENDED_BY_CUSTOMER";ApplicationFactory.Translate("APP."+msg,{CustomerName:CustomerFactory.GetCustomerScreenName()}).then(function(msg){MessageFactory.SendSystemMessage(msg,"stopVideo")})};factory.ReInvite=function(){if(factory.state.agentInvitationTime>0&&Date.now()-factory.state.agentInvitationTime<=ConfigFactory.GetChatConfigurations().VideoReofferTimeout){factory.AlertInvitedByAgent()}else{var awatingInviteResponse=factory.state.custInvitationTime>0&&Date.now()-factory.state.custInvitationTime<=ConfigFactory.GetChatConfigurations().VideoReofferTimeout;if(true===awatingInviteResponse){ApplicationFactory.Translate("APP.EG_VIDEO_INVITE_ALREADY_SENT").then(function(msg){factory.Alert(msg)})}else{factory.SendInviteMessage()}}};factory.AlertInvitedByAgent=function(){ApplicationFactory.Translate("APP.EG_VIDEO_ALREADY_INVITED_BY_AGENT",{AgentName:ApplicationFactory.GetAgentName()}).then(function(msg){factory.Alert(msg)})};factory.AlertL10N=function(l10nKey){if(l10nKey){ApplicationFactory.Translate("APP."+l10nKey).then(function(msg){factory.Alert(msg)})}};factory.InitiateVideoChat=function(){if(true===factory.state.agentInitiatedVideo){factory.AlertInvitedByAgent()}else{egainChat.InitiateVideoChat(connection.sessionID)}};factory.SendInviteMessage=function(){var msgToAgent="EG_AV_INVITE_FOR_TWO_WAY_AUDIO_CHAT_BY_CUSTOMER";var msgToCust="EG_AV_WAIT_MSG_FOR_AUDIO_CHAT_INVITED_BY_CUSTOMER";var command="custinitiateaudio";var customerName=CustomerFactory.GetCustomerScreenName();if(factory.TWO_WAY_AUDIO_VIDEO_MODE===factory.state.avmode){msgToAgent=5>factory.state.videoChatMaxEscalation?"EG_AV_INVITE_FOR_CUSTOMER_AV_CHAT_BY_CUSTOMER":"EG_AV_INVITE_FOR_TWO_WAY_AV_CHAT_BY_CUSTOMER";msgToCust="EG_AV_WAIT_MSG_FOR_VIDEO_CHAT_INVITED_BY_CUSTOMER";command=5>factory.state.videoChatMaxEscalation?"custinitiateonewayvideo":"custinitiatevideo"}factory.state.custInvitationTime=Date.now();ApplicationFactory.Translate("APP."+msgToAgent,{CustomerName:customerName}).then(function(msg){MessageFactory.SendSystemMessage(msg,command,true)});ApplicationFactory.Translate("APP."+msgToCust).then(function(msg){MessageFactory.AddSystemMessageToTranscript(msg)});factory.PersistStateData()};factory.UpdateAVChatInvitation=function(){var status=MessageFactory.lastAVChatInvitationStatus;if(status){switch(status){case"expired":{factory.state.agentInvitationTime=Date.now()-ConfigFactory.GetChatConfigurations().VideoReofferTimeout;factory.state.custInvitationTime=Date.now()-ConfigFactory.GetChatConfigurations().VideoReofferTimeout;break}case"rejected":{factory.state.agentInvitationTime=0;factory.state.custInvitationTime=0;break}}}};factory.InitializeVideo=function(){window.location.hash="#startvideo";factory.state.videoStopped=false;factory.state.videoInitialized=true;factory.Show()};factory.PushOneTagEventForVideoClick=function(){eGainOneTagUtil.pushChatEvent("uac",{EventName:"ChatMenuButton",ButtonDesc:"Video"})};factory.PushOneTagEventForAudioClick=function(){eGainOneTagUtil.pushChatEvent("uac",{EventName:"ChatMenuButton",ButtonDesc:"Voice"})};factory.AVinitErrorHandler=function(error,session){if(error){factory.state.AVinitialized=false;var errorMsg="EG_AV_ERROR_UNABLE_TO_CONNECT";switch(error.code){case 1004:{errorMsg="EG_AV_ERROR_SESSION_AUTHENTICATION";break}case 1005:{errorMsg="EG_AV_ERROR_INVALID_SESSION_ID";break}case 1006:{errorMsg="EG_AV_ERROR_SESSION_CONNECTION_FAILED";break}default:{errorMsg="EG_AV_ERROR_UNABLE_TO_CONNECT"}}ApplicationFactory.Translate("APP."+errorMsg).then(function(msg){factory.Alert(msg,error.message)})}else{factory.state.AVinitialized=true}};factory.AVpublisherErrorHandler=function(error){if(error){factory.state.publisherInitialized=false;var errorMsg="EG_AV_ERROR_PUBLISHER_INITIALIZATION";switch(error.code){case 1004:{errorMsg="EG_AV_ERROR_PUBLISHER_AUTHENTICATION";break}case 1010:{errorMsg="EG_AV_ERROR_NOT_CONNECTED";break}case 1013:{errorMsg="EG_AV_ERROR_PUBLISH_CONNECTION_FAILED";break}case 1500:{if(true===factory.state.publisherInitialized){errorMsg="EG_AV_ERROR_PUBLISH_NOT_ALLOWED"}else if(-1<error.message.indexOf("Publisher Access Denied:")){errorMsg="EG_AV_ERROR_ALLOW_CAMERA_MIC_ACCESS"}else if(-1<error.message.indexOf("Publisher PeerConnection Error:")){errorMsg="EG_AV_ERROR_PUBLISHER_PEER_CONNECTION"}else{errorMsg="EG_AV_ERROR_CAMERA_MIC_ACCESS_FAILED"}break}case 1553:{errorMsg="EG_AV_ERROR_PUBLISHER_PEER_CONNECTION";break}case 1601:case 2e3:{errorMsg="EG_AV_ERROR_PUBLISH_INTERNAL";break}default:{errorMsg="EG_AV_ERROR_PUBLISHER_INITIALIZATION"}}ApplicationFactory.Translate("APP."+errorMsg).then(function(msg){factory.Alert(msg,error.message)})}else{factory.state.publisherInitialized=true}};factory.AVsubscriberErrorHandler=function(error){if(error){factory.state.subscriberInitialized=false;var errorMsg="EG_AV_ERROR_UNABLE_TO_SUBSCRIBE";switch(error.code){case 1600:case 2e3:{errorMsg="EG_AV_ERROR_SUBSCRIBE_INTERNAL";break}default:{errorMsg="EG_AV_ERROR_UNABLE_TO_SUBSCRIBE"}}ApplicationFactory.Translate("APP."+errorMsg).then(function(msg){factory.Alert(msg,error.message)})}else{factory.state.subscriberInitialized=true}};factory.InitiatePopout=function(){factory.PersistStateData();factory.TriggerPopout()};factory.PersistStateData=function(){ApplicationFactory.PersistToParentStorage("EGAIN_AV_CHAT_STATE_DATA",JSON.stringify(factory.StateData()),"local")};factory.RemoveStateData=function(){ApplicationFactory.RemoveFromParentStorage("EGAIN_AV_CHAT_STATE_DATA","local")};factory.TriggerPopout=function(){var p=ApplicationFactory.CreatePayload("POPOUT","POPOUT_START","","EGLV_DOCK_POPOUT");p.compatible={isRelayImplementedInTemplate:true};ApplicationFactory.PostMessageToParent(p,"*")};factory.StateData=function(stateData){if(stateData){factory.state=stateData}return factory.state};factory.SetVideoNotInProgressFlags=function(stateData){if(stateData){stateData.videoShowing=false}};factory.GetAVChatStateDataFromURL=function(){var stateData=ApplicationFactory.GetParameterFromUrlOrStorage("EGAIN_AV_CHAT_STATE_DATA","local");if(stateData){stateData=JSON.parse(decodeURIComponent(stateData));factory.SetVideoNotInProgressFlags(stateData);factory.StateData(stateData)}};factory.GetAVChatStateDataFromURL();$rootScope.$on("application_service_chat_connection_completion_event",function(event){factory.OnChatCompletionHandler()});$rootScope.$on("application_service_chat_transfer_event",function(event,data){if(data){factory.isChatTransferred=true;factory.onAgentJoinedHandler(false)}});factory.onAgentJoinedHandler=function(joined){factory.state.isAgentJoined=joined;factory.AdjustVideoAudioChatButtons()};$rootScope.$on("application_service_agent_joined_event",function(event,data){if(data){factory.onAgentJoinedHandler(true)}});factory.SaveButtonStateOnTransfer=function(){if(true===factory.isChatTransferred){var data=factory.GetAVChatButtonsStateWithoutTransferLogic();factory.state.transfer={};factory.SetTransferStateData(data);factory.PersistStateData()}};factory.SetTransferStateData=function(data){if(factory.state.transfer&&data){factory.state.transfer.buttonState={};factory.state.transfer.buttonState.showVideoChatButton=data.showVideoChatButton;factory.state.transfer.buttonState.showAudioChatButton=data.showAudioChatButton}};factory.GetAllL10Ns=function(){var l10nList=["APP.EG_AV_RESTORE_WINDOW","APP.EG_AV_MAXIMIZE_WINDOW","APP.EG_AV_PAUSE_VIDEO","APP.EG_AV_RESUME_VIDEO","APP.EG_AV_PAUSE_AUDIO","APP.EG_AV_RESUME_AUDIO","APP.EG_AV_END"];ApplicationFactory.Translate(l10nList).then(function(list){if(list){factory.l10n={};factory.l10n["EG_AV_RESTORE_WINDOW"]=list["APP.EG_AV_RESTORE_WINDOW"];factory.l10n["EG_AV_MAXIMIZE_WINDOW"]=list["APP.EG_AV_MAXIMIZE_WINDOW"];factory.l10n["EG_AV_PAUSE_VIDEO"]=list["APP.EG_AV_PAUSE_VIDEO"];factory.l10n["EG_AV_RESUME_VIDEO"]=list["APP.EG_AV_RESUME_VIDEO"];factory.l10n["EG_AV_PAUSE_AUDIO"]=list["APP.EG_AV_PAUSE_AUDIO"];factory.l10n["EG_AV_RESUME_AUDIO"]=list["APP.EG_AV_RESUME_AUDIO"];factory.l10n["EG_AV_END"]=list["APP.EG_AV_END"]}})};factory.GetAllL10Ns();factory.GetVideoChatFromURL=function(){var video=ApplicationFactory.GetUrlParameter("video");video=video?parseInt(video):video;factory.state.videochat=1===video};factory.GetVideoChatFromURL();factory.GetAVModeFromURL=function(){var avmode=ApplicationFactory.GetUrlParameter("avmode");factory.state.avmode=avmode?parseInt(avmode):factory.state.avmode};factory.GetAVModeFromURL();factory.GetAVMode=function(){var avmode=factory.state.avmode;if(4<factory.state.videoChatMaxEscalation){}else if(2===factory.state.videoChatMaxEscalation){if(0<factory.state.avmode){avmode=factory.TWO_WAY_AUDIO_MODE}}else if(3===factory.state.videoChatMaxEscalation){if(factory.state.avmode===factory.TWO_WAY_AUDIO_VIDEO_MODE){avmode=factory.TWO_WAY_AUDIO_CUSTOMER_VIDEO_MODE}else if(factory.state.avmode===factory.TWO_WAY_AUDIO_AGENT_VIDEO_MODE){avmode=factory.TWO_WAY_AUDIO_MODE}}else if(4===factory.state.videoChatMaxEscalation){if(factory.state.avmode===factory.TWO_WAY_AUDIO_VIDEO_MODE){avmode=factory.TWO_WAY_AUDIO_AGENT_VIDEO_MODE}else if(factory.state.avmode===factory.TWO_WAY_AUDIO_CUSTOMER_VIDEO_MODE){avmode=factory.TWO_WAY_AUDIO_MODE}}return avmode};factory.IsWindowReadyForAVChat=function(){var ready=true;ready=true===ApplicationFactory.isPoppedOut()||false===ApplicationFactory.IsDocked();return ready};factory.ToggleFrameMaximise=function(maximise){factory.avChatFrameMaximised="boolean"===typeof maximise?maximise:!factory.avChatFrameMaximised;toggleChatWindowMaximise(factory.avChatFrameMaximised);$rootScope.$broadcast("application_service_avchat_maximised",factory.avChatFrameMaximised);return factory.avChatFrameMaximised};var toggleChatWindowMaximise=function(maximise){var isWindowMaximised=false;try{if(_popoutWindow&&false===_popoutWindow.closed){if(true===maximise&&0>_saveWidth){_saveTop=_popoutWindow.screenTop?_popoutWindow.screenTop:_popoutWindow.screenY;_saveLeft=_popoutWindow.screenLeft?_popoutWindow.screenLeft:_popoutWindow.screenX;_saveHeight=_popoutWindow.outerHeight;_saveWidth=_popoutWindow.outerWidth;_popoutWindow.moveTo(_saveLeft,_saveTop);_saveTop=_saveTop+_saveTop-(_popoutWindow.screenTop?_popoutWindow.screenTop:_popoutWindow.screenY);_saveLeft=_saveLeft+_saveLeft-(_popoutWindow.screenLeft?_popoutWindow.screenLeft:_popoutWindow.screenX);_popoutWindow.moveTo(0,0);_popoutWindow.resizeTo($window.screen.availWidth,$window.screen.availHeight);isWindowMaximised=true}else if(0<_saveWidth){_popoutWindow.resizeTo(_saveWidth,_saveHeight);_popoutWindow.moveTo(_saveLeft,_saveTop);_saveTop=-1;_saveLeft=-1;_saveHeight=-1;_saveWidth=-1}}}catch(err){console.log("Failed to toggle window maximize.")}return isWindowMaximised};return factory}]);