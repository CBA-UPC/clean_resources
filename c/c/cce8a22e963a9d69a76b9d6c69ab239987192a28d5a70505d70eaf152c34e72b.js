try{self["workbox:core:7.0.0"]&&_()}catch{}const I=(a,...e)=>{let t=a;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},O=I;class l extends Error{constructor(e,t){const s=O(e,t);super(s),this.name=e,this.details=t}}const v=new Set,f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},k=a=>[f.prefix,a,f.suffix].filter(e=>e&&e.length>0).join("-"),M=a=>{for(const e of Object.keys(f))a(e)},C={updateDetails:a=>{M(e=>{typeof a[e]=="string"&&(f[e]=a[e])})},getGoogleAnalyticsName:a=>a||k(f.googleAnalytics),getPrecacheName:a=>a||k(f.precache),getPrefix:()=>f.prefix,getRuntimeName:a=>a||k(f.runtime),getSuffix:()=>f.suffix};function K(a,e){const t=new URL(a);for(const s of e)t.searchParams.delete(s);return t.href}async function S(a,e,t,s){const n=K(e.url,t);if(e.url===n)return a.match(e,s);const r=Object.assign(Object.assign({},s),{ignoreSearch:!0}),c=await a.keys(e,r);for(const i of c){const o=K(i.url,t);if(n===o)return a.match(i,s)}}let g;function W(){if(g===void 0){const a=new Response("");if("body"in a)try{new Response(a.body),g=!0}catch{g=!1}g=!1}return g}class A{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}async function D(){for(const a of v)await a()}const j=a=>new URL(String(a),location.href).href.replace(new RegExp(`^${location.origin}`),"");function F(a){return new Promise(e=>setTimeout(e,a))}function x(a,e){const t=e();return a.waitUntil(t),t}async function H(a,e){let t=null;if(a.url&&(t=new URL(a.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const s=a.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},r=e?e(n):n,c=W()?s.body:await s.blob();return new Response(c,r)}function q(){self.addEventListener("activate",()=>self.clients.claim())}try{self["workbox:cacheable-response:7.0.0"]&&_()}catch{}class B{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(s=>e.headers.get(s)===this._headers[s])),t}}class ${constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new B(e)}}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const G="__WB_REVISION__";function V(a){if(!a)throw new l("add-to-cache-list-unexpected-type",{entry:a});if(typeof a=="string"){const r=new URL(a,location.href);return{cacheKey:r.href,url:r.href}}const{revision:e,url:t}=a;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:a});if(!e){const r=new URL(t,location.href);return{cacheKey:r.href,url:r.href}}const s=new URL(t,location.href),n=new URL(t,location.href);return s.searchParams.set(G,e),{cacheKey:s.href,url:n.href}}class z{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const n=t.originalRequest.url;s?this.notUpdatedURLs.push(n):this.updatedURLs.push(n)}return s}}}class Q{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const n=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this._precacheController=e}}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function m(a){return typeof a=="string"?new Request(a):a}class J{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new A,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=m(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const c=await t.preloadResponse;if(c)return c}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const c of this.iterateCallbacks("requestWillFetch"))s=await c({request:s.clone(),event:t})}catch(c){if(c instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:c.message})}const r=s.clone();try{let c;c=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const i of this.iterateCallbacks("fetchDidSucceed"))c=await i({event:t,request:r,response:c});return c}catch(c){throw n&&await this.runCallbacks("fetchDidFail",{error:c,event:t,originalRequest:n.clone(),request:r.clone()}),c}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=m(e);let s;const{cacheName:n,matchOptions:r}=this._strategy,c=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},r),{cacheName:n});s=await caches.match(c,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:n,matchOptions:r,cachedResponse:s,request:c,event:this.event})||void 0;return s}async cachePut(e,t){const s=m(e);await F(0);const n=await this.getCacheKey(s,"write");if(!t)throw new l("cache-put-with-no-response",{url:j(n.url)});const r=await this._ensureResponseSafeToCache(t);if(!r)return!1;const{cacheName:c,matchOptions:i}=this._strategy,o=await self.caches.open(c),h=this.hasCallback("cacheDidUpdate"),p=h?await S(o,n.clone(),["__WB_REVISION__"],i):null;try{await o.put(n,h?r.clone():r)}catch(u){if(u instanceof Error)throw u.name==="QuotaExceededError"&&await D(),u}for(const u of this.iterateCallbacks("cacheDidUpdate"))await u({cacheName:c,oldResponse:p,newResponse:r.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const r of this.iterateCallbacks("cacheKeyWillBeUsed"))n=m(await r({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield r=>{const c=Object.assign(Object.assign({},r),{state:s});return t[e](c)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class P{constructor(e={}){this.cacheName=C.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,n="params"in e?e.params:void 0,r=new J(this,{event:t,request:s,params:n}),c=this._getResponse(r,s,t),i=this._awaitComplete(c,r,s,t);return[c,i]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let n;try{if(n=await this._handle(t,e),!n||n.type==="error")throw new l("no-response",{url:t.url})}catch(r){if(r instanceof Error){for(const c of e.iterateCallbacks("handlerDidError"))if(n=await c({error:r,event:s,request:t}),n)break}if(!n)throw r}for(const r of e.iterateCallbacks("handlerWillRespond"))n=await r({event:s,request:t,response:n});return n}async _awaitComplete(e,t,s,n){let r,c;try{r=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:r}),await t.doneWaiting()}catch(i){i instanceof Error&&(c=i)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:r,error:c}),t.destroy(),c)throw c}}class d extends P{constructor(e={}){e.cacheName=C.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(d.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const n=t.params||{};if(this._fallbackToNetwork){const r=n.integrity,c=e.integrity,i=!c||c===r;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?c||r:void 0})),r&&i&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new l("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==d.copyRedirectedCacheableResponsesPlugin&&(n===d.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);t===0?this.plugins.push(d.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}d.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:a}){return!a||a.status>=400?null:a}};d.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:a}){return a.redirected?await H(a):a}};class X{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new d({cacheName:C.getPrecacheName(e),plugins:[...t,new Q({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:n,url:r}=V(s),c=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==n)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:n});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(n)&&this._cacheKeysToIntegrities.get(n)!==s.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(n,s.integrity)}if(this._urlsToCacheKeys.set(r,n),this._urlsToCacheModes.set(r,c),t.length>0){const i=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(i)}}}install(e){return x(e,async()=>{const t=new z;this.strategy.plugins.push(t);for(const[r,c]of this._urlsToCacheKeys){const i=this._cacheKeysToIntegrities.get(c),o=this._urlsToCacheModes.get(r),h=new Request(r,{integrity:i,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:c},request:h,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}})}activate(e){return x(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),n=new Set(this._urlsToCacheKeys.values()),r=[];for(const c of s)n.has(c.url)||(await t.delete(c),r.push(c.url));return{deletedURLs:r}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let U;const L=()=>(U||(U=new X),U);try{self["workbox:routing:7.0.0"]&&_()}catch{}const E="GET",R=a=>a&&typeof a=="object"?a:{handle:a};class y{constructor(e,t,s=E){this.handler=R(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=R(e)}}class Y extends y{constructor(e,t,s){const n=({url:r})=>{const c=e.exec(r.href);if(c&&!(r.origin!==location.origin&&c.index!==0))return c.slice(1)};super(n,t,s)}}class Z{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(n=>{typeof n=="string"&&(n=[n]);const r=new Request(...n);return this.handleRequest({request:r,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:r,route:c}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let i=c&&c.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let h;try{h=i.handle({url:s,request:e,event:t,params:r})}catch(u){h=Promise.reject(u)}const p=c&&c.catchHandler;return h instanceof Promise&&(this._catchHandler||p)&&(h=h.catch(async u=>{if(p)try{return await p.handle({url:s,request:e,event:t,params:r})}catch(T){T instanceof Error&&(u=T)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw u})),h}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const r=this._routes.get(s.method)||[];for(const c of r){let i;const o=c.match({url:e,sameOrigin:t,request:s,event:n});if(o)return i=o,(Array.isArray(i)&&i.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(i=void 0),{route:c,params:i}}return{}}setDefaultHandler(e,t=E){this._defaultHandlerMap.set(t,R(e))}setCatchHandler(e){this._catchHandler=R(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}}let w;const ee=()=>(w||(w=new Z,w.addFetchListener(),w.addCacheListener()),w);function b(a,e,t){let s;if(typeof a=="string"){const r=new URL(a,location.href),c=({url:i})=>i.href===r.href;s=new y(c,e,t)}else if(a instanceof RegExp)s=new Y(a,e,t);else if(typeof a=="function")s=new y(a,e,t);else if(a instanceof y)s=a;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return ee().registerRoute(s),s}function te(a,e=[]){for(const t of[...a.searchParams.keys()])e.some(s=>s.test(t))&&a.searchParams.delete(t);return a}function*se(a,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={}){const r=new URL(a,location.href);r.hash="",yield r.href;const c=te(r,e);if(yield c.href,t&&c.pathname.endsWith("/")){const i=new URL(c.href);i.pathname+=t,yield i.href}if(s){const i=new URL(c.href);i.pathname+=".html",yield i.href}if(n){const i=n({url:r});for(const o of i)yield o.href}}class ae extends y{constructor(e,t){const s=({request:n})=>{const r=e.getURLsToCacheKeys();for(const c of se(n.url,t)){const i=r.get(c);if(i){const o=e.getIntegrityForCacheKey(i);return{cacheKey:i,integrity:o}}}};super(s,e.strategy)}}function ne(a){const e=L(),t=new ae(e,a);b(t)}const re="-precache-",ce=async(a,e=re)=>{const s=(await self.caches.keys()).filter(n=>n.includes(e)&&n.includes(self.registration.scope)&&n!==a);return await Promise.all(s.map(n=>self.caches.delete(n))),s};function ie(){self.addEventListener("activate",a=>{const e=C.getPrecacheName();a.waitUntil(ce(e).then(t=>{}))})}function oe(a){return L().createHandlerBoundToURL(a)}function le(a){L().precache(a)}function he(a,e){le(a),ne(e)}class ue extends P{async _handle(e,t){let s=await t.cacheMatch(e),n;if(!s)try{s=await t.fetchAndCachePut(e)}catch(r){r instanceof Error&&(n=r)}if(!s)throw new l("no-response",{url:e.url,error:n});return s}}const fe={cacheWillUpdate:async({response:a})=>a.status===200||a.status===0?a:null};class de extends P{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(fe),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const s=[],n=[];let r;if(this._networkTimeoutSeconds){const{id:o,promise:h}=this._getTimeoutPromise({request:e,logs:s,handler:t});r=o,n.push(h)}const c=this._getNetworkPromise({timeoutId:r,request:e,logs:s,handler:t});n.push(c);const i=await t.waitUntil((async()=>await t.waitUntil(Promise.race(n))||await c)());if(!i)throw new l("no-response",{url:e.url});return i}_getTimeoutPromise({request:e,logs:t,handler:s}){let n;return{promise:new Promise(c=>{n=setTimeout(async()=>{c(await s.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:n}){let r,c;try{c=await n.fetchAndCachePut(t)}catch(i){i instanceof Error&&(r=i)}return e&&clearTimeout(e),(r||!c)&&(c=await n.cacheMatch(t)),c}}q();const pe=Object.freeze(["sq","am","ar","bn","bs","bg","hr","fa-af","en","fr","de","el","ha","hi","id","sw","mk","ps","fa-ir","pl","pt-002","pt-br","ro","ru","sr","es","tr","uk","ur"]),N=Object.freeze(["a-19385797","a-19385803","a-19392377","a-19566539","a-36190505","a-42097864","s-100282","s-101185","s-101431","s-11487","s-11938","s-12839","s-30417","s-30419","s-30478","s-3062","s-3066","s-31616","s-3232","s-32613","s-32686","s-32688","s-3610","s-3952","s-45624129","s-47689720","s-50034043","s-51415805","s-51415836","s-57652362","s-58092575","s-61823060","s-62439774","s-7555","s-7885","s-50179224","s-101446","s-3992","s-30330","s-56345182","s-3229","s-30334","s-31620","s-101187","s-30336","s-30338","s-32690","s-30340","s-30342","s-45071906","s-30346","s-30348","s-31622","s-30352","s-100284","s-30356","s-51415892","s-51415891","s-30358","s-30362","s-50033855","s-32692","s-32615","s-3609","s-7553","s-30429","s-101183","s-3668","s-11486","s-11936","s-12837","s-7884","s-3054","s-100280","s-3210","s-31610","s-51434653","s-30411","s-101473","de/highlights","s-32713","s-10111","s-101483","s-50179213","s-10094","s-37155373","s-49519848","s-40362427","s-30070","s-30072","s-30074","s-32103","s-30078","s-101485","s-30425","s-101444","s-31626"]);ie();he([{"revision":"95364184489851442784f57342364bde","url":"index.html"},{"revision":null,"url":"static/AdvertorialContentDetails.cd23-38918ee0.js"},{"revision":null,"url":"static/ArticleMostRecentPage-92b2a3a2.js"},{"revision":null,"url":"static/audioPlugins.cd23-2bdd7fd2.css"},{"revision":null,"url":"static/audioPlugins.cd23-c0a620d6.js"},{"revision":null,"url":"static/Balatarin-a51719d3.js"},{"revision":null,"url":"static/BetaSurveyPage-261df7a0.js"},{"revision":null,"url":"static/BreakingBannerNoQuery.cd23-28aca254.js"},{"revision":null,"url":"static/ChainLink-04af3a71.js"},{"revision":null,"url":"static/Check-e19f969d.js"},{"revision":null,"url":"static/cmp-style-overwrite-42f14dfe.js"},{"revision":null,"url":"static/cmp-style-overwrite-d97bc8dd.css"},{"revision":null,"url":"static/Comments-3d4fa113.js"},{"revision":null,"url":"static/consentScript-c37145ab.js"},{"revision":null,"url":"static/Douban-5e0fc636.js"},{"revision":null,"url":"static/Email-f32af910.js"},{"revision":null,"url":"static/extends-06810f67.js"},{"revision":null,"url":"static/FacebookMessenger-884e9686.js"},{"revision":null,"url":"static/Flipboard-f7f25e7e.js"},{"revision":null,"url":"static/Gdpr.cmpLive-0e98a641.js"},{"revision":null,"url":"static/hoist-non-react-statics.cjs-b0840dc8.js"},{"revision":null,"url":"static/index-332802bf.js"},{"revision":null,"url":"static/index-59b3b662.js"},{"revision":null,"url":"static/index-896301e1.css"},{"revision":null,"url":"static/index-9d1eb871.js"},{"revision":null,"url":"static/index-c2b35cae.js"},{"revision":null,"url":"static/index-ef709cb8.css"},{"revision":null,"url":"static/LeftArrow-77e1521b.js"},{"revision":null,"url":"static/Line-40591700.js"},{"revision":null,"url":"static/LinkedIn-0e66a510.js"},{"revision":null,"url":"static/LiveWelcomeLayer.cd23-8cea791f.js"},{"revision":null,"url":"static/Meneame-43d24bb7.js"},{"revision":null,"url":"static/ModalLayerLayout.cd23-ef01ed95.js"},{"revision":null,"url":"static/Moikrug-2405e1af.js"},{"revision":null,"url":"static/Moj-209facbe.js"},{"revision":null,"url":"static/Odnoklassniki-ec95268a.js"},{"revision":null,"url":"static/Print-c4a52b05.js"},{"revision":null,"url":"static/ProxyProtocolFlip-e43cb996.js"},{"revision":null,"url":"static/Qzone-cc7c7ba9.js"},{"revision":null,"url":"static/Reddit-7fe5f62d.js"},{"revision":null,"url":"static/Renren-3fb812e8.js"},{"revision":null,"url":"static/RightArrow-329ea605.js"},{"revision":null,"url":"static/runGreekAccentedReplacer-2c8d29b0.js"},{"revision":null,"url":"static/Sharechat-470bbb58.js"},{"revision":null,"url":"static/Sms-f3737a74.js"},{"revision":null,"url":"static/TeaserListSamplePageFactory-9ec5f487.js"},{"revision":null,"url":"static/Telegram-8b870fa1.js"},{"revision":null,"url":"static/telegram-widget.cmpLive-2ac27c94.js"},{"revision":null,"url":"static/TextSize-552b3b0d.js"},{"revision":null,"url":"static/Tiktok-cd6b03c7.js"},{"revision":null,"url":"static/TopStoryZone-f2d59ea1.js"},{"revision":null,"url":"static/TrendingPage-62060c69.js"},{"revision":null,"url":"static/Twoo-8c44826e.js"},{"revision":null,"url":"static/Viber-6cf94f8d.js"},{"revision":null,"url":"static/video.es-2c0074aa.js"},{"revision":null,"url":"static/videojs.cd23-aff391b2.css"},{"revision":null,"url":"static/videojs.cd23-b93cae81.js"},{"revision":null,"url":"static/videoPlugins-7768a01f.css"},{"revision":null,"url":"static/videoPlugins-96531926.js"},{"revision":null,"url":"static/Vkontakte-ceb5369b.js"},{"revision":null,"url":"static/Wechat-24a05cf6.js"},{"revision":null,"url":"static/Weibo-35af9f70.js"},{"revision":null,"url":"static/Whatsapp-4b8a8754.js"}]);const ge=new RegExp("/[^/?]+\\.[^/]+$");b(({request:a,url:e})=>{if(a.mode!=="navigate"||e.pathname.startsWith("/_"))return!1;if(!e.hostname.includes("beta")){const t=e.pathname.split("/",2)[1];if(!pe.includes(t))return!1}for(let t=0;t<N.length;t++){const s=N[t];if(e.pathname.endsWith(s))return!1}return!(e.pathname.match(ge)||e.pathname.includes("/webapi/iframes/")||e.pathname.includes("/privacy-settings-"))},oe("/index.html"));b(({url:a})=>a.host==="static.dw.com",new ue({cacheName:"static",cacheExpiration:{maxEntries:100,maxAgeSeconds:7*24*60*60},plugins:[new $({statuses:[0,200]})]}));b(/\/graphql.*/,new de({networkTimeoutSeconds:2}));self.addEventListener("message",a=>{console.log("Service worker will now skip waiting and reload the page controller directly"),a.data&&a.data.type==="SKIP_WAITING"&&self.skipWaiting()});
//# sourceMappingURL=service-worker.js.map
