import{storeSetItem as o,storeGetItem as l,storeRemoveItem as u,debug}from"../base/croco.js";import{LOGGERS as t,MODULE_ALREADY_INITIALIZED as m,ctaTypes as p,getLocalData as g}from"../base/config.js";import{notificationSystem as h}from"../base/notifications.js";let I=false;let L=null;const O={type:null,notification:null,isIssued:false};const j="offline";const k="offline";const v="start";const D=t.OFFLINE;function track(status){const timestamp=Date.now();const t={"%status%":status===j?"Off":"On","%timestamp%":timestamp,"%duration%":0};if(status===j){o({group:k,item:v,value:timestamp})}else{const i=l({group:k,item:v});if(i){u({group:k,item:v});t["%duration%"]=Date.now()-i}}}async function N(status,e){clearTimeout(L);if(O.notification){O.notification.close()}if(e.type===j){const notify=()=>{O.notification=h.create(Object.assign(status.offline,{icon:{name:"no-icon"}}));O.isIssued=true;track(e.type)};L=setTimeout(notify,3e3)}else{const t=document.querySelector('meta[itemprop="ptype"]');const i=t&&t.content==="offline";const label=await g("wordings.refreshCta");if(O.type===j&&O.isIssued||i){O.notification=h.create(Object.assign(status.online,{ctaList:i?await Promise.all([h.buildCta({type:p.BOLD_LINK,label:label,classList:["text-white"],callback:)]):[],icon:{name:"check",source:"offline",className:"icon-validation is-success rounded"}}));track(e.type)}}O.type=e.type;O.isIssued=false}export function networkStatusInit(t){if(I){debug("error",D,m);return}if(t){const i={offline:{theme:t.offline.theme,title:t.offline.title,text:t.offline.description},online:{theme:t.online.theme,title:t.online.title,text:t.online.description}};window.addEventListener("offline",N.bind(null,i));window.addEventListener("online",N.bind(null,i))}else{debug("warn",D,"[network-status]","network notifications disabled")}I=true}