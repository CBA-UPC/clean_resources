import{addParams as i,fetchAsync as o,fetchJson as h,debug,requestInterval as p,clearRequestInterval as g,resolve,lockScroll as t,forceRepaintSVG as l}from"../base/croco.js";import{getLocalData as m,LOGGERS as u,noElement as $}from"../base/config.js";import{loader as C}from"../base/loader.js";import{initNotification as j}from"../base/notifications.js";import{sendEventFromContextData as v}from"../base/event-tracker.js";import{renderWishlist as q}from"../modules/wishlist.js";const M=u.DEFAULT;const L="is-hover";class U{constructor(){this.$wrapper=document.querySelector(".js-minicart-wrapper");if(this.$wrapper){this.$el=this.$wrapper.querySelector(".js-minicart-template");this.$link=this.$el.querySelector(".js-minicart-link");this.$minicart=document.createElement("div");this.$loader=document.createElement("div");this.$counter=document.createElement("span");this.$link.appendChild(this.$counter);this.$el.appendChild(this.$loader);this.$el.appendChild(this.$minicart);this.dataset=this.$wrapper.dataset;this.cartQty=this.dataset.cartQty;this.datas=null;this.locales=null;this.isLoading=false;this.cartNeedsUpdate=true;this.getCartDatas({quantityOnly:true})}else{debug("warn",M,"no minicart OR ecommerce disabled",$(".js-minicart-wrapper"))}}async getCartDatas(options){this.config=await m("configuration.minicart")||{};this.isLoading=true;const t=options&&options.quantityOnly;await this.updateMinicartContent();if(this.config.quantityUrl&&this.config.dataUrl){const response=await o(t?this.config.quantityUrl:this.config.dataUrl);const i=await response.json();if(t){this.cartQty=i.quantity;this.isLoading=false;await this.updateMinicartCounter()}else{this.datas=i;this.cartQty=i.cart.quantity;this.locales=i.locales;this.isLoading=false;await this.updateMinicartCounter(true);await this.updateMinicartContent(i);this.cartNeedsUpdate=false}this.config.contentUrl&&this.setSlotFromUrl(this.config.contentUrl)}else{debug("warn",M,"urls CARTDETAILS undefined OR ecommerce disabled")}}setSlotFromUrl(url){o(url,{method:"GET"}).then(response=>{return response.text()}).then(result=>{const t=this.$el.querySelector(".js-cart-slot");if(t){t.innerHTML=result}})}buildData(t){let i=(resolve("cart.products",t)||[]).reverse();const o=t.cart;if(!this.config.isNewAddToCartEnabled){i=i.map(product=>{const{colors:t,images,sizes,url,badges:i,quantity:o,price:l,monogram:h}=product;const color=t.all[t.selected];const m=resolve("custom.scene7picture",images);const u=t.custom&&t.custom.mainColor;const size=sizes.all[sizes.selected];return{...product,color:{label:u&&u.name||color&&color.displayValue,swatchUrl:color?color.image:null,hexa:u?u.hexa:null},isCustomized:!!m,image:{desktopUrl:m||images.basket[0]},urls:{productUrl:url},size:{isUniqueSize:sizes.isUniqueSize,label:size?size.displayValue:null},flags:i,quantity:o.value,pricing:{salesPrice:{format:l.inBasket.formatted},standardPrice:l.isPromo&&l.initial&&l.initial.value!==0?{format:l.initial.formatted}:null},promoColor:l.promotion?l.promotion.color:null,monogram:[{fee:resolve("pricing.salesPrice.format",h)}]}});const l=t.locales.cart;t={...t,cart:{...o,products:i,wording:{title:o.title,size:l["cart.size"],quantity:l["cart.quantity"],goToBasket:t.locales.minicart["minicart.checkout"]}}};if(o.freeShippingEnabled){t.cart.wording.freeShipping=o.freeShipping?l["cart.discountavailable"]:l["cart.discountpush"]}}else{t={...t,cart:{...o,products:i}}}this.datas=t;return t}async deleteProduct(t){let response=await h(t,{method:"POST"});if(response){v(response.cart);await this.getCartDatas();j({content:{title:this.datas?.cart?.wording?.deleteItem,icon:"check",iconClass:"icon-validation is-success rounded",timeout:3e3}});await this.renderMinicart()}}async moveToWishlist(t){let response=await h(t,{method:"POST"});if(response){this.closeMinicart();let t=response?.wishlist;if(t){const[o=[],l]=resolve(["refColors","totalItems"],t);if(response?.notification?.success){q(t,o,l,true)}}v(response.cart);await this.getCartDatas();let i="icon-validation rounded";i+=response?.notification?.success?" is-success":" is-error";j({content:{title:response?.notification?.title,icon:"check",iconClass:i,timeout:3e3}});await this.renderMinicart()}}async updateQuantity(t,value){let response=await h(i(t,{quantity:value}),{method:"GET"});if(response?.cart){v(response.cart);await this.getCartDatas();await this.renderMinicart()}}async renderMinicart(){const{render:t}=await import("../vendors/lit-html/lit-html.js");const{tplMinicartPanel:i}=await import("../templates/minicart.tpl.js");t(i(this.datas,this.dataset,this.config.contentUrl,this.deleteProduct.bind(this),this.moveToWishlist.bind(this),this.updateQuantity.bind(this)),this.$minicart);l(this.$minicart)}closeMinicart(){this.isMouseOutside=true;this.$wrapper.classList.remove(L);t.unlock()}addEventListeners(){this.$wrapper.addEventListener("mouseenter",async()=>{this.isMouseOutside=false;C.begin();this.cartNeedsUpdate&&await this.getCartDatas();if(!this.isMouseOutside){await this.renderMinicart();t.lock();requestAnimationFrame(()=>{this.$wrapper.classList.add(L)})}C.done()});this.$wrapper.addEventListener("mouseleave",this.closeMinicart.bind(this))}async updateMinicartCounter(t){if(!this.$counter){debug("warn",M,"no minicart OR ecommerce disabled");return}const{render:i}=await import("../vendors/lit-html/lit-html.js");const{tplCounter:o}=await import("../templates/components/helpers.tpl.js");const{tplLoader:l}=await import("../templates/minicart.tpl.js");i(l(this.isLoading),this.$loader);i(o(this.isLoading,this.cartQty),this.$counter);if(!t){this.addEventListeners()}}async updateMinicartContent(t){if(!this.$counter||!this.$loader||!this.$minicart){debug("warn",M,"no minicart OR ecommerce disabled");return}const{render:o}=await import("../vendors/lit-html/lit-html.js");const{tplLoader:i}=await import("../templates/minicart.tpl.js");o(i(this.isLoading),this.$loader);if(t){t=await this.buildData(t);const l=document.querySelector(".js-express-deadline");const h=t.cart&&t.cart.expressDeadline;if(l&&h&&h.deadline){const{tplExpressDeadline:m}=await import("../templates/minicart.tpl.js");const u=p(async()=>{const t=new Date(h.deadline.replace("Z","")).getTime();const currentTime=(new Date).getTime();if(t>currentTime){o(m({deadline:t,currentTime:currentTime,text:h.text}),l)}else{const{tplEmpty:i}=await import("../templates/components/helpers.tpl.js");o(i(),l);g(u)}},1e3)}}}}export const minicart=new U;