!function(e,t){"use strict";try{t=t&&t.hasOwnProperty("default")?t.default:t;var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&|ar i=Object.assign||r a="FirebaseError",c=Error.captureStackTrace,u=function(){return ();u.prototype=Object.create(Error.prototype),u.prototype.constructor=u,u.prototype.name=a;var h=);(());ar p=);function d(){}var l,_,E,b={AVAILABLE_IN_WINDOW:"only-available-in-window",AVAILABLE_IN_SW:"only-available-in-sw",SHOULD_BE_INHERITED:"should-be-overriden",BAD_SENDER_ID:"bad-sender-id",INCORRECT_GCM_SENDER_ID:"incorrect-gcm-sender-id",PERMISSION_DEFAULT:"permission-default",PERMISSION_BLOCKED:"permission-blocked",UNSUPPORTED_BROWSER:"unsupported-browser",NOTIFICATIONS_BLOCKED:"notifications-blocked",FAILED_DEFAULT_REGISTRATION:"failed-serviceworker-registration",SW_REGISTRATION_EXPECTED:"sw-registration-expected",GET_SUBSCRIPTION_FAILED:"get-subscription-failed",INVALID_SAVED_TOKEN:"invalid-saved-token",SW_REG_REDUNDANT:"sw-reg-redundant",TOKEN_SUBSCRIBE_FAILED:"token-subscribe-failed",TOKEN_SUBSCRIBE_NO_TOKEN:"token-subscribe-no-token",TOKEN_SUBSCRIBE_NO_PUSH_SET:"token-subscribe-no-push-set",TOKEN_UNSUBSCRIBE_FAILED:"token-unsubscribe-failed",TOKEN_UPDATE_FAILED:"token-update-failed",TOKEN_UPDATE_NO_TOKEN:"token-update-no-token",USE_SW_BEFORE_GET_TOKEN:"use-sw-before-get-token",INVALID_DELETE_TOKEN:"invalid-delete-token",DELETE_TOKEN_NOT_FOUND:"delete-token-not-found",DELETE_SCOPE_NOT_FOUND:"delete-scope-not-found",BG_HANDLER_FUNCTION_EXPECTED:"bg-handler-function-expected",NO_WINDOW_CLIENT_TO_MSG:"no-window-client-to-msg",UNABLE_TO_RESUBSCRIBE:"unable-to-resubscribe",NO_FCM_TOKEN_FOR_RESUBSCRIBE:"no-fcm-token-for-resubscribe",FAILED_TO_DELETE_TOKEN:"failed-to-delete-token",NO_SW_IN_REG:"no-sw-in-reg",BAD_SCOPE:"bad-scope",BAD_VAPID_KEY:"bad-vapid-key",BAD_SUBSCRIPTION:"bad-subscription",BAD_TOKEN:"bad-token",BAD_PUSH_SET:"bad-push-set",FAILED_DELETE_VAPID_KEY:"failed-delete-vapid-key",INVALID_PUBLIC_VAPID_KEY:"invalid-public-vapid-key",USE_PUBLIC_KEY_BEFORE_GET_TOKEN:"use-public-key-before-get-token",PUBLIC_KEY_DECRYPTION_FAILED:"public-vapid-key-decryption-failed"},v=((l={})[b.AVAILABLE_IN_WINDOW]="This method is available in a Window context.",l[b.AVAILABLE_IN_SW]="This method is available in a service worker context.",l[b.SHOULD_BE_INHERITED]="This method should be overriden by extended classes.",l[b.BAD_SENDER_ID]="Please ensure that 'messagingSenderId' is set correctly in the options passed into firebase.initializeApp().",l[b.PERMISSION_DEFAULT]="The required permissions were not granted and dismissed instead.",l[b.PERMISSION_BLOCKED]="The required permissions were not granted and blocked instead.",l[b.UNSUPPORTED_BROWSER]="This browser doesn't support the API's required to use the firebase SDK.",l[b.NOTIFICATIONS_BLOCKED]="Notifications have been blocked.",l[b.FAILED_DEFAULT_REGISTRATION]="We are unable to register the default service worker. {$browserErrorMessage}",l[b.SW_REGISTRATION_EXPECTED]="A service worker registration was the expected input.",l[b.GET_SUBSCRIPTION_FAILED]="There was an error when trying to get any existing Push Subscriptions.",l[b.INVALID_SAVED_TOKEN]="Unable to access details of the saved token.",l[b.SW_REG_REDUNDANT]="The service worker being used for push was made redundant.",l[b.TOKEN_SUBSCRIBE_FAILED]="A problem occured while subscribing the user to FCM: {$message}",l[b.TOKEN_SUBSCRIBE_NO_TOKEN]="FCM returned no token when subscribing the user to push.",l[b.TOKEN_SUBSCRIBE_NO_PUSH_SET]="FCM returned an invalid response when getting an FCM token.",l[b.TOKEN_UNSUBSCRIBE_FAILED]="A problem occured while unsubscribing the user from FCM: {$message}",l[b.TOKEN_UPDATE_FAILED]="A problem occured while updating the user from FCM: {$message}",l[b.TOKEN_UPDATE_NO_TOKEN]="FCM returned no token when updating the user to push.",l[b.USE_SW_BEFORE_GET_TOKEN]="The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.",l[b.INVALID_DELETE_TOKEN]="You must pass a valid token into deleteToken(), i.e. the token from getToken().",l[b.DELETE_TOKEN_NOT_FOUND]="The deletion attempt for token could not be performed as the token was not found.",l[b.DELETE_SCOPE_NOT_FOUND]="The deletion attempt for service worker scope could not be performed as the scope was not found.",l[b.BG_HANDLER_FUNCTION_EXPECTED]="The input to setBackgroundMessageHandler() must be a function.",l[b.NO_WINDOW_CLIENT_TO_MSG]="An attempt was made to message a non-existant window client.",l[b.UNABLE_TO_RESUBSCRIBE]="There was an error while re-subscribing the FCM token for push messaging. Will have to resubscribe the user on next visit. {$message}",l[b.NO_FCM_TOKEN_FOR_RESUBSCRIBE]="Could not find an FCM token and as a result, unable to resubscribe. Will have to resubscribe the user on next visit.",l[b.FAILED_TO_DELETE_TOKEN]="Unable to delete the currently saved token.",l[b.NO_SW_IN_REG]="Even though the service worker registration was successful, there was a problem accessing the service worker itself.",l[b.INCORRECT_GCM_SENDER_ID]="Please change your web app manifest's 'gcm_sender_id' value to '103953800507' to use Firebase messaging.",l[b.BAD_SCOPE]="The service worker scope must be a string with at least one character.",l[b.BAD_VAPID_KEY]="The public VAPID key is not a Uint8Array with 65 bytes.",l[b.BAD_SUBSCRIPTION]="The subscription must be a valid PushSubscription.",l[b.BAD_TOKEN]="The FCM Token used for storage / lookup was not a valid token string.",l[b.BAD_PUSH_SET]="The FCM push set used for storage / lookup was not not a valid push set string.",l[b.FAILED_DELETE_VAPID_KEY]="The VAPID key could not be deleted.",l[b.INVALID_PUBLIC_VAPID_KEY]="The public VAPID key must be a string.",l[b.PUBLIC_KEY_DECRYPTION_FAILED]="The public VAPID key did not equal 65 bytes when decrypted.",l),g=new h("messaging","Messaging",v),T=new Uint8Array([4,51,148,247,223,161,235,177,220,3,162,94,21,113,219,72,211,46,237,237,178,52,219,183,71,58,12,143,196,204,225,111,60,140,132,223,171,182,102,62,242,12,212,139,254,227,249,118,47,20,28,99,8,106,111,45,177,26,149,176,206,55,192,156,110]),S="https://fcm.googleapis.com";unction(e){e.TYPE_OF_MSG="firebase-messaging-msg-type",e.DATA="firebase-messaging-msg-data"}(_||(_={})),E||(E={}));var D=function(){eturn e.prototype.getToken=function(e,t,n){return o(this,void 0,void 0,function(){var r,i,o,a,c,u,h,f;return s(this,function(s){switch(s.label){case 0:r=I(t.getKey("p256dh")),i=I(t.getKey("auth")),o="authorized_entity="+e+"&endpoint="+t.endpoint+"&encryption_key="+r+"&encryption_auth="+i,n!==T&&(a=I(n),o+="&application_pub_key="+a),(c=new Headers).append("Content-Type","application/x-www-form-urlencoded"),u={method:"POST",headers:c,body:o},s.label=1;case 1:return s.trys.push([1,4,,5]),[4,fetch(S+"/fcm/connect/subscribe",u)];case 2:return[4,s.sent().json()];case 3:return h=s.sent(),[3,5];case 4:throw s.sent(),g.create(b.TOKEN_SUBSCRIBE_FAILED);case 5:if(h.error)throw f=h.error.message,g.create(b.TOKEN_SUBSCRIBE_FAILED,{message:f});if(!h.token)throw g.create(b.TOKEN_SUBSCRIBE_NO_TOKEN);if(!h.pushSet)throw g.create(b.TOKEN_SUBSCRIBE_NO_PUSH_SET);return[2,{token:h.token,pushSet:h.pushSet}]}})})},e.prototype.updateToken=function(e,t,n,r,i){return o(this,void 0,void 0,function(){var o,a,c,u,h,f,p,d;return s(this,function(s){switch(s.label){case 0:o=I(r.getKey("p256dh")),a=I(r.getKey("auth")),c="push_set="+n+"&token="+t+"&authorized_entity="+e+"&endpoint="+r.endpoint+"&encryption_key="+o+"&encryption_auth="+a,i!==T&&(u=I(i),c+="&application_pub_key="+u),(h=new Headers).append("Content-Type","application/x-www-form-urlencoded"),f={method:"POST",headers:h,body:c},s.label=1;case 1:return s.trys.push([1,4,,5]),[4,fetch(S+"/fcm/connect/subscribe",f)];case 2:return[4,s.sent().json()];case 3:return p=s.sent(),[3,5];case 4:throw s.sent(),g.create(b.TOKEN_UPDATE_FAILED);case 5:if(p.error)throw d=p.error.message,g.create(b.TOKEN_UPDATE_FAILED,{message:d});if(!p.token)throw g.create(b.TOKEN_UPDATE_NO_TOKEN);return[2,p.token]}})})},e.prototype.deleteToken=e}();ar m="undefined",N="fcm_token_object_Store";ar k=);var A=k);ar C=k),B="messagingSenderId",R=function(){eturn e.prototype.getToken=function(){return o(this,void 0,void 0,function(){var e,t,n,r,i;return s(this,function(o){switch(o.label){case 0:return"granted"!==(e=this.getNotificationPermission_())?"denied"===e?[2,Promise.reject(g.create(b.NOTIFICATIONS_BLOCKED))]:[2,Promise.resolve(null)]:[4,this.getSWRegistration_()];case 1:return t=o.sent(),[4,this.getPublicVapidKey_()];case 2:return n=o.sent(),[4,this.getPushSubscription(t,n)];case 3:return r=o.sent(),[4,this.tokenDetailsModel.getTokenDetailsFromSWScope(t.scope)];case 4:return(i=o.sent())?[2,this.manageExistingToken(t,r,n,i)]:[2,this.getNewToken(t,r,n)]}})})},e.prototype.manageExistingToken=function(e,t,n,r){return o(this,void 0,void 0,function(){return s(this,function(i){switch(i.label){case 0:return function(e,t,n){if(!y(t.buffer,n.vapidKey.buffer))return!1;var r=e.endpoint===n.endpoint,i=y(e.getKey("auth"),n.auth),o=y(e.getKey("p256dh"),n.p256dh);return r&&i&&o}(t,n,r)?Date.now()<r.createTime+6048e5?[2,r.fcmToken]:[2,this.updateToken(e,t,n,r)]:[4,this.deleteTokenFromDB(r.fcmToken)];case 1:return i.sent(),[2,this.getNewToken(e,t,n)]}})})},e.prototype.updateToken=e.prototype.getNewToken=e.prototype.deleteToken=e.prototype.deleteTokenFromDB=e.prototype.getPushSubscription=e.prototype.requestPermission=e.prototype.useServiceWorker=function(e){throw g.create(b.AVAILABLE_IN_WINDOW)},e.prototype.usePublicVapidKey=function(e){throw g.create(b.AVAILABLE_IN_WINDOW)},e.prototype.onMessage=function(e,t,n){throw g.create(b.AVAILABLE_IN_WINDOW)},e.prototype.onTokenRefresh=e.prototype.setBackgroundMessageHandler=e.prototype.delete=e.prototype.getNotificationPermission_=e.prototype.getTokenDetailsModel=function(){return this.tokenDetailsModel},e.prototype.getVapidDetailsModel=function(){return this.vapidDetailsModel},e.prototype.getIIDModel=e}();var U=function(e){eturn r(t,e),t.prototype.onPush=function(e){e.waitUntil(this.onPush_(e))},t.prototype.onSubChange=function(e){e.waitUntil(this.onSubChange_(e))},t.prototype.onNotificationClick=t.prototype.onPush_=t.prototype.onSubChange_=t.prototype.onNotificationClick_=function(e){return o(this,void 0,void 0,function(){var t,n,r,i;return s(this,function(o){switch(o.label){case 0:return e.notification&&e.notification.data&&e.notification.data.FCM_MSG?e.action?[2]:(e.stopImmediatePropagation(),e.notification.close(),(t=e.notification.data.FCM_MSG).notification&&(n=t.notification.click_action)?[4,this.getWindowClient_(n)]:[2]):[2];case 1:return(r=o.sent())?[3,3]:[4,self.clients.openWindow(n)];case 2:return r=o.sent(),[3,5];case 3:return[4,r.focus()];case 4:r=o.sent(),o.label=5;case 5:return r?(delete t.notification,i=K(E.NOTIFICATION_CLICKED,t),[2,this.attemptToMessageClient_(r,i)]):[2]}})})},t.prototype.getNotificationData_=t.prototype.setBackgroundMessageHandler=t.prototype.getWindowClient_=t.prototype.attemptToMessageClient_=t.prototype.hasVisibleClients_=t.prototype.sendMessageToWindowClients_=t.prototype.getSWRegistration_=t.prototype.getPublicVapidKey_=t}(R);r M=function(e){eturn r(t,e),t.prototype.getToken=function(){var t=this;return this.manifestCheck_().then(},t.prototype.manifestCheck_=function(){if(this.manifestCheckPromise)return this.manifestCheckPromise;var e=document.querySelector('link[rel="manifest"]');return this.manifestCheckPromise=e?fetch(e.href).then(.catch(.then(function(e){if(e&&e.gcm_sender_id&&"103953800507"!==e.gcm_sender_id)throw g.create(b.INCORRECT_GCM_SENDER_ID)}):Promise.resolve(),this.manifestCheckPromise},t.prototype.requestPermission=function(){return o(this,void 0,void 0,function(){return s(this,function(e){return"granted"===Notification.permission?[2]:[2,new Promise(function(e,t){var n=function(n){return"granted"===n?e():t("denied"===n?g.create(b.PERMISSION_BLOCKED):g.create(b.PERMISSION_DEFAULT))},r=Notification.requestPermission(n);r&&r.then(n)})]})})},t.prototype.useServiceWorker=t.prototype.usePublicVapidKey=t.prototype.onMessage=function(e,t,n){return"function"==typeof e?this.onMessageInternal(e,t,n):this.onMessageInternal(e)},t.prototype.onTokenRefresh=t.prototype.waitForRegistrationToActivate_=t.prototype.getSWRegistration_=t.prototype.getPublicVapidKey_=function(){return this.publicVapidKeyToUse?Promise.resolve(this.publicVapidKeyToUse):Promise.resolve(T)},t.prototype.setupSWMessageListener_=t}(R);function F(){return self&&"ServiceWorkerGlobalScope"in self?"PushManager"in self&&"Notification"in self&&ServiceWorkerRegistration.prototype.hasOwnProperty("showNotification")&&PushSubscription.prototype.hasOwnProperty("getKey"):"serviceWorker"in navigator&&"PushManager"in window&&"Notification"in window&&"fetch"in window&&ServiceWorkerRegistration.prototype.hasOwnProperty("showNotification")&&PushSubscription.prototype.hasOwnProperty("getKey")}!function(e){var t=t.isSupported=F;var n={Messaging:M};e.INTERNAL.registerService("messaging",t,n)}(t)}catch(e){throw console.error(e),new Error("Cannot instantiate firebase-messaging - be sure to load firebase-app.js first.")}}(this.firebase=this.firebase||{},firebase);
//# sourceMappingURL=firebase-messaging.js.map
