import{objDataset as i,debug}from"../base/croco.js";import{LOGGERS as t,isRTLEnabled as o}from"../base/config.js";const l="scrollbar";const h=o();const u=t.DEFAULT;const $="is-disabled";class S{constructor(t){this.$el=t;this.onScroll=this.onScroll.bind(this);this.onTouchStart=this.onTouchStart.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this);this.eventsBound=false;this.observeVisibility();i(this.$el,l,this)}onScroll(){const t=h?-1:1;let delta=this.scrollWidth>0?this.$content.scrollLeft/this.scrollWidth*t:0;this.$el.classList.toggle("is-begin",delta<=0);this.$el.classList.toggle("is-end",delta>=.99);delta=delta>1?1:delta;delta=delta<0?0:delta;this.$scrollbar.style.transform=`translate(${Math.round(this.$scrollbar.parentNode.offsetWidth*delta*t)}px)`}onTouchStart(){this.$el.classList.remove("is-inactive")}indEvents(){this.$content.addEventListener("scroll",this.onScroll,false);if(this.$el.classList.contains("js-scrollbar-focus-mode")){this.onTouchEnd();this.$content.addEventListener("touchstart",this.onTouchStart,false);this.$content.addEventListener("touchend",this.onTouchEnd,false)}}observeVisibility(){this.$content=this.$el.querySelector(".js-custom-scrollbar-content");this.$scrollbar=this.$el.querySelector(".js-custom-scrollbar");const t=new IntersectionObserver(entries=>{entries.forEach(t=>{if(t.intersectionRatio>0){this.checkScrollable();if(!this.eventsBound){this.bindEvents();this.onScroll();this.eventsBound=true}}})},{root:this.$el});t.observe(this.$content)}checkScrollable(){this.scrollWidth=this.$content.scrollWidth-this.$content.offsetWidth;if(this.scrollWidth<=0){this.$el.classList.add($)}else{this.$el.classList.remove($);this.$el.classList.add(h?"is-end":"is-begin")}}resetexport function customScrollbarInit(t=document){const o=t.querySelectorAll(".js-custom-scrollbar-wrapper");if(o.length){[...o].forEach(t=>{let o=i(t,l);if(!o){new S(t)}else{o.checkScrollable()}})}else{debug("warn",u,"[custom-scrollbar]","missing element")}}