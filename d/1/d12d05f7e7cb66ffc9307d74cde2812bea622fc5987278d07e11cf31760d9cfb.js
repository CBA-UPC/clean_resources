import{debug}from"../base/croco.js";import{LOGGERS as t}from"../base/config.js";const o=t.DEFAULT;unction load(tag){return new Promise((resolve,reject)=>{tag.onload=resolve;tag.onerror=reject;i(tag)}).then(}function u(items){return Promise.all(items.map().catch(}function m({src,async=true,data}){if(!src){debug("warn",o,"[assetLoad] No src")}const tag=document.createElement("script");tag.setAttribute("src",src);tag.setAttribute("async",async);if(data){for(const[key,value]of Object.entries(data)){tag.setAttribute(key,value)}}return tag}function p({src,data}){if(!src){debug("warn",o,"[assetLoad] No src")}const tag=document.createElement("link");tag.setAttribute("rel","stylesheet");tag.setAttribute("href",src);if(data){for(const[key,value]of Object.entries(data)){tag.setAttribute(key,value)}}return tag}export function scriptLoad(...sources){if(!sources){debug("warn",o,"[assetLoad] No scripts src")}var scripts=sources.map(m);return u(scripts)}export function cssLoad(...sources){if(!sources){debug("warn",o,"[assetLoad] No css src")}const t=sources.map(p);return u(t)}